<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Jenkins汉化并修改插件源为国内源</title>
      <link href="/posts/39737/"/>
      <url>/posts/39737/</url>
      
        <content type="html"><![CDATA[<p>jenkins插件安装更换为国内源1.在jenkins登陆后进入“系统管理”-“插件管理”-“高级”中，设置升级站点2.设置升级站点为如下地址：<a href="https://mirrors.tuna.tsin/">https://mirrors.tuna.tsin</a>…</p><!-- more --><h1 id="jenkins插件安装更换为国内源"><a href="#jenkins插件安装更换为国内源" class="headerlink" title="jenkins插件安装更换为国内源"></a>jenkins插件安装更换为国内源</h1><p>1.在jenkins登陆后进入“系统管理”-“插件管理”-“高级”中，设置升级站点</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/22988262-5fa9df82a2f0e033.png" alt="22988262-5fa9df82a2f0e033" title="22988262-5fa9df82a2f0e033"></p><p>2.设置升级站点为如下地址：</p><p><a href="https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json">https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json</a></p><p>3.提交</p><p>4.在后台服务器中找到jenkins的安装路径下的update配置文件</p><p>路径/var/lib/jenkins/updates</p><p>找到default.json文件</p><p>替换updates.jenkins-ci.org/download为mirrors.tuna.tsinghua.edu.cn/jenkins</p><p>替换 <a href="http://www.google.com为www.baidu.com/">www.google.com为www.baidu.com</a></p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/22988262-00136718ba2d05b6.png" alt="22988262-00136718ba2d05b6" title="22988262-00136718ba2d05b6"></p><p>5.重启jenkins服务service jenkins restart,重新登录，速度飞快</p><h1 id="Jenkins汉化"><a href="#Jenkins汉化" class="headerlink" title="Jenkins汉化"></a>Jenkins汉化</h1><p>一、安装插件</p><p>主界面–&gt;系统管理–&gt;插件管理–&gt;可选插件</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/20180910113325335.png" alt="20180910113325335" title="20180910113325335"></p><p>安装插件locale plugin（上图已经安装完成）</p><p>二、配置语言</p><p>系统管理–&gt;系统设置–&gt;Locale</p><p>填入：zh_CN</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/20180910113839172.png" alt="20180910113839172" title="20180910113839172"></p><p>三、应用保存。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ELK+Redis+Grafana监控分析Nginx生产日志终极版</title>
      <link href="/posts/20924/"/>
      <url>/posts/20924/</url>
      
        <content type="html"><![CDATA[<p>先上架构图Nginx 会将我们定义的logformat写入/var/log/nginx/accessjson.log文件，Filebeat会将其作为输入项。Filebeat会将数据输出到Redi…</p><!-- more --><h2 id="先上架构图"><a href="#先上架构图" class="headerlink" title="先上架构图"></a>先上架构图</h2><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/74899ea95827d087e0f86d034cfbaea6.png" alt="74899ea95827d087e0f86d034cfbaea6" title="74899ea95827d087e0f86d034cfbaea6"></p><ul><li>Nginx 会将我们定义的log_format写入/var/log/nginx/access_json.log文件，Filebeat会将其作为输入项。</li><li>Filebeat会将数据输出到Redis</li><li>Logstash作为Redis数据的过滤将数据存储Elasticsearch</li><li>Grafana读取Elasticsearch数据源</li></ul><h2 id="简单介绍下Grafana"><a href="#简单介绍下Grafana" class="headerlink" title="简单介绍下Grafana"></a>简单介绍下Grafana</h2><blockquote><p>grafana 是一款采用 go 语言编写的开源应用，主要用于大规模指标数据的可视化展现，是网络架构和应用分析中最流行的时序数据展示工具，目前已经支持绝大部分常用的时序数据库,官网（<a href="http://docs.grafana.org/">http://docs.grafana.org/</a>）.</p></blockquote><h2 id="监控指标"><a href="#监控指标" class="headerlink" title="监控指标"></a>监控指标</h2><p>针对入口Nginx，我设计了如下的监控指标：</p><ul><li>最近的24小时内访问量Top10的国家</li><li>最近24小时最受欢迎的页面</li><li>200状态码和404状态码的比例</li><li>最受欢迎的世界题图展示</li><li>等等</li></ul><h2 id="开始部署"><a href="#开始部署" class="headerlink" title="开始部署"></a>开始部署</h2><h3 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h3><p>关闭安全机制</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">setenforce 0</span><br><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure><p>配置repo源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -o &#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-Base.repo http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;repo&#x2F;Centos-7.repo</span><br><span class="line">curl -o &#x2F;etc&#x2F;yum.repos.d&#x2F;epel.repo http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;repo&#x2F;epel-7.repo</span><br></pre></td></tr></table></figure><p>安装nginx</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install</span><br></pre></td></tr></table></figure><p>替换nginx输入日志格式为json格式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">  log_format  main &#39;&#123;&quot;@timestamp&quot;:&quot;$time_iso8601&quot;,&#39;</span><br><span class="line">  &#39;&quot;host&quot;:&quot;$hostname&quot;,&#39;</span><br><span class="line">  &#39;&quot;server_ip&quot;:&quot;$server_addr&quot;,&#39;</span><br><span class="line">  &#39;&quot;client_ip&quot;:&quot;$remote_addr&quot;,&#39;</span><br><span class="line">  &#39;&quot;xff&quot;:&quot;$http_x_forwarded_for&quot;,&#39;</span><br><span class="line">  &#39;&quot;domain&quot;:&quot;$host&quot;,&#39;</span><br><span class="line">  &#39;&quot;url&quot;:&quot;$uri&quot;,&#39;</span><br><span class="line">  &#39;&quot;referer&quot;:&quot;$http_referer&quot;,&#39;</span><br><span class="line">  &#39;&quot;args&quot;:&quot;$args&quot;,&#39;</span><br><span class="line">  &#39;&quot;upstreamtime&quot;:&quot;$upstream_response_time&quot;,&#39;</span><br><span class="line">  &#39;&quot;responsetime&quot;:&quot;$request_time&quot;,&#39;</span><br><span class="line">  &#39;&quot;request_method&quot;:&quot;$request_method&quot;,&#39;</span><br><span class="line">  &#39;&quot;status&quot;:&quot;$status&quot;,&#39;</span><br><span class="line">  &#39;&quot;size&quot;:&quot;$body_bytes_sent&quot;,&#39;</span><br><span class="line">  &#39;&quot;request_body&quot;:&quot;$request_body&quot;,&#39;</span><br><span class="line">  &#39;&quot;request_length&quot;:&quot;$request_length&quot;,&#39;</span><br><span class="line">  &#39;&quot;protocol&quot;:&quot;$server_protocol&quot;,&#39;</span><br><span class="line">  &#39;&quot;upstreamhost&quot;:&quot;$upstream_addr&quot;,&#39;</span><br><span class="line">  &#39;&quot;file_dir&quot;:&quot;$request_filename&quot;,&#39;</span><br><span class="line">  &#39;&quot;http_user_agent&quot;:&quot;$http_user_agent&quot;&#39;</span><br><span class="line">&#39;&#125;&#39;;</span><br></pre></td></tr></table></figure><h1 id="不知道怎么替换的可以查百度-如果您用的是虚拟主机-请在虚拟主机conf文件中配置引用你主配置文件的log输入定义"><a href="#不知道怎么替换的可以查百度-如果您用的是虚拟主机-请在虚拟主机conf文件中配置引用你主配置文件的log输入定义" class="headerlink" title="不知道怎么替换的可以查百度,如果您用的是虚拟主机,请在虚拟主机conf文件中配置引用你主配置文件的log输入定义."></a>不知道怎么替换的可以查百度,如果您用的是虚拟主机,请在虚拟主机conf文件中配置引用你主配置文件的log输入定义.</h1><p>虚拟主机配置文件修改log输入写法如下#如果您没有虚拟主机请跳过这一步</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">access_log  &#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log main ;</span><br></pre></td></tr></table></figure><p>配置完成后启动Nginx.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start nginx</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl 127.0.0.1</span><br><span class="line">tail -1 &#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log</span><br><span class="line">检测是否输入格式为json</span><br></pre></td></tr></table></figure><h2 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install redis</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">cat &#x2F;etc&#x2F;redis.conf</span><br><span class="line"></span><br><span class="line">bind 127.0.0.1 192.168.1.101 #只有这里需要配置为您的内网IP地址</span><br><span class="line">protected-mode yes</span><br><span class="line">port 6379</span><br><span class="line">tcp-backlog 511</span><br><span class="line">timeout 0</span><br><span class="line">tcp-keepalive 300</span><br><span class="line">daemonize no</span><br><span class="line">supervised no</span><br><span class="line">pidfile &#x2F;var&#x2F;run&#x2F;redis_6379.pid</span><br><span class="line">loglevel notice</span><br><span class="line">logfile &#x2F;var&#x2F;log&#x2F;redis&#x2F;redis.log</span><br><span class="line">databases 16</span><br><span class="line">save 900 1</span><br><span class="line">save 300 10</span><br><span class="line">save 60 10000</span><br><span class="line">stop-writes-on-bgsave-error yes</span><br><span class="line">rdbcompression yes</span><br><span class="line">rdbchecksum yes</span><br><span class="line">dbfilename dump.rdb</span><br><span class="line">dir &#x2F;var&#x2F;lib&#x2F;redis</span><br><span class="line">slave-serve-stale-data yes</span><br><span class="line">slave-read-only yes</span><br><span class="line">repl-diskless-sync no</span><br><span class="line">repl-diskless-sync-delay 5</span><br><span class="line">repl-disable-tcp-nodelay no</span><br><span class="line">slave-priority 100</span><br><span class="line">appendonly no</span><br><span class="line">appendfilename &quot;appendonly.aof&quot;</span><br><span class="line">appendfsync everysec</span><br><span class="line">no-appendfsync-on-rewrite no</span><br><span class="line">auto-aof-rewrite-percentage 100</span><br><span class="line">auto-aof-rewrite-min-size 64mb</span><br><span class="line">aof-load-truncated yes</span><br><span class="line">lua-time-limit 5000</span><br><span class="line">slowlog-log-slower-than 10000</span><br><span class="line">slowlog-max-len 128</span><br><span class="line">latency-monitor-threshold 0</span><br><span class="line">notify-keyspace-events &quot;&quot;</span><br><span class="line">hash-max-ziplist-entries 512</span><br><span class="line">hash-max-ziplist-value 64</span><br><span class="line">list-max-ziplist-size -2</span><br><span class="line">list-compress-depth 0</span><br><span class="line">set-max-intset-entries 512</span><br><span class="line">zset-max-ziplist-entries 128</span><br><span class="line">zset-max-ziplist-value 64</span><br><span class="line">hll-sparse-max-bytes 3000</span><br><span class="line">activerehashing yes</span><br><span class="line">client-output-buffer-limit normal 0 0 0</span><br><span class="line">client-output-buffer-limit slave 256mb 64mb 60</span><br><span class="line">client-output-buffer-limit pubsub 32mb 8mb 60</span><br><span class="line">hz 10</span><br><span class="line">aof-rewrite-incremental-fsync yes</span><br></pre></td></tr></table></figure><p>启动redis</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start redis</span><br></pre></td></tr></table></figure><h2 id="安装ELK"><a href="#安装ELK" class="headerlink" title="安装ELK"></a>安装ELK</h2><p>ELK的安装前提是需要java环境的,这里图省事,直接用yum安装java</p><p>安装java</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install java</span><br></pre></td></tr></table></figure><p>验证java</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure><h3 id="ELK版本需要统一不然会出大问题-这里统一采用最新版7-9-1"><a href="#ELK版本需要统一不然会出大问题-这里统一采用最新版7-9-1" class="headerlink" title="ELK版本需要统一不然会出大问题,这里统一采用最新版7.9.1"></a>ELK版本需要统一不然会出大问题,这里统一采用最新版7.9.1</h3><h4 id="安装ES-elasticsearch"><a href="#安装ES-elasticsearch" class="headerlink" title="安装ES(elasticsearch)"></a>安装ES(elasticsearch)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@master1 opt]# ls</span><br><span class="line">elasticsearch-7.9.1-x86_64.rpm  grafana-7.0.1-1.x86_64.rpm  logstash-7.9.1.rpm</span><br><span class="line">filebeat-7.9.1-x86_64.rpm       kibana-7.9.1-x86_64.rpm</span><br><span class="line">[root@master1 opt]# rpm -ivh elasticsearch-7.9.1-x86_64.rpm </span><br></pre></td></tr></table></figure><p>不要着急启动,先修改配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@master1 opt]# cat &#x2F;etc&#x2F;elasticsearch&#x2F;elasticsearch.yml | grep -v &quot;^$&quot; | grep -v &quot;^#&quot;</span><br><span class="line">#节点名称</span><br><span class="line">node.name: node-1</span><br><span class="line">#程序工作目录</span><br><span class="line">path.data: &#x2F;var&#x2F;lib&#x2F;elasticsearch</span><br><span class="line">#程序日志产生目录</span><br><span class="line">path.logs: &#x2F;var&#x2F;log&#x2F;elasticsearch</span><br><span class="line">#内存锁定</span><br><span class="line">bootstrap.memory_lock: true</span><br><span class="line">#你的本地IP跟本地回环</span><br><span class="line">network.host: 192.168.1.101,127.0.0.1  </span><br><span class="line">#端口</span><br><span class="line">http.port: 9200</span><br><span class="line">#7.0以后都需要加的配置项</span><br><span class="line">cluster.initial_master_nodes: [&quot;node-1&quot;] </span><br></pre></td></tr></table></figure><p>由于我们配置了锁定内存所以在系统文件里也要有相应的配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">官方解决方案</span><br><span class="line">https:&#x2F;&#x2F;www.elastic.co&#x2F;guide&#x2F;en&#x2F;elasticsearch&#x2F;reference&#x2F;6.4&#x2F;setup-configuration-memory.html</span><br><span class="line"></span><br><span class="line">https:&#x2F;&#x2F;www.elastic.co&#x2F;guide&#x2F;en&#x2F;elasticsearch&#x2F;reference&#x2F;6.4&#x2F;setting-system-settings.html#sysconfig</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;elasticsearch.service</span><br><span class="line">### 增加如下参数</span><br><span class="line">[Service]</span><br><span class="line">LimitMEMLOCK&#x3D;infinity</span><br></pre></td></tr></table></figure><p>保存后重载系统配置,启动ES</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart elasticsearch</span><br></pre></td></tr></table></figure><p>检测ES</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">检测端口是否开启</span><br><span class="line">netstat -apunt | grep 9200</span><br><span class="line">或者</span><br><span class="line">curl 127.0.0.1:9200</span><br></pre></td></tr></table></figure><h4 id="安装filebeat"><a href="#安装filebeat" class="headerlink" title="安装filebeat"></a>安装filebeat</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@master1 opt]# rpm -ivh filebeat-7.9.1-x86_64.rpm</span><br></pre></td></tr></table></figure><p>配置文件修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@QLaliyun ~]# cat &#x2F;etc&#x2F;filebeat&#x2F;filebeat.yml</span><br><span class="line">filebeat.inputs:</span><br><span class="line">- type: log</span><br><span class="line">  enabled: true</span><br><span class="line">  paths:</span><br><span class="line">    - &#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log</span><br><span class="line">  json.keys_under_root: true</span><br><span class="line">  json.overwrite_keys: true</span><br><span class="line">  json.add_error_key: true</span><br><span class="line">filebeat.config.modules:</span><br><span class="line">  path: $&#123;path.config&#125;&#x2F;modules.d&#x2F;*.yml</span><br><span class="line">  reload.enabled: false</span><br><span class="line">setup.template.settings:</span><br><span class="line">  index.number_of_shards: 1</span><br><span class="line">setup.kibana:</span><br><span class="line">  host: &quot;127.0.0.1:5601&quot;</span><br><span class="line">output.redis:</span><br><span class="line">  hosts: [&quot;localhost&quot;] </span><br><span class="line">  db: 0</span><br><span class="line">  key: &quot;nginx_logs&quot; </span><br><span class="line">  timeout: 5</span><br><span class="line">processors:</span><br><span class="line">  - add_host_metadata:</span><br><span class="line">      when.not.contains.tags: forwarded</span><br><span class="line">  - add_cloud_metadata: ~</span><br><span class="line">  - add_docker_metadata: ~</span><br><span class="line">  - add_kubernetes_metadata: ~</span><br></pre></td></tr></table></figure><p>启动filebeat</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start filebeat</span><br></pre></td></tr></table></figure><h4 id="安装logstash"><a href="#安装logstash" class="headerlink" title="安装logstash"></a>安装logstash</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@master1 opt]# rpm -ivh logstash-7.9.1.rpm </span><br></pre></td></tr></table></figure><p>修改logstash配置文件,后期用nohup方式启动,不知道的话不用关心 跟着操作就行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">[root@master1 ~]# cat &#x2F;etc&#x2F;logstash&#x2F;conf.d&#x2F;yh_nginx_redis.conf</span><br><span class="line">input &#123;</span><br><span class="line">  # redis nginx key</span><br><span class="line">  redis &#123;</span><br><span class="line">    data_type &#x3D;&gt;&quot;list&quot;</span><br><span class="line">    key &#x3D;&gt;&quot;nginx_logs&quot;</span><br><span class="line">    host &#x3D;&gt;&quot;127.0.0.1&quot;</span><br><span class="line">    port &#x3D;&gt; 6379</span><br><span class="line">   # password &#x3D;&gt; &quot;password&quot;</span><br><span class="line">    db &#x3D;&gt; 0</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">filter &#123;</span><br><span class="line">  geoip &#123;</span><br><span class="line">    #multiLang &#x3D;&gt; &quot;zh-CN&quot;</span><br><span class="line">    target &#x3D;&gt; &quot;geoip&quot;</span><br><span class="line">    source &#x3D;&gt; &quot;client_ip&quot;</span><br><span class="line">    #下面这个IP库请一定要配置到位,不然装不了逼</span><br><span class="line">    database &#x3D;&gt; &quot;&#x2F;usr&#x2F;share&#x2F;logstash&#x2F;GeoLite2-City.mmdb&quot;</span><br><span class="line">    add_field &#x3D;&gt; [ &quot;[geoip][coordinates]&quot;, &quot;%&#123;[geoip][longitude]&#125;&quot; ]</span><br><span class="line">    add_field &#x3D;&gt; [ &quot;[geoip][coordinates]&quot;, &quot;%&#123;[geoip][latitude]&#125;&quot; ]</span><br><span class="line">    remove_field &#x3D;&gt; [&quot;[geoip][latitude]&quot;, &quot;[geoip][longitude]&quot;, &quot;[geoip][country_code]&quot;, &quot;[geoip][country_code2]&quot;, &quot;[geoip][country_code3]&quot;, &quot;[geoip][timezone]&quot;, &quot;[geoip][continent_code]&quot;, &quot;[geoip][region_code]&quot;]</span><br><span class="line">  &#125;</span><br><span class="line">  mutate &#123;</span><br><span class="line">    convert &#x3D;&gt; [ &quot;size&quot;, &quot;integer&quot; ]</span><br><span class="line">    convert &#x3D;&gt; [ &quot;status&quot;, &quot;integer&quot; ]</span><br><span class="line">    convert &#x3D;&gt; [ &quot;responsetime&quot;, &quot;float&quot; ]</span><br><span class="line">    convert &#x3D;&gt; [ &quot;upstreamtime&quot;, &quot;float&quot; ]</span><br><span class="line">    convert &#x3D;&gt; [ &quot;[geoip][coordinates]&quot;, &quot;float&quot; ]</span><br><span class="line">    remove_field &#x3D;&gt; [ &quot;ecs&quot;,&quot;agent&quot;,&quot;host&quot;,&quot;cloud&quot;,&quot;@version&quot;,&quot;input&quot;,&quot;logs_type&quot; ]</span><br><span class="line">  &#125;</span><br><span class="line">  useragent &#123;</span><br><span class="line">    source &#x3D;&gt; &quot;http_user_agent&quot;</span><br><span class="line">    target &#x3D;&gt; &quot;ua&quot;</span><br><span class="line">    remove_field &#x3D;&gt; [ &quot;[ua][minor]&quot;,&quot;[ua][major]&quot;,&quot;[ua][build]&quot;,&quot;[ua][patch]&quot;,&quot;[ua][os_minor]&quot;,&quot;[ua][os_major]&quot; ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">output &#123;</span><br><span class="line">  elasticsearch &#123;</span><br><span class="line">    hosts &#x3D;&gt; &quot;http:&#x2F;&#x2F;127.0.0.1:9200&quot;</span><br><span class="line">#    user &#x3D;&gt; &quot;elastic&quot;</span><br><span class="line">#    password &#x3D;&gt; &quot;password&quot;</span><br><span class="line">    index &#x3D;&gt; &quot;logstash-nginx-%&#123;+YYYY.MM&#125;&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@lyecs ~]# </span><br></pre></td></tr></table></figure><p>启动logstash</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup &#x2F;usr&#x2F;share&#x2F;logstash&#x2F;bin&#x2F;logstash -f &#x2F;etc&#x2F;logstash&#x2F;conf.d&#x2F;yh_nginx_redis.conf &amp;</span><br></pre></td></tr></table></figure><h4 id="安装Grafana"><a href="#安装Grafana" class="headerlink" title="安装Grafana"></a>安装Grafana</h4><p>推荐使用7.0以下版本,否则可能会和部分插件不兼容,这里用的是6.3.2</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@master1 opt]# rpm -ivh grafana-7.0.1-1.x86_64.rpm</span><br></pre></td></tr></table></figure><p>由于我们后期会用到某些插件所以在这里提前安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grafana-cli plugins install grafana-piechart-panel</span><br><span class="line">grafana-cli plugins install grafana-world-map</span><br></pre></td></tr></table></figure><p>国内服务器可能安装不上,那就自己想办法好吧</p><p>由于某些不可抗力因素如果后期在模板导入后出现地图图片不能正常显示的原因可以.采用以下做法</p><p>参考博客:<a href="https://www.cnblogs.com/xuewenlong/p/12929443.html">https://www.cnblogs.com/xuewenlong/p/12929443.html</a></p><p>好的我们直接打开Grafana奥里给</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start grafana-server</span><br></pre></td></tr></table></figure><h5 id="配置数据源"><a href="#配置数据源" class="headerlink" title="配置数据源"></a>配置数据源</h5><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/image-20201013131436778.png" alt="image-20201013131436778" title="image-20201013131436778"></p><p>点击Save&amp;test测试成功后Back</p><p>导入监控模板</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/image-20201013131610205.png" alt="image-20201013131610205" title="image-20201013131610205"></p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/image-20201013131647199.png" alt="image-20201013131647199" title="image-20201013131647199"></p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/image-20201013131729032.png" alt="image-20201013131729032" title="image-20201013131729032"></p><p>下面直接出图<img src="https://gitee.com/xoxoyun/img/raw/master/image/123.png" alt="123" title="123"></p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/456.png" alt="456" title="456"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 7安装配置Shadowsocks客户端</title>
      <link href="/posts/10899/"/>
      <url>/posts/10899/</url>
      
        <content type="html"><![CDATA[<p>1.安装配置Shadowsocks客户端1.1安装Shadowsocks客户端安装epel扩展源采用 Python包管理工pip安装。sudo yum -y install epel-rele…</p><!-- more --><h2 id="1-安装配置Shadowsocks客户端"><a href="#1-安装配置Shadowsocks客户端" class="headerlink" title="1.安装配置Shadowsocks客户端"></a>1.安装配置Shadowsocks客户端</h2><h3 id="1-1安装Shadowsocks客户端"><a href="#1-1安装Shadowsocks客户端" class="headerlink" title="1.1安装Shadowsocks客户端"></a>1.1安装Shadowsocks客户端</h3><ul><li>安装epel扩展源采用<br>Python包管理工pip安装。</li></ul><ol><li><code>sudo yum -y install epel-release</code></li><li><code>sudo yum -y install python-pip</code></li></ol><ul><li>安装Shadowsocks客户端</li></ul><ol><li><code>sudo pip install shadowsocks</code></li></ol><h3 id="1-2配置Shadowsocks客户端"><a href="#1-2配置Shadowsocks客户端" class="headerlink" title="1.2配置Shadowsocks客户端"></a>1.2配置Shadowsocks客户端</h3><ul><li>新建配置文件</li></ul><ol><li><code>sudo mkdir /etc/shadowsocks</code></li><li><code>sudo vi /etc/shadowsocks/shadowsocks.json</code></li></ol><ul><li>添加配置信息</li></ul><ol><li><code>&#123;</code></li><li><code>&quot;server&quot;:&quot;1.1.1.1&quot;,</code></li><li><code>&quot;server_port&quot;:1035,</code></li><li><code>&quot;local_address&quot;: &quot;127.0.0.1&quot;,</code></li><li><code>&quot;local_port&quot;:1080,</code></li><li><code>&quot;password&quot;:&quot;password&quot;,</code></li><li><code>&quot;timeout&quot;:300,</code></li><li><code>&quot;method&quot;:&quot;aes-256-cfb&quot;,</code></li><li><code>&quot;fast_open&quot;: false,</code></li><li><code>&quot;workers&quot;: 1</code></li><li><code>&#125;</code></li></ol><p>参数说明：<br>服务器：Shadowsocks服务器地址<br>服务器端口：Shadowsocks服务器端口<br>本地地址：本地IP<br>local_port：本地端口<br>密码：Shadowsocks连接密码<br>超时：等待超时时间<br>：加密方式<br>工作者：工作线程数<br>fast_open：正确或错误。逐步，但要求Linux内核在3.7+。开启方法<code>echo 3 &gt; /proc/sys/net/ipv4/tcp_fastopen</code></p><ul><li>配置自启动<br>①新建启动脚本文件/etc/systemd/system/shadowsocks.service，内容如下：</li></ul><ol><li><code>[Unit]</code></li><li><code>Description=Shadowsocks</code></li><li><code>[Service]</code></li><li><code>TimeoutStartSec=0</code></li><li><code>ExecStart=/usr/bin/sslocal -c /etc/shadowsocks/shadowsocks.json</code></li><li><code>[Install]</code></li><li><code>WantedBy=multi-user.target</code></li></ol><p>②启动Shadowsocks客户端</p><ol><li><code>systemctl enable shadowsocks.service</code></li><li><code>systemctl start shadowsocks.service</code></li><li><code>systemctl status shadowsocks.service</code></li></ol><ul><li>验证Shadowsocks客户端是否正常运行</li></ul><ol><li><code>curl --socks5 127.0.0.1:1080 http://httpbin.org/ip</code></li></ol><p>若Shadowsock客户端已正常运行，则结果如下：</p><ol><li><code>&#123;</code></li><li><code>&quot;origin&quot;: &quot;x.x.x.x&quot; #你的Shadowsock服务器IP</code></li><li><code>&#125;</code></li></ol><h2 id="2-安装配置Privoxy"><a href="#2-安装配置Privoxy" class="headerlink" title="2.安装配置Privoxy"></a>2.安装配置Privoxy</h2><p>Shadowsocks是一个socket5服务，我们需要使用Privoxy把流量转到http ／ https上。</p><h3 id="2-1安装Privoxy"><a href="#2-1安装Privoxy" class="headerlink" title="2.1安装Privoxy"></a>2.1安装Privoxy</h3><ul><li>安装Privoxy</li></ul><ol><li><code>sudo yum -y install privoxy</code></li></ol><ul><li>启动Privoxy</li></ul><ol><li><code>systemctl enable privoxy</code></li><li><code>systemctl start privoxy</code></li><li><code>systemctl status privoxy</code></li></ol><h3 id="2-2配置Privoxy"><a href="#2-2配置Privoxy" class="headerlink" title="2.2配置Privoxy"></a>2.2配置Privoxy</h3><ul><li>配置Privoxy①<br>修改配置文件/ etc / privoxy / config</li></ul><ol><li><code>sudo vi /etc/privoxy/config</code></li></ol><p>②确保如下内容没有被注释掉</p><ol><li><code>listen-address 127.0.0.1:8118 # 8118 是默认端口，不用改</code></li><li><code>forward-socks5t / 127.0.0.1:1080 . #转发到本地端口</code></li></ol><ul><li>设置http / https代理<br>①修改配置文件/ etc / profile</li></ul><ol><li><code>sudo vi /etc/profile</code></li></ol><p>添加如下信息：</p><ol><li><code>export http_proxy=http://127.0.0.1:8118</code></li><li><code>export https_proxy=http://127.0.0.1:8118</code></li><li><code>source /etc/profile</code></li></ol><p><strong>注：</strong>端口和privoxy中的监听端口保持一致</p><ul><li>验证是否可用</li></ul><ol><li><code>curl www.google.com</code></li></ol><h2 id="3-参考链接"><a href="#3-参考链接" class="headerlink" title="3.参考链接"></a>3.参考链接</h2><ul><li><a href="http://foxhound.blog.51cto.com/1167932/1969142">centos7安装shadowsocks客户端</a></li><li><a href="http://morning.work/page/2015-12/install-shadowsocks-on-centos-7.html">在CentOS 7下安装配置shadowsocks</a></li><li><a href="https://brickyang.github.io/2017/01/14/CentOS-7-">CentOS 7安装shadowsocks客户端</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux find 命令详解</title>
      <link href="/posts/41172/"/>
      <url>/posts/41172/</url>
      
        <content type="html"><![CDATA[<p>Linux 上的 find 命令是 findutil 软件包的一部分，一般已经默认集成在了几乎所有的发行版中。 find 命令有非常大的灵活性，可以向其指定丰富的搜索条件（如文件权限、属主、属组…</p><!-- more --><blockquote><p>Linux 上的 <code>find</code> 命令是 <code>findutil</code> 软件包的一部分，一般已经默认集成在了几乎所有的发行版中。<br>find 命令有非常大的灵活性，可以向其指定丰富的搜索条件（如<strong>文件权限</strong>、<strong>属主</strong>、<strong>属组</strong>、<strong>文件类型</strong>、<strong>日期</strong>和<strong>大小</strong>等）来定位系统中的文件和目录。<br>此外，find 还支持对搜索到的结果进行多种类型的<strong>命令</strong>操作。</p></blockquote><h4 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h4><p>find 命令的基本结构如下：<br><code>find [paths] [expression] [actions]</code></p><p>find 命令接受一个或多个<strong>路径</strong>（_paths_）作为搜索范围，并在该路径下<strong>递归</strong>地搜索。即检索完指定的目录后，还会对该目录下的子目录进行检索，以及子目录下的子目录。。。直到到达目录树底部。</p><p>默认情况下（不带任何搜索条件），find 命令会返回指定目录下的<strong>所有文件</strong>，所以常常需要通过特定的 <code>expression</code> 对结果进行<strong>筛选</strong>。</p><p>find 命令默认的 <code>action</code> 是将所有检索结果打印至标准输出。可以通过自定义 <code>action</code> ，让 find 命令对搜索到的结果执行特定的操作。</p><p>这里先不做详细解释，简单地测试下 find 命令：</p><ol><li>有如下结构的示例目录 directory</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ tree directory</span><br><span class="line">directory</span><br><span class="line">├── file1</span><br><span class="line">├── file2</span><br><span class="line">├── sub-dir1</span><br><span class="line">│   ├── file1</span><br><span class="line">│   ├── file2</span><br><span class="line">│   └── file3</span><br><span class="line">└── sub-dir2</span><br><span class="line">    ├── file2</span><br><span class="line">    └── sub-subdir1</span><br><span class="line">        └── file1</span><br><span class="line"></span><br><span class="line">3 directories, 7 files</span><br></pre></td></tr></table></figure><ol><li>默认的 find 命令会列出该目录下的所有文件</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ find directory</span><br><span class="line">directory</span><br><span class="line">directory&#x2F;sub-dir1</span><br><span class="line">directory&#x2F;sub-dir1&#x2F;file3</span><br><span class="line">directory&#x2F;sub-dir1&#x2F;file2</span><br><span class="line">directory&#x2F;sub-dir1&#x2F;file1</span><br><span class="line">directory&#x2F;file2</span><br><span class="line">directory&#x2F;sub-dir2</span><br><span class="line">directory&#x2F;sub-dir2&#x2F;file2</span><br><span class="line">directory&#x2F;sub-dir2&#x2F;sub-subdir1</span><br><span class="line">directory&#x2F;sub-dir2&#x2F;sub-subdir1&#x2F;file1</span><br><span class="line">directory&#x2F;file1</span><br></pre></td></tr></table></figure><ol><li>为 find 命令指定 expression 以筛选出特定的文件</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ find directory -name file2</span><br><span class="line">directory&#x2F;sub-dir1&#x2F;file2</span><br><span class="line">directory&#x2F;file2</span><br><span class="line">directory&#x2F;sub-dir2&#x2F;file2</span><br></pre></td></tr></table></figure><ol><li>为 find 命令指定特殊的 action（此处 <code>-delete</code> 表示删除搜索结果）</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ find directory -name file2 -delete</span><br><span class="line">$ find directory</span><br><span class="line">directory</span><br><span class="line">directory&#x2F;sub-dir1</span><br><span class="line">directory&#x2F;sub-dir1&#x2F;file3</span><br><span class="line">directory&#x2F;sub-dir1&#x2F;file1</span><br><span class="line">directory&#x2F;sub-dir2</span><br><span class="line">directory&#x2F;sub-dir2&#x2F;sub-subdir1</span><br><span class="line">directory&#x2F;sub-dir2&#x2F;sub-subdir1&#x2F;file1</span><br><span class="line">directory&#x2F;file1</span><br></pre></td></tr></table></figure><h4 id="二、搜索条件（expression）"><a href="#二、搜索条件（expression）" class="headerlink" title="二、搜索条件（expression）"></a>二、搜索条件（expression）</h4><h5 id="1-根据文件名检索"><a href="#1-根据文件名检索" class="headerlink" title="1. 根据文件名检索"></a>1. 根据文件名检索</h5><p>find 命令中的 <code>-name</code> 选项可以根据文件名称进行检索（<strong>区分大小写</strong>）。如需要忽略文件名中的大小写，可以使用 <code>-iname</code> 选项。</p><p><code>-name</code> 和 <code>-iname</code> 两个选项都支持 <strong>wildcards</strong> 。如：</p><ul><li><code>?</code> 可以表示任意一个单一的符号</li><li><code>*</code> 可以表示任意数量（包括 0）的未知符号</li></ul><p><code>find /usr -name &#39;*.txt&#39;</code> 查找 /usr 目录下所有文件名以 <code>.txt</code> 结尾的文件<br><code>find /usr -name &#39;????&#39;</code> 查找 /usr 目录下所有文件名刚好为 4 个字符的文件</p><p>有些时候，你需要在搜索时匹配某个文件或目录的<strong>完整路径</strong>，而不仅仅是匹配文件名。可以使用 <code>-path</code> 或 <code>-ipath</code> 选项。</p><p>如查找 /usr 下所有文件名以 <code>.txt</code> 结尾的文件或目录，且该文件的父目录必须是 <code>src</code>。可以使用以下命令：<br><code>find /usr -path &#39;*/src/*.txt&#39;</code></p><h5 id="2-根据文件类型检索"><a href="#2-根据文件类型检索" class="headerlink" title="2. 根据文件类型检索"></a>2. 根据文件类型检索</h5><p>如果只想搜索得到文件<strong>或</strong>目录，即不想它们同时出现在结果中。可以使用 <code>-type</code> 选项指定文件类型。</p><p><code>-type</code> 选项最常用的参数如下：</p><ul><li>f: 文件</li><li>d: 目录</li><li>l: 符号链接</li></ul><p><code>find /usr -type d -name &#39;python*&#39;</code> 检索 /usr 下所有文件名以 <code>python</code> 开头的<strong>目录</strong></p><h5 id="3-检索空文件"><a href="#3-检索空文件" class="headerlink" title="3. 检索空文件"></a>3. 检索空文件</h5><p>find 命令支持 <code>-empty</code> 选项用来检索<strong>为空</strong>的文件或目录。空文件即文件里没有任何内容，空目录即目录中没有任何文件或子目录。</p><p><code>find ~ -type d -empty</code> 检索用户主目录下所有的空目录</p><h5 id="4-反义匹配"><a href="#4-反义匹配" class="headerlink" title="4. 反义匹配"></a>4. 反义匹配</h5><p>find 命令也允许用户对当前的匹配条件进行<strong>“反义”</strong>（类似于<strong>逻辑非</strong>操作）。</p><p>如需要检索 /usr 下所有文件名<strong>不</strong>以 <code>.txt</code> 为后缀的文件。可以使用以下命令：<br><code>find /usr -type f ! -name &#39;*.txt&#39;</code></p><p>也可以“翻转”任何其他的筛选条件，如：<br><code>find /usr -type f ! -empty</code> 检索 /usr 下所有内容不为空的文件</p><h5 id="5-根据文件的所属权检索"><a href="#5-根据文件的所属权检索" class="headerlink" title="5. 根据文件的所属权检索"></a>5. 根据文件的所属权检索</h5><p>为了检索归属于特定用户的文件或目录，可以使用 <code>-user</code> 选项。</p><p><code>find / -type f -user starky</code> 检索根目录下所有属主为 starky 的文件</p><p>类似于 <code>-user</code>选项，<code>-group</code> 选项则可以根据文件或目录的<strong>属组</strong>进行检索。</p><h5 id="6-根据时间日期进行检索"><a href="#6-根据时间日期进行检索" class="headerlink" title="6. 根据时间日期进行检索"></a>6. 根据时间日期进行检索</h5><p>有些时候，需要根据文件创建或修改的时间进行检索。</p><p>Linux 系统中，与文件相关联的时间参数有以下三种：</p><ul><li>修改时间（Modification time）：最后一次文件内容有过更改的时间点</li><li>访问时间（Access time）：最后一次文件有被读取过的时间点</li><li>变更时间（Change time）：最后一次文件有被<strong>变更</strong>过的时间点（如内容被修改，或权限等 metadata 被修改）</li></ul><p>与此对应的是 find 命令中的 <code>-mtime</code>，<code>-atime</code> 和 <code>-ctime</code> 三个选项。</p><p>这三个选项的使用遵循以下示例中的规则：</p><ul><li><code>-mtime 2</code>：该文件 2 天前被修改过</li><li><code>-mtime -2</code>：该文件 2 天<strong>以内</strong>被修改过</li><li><code>-mtime +2</code>：该文件距离上次修改已经<strong>超过</strong> 2 天时间</li></ul><p><code>find /usr -type f -mtime 2</code> 检索 /usr 下两天前被修改过的文件</p><p>如果觉得 <code>-mtime</code> 等选项以<strong>天</strong>为单位时间有点长，还可以使用 <code>-mmin</code>，<code>-amin</code>，<code>-cmin</code> 三个选项：<br><code>find /usr -type f -mtime +50 -mtime -100</code> 检索 /usr 下 50 到 100 天之前修改过的文件<br><code>find /usr -type f -mtime 2 -amin 5</code> 检索 /usr 下两天前被修改过且 5 分钟前又读取过的文件</p><h5 id="7-根据文件大小检索"><a href="#7-根据文件大小检索" class="headerlink" title="7. 根据文件大小检索"></a>7. 根据文件大小检索</h5><p><code>-size</code> 选项允许用户通过文件大小进行搜索（只适用于文件，目录没有大小……）。</p><p>表示文件大小的单位由以下字符组成：</p><ul><li><code>c</code>：字节</li><li><code>k</code>：Kb</li><li><code>M</code>：Mb</li><li><code>G</code>：Gb</li></ul><p>另外，还可以使用 <code>+</code> 或 <code>-</code> 符号表示<strong>大于</strong>或<strong>小于</strong>当前条件。</p><p><code>find / -size +1G</code> 检索文件大小高于 1 GB 的文件</p><h5 id="8-根据文件权限检索"><a href="#8-根据文件权限检索" class="headerlink" title="8. 根据文件权限检索"></a>8. 根据文件权限检索</h5><p>find 命令可以使用 <code>-perm</code> 选项以文件权限为依据进行搜索。</p><h6 id="使用符号形式"><a href="#使用符号形式" class="headerlink" title="使用符号形式"></a>使用符号形式</h6><p>如需要检索 /usr 目录下权限为 <code>rwxr-xr-x</code> 的文件，可以使用以下命令：<br><code>find /usr -perm u=rwx,g=rx,o=rx</code></p><p>搜索 /usr 目录下所有权限为 <code>r-xr-xr-x</code>（即系统中的所有用户都只有读写权限）的文件和目录，可以使用以下命令：<br><code>find /usr -perm a=rx</code></p><p>很多时候，我们只想匹配文件权限的一个<strong>子集</strong>。比如，检索可以直接被任何用户执行的文件，即只关心文件的执行权限，而不用管其读写权限是什么。</p><p>上述的需求可以通过以下命令实现：<code>find / -type f -perm /a=x</code><br>其中 <code>a=x</code> 前面的 <code>/</code> 符号即用来表示只匹配权限的某个子集（执行权限），而不用关心其他权限的具体设置。</p><h6 id="使用数字形式"><a href="#使用数字形式" class="headerlink" title="使用数字形式"></a>使用数字形式</h6><p><code>-perm</code> 选项也支持数字形式的文件权限标记。</p><p><code>find /usr -perm 644</code> 搜索 /usr 目录下权限为 <strong>644</strong>（即 <code>rwxr-xr-x</code>）的文件</p><h5 id="9-限制遍历的层数"><a href="#9-限制遍历的层数" class="headerlink" title="9. 限制遍历的层数"></a>9. 限制遍历的层数</h5><p>find 命令默认是以<strong>递归</strong>的方式检索项目的，这有时候会导致得到的结果数量非常巨大。可以使用 <code>-maxdepth</code> 限制 find 命令递归的层数。</p><p><code>find / -maxdepth 3</code> 搜索时向下递归的层数最大为 3</p><h5 id="10-逻辑组合"><a href="#10-逻辑组合" class="headerlink" title="10. 逻辑组合"></a>10. 逻辑组合</h5><p>在之前的例子中有出现多个搜索条件的<strong>组合</strong>以及对某个搜索条件的<strong>反转</strong>。<br>实际上 find 命令支持 <strong>“and”</strong> 和 <strong>“or”</strong> 两种逻辑运算，对应的命令选项分别是 <code>-a</code> 和 <code>-o</code>。通过这两个选项可以对搜索条件进行更复杂的组合。</p><p>此外还可以使用<strong>小括号</strong>对搜索条件进行<strong>分组</strong>。注意 <code>find</code> 命令中的小括号常需要用<strong>单引号</strong>包裹起来。因小括号在 Shell 中有特殊的含义。</p><p>如检索 /usr 下文件名以 <code>python</code> 开头且类型为目录的文件<br><code>find /usr -type d -name &#39;python*&#39;</code></p><p>该命令等同于：<br><code>find /usr -type d -a -name &#39;python*&#39;</code></p><p>更复杂的组合形式如：<br><code>find / &#39;(&#39; -mmin -5 -o -mtime +50 &#39;)&#39; -a -type f</code></p><h4 id="三、对搜索结果执行命令"><a href="#三、对搜索结果执行命令" class="headerlink" title="三、对搜索结果执行命令"></a>三、对搜索结果执行命令</h4><h5 id="1-删除文件"><a href="#1-删除文件" class="headerlink" title="1. 删除文件"></a>1. 删除文件</h5><p><code>-delete</code> 选项可以用来删除搜索到的文件和目录。</p><p>如删除 home 目录下所有的空目录：<br><code>find ~ -type d -empty -delete</code></p><h5 id="2-执行自定义命令"><a href="#2-执行自定义命令" class="headerlink" title="2. 执行自定义命令"></a>2. 执行自定义命令</h5><p><code>-exec</code> 选项可以对搜索到的结果执行特定的命令。</p><p>如需要将 home 目录下所有的 MP3 音频文件复制到移动存储设备（假设路径是 <code>/media/MyDrive</code>），可使用下面的命令：<br><code>find ~ -type f -name &#39;*.mp3&#39; -exec cp &#123;&#125; /media/MyDrive &#39;;&#39;</code></p><p>其中的<strong>大括号</strong>（<code>&#123;&#125;</code>）作为检索到的文件的 <strong>占位符</strong> ，而分号（ <code>;</code>）作为命令结束的标志。因为分号是 Shell 中有特殊含义的符号，所以需要使用单引号括起来。<br>每当 find 命令检索到一个符合条件的文件，会使用其完整路径取代命令中的 <code>&#123;&#125;</code>，然后执行 <code>-exec</code> 后面的命令一次。</p><p>另一个很重要的用法是，在多个文件中检索某个指定的字符串。<br>如在用户主目录下的所有文件中检索字符串 <code>hello</code> ，可以使用如下命令：<br><code>find ~ -type f -exec grep -l hello &#123;&#125; &#39;;&#39;</code></p><h6 id="exec-选项中的-符号"><a href="#exec-选项中的-符号" class="headerlink" title="-exec 选项中的 + 符号"></a>-exec 选项中的 + 符号</h6><p>创建 Gzip 格式的压缩文件的命令为：<code>tar -czvf filename.tar.gz &lt;list of files&gt;</code></p><p>现在假设需要将用户主目录下所有的 MP3 文件添加到压缩包 <code>music.tar.gz</code> 中，直观的感觉是，其命令应为如下形式：<br><code>find ~ -type f -name &#39;*.mp3&#39; -exec tar -czvf music.tar.gz &#123;&#125; &#39;;&#39;</code></p><p>实际情况是，这样得到的 <code>music.tar.gz</code> 其实只包含一个 MP3 文件。<br>原因是 find 命令<strong>每次</strong>发现一个音频文件，都会再执行一次 <code>-exec</code> 选项后面的压缩命令。导致先前生成的压缩包被覆盖。</p><p>可以先让 find 命令检索出所有符合条件的音频文件，再将得到的<strong>文件列表</strong>传递给后面的压缩命令。完整的命令如下：<br><code>find ~ -type f -name &#39;*.mp3&#39; -exec tar -czvf music.tar.gz &#123;&#125; +</code></p><h6 id="显示文件信息"><a href="#显示文件信息" class="headerlink" title="显示文件信息"></a>显示文件信息</h6><p>如果想浏览搜索到的文件（目录）的详细信息（如权限和大小等），可以直接使用 <code>-ls</code> 选项。</p><p><code>find / -type file -size +1G -ls</code> 浏览所有 1G 以上大小的文件的详细信息</p><h4 id="四、常用参数汇总"><a href="#四、常用参数汇总" class="headerlink" title="四、常用参数汇总"></a>四、常用参数汇总</h4><p>参数</p><p>解析</p><p>-atime <em>n[smhdw]</em></p><p>距离文件上次被访问时的时间间隔</p><p>-ctime <em>n[smhdw]</em></p><p>距离文件创建时的时间间隔</p><p>-delete</p><p>删除检索到的文件</p><p>-depth <em>n</em></p><p>检索深度为 n 的文件，即位于指定目录以下 n 层的文件</p><p>-empty</p><p>检索空文件或空目录</p><p>-fstype <em>type</em></p><p>指定文件所在的文件系统的类型</p><p>-group <em>gname</em></p><p>指定文件的属组</p><p>-iname <em>pattern</em></p><p>同 <code>-name</code>，忽略大小写</p><p>-ipath <em>pattern</em></p><p>同 <code>-path</code>，忽略大小写</p><p>-ls</p><p>打印搜索到的文件的详细信息</p><p>-maxdepth <em>n</em></p><p>指定递归的最大层数为 n</p><p>-mtime <em>n[smhdw]</em></p><p>距离文件上次发生变更时的时间间隔</p><p>-name <em>pattern</em></p><p>搜索时使用 <code>pattern</code> 对文件名进行匹配</p><p>-path <em>pattern</em></p><p>搜索时使用 <code>pattern</code> 对文件路径进行匹配</p><p>-perm <em>mode</em></p><p>根据文件权限搜索</p><p>-size <em>n[ckMGTP]</em></p><p>根据文件大小搜索</p><p>-type <em>t</em></p><p>根据文件类型搜索</p><p>-user <em>uname</em></p><p>指定文件的属主</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes生态--交付prometheus监控及grafana炫酷dashboard到k8s集群</title>
      <link href="/posts/45181/"/>
      <url>/posts/45181/</url>
      
        <content type="html"><![CDATA[<p>kubernetes生态–交付prometheus监控及grafana炫酷dashboard到k8s集群由于docker容器的特殊性，传统的zabbix无法对k8s集群内的docker状态进行…</p><!-- more --><h1 id="kubernetes生态–交付prometheus监控及grafana炫酷dashboard到k8s集群"><a href="#kubernetes生态–交付prometheus监控及grafana炫酷dashboard到k8s集群" class="headerlink" title="kubernetes生态–交付prometheus监控及grafana炫酷dashboard到k8s集群"></a>kubernetes生态–交付prometheus监控及grafana炫酷dashboard到k8s集群</h1><p>由于docker容器的特殊性，传统的zabbix无法对k8s集群内的docker状态进行监控，所以需要使用prometheus来进行监控：</p><h2 id="什么是Prometheus"><a href="#什么是Prometheus" class="headerlink" title="什么是Prometheus?"></a>什么是Prometheus?</h2><p>Prometheus是由SoundCloud开发的开源监控报警系统和时序列数据库(TSDB)。Prometheus使用Go语言开发，是Google BorgMon监控系统的开源版本。<br>2016年由Google发起Linux基金会旗下的原生云基金会(Cloud Native Computing Foundation), 将Prometheus纳入其下第二大开源项目。<br>Prometheus目前在开源社区相当活跃。<br>Prometheus和Heapster(Heapster是K8S的一个子项目，用于获取集群的性能数据。)相比功能更完善、更全面。Prometheus性能也足够支撑上万台规模的集群。</p><h2 id="Prometheus的特点"><a href="#Prometheus的特点" class="headerlink" title="Prometheus的特点"></a>Prometheus的特点</h2><ul><li><ul><li>多维度数据模型。</li><li>灵活的查询语言。</li><li>不依赖分布式存储，单个服务器节点是自主的。</li><li>通过基于HTTP的pull方式采集时序数据。</li><li>可以通过中间网关进行时序列数据推送。</li><li>通过服务发现或者静态配置来发现目标服务对象。</li><li>支持多种多样的图表和界面展示，比如Grafana等。</li></ul></li></ul><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191217174524209-1830352204.png" alt="img" title="img"></p><h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>Prometheus的基本原理是通过HTTP协议周期性抓取被监控组件的状态，任意组件只要提供对应的HTTP接口就可以接入监控。不需要任何SDK或者其他的集成过程。这样做非常适合做虚拟化环境监控系统，比如VM、Docker、Kubernetes等。输出被监控组件信息的HTTP接口被叫做exporter 。目前互联网公司常用的组件大部分都有exporter可以直接使用，比如Varnish、Haproxy、Nginx、MySQL、Linux系统信息(包括磁盘、内存、CPU、网络等等)。</p><h2 id="服务过程"><a href="#服务过程" class="headerlink" title="服务过程"></a>服务过程</h2><ul><li>Prometheus Daemon负责定时去目标上抓取metrics(指标)数据，每个抓取目标需要暴露一个http服务的接口给它定时抓取。Prometheus支持通过配置文件、文本文件、Zookeeper、Consul、DNS SRV Lookup等方式指定抓取目标。Prometheus采用PULL的方式进行监控，即服务器可以直接通过目标PULL数据或者间接地通过中间网关来Push数据。</li><li>Prometheus在本地存储抓取的所有数据，并通过一定规则进行清理和整理数据，并把得到的结果存储到新的时间序列中。</li><li>Prometheus通过PromQL和其他API可视化地展示收集的数据。Prometheus支持很多方式的图表可视化，例如Grafana、自带的Promdash以及自身提供的模版引擎等等。Prometheus还提供HTTP API的查询方式，自定义所需要的输出。</li><li>PushGateway支持Client主动推送metrics到PushGateway，而Prometheus只是定时去Gateway上抓取数据。</li><li>Alertmanager是独立于Prometheus的一个组件，可以支持Prometheus的查询语句，提供十分灵活的报警方式。</li></ul><h2 id="三大套件"><a href="#三大套件" class="headerlink" title="三大套件"></a>三大套件</h2><ul><li>Server 主要负责数据采集和存储，提供PromQL查询语言的支持。</li><li>Alertmanager 警告管理器，用来进行报警。</li><li>Push Gateway 支持临时性Job主动推送指标的中间网关。</li></ul><p>prometheus不同于zabbix，没有agent，使用的是针对不同服务的exporter：</p><p>prometheus官网：<a href="https://prometheus.io/">官网地址</a></p><p>正常情况下，监控k8s集群及node，pod，常用的exporter有四个：</p><ul><li><strong>kube-state-metrics – 收集k8s集群master&amp;etcd等基本状态信息</strong></li><li><strong>node-exporter – 收集k8s集群node信息</strong></li><li><strong>cadvisor – 收集k8s集群docker容器内部使用资源信息</strong></li><li><strong>blackbox-exporte – 收集k8s集群docker容器服务是否存活</strong></li></ul><p>接下来逐一创建以上exporter：</p><p>老套路，下载docker镜像，准备资源配置清单，应用资源配置清单：</p><p><strong>一、kube-state-metrics</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># docker pull quay.io&#x2F;coreos&#x2F;kube-state-metrics:v1.5.0</span><br><span class="line"># docker tag 91599517197a harbor.od.com&#x2F;public&#x2F;kube-state-metrics:v1.5.0</span><br><span class="line"># docker push harbor.od.com&#x2F;public&#x2F;kube-state-metrics:v1.5.0</span><br></pre></td></tr></table></figure><p>准备资源配置清单：</p><p>1、rbac.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># mkdir &#x2F;data&#x2F;k8s-yaml&#x2F;kube-state-metrics &amp;&amp; cd &#x2F;data&#x2F;k8s-yaml&#x2F;kube-state-metrics</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    addonmanager.kubernetes.io&#x2F;mode: Reconcile</span><br><span class="line">    kubernetes.io&#x2F;cluster-service: &quot;true&quot;</span><br><span class="line">  name: kube-state-metrics</span><br><span class="line">  namespace: kube-system</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io&#x2F;v1</span><br><span class="line">kind: ClusterRole</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    addonmanager.kubernetes.io&#x2F;mode: Reconcile</span><br><span class="line">    kubernetes.io&#x2F;cluster-service: &quot;true&quot;</span><br><span class="line">  name: kube-state-metrics</span><br><span class="line">rules:</span><br><span class="line">- apiGroups:</span><br><span class="line">  - &quot;&quot;</span><br><span class="line">  resources:</span><br><span class="line">  - configmaps</span><br><span class="line">  - secrets</span><br><span class="line">  - nodes</span><br><span class="line">  - pods</span><br><span class="line">  - services</span><br><span class="line">  - resourcequotas</span><br><span class="line">  - replicationcontrollers</span><br><span class="line">  - limitranges</span><br><span class="line">  - persistentvolumeclaims</span><br><span class="line">  - persistentvolumes</span><br><span class="line">  - namespaces</span><br><span class="line">  - endpoints</span><br><span class="line">  verbs:</span><br><span class="line">  - list</span><br><span class="line">  - watch</span><br><span class="line">- apiGroups:</span><br><span class="line">  - policy</span><br><span class="line">  resources:</span><br><span class="line">  - poddisruptionbudgets</span><br><span class="line">  verbs:</span><br><span class="line">  - list</span><br><span class="line">  - watch</span><br><span class="line">- apiGroups:</span><br><span class="line">  - extensions</span><br><span class="line">  resources:</span><br><span class="line">  - daemonsets</span><br><span class="line">  - deployments</span><br><span class="line">  - replicasets</span><br><span class="line">  verbs:</span><br><span class="line">  - list</span><br><span class="line">  - watch</span><br><span class="line">- apiGroups:</span><br><span class="line">  - apps</span><br><span class="line">  resources:</span><br><span class="line">  - statefulsets</span><br><span class="line">  verbs:</span><br><span class="line">  - list</span><br><span class="line">  - watch</span><br><span class="line">- apiGroups:</span><br><span class="line">  - batch</span><br><span class="line">  resources:</span><br><span class="line">  - cronjobs</span><br><span class="line">  - jobs</span><br><span class="line">  verbs:</span><br><span class="line">  - list</span><br><span class="line">  - watch</span><br><span class="line">- apiGroups:</span><br><span class="line">  - autoscaling</span><br><span class="line">  resources:</span><br><span class="line">  - horizontalpodautoscalers</span><br><span class="line">  verbs:</span><br><span class="line">  - list</span><br><span class="line">  - watch</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io&#x2F;v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    addonmanager.kubernetes.io&#x2F;mode: Reconcile</span><br><span class="line">    kubernetes.io&#x2F;cluster-service: &quot;true&quot;</span><br><span class="line">  name: kube-state-metrics</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: kube-state-metrics</span><br><span class="line">subjects:</span><br><span class="line">- kind: ServiceAccount</span><br><span class="line">  name: kube-state-metrics</span><br><span class="line">  namespace: kube-system</span><br></pre></td></tr></table></figure><p>2、dp.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: extensions&#x2F;v1beta1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  annotations:</span><br><span class="line">    deployment.kubernetes.io&#x2F;revision: &quot;2&quot;</span><br><span class="line">  labels:</span><br><span class="line">    grafanak8sapp: &quot;true&quot;</span><br><span class="line">    app: kube-state-metrics</span><br><span class="line">  name: kube-state-metrics</span><br><span class="line">  namespace: kube-system</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      grafanak8sapp: &quot;true&quot;</span><br><span class="line">      app: kube-state-metrics</span><br><span class="line">  strategy:</span><br><span class="line">    rollingUpdate:</span><br><span class="line">      maxSurge: 25%</span><br><span class="line">      maxUnavailable: 25%</span><br><span class="line">    type: RollingUpdate</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        grafanak8sapp: &quot;true&quot;</span><br><span class="line">        app: kube-state-metrics</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: kube-state-metrics</span><br><span class="line">        image: harbor.od.com&#x2F;public&#x2F;kube-state-metrics:v1.5.0</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 8080</span><br><span class="line">          name: http-metrics</span><br><span class="line">          protocol: TCP</span><br><span class="line">        readinessProbe:</span><br><span class="line">          failureThreshold: 3</span><br><span class="line">          httpGet:</span><br><span class="line">            path: &#x2F;healthz</span><br><span class="line">            port: 8080</span><br><span class="line">            scheme: HTTP</span><br><span class="line">          initialDelaySeconds: 5</span><br><span class="line">          periodSeconds: 10</span><br><span class="line">          successThreshold: 1</span><br><span class="line">          timeoutSeconds: 5</span><br><span class="line">      serviceAccountName: kube-state-metrics</span><br></pre></td></tr></table></figure><p>应用资源配置清单：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;kube-state-metrics&#x2F;rbac.yaml</span><br><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;kube-state-metrics&#x2F;dp.yaml</span><br></pre></td></tr></table></figure><p>测试一下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># kubectl get pod -n kube-system -o wide</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191217180718964-1295555935.png" alt="img" title="img"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># curl http:&#x2F;&#x2F;172.7.22.10:8080&#x2F;healthz</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191217180813579-382804868.png" alt="img" title="img"></p><p>已经成功运行。</p><p><strong>二、**</strong>node-exporter**</p><p><strong>由于node-exporter是监控node的，所有需要每个节点启动一个，所以使用ds控制器</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># docker pull prom&#x2F;node-exporter:v0.15.0</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># docker tag 12d51ffa2b22 harbor.od.com&#x2F;public&#x2F;node-exporter:v0.15.0</span><br><span class="line"># docker push harbor.od.com&#x2F;public&#x2F;node-exporter:v0.15.0</span><br></pre></td></tr></table></figure><p>准备资源配置清单：</p><p>1、ds.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># mkdir node-exporter &amp;&amp; cd node-exporter</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">kind: DaemonSet</span><br><span class="line">apiVersion: extensions&#x2F;v1beta1</span><br><span class="line">metadata:</span><br><span class="line">  name: node-exporter</span><br><span class="line">  namespace: kube-system</span><br><span class="line">  labels:</span><br><span class="line">    daemon: &quot;node-exporter&quot;</span><br><span class="line">    grafanak8sapp: &quot;true&quot;</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      daemon: &quot;node-exporter&quot;</span><br><span class="line">      grafanak8sapp: &quot;true&quot;</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      name: node-exporter</span><br><span class="line">      labels:</span><br><span class="line">        daemon: &quot;node-exporter&quot;</span><br><span class="line">        grafanak8sapp: &quot;true&quot;</span><br><span class="line">    spec:</span><br><span class="line">      volumes:</span><br><span class="line">      - name: proc</span><br><span class="line">        hostPath: </span><br><span class="line">          path: &#x2F;proc</span><br><span class="line">          type: &quot;&quot;</span><br><span class="line">      - name: sys</span><br><span class="line">        hostPath:</span><br><span class="line">          path: &#x2F;sys</span><br><span class="line">          type: &quot;&quot;</span><br><span class="line">      containers:</span><br><span class="line">      - name: node-exporter</span><br><span class="line">        image: harbor.od.com&#x2F;public&#x2F;node-exporter:v0.15.0</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        args:</span><br><span class="line">        - --path.procfs&#x3D;&#x2F;host_proc</span><br><span class="line">        - --path.sysfs&#x3D;&#x2F;host_sys</span><br><span class="line">        ports:</span><br><span class="line">        - name: node-exporter</span><br><span class="line">          hostPort: 9100</span><br><span class="line">          containerPort: 9100</span><br><span class="line">          protocol: TCP</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: sys</span><br><span class="line">          readOnly: true</span><br><span class="line">          mountPath: &#x2F;host_sys</span><br><span class="line">        - name: proc</span><br><span class="line">          readOnly: true</span><br><span class="line">          mountPath: &#x2F;host_proc</span><br><span class="line">      hostNetwork: true</span><br></pre></td></tr></table></figure><p>应用资源配置清单：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;node-exporter&#x2F;ds.yaml</span><br><span class="line"># kubectl get pod -n kube-system -o wide</span><br></pre></td></tr></table></figure><p>我们有两个node，每个node节点启动一个：</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191217181605759-1998938636.png" alt="img" title="img"></p><p><strong>三、cadvisor</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># docker pull google&#x2F;cadvisor:v0.28.3</span><br><span class="line"># docker tag 75f88e3ec333 harbor.od.com&#x2F;public&#x2F;cadvisor:0.28.3</span><br><span class="line"># docker push harbor.od.com&#x2F;public&#x2F;cadvisor:0.28.3</span><br></pre></td></tr></table></figure><p>准备资源配置清单：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># mkdir cadvisor &amp;&amp; cd cadvisor</span><br></pre></td></tr></table></figure><p>1、ds.yaml <strong>标红部分是k8s资源配置清单中一个重要的高级属性，下一篇博客着重介绍</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: apps&#x2F;v1</span><br><span class="line">kind: DaemonSet</span><br><span class="line">metadata:</span><br><span class="line">  name: cadvisor</span><br><span class="line">  namespace: kube-system</span><br><span class="line">  labels:</span><br><span class="line">    app: cadvisor</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      name: cadvisor</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        name: cadvisor</span><br><span class="line">    spec:</span><br><span class="line">      hostNetwork: true</span><br><span class="line">      tolerations:</span><br><span class="line">      - key: node-role.kubernetes.io&#x2F;master</span><br><span class="line">        effect: NoSchedule</span><br><span class="line">      containers:</span><br><span class="line">      - name: cadvisor</span><br><span class="line">        image: harbor.od.com&#x2F;public&#x2F;cadvisor:v0.28.3</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: rootfs</span><br><span class="line">          mountPath: &#x2F;rootfs</span><br><span class="line">          readOnly: true</span><br><span class="line">        - name: var-run</span><br><span class="line">          mountPath: &#x2F;var&#x2F;run</span><br><span class="line">        - name: sys</span><br><span class="line">          mountPath: &#x2F;sys</span><br><span class="line">          readOnly: true</span><br><span class="line">        - name: docker</span><br><span class="line">          mountPath: &#x2F;var&#x2F;lib&#x2F;docker</span><br><span class="line">          readOnly: true</span><br><span class="line">        ports:</span><br><span class="line">          - name: http</span><br><span class="line">            containerPort: 4194</span><br><span class="line">            protocol: TCP</span><br><span class="line">        readinessProbe:</span><br><span class="line">          tcpSocket:</span><br><span class="line">            port: 4194</span><br><span class="line">          initialDelaySeconds: 5</span><br><span class="line">          periodSeconds: 10</span><br><span class="line">        args:</span><br><span class="line">          - --housekeeping_interval&#x3D;10s</span><br><span class="line">          - --port&#x3D;4194</span><br><span class="line">      terminationGracePeriodSeconds: 30</span><br><span class="line">      volumes:</span><br><span class="line">      - name: rootfs</span><br><span class="line">        hostPath:</span><br><span class="line">          path: &#x2F;</span><br><span class="line">      - name: var-run</span><br><span class="line">        hostPath:</span><br><span class="line">          path: &#x2F;var&#x2F;run</span><br><span class="line">      - name: sys</span><br><span class="line">        hostPath:</span><br><span class="line">          path: &#x2F;sys</span><br><span class="line">      - name: docker</span><br><span class="line">        hostPath:</span><br><span class="line">          path: &#x2F;data&#x2F;docker</span><br></pre></td></tr></table></figure><p>针对挂载资源，做一些调整：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># mount -o remount,rw &#x2F;sys&#x2F;fs&#x2F;cgroup&#x2F;</span><br><span class="line"># ln -s &#x2F;sys&#x2F;fs&#x2F;cgroup&#x2F;cpu,cpuacct &#x2F;sys&#x2F;fs&#x2F;cgroup&#x2F;cpuacct,cpu</span><br></pre></td></tr></table></figure><p>应用资源配置清单：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;cadvisor&#x2F;ds.yaml</span><br></pre></td></tr></table></figure><p>检查：</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191217184252982-1773513807.png" alt="img" title="img"></p><p><strong>四、blackbox-exporter</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># docker pull prom&#x2F;blackbox-exporter:v0.15.1</span><br><span class="line"># docker tag 81b70b6158be  harbor.od.com&#x2F;public&#x2F;blackbox-exporter:v0.15.1</span><br><span class="line"># docker push harbor.od.com&#x2F;public&#x2F;blackbox-exporter:v0.15.1</span><br></pre></td></tr></table></figure><p>创建资源配置清单：</p><p>1、cm.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app: blackbox-exporter</span><br><span class="line">  name: blackbox-exporter</span><br><span class="line">  namespace: kube-system</span><br><span class="line">data:</span><br><span class="line">  blackbox.yml: |-</span><br><span class="line">    modules:</span><br><span class="line">      http_2xx:</span><br><span class="line">        prober: http</span><br><span class="line">        timeout: 2s</span><br><span class="line">        http:</span><br><span class="line">          valid_http_versions: [&quot;HTTP&#x2F;1.1&quot;, &quot;HTTP&#x2F;2&quot;]</span><br><span class="line">          valid_status_codes: [200,301,302]</span><br><span class="line">          method: GET</span><br><span class="line">          preferred_ip_protocol: &quot;ip4&quot;</span><br><span class="line">      tcp_connect:</span><br><span class="line">        prober: tcp</span><br><span class="line">        timeout: 2s</span><br></pre></td></tr></table></figure><p>2、dp.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">kind: Deployment</span><br><span class="line">apiVersion: extensions&#x2F;v1beta1</span><br><span class="line">metadata:</span><br><span class="line">  name: blackbox-exporter</span><br><span class="line">  namespace: kube-system</span><br><span class="line">  labels:</span><br><span class="line">    app: blackbox-exporter</span><br><span class="line">  annotations:</span><br><span class="line">    deployment.kubernetes.io&#x2F;revision: 1</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: blackbox-exporter</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: blackbox-exporter</span><br><span class="line">    spec:</span><br><span class="line">      volumes:</span><br><span class="line">      - name: config</span><br><span class="line">        configMap:</span><br><span class="line">          name: blackbox-exporter</span><br><span class="line">          defaultMode: 420</span><br><span class="line">      containers:</span><br><span class="line">      - name: blackbox-exporter</span><br><span class="line">        image: harbor.od.com&#x2F;public&#x2F;blackbox-exporter:v0.15.1</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        args:</span><br><span class="line">        - --config.file&#x3D;&#x2F;etc&#x2F;blackbox_exporter&#x2F;blackbox.yml</span><br><span class="line">        - --log.level&#x3D;info</span><br><span class="line">        - --web.listen-address&#x3D;:9115</span><br><span class="line">        ports:</span><br><span class="line">        - name: blackbox-port</span><br><span class="line">          containerPort: 9115</span><br><span class="line">          protocol: TCP</span><br><span class="line">        resources:</span><br><span class="line">          limits:</span><br><span class="line">            cpu: 200m</span><br><span class="line">            memory: 256Mi</span><br><span class="line">          requests:</span><br><span class="line">            cpu: 100m</span><br><span class="line">            memory: 50Mi</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: config</span><br><span class="line">          mountPath: &#x2F;etc&#x2F;blackbox_exporter</span><br><span class="line">        readinessProbe:</span><br><span class="line">          tcpSocket:</span><br><span class="line">            port: 9115</span><br><span class="line">          initialDelaySeconds: 5</span><br><span class="line">          timeoutSeconds: 5</span><br><span class="line">          periodSeconds: 10</span><br><span class="line">          successThreshold: 1</span><br><span class="line">          failureThreshold: 3</span><br></pre></td></tr></table></figure><p>3、svc.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">kind: Service</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  name: blackbox-exporter</span><br><span class="line">  namespace: kube-system</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    app: blackbox-exporter</span><br><span class="line">  ports:</span><br><span class="line">    - name: blackbox-port</span><br><span class="line">      protocol: TCP</span><br><span class="line">      port: 9115</span><br></pre></td></tr></table></figure><p>4、ingress.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: extensions&#x2F;v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: blackbox-exporter</span><br><span class="line">  namespace: kube-system</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: blackbox.od.com</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: &#x2F;</span><br><span class="line">        backend:</span><br><span class="line">          serviceName: blackbox-exporter</span><br><span class="line">          servicePort: blackbox-port</span><br></pre></td></tr></table></figure><p>这里用到了一个域名，添加解析：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># vi &#x2F;var&#x2F;named&#x2F;od.com.zone</span><br><span class="line">blackbox       A    10.4.7.10</span><br></pre></td></tr></table></figure><p>应用资源配置清单：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;blackbox-exporter&#x2F;cm.yaml</span><br><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;blackbox-exporter&#x2F;dp.yaml</span><br><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;blackbox-exporter&#x2F;svc.yaml</span><br><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;blackbox-exporter&#x2F;ingress.yaml</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191217185516382-1860732768.png" alt="img" title="img"></p><p>访问域名测试：</p><p>访问到以下界面，表示blackbox已经运行成功</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191217185636620-1445438345.png" alt="img" title="img"></p><p><strong>接下来部署prometheus server：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># docker pull prom&#x2F;prometheus:v2.14.0</span><br><span class="line"># docker tag 7317640d555e harbor.od.com&#x2F;infra&#x2F;prometheus:v2.14.0</span><br><span class="line"># docker push harbor.od.com&#x2F;infra&#x2F;prometheus:v2.14.0</span><br></pre></td></tr></table></figure><p>准备资源配置清单：</p><p>1、rbac.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    addonmanager.kubernetes.io&#x2F;mode: Reconcile</span><br><span class="line">    kubernetes.io&#x2F;cluster-service: &quot;true&quot;</span><br><span class="line">  name: prometheus</span><br><span class="line">  namespace: infra</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io&#x2F;v1</span><br><span class="line">kind: ClusterRole</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    addonmanager.kubernetes.io&#x2F;mode: Reconcile</span><br><span class="line">    kubernetes.io&#x2F;cluster-service: &quot;true&quot;</span><br><span class="line">  name: prometheus</span><br><span class="line">rules:</span><br><span class="line">- apiGroups:</span><br><span class="line">  - &quot;&quot;</span><br><span class="line">  resources:</span><br><span class="line">  - nodes</span><br><span class="line">  - nodes&#x2F;metrics</span><br><span class="line">  - services</span><br><span class="line">  - endpoints</span><br><span class="line">  - pods</span><br><span class="line">  verbs:</span><br><span class="line">  - get</span><br><span class="line">  - list</span><br><span class="line">  - watch</span><br><span class="line">- apiGroups:</span><br><span class="line">  - &quot;&quot;</span><br><span class="line">  resources:</span><br><span class="line">  - configmaps</span><br><span class="line">  verbs:</span><br><span class="line">  - get</span><br><span class="line">- nonResourceURLs:</span><br><span class="line">  - &#x2F;metrics</span><br><span class="line">  verbs:</span><br><span class="line">  - get</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io&#x2F;v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    addonmanager.kubernetes.io&#x2F;mode: Reconcile</span><br><span class="line">    kubernetes.io&#x2F;cluster-service: &quot;true&quot;</span><br><span class="line">  name: prometheus</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: prometheus</span><br><span class="line">subjects:</span><br><span class="line">- kind: ServiceAccount</span><br><span class="line">  name: prometheus</span><br><span class="line">  namespace: infra</span><br></pre></td></tr></table></figure><p>2、dp.yaml</p><p>加上–web.enable-lifecycle启用远程热加载配置文件<br>调用指令是curl -X POST <a href="http://localhost/">http://localhost</a>:9090/-/reload</p><p>storage.tsdb.min-block-duration=10m #只加载10分钟数据到内</p><p>storage.tsdb.retention=72h #保留72小时数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: extensions&#x2F;v1beta1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  annotations:</span><br><span class="line">    deployment.kubernetes.io&#x2F;revision: &quot;5&quot;</span><br><span class="line">  labels:</span><br><span class="line">    name: prometheus</span><br><span class="line">  name: prometheus</span><br><span class="line">  namespace: infra</span><br><span class="line">spec:</span><br><span class="line">  progressDeadlineSeconds: 600</span><br><span class="line">  replicas: 1</span><br><span class="line">  revisionHistoryLimit: 7</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: prometheus</span><br><span class="line">  strategy:</span><br><span class="line">    rollingUpdate:</span><br><span class="line">      maxSurge: 1</span><br><span class="line">      maxUnavailable: 1</span><br><span class="line">    type: RollingUpdate</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: prometheus</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: prometheus</span><br><span class="line">        image: harbor.od.com&#x2F;infra&#x2F;prometheus:v2.14.0</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        command:</span><br><span class="line">        - &#x2F;bin&#x2F;prometheus</span><br><span class="line">        args:</span><br><span class="line">        - --config.file&#x3D;&#x2F;data&#x2F;etc&#x2F;prometheus.yml</span><br><span class="line">        - --storage.tsdb.path&#x3D;&#x2F;data&#x2F;prom-db</span><br><span class="line">        - --storage.tsdb.min-block-duration&#x3D;10m</span><br><span class="line">        - --storage.tsdb.retention&#x3D;72h</span><br><span class="line">        - --web.enable-lifecycle</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 9090</span><br><span class="line">          protocol: TCP</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - mountPath: &#x2F;data</span><br><span class="line">          name: data</span><br><span class="line">        resources:</span><br><span class="line">          requests:</span><br><span class="line">            cpu: &quot;1000m&quot;</span><br><span class="line">            memory: &quot;1.5Gi&quot;</span><br><span class="line">          limits:</span><br><span class="line">            cpu: &quot;2000m&quot;</span><br><span class="line">            memory: &quot;3Gi&quot;</span><br><span class="line">      imagePullSecrets:</span><br><span class="line">      - name: harbor</span><br><span class="line">      securityContext:</span><br><span class="line">        runAsUser: 0</span><br><span class="line">      serviceAccountName: prometheus</span><br><span class="line">      volumes:</span><br><span class="line">      - name: data</span><br><span class="line">        nfs:</span><br><span class="line">          server: hdss7-200</span><br><span class="line">          path: &#x2F;data&#x2F;nfs-volume&#x2F;prometheus</span><br></pre></td></tr></table></figure><p>3、svc.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: prometheus</span><br><span class="line">  namespace: infra</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - port: 9090</span><br><span class="line">    protocol: TCP</span><br><span class="line">    targetPort: 9090</span><br><span class="line">  selector:</span><br><span class="line">    app: prometheus</span><br></pre></td></tr></table></figure><p>4、ingress.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: extensions&#x2F;v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  annotations:</span><br><span class="line">    kubernetes.io&#x2F;ingress.class: traefik</span><br><span class="line">  name: prometheus</span><br><span class="line">  namespace: infra</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: prometheus.od.com</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: &#x2F;</span><br><span class="line">        backend:</span><br><span class="line">          serviceName: prometheus</span><br><span class="line">          servicePort: 9090</span><br></pre></td></tr></table></figure><p>这里用到一个域名，添加解析：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">prometheus         A    10.4.7.10</span><br></pre></td></tr></table></figure><p>记得重启named服务</p><p>创建需要的目录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># mkdir -p &#x2F;data&#x2F;nfs-volume&#x2F;prometheus&#x2F;&#123;etc,prom-db&#125;</span><br></pre></td></tr></table></figure><p>修改prometheus配置文件：别问为啥这么写，问就是不懂~</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># vi &#x2F;data&#x2F;nfs-volume&#x2F;prometheus&#x2F;etc&#x2F;prometheus.yml</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br></pre></td><td class="code"><pre><span class="line">global:</span><br><span class="line">  scrape_interval:     15s</span><br><span class="line">  evaluation_interval: 15s</span><br><span class="line">scrape_configs:</span><br><span class="line">- job_name: &#39;etcd&#39;</span><br><span class="line">  tls_config:</span><br><span class="line">    ca_file: &#x2F;data&#x2F;etc&#x2F;ca.pem</span><br><span class="line">    cert_file: &#x2F;data&#x2F;etc&#x2F;client.pem</span><br><span class="line">    key_file: &#x2F;data&#x2F;etc&#x2F;client-key.pem</span><br><span class="line">  scheme: https</span><br><span class="line">  static_configs:</span><br><span class="line">  - targets:</span><br><span class="line">    - &#39;10.4.7.12:2379&#39;</span><br><span class="line">    - &#39;10.4.7.21:2379&#39;</span><br><span class="line">    - &#39;10.4.7.22:2379&#39;</span><br><span class="line">- job_name: &#39;kubernetes-apiservers&#39;</span><br><span class="line">  kubernetes_sd_configs:</span><br><span class="line">  - role: endpoints</span><br><span class="line">  scheme: https</span><br><span class="line">  tls_config:</span><br><span class="line">    ca_file: &#x2F;var&#x2F;run&#x2F;secrets&#x2F;kubernetes.io&#x2F;serviceaccount&#x2F;ca.crt</span><br><span class="line">  bearer_token_file: &#x2F;var&#x2F;run&#x2F;secrets&#x2F;kubernetes.io&#x2F;serviceaccount&#x2F;token</span><br><span class="line">  relabel_configs:</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]</span><br><span class="line">    action: keep</span><br><span class="line">    regex: default;kubernetes;https</span><br><span class="line">- job_name: &#39;kubernetes-pods&#39;</span><br><span class="line">  kubernetes_sd_configs:</span><br><span class="line">  - role: pod</span><br><span class="line">  relabel_configs:</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]</span><br><span class="line">    action: keep</span><br><span class="line">    regex: true</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: __metrics_path__</span><br><span class="line">    regex: (.+)</span><br><span class="line">  - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]</span><br><span class="line">    action: replace</span><br><span class="line">    regex: ([^:]+)(?::\d+)?;(\d+)</span><br><span class="line">    replacement: $1:$2</span><br><span class="line">    target_label: __address__</span><br><span class="line">  - action: labelmap</span><br><span class="line">    regex: __meta_kubernetes_pod_label_(.+)</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: kubernetes_namespace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: kubernetes_pod_name</span><br><span class="line">- job_name: &#39;kubernetes-kubelet&#39;</span><br><span class="line">  kubernetes_sd_configs:</span><br><span class="line">  - role: node</span><br><span class="line">  relabel_configs:</span><br><span class="line">  - action: labelmap</span><br><span class="line">    regex: __meta_kubernetes_node_label_(.+)</span><br><span class="line">  - source_labels: [__meta_kubernetes_node_name]</span><br><span class="line">    regex: (.+)</span><br><span class="line">    target_label: __address__</span><br><span class="line">    replacement: $&#123;1&#125;:10255</span><br><span class="line">- job_name: &#39;kubernetes-cadvisor&#39;</span><br><span class="line">  kubernetes_sd_configs:</span><br><span class="line">  - role: node</span><br><span class="line">  relabel_configs:</span><br><span class="line">  - action: labelmap</span><br><span class="line">    regex: __meta_kubernetes_node_label_(.+)</span><br><span class="line">  - source_labels: [__meta_kubernetes_node_name]</span><br><span class="line">    regex: (.+)</span><br><span class="line">    target_label: __address__</span><br><span class="line">    replacement: $&#123;1&#125;:4194</span><br><span class="line">- job_name: &#39;kubernetes-kube-state&#39;</span><br><span class="line">  kubernetes_sd_configs:</span><br><span class="line">  - role: pod</span><br><span class="line">  relabel_configs:</span><br><span class="line">  - action: labelmap</span><br><span class="line">    regex: __meta_kubernetes_pod_label_(.+)</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: kubernetes_namespace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: kubernetes_pod_name</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_label_grafanak8sapp]</span><br><span class="line">    regex: .*true.*</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [&#39;__meta_kubernetes_pod_label_daemon&#39;, &#39;__meta_kubernetes_pod_node_name&#39;]</span><br><span class="line">    regex: &#39;node-exporter;(.*)&#39;</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: nodename</span><br><span class="line">- job_name: &#39;blackbox_http_pod_probe&#39;</span><br><span class="line">  metrics_path: &#x2F;probe</span><br><span class="line">  kubernetes_sd_configs:</span><br><span class="line">  - role: pod</span><br><span class="line">  params:</span><br><span class="line">    module: [http_2xx]</span><br><span class="line">  relabel_configs:</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_annotation_blackbox_scheme]</span><br><span class="line">    action: keep</span><br><span class="line">    regex: http</span><br><span class="line">  - source_labels: [__address__, __meta_kubernetes_pod_annotation_blackbox_port,  __meta_kubernetes_pod_annotation_blackbox_path]</span><br><span class="line">    action: replace</span><br><span class="line">    regex: ([^:]+)(?::\d+)?;(\d+);(.+)</span><br><span class="line">    replacement: $1:$2$3</span><br><span class="line">    target_label: __param_target</span><br><span class="line">  - action: replace</span><br><span class="line">    target_label: __address__</span><br><span class="line">    replacement: blackbox-exporter.kube-system:9115</span><br><span class="line">  - source_labels: [__param_target]</span><br><span class="line">    target_label: instance</span><br><span class="line">  - action: labelmap</span><br><span class="line">    regex: __meta_kubernetes_pod_label_(.+)</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: kubernetes_namespace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: kubernetes_pod_name</span><br><span class="line">- job_name: &#39;blackbox_tcp_pod_probe&#39;</span><br><span class="line">  metrics_path: &#x2F;probe</span><br><span class="line">  kubernetes_sd_configs:</span><br><span class="line">  - role: pod</span><br><span class="line">  params:</span><br><span class="line">    module: [tcp_connect]</span><br><span class="line">  relabel_configs:</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_annotation_blackbox_scheme]</span><br><span class="line">    action: keep</span><br><span class="line">    regex: tcp</span><br><span class="line">  - source_labels: [__address__, __meta_kubernetes_pod_annotation_blackbox_port]</span><br><span class="line">    action: replace</span><br><span class="line">    regex: ([^:]+)(?::\d+)?;(\d+)</span><br><span class="line">    replacement: $1:$2</span><br><span class="line">    target_label: __param_target</span><br><span class="line">  - action: replace</span><br><span class="line">    target_label: __address__</span><br><span class="line">    replacement: blackbox-exporter.kube-system:9115</span><br><span class="line">  - source_labels: [__param_target]</span><br><span class="line">    target_label: instance</span><br><span class="line">  - action: labelmap</span><br><span class="line">    regex: __meta_kubernetes_pod_label_(.+)</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: kubernetes_namespace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: kubernetes_pod_name</span><br><span class="line">- job_name: &#39;traefik&#39;</span><br><span class="line">  kubernetes_sd_configs:</span><br><span class="line">  - role: pod</span><br><span class="line">  relabel_configs:</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]</span><br><span class="line">    action: keep</span><br><span class="line">    regex: traefik</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: __metrics_path__</span><br><span class="line">    regex: (.+)</span><br><span class="line">  - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]</span><br><span class="line">    action: replace</span><br><span class="line">    regex: ([^:]+)(?::\d+)?;(\d+)</span><br><span class="line">    replacement: $1:$2</span><br><span class="line">    target_label: __address__</span><br><span class="line">  - action: labelmap</span><br><span class="line">    regex: __meta_kubernetes_pod_label_(.+)</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: kubernetes_namespace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: kubernetes_pod_name</span><br></pre></td></tr></table></figure><p>拷贝配置文件中用到的证书：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># cd &#x2F;data&#x2F;nfs-volume&#x2F;prometheus&#x2F;etc&#x2F;# cp &#x2F;opt&#x2F;certs&#x2F;ca.pem .&#x2F;</span><br><span class="line"># cp &#x2F;opt&#x2F;certs&#x2F;client.pem .&#x2F;</span><br><span class="line"># cp &#x2F;opt&#x2F;certs&#x2F;client-key.pem .&#x2F;</span><br></pre></td></tr></table></figure><p>应用资源配置清单：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;prometheus-server&#x2F;rbac.yaml</span><br><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;prometheus-server&#x2F;dp.yaml</span><br><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;prometheus-server&#x2F;svc.yaml</span><br><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;prometheus-server&#x2F;ingress.yaml</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191217193646033-135940431.png" alt="img" title="img"></p><p>浏览器验证：prometheus.od.com</p><p>这里点击status-targets，这里展示的就是我们在prometheus.yml中配置的job-name，这些targets基本可以满足我们收集数据的需求。</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191217193825301-1559250334.png" alt="img" title="img"></p><p>点击status-configuration就是我们的配置文件</p><p><img src="C:%5CUsers%5Cmu77ops%5CDesktop%5CK8S%5Cimg%5C1034759-20191217193951620-86033895.png" alt="img" title="img"></p><p>我们在配置文件中，除了etcd使用的静态配置以外，其他job都是使用的自动发现。</p><p>静态配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">global:</span><br><span class="line">  scrape_interval:     15s</span><br><span class="line">  evaluation_interval: 15s</span><br><span class="line">scrape_configs:</span><br><span class="line">- job_name: &#39;etcd&#39;</span><br><span class="line">  tls_config:</span><br><span class="line">    ca_file: &#x2F;data&#x2F;etc&#x2F;ca.pem</span><br><span class="line">    cert_file: &#x2F;data&#x2F;etc&#x2F;client.pem</span><br><span class="line">    key_file: &#x2F;data&#x2F;etc&#x2F;client-key.pem</span><br><span class="line">  scheme: https</span><br><span class="line">  static_configs:</span><br><span class="line">  - targets:</span><br><span class="line">    - &#39;10.4.7.12:2379&#39;</span><br><span class="line">    - &#39;10.4.7.21:2379&#39;</span><br><span class="line">    - &#39;10.4.7.22:2379&#39;</span><br></pre></td></tr></table></figure><p>自动发现：自动发现资源是pod</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- job_name: &#39;blackbox_http_pod_probe&#39;</span><br><span class="line">  metrics_path: &#x2F;probe</span><br><span class="line">  kubernetes_sd_configs:</span><br><span class="line">  - role: pod</span><br><span class="line">  params:</span><br><span class="line">    module: [http_2xx]</span><br><span class="line">  relabel_configs:</span><br></pre></td></tr></table></figure><p>这里还有很多数据没有收集到，是因为我们在启动服务的时候，没有添加annotations，下面给需要收集数据的服务添加annotations</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191218105127737-1378083314.png" alt="img" title="img"></p><p>1、traefik：</p><p>修改traefik的yaml：</p><p>从dashboard里找到traefik的yaml，跟labels同级添加annotations</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&quot;annotations&quot;: &#123;</span><br><span class="line">  &quot;prometheus_io_scheme&quot;: &quot;traefik&quot;,</span><br><span class="line">  &quot;prometheus_io_path&quot;: &quot;&#x2F;metrics&quot;,</span><br><span class="line">  &quot;prometheus_io_port&quot;: &quot;8080&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191218105807546-605452742.png" alt="img" title="img"></p><p>等待pod重启以后，在去prometheus上去看</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191218110258286-969134963.png" alt="img" title="img"></p><p>2、blackbox：</p><p>这个是检测容器内服务存活性的，也就是端口健康状态检查，分为tcp和http</p><p>首先准备两个服务，将dubbo-demo-service和dubbo-demo-consumer都调整为使用master镜像，不依赖apollo的（节省资源）</p><p>等两个服务起来以后，首先在dubbo-demo-service资源中添加一个TCP的annotation：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&quot;annotations&quot;: &#123;</span><br><span class="line">  &quot;blackbox_port&quot;: &quot;20880&quot;,</span><br><span class="line">  &quot;blackbox_scheme&quot;: &quot;tcp&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191218114049185-289549656.png" alt="img" title="img"></p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191218114215347-1007468579.png" alt="img" title="img"></p><p>这里会自动发现我们服务中，运行tcp port端口为20880的服务，并监控其状态</p><p>接下来在dubbo-demo-consumer资源中添加一个HTTP的annotation：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&quot;annotations&quot;: &#123;</span><br><span class="line">  &quot;blackbox_path&quot;: &quot;&#x2F;hello?name&#x3D;health&quot;,</span><br><span class="line">  &quot;blackbox_port&quot;: &quot;8080&quot;,</span><br><span class="line">  &quot;blackbox_scheme&quot;: &quot;http&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191218114140050-1303905475.png" alt="img" title="img"></p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191218114226257-429843371.png" alt="img" title="img"></p><p>去检查blackbox.od.com</p><p><a href="http://blackbox.od.com/">http://blackbox.od.com/</a></p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191218114841470-1455492210.png" alt="img" title="img"></p><p>接下来添加监控jvm信息的annotation：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&quot;annotations&quot;: &#123;</span><br><span class="line">  &quot;prometheus_io_scrape&quot;: &quot;true&quot;,</span><br><span class="line">  &quot;prometheus_io_port&quot;: &quot;12346&quot;,</span><br><span class="line">  &quot;prometheus_io_path&quot;: &quot;&#x2F;&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>dubbo-demo-service和dubbo-demo-consumer都添加：</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191218115419279-1197993355.png" alt="img" title="img"></p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191218115443784-1236702705.png" alt="img" title="img"></p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191218115505536-1101147354.png" alt="img" title="img"></p><p>匹配规则，要去prometheus.yml中去看。</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191218115652344-500964534.png" alt="img" title="img"></p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191218115708456-1158104936.png" alt="img" title="img"></p><p>接下来部署炫酷的dashboard工具grafana：</p><p>下载镜像：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># docker pull grafana&#x2F;grafana:5.4.2</span><br><span class="line"># docker tag 6f18ddf9e552 harbor.od.com&#x2F;infra&#x2F;grafana:v5.4.2</span><br><span class="line"># docker push harbor.od.com&#x2F;infra&#x2F;grafana:v5.4.2</span><br></pre></td></tr></table></figure><p>准备资源配置清单：</p><p>1、rbac.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: rbac.authorization.k8s.io&#x2F;v1</span><br><span class="line">kind: ClusterRole</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    addonmanager.kubernetes.io&#x2F;mode: Reconcile</span><br><span class="line">    kubernetes.io&#x2F;cluster-service: &quot;true&quot;</span><br><span class="line">  name: grafana</span><br><span class="line">rules:</span><br><span class="line">- apiGroups:</span><br><span class="line">  - &quot;*&quot;</span><br><span class="line">  resources:</span><br><span class="line">  - namespaces</span><br><span class="line">  - deployments</span><br><span class="line">  - pods</span><br><span class="line">  verbs:</span><br><span class="line">  - get</span><br><span class="line">  - list</span><br><span class="line">  - watch</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io&#x2F;v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    addonmanager.kubernetes.io&#x2F;mode: Reconcile</span><br><span class="line">    kubernetes.io&#x2F;cluster-service: &quot;true&quot;</span><br><span class="line">  name: grafana</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: grafana</span><br><span class="line">subjects:</span><br><span class="line">- kind: User</span><br><span class="line">  name: k8s-node</span><br></pre></td></tr></table></figure><p>2、dp.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: extensions&#x2F;v1beta1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app: grafana</span><br><span class="line">    name: grafana</span><br><span class="line">  name: grafana</span><br><span class="line">  namespace: infra</span><br><span class="line">spec:</span><br><span class="line">  progressDeadlineSeconds: 600</span><br><span class="line">  replicas: 1</span><br><span class="line">  revisionHistoryLimit: 7</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      name: grafana</span><br><span class="line">  strategy:</span><br><span class="line">    rollingUpdate:</span><br><span class="line">      maxSurge: 1</span><br><span class="line">      maxUnavailable: 1</span><br><span class="line">    type: RollingUpdate</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: grafana</span><br><span class="line">        name: grafana</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: grafana</span><br><span class="line">        image: harbor.od.com&#x2F;infra&#x2F;grafana:v5.4.2</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 3000</span><br><span class="line">          protocol: TCP</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - mountPath: &#x2F;var&#x2F;lib&#x2F;grafana</span><br><span class="line">          name: data</span><br><span class="line">      imagePullSecrets:</span><br><span class="line">      - name: harbor</span><br><span class="line">      securityContext:</span><br><span class="line">        runAsUser: 0</span><br><span class="line">      volumes:</span><br><span class="line">      - nfs:</span><br><span class="line">          server: hdss7-200</span><br><span class="line">          path: &#x2F;data&#x2F;nfs-volume&#x2F;grafana</span><br><span class="line">        name: data</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># mkdir &#x2F;data&#x2F;nfs-volume&#x2F;grafana</span><br></pre></td></tr></table></figure><p>3、svc.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: grafana</span><br><span class="line">  namespace: infra</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - port: 3000</span><br><span class="line">    protocol: TCP</span><br><span class="line">    targetPort: 3000</span><br><span class="line">  selector:</span><br><span class="line">    app: grafana</span><br></pre></td></tr></table></figure><p>4、ingress.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: extensions&#x2F;v1beta1</span><br><span class="line">kind: Ingress</span><br><span class="line">metadata:</span><br><span class="line">  name: grafana</span><br><span class="line">  namespace: infra</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: grafana.od.com</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: &#x2F;</span><br><span class="line">        backend:</span><br><span class="line">          serviceName: grafana</span><br><span class="line">          servicePort: 3000</span><br></pre></td></tr></table></figure><p>域名解析：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grafana            A    10.4.7.10</span><br></pre></td></tr></table></figure><p>应用资源配置清单：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;grafana&#x2F;rbac.yaml</span><br><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;grafana&#x2F;dp.yaml</span><br><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;grafana&#x2F;svc.yaml</span><br><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;grafana&#x2F;ingress.yaml</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191218145402221-1808300862.png" alt="img" title="img"></p><p>浏览器访问验证：</p><p>grafana.od.com</p><p>默认用户名密码admin</p><p>进入容器安装插件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># kubectl exec  -it grafana-d6588db94-xr4s6 &#x2F;bin&#x2F;bash -n infra</span><br><span class="line">grafana-cli plugins install grafana-kubernetes-app</span><br><span class="line">grafana-cli plugins install grafana-clock-panel</span><br><span class="line">grafana-cli plugins install grafana-piechart-panel</span><br><span class="line">grafana-cli plugins install briangann-gauge-panel</span><br><span class="line">grafana-cli plugins install natel-discrete-panel</span><br></pre></td></tr></table></figure><p>配置数据源：选择prometheus，把三个证书添加进来</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191218150843677-574385113.png" alt="img" title="img"></p><p>重启grafana</p><p>找到我们刚才安装的插件里面的kubernetes,启用，然后新建cluster</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191218151453446-763104384.png" alt="img" title="img"></p><p>添加完需要稍等几分钟，在没有取到数据之前，会报http forbidden，没关系，等一会就好。大概2-5分钟。</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191218151955768-1516493063.png" alt="img" title="img"></p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191218152034611-252542525.png" alt="img" title="img"></p><p>配置alert告警插件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># docker pull docker.io&#x2F;prom&#x2F;alertmanager:v0.14.0</span><br><span class="line"># docker tag 30594e96cbe8 harbor.od.com&#x2F;infra&#x2F;alertmanager:v0.14.0</span><br><span class="line"># docker push harbor.od.com&#x2F;infra&#x2F;alertmanager:v0.14.0</span><br></pre></td></tr></table></figure><p>资源配置清单：</p><p>1、cm.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  name: alertmanager-config</span><br><span class="line">  namespace: infra</span><br><span class="line">data:</span><br><span class="line">  config.yml: |-</span><br><span class="line">    global:</span><br><span class="line">      # 在没有报警的情况下声明为已解决的时间</span><br><span class="line">      resolve_timeout: 5m</span><br><span class="line">      # 配置邮件发送信息</span><br><span class="line">      smtp_smarthost: &#39;smtp.163.com:25&#39;</span><br><span class="line">      smtp_from: &#39;xxx@163.com&#39;</span><br><span class="line">      smtp_auth_username: &#39;xxx@163.com&#39;</span><br><span class="line">      smtp_auth_password: &#39;xxxxxx&#39;</span><br><span class="line">      smtp_require_tls: false</span><br><span class="line">    # 所有报警信息进入后的根路由，用来设置报警的分发策略</span><br><span class="line">    route:</span><br><span class="line">      # 这里的标签列表是接收到报警信息后的重新分组标签，例如，接收到的报警信息里面有许多具有 cluster&#x3D;A 和 alertname&#x3D;LatncyHigh 这样的标签的报警信息将会批量被聚合到一个分组里面</span><br><span class="line">      group_by: [&#39;alertname&#39;, &#39;cluster&#39;]</span><br><span class="line">      # 当一个新的报警分组被创建后，需要等待至少group_wait时间来初始化通知，这种方式可以确保您能有足够的时间为同一分组来获取多个警报，然后一起触发这个报警信息。</span><br><span class="line">      group_wait: 30s</span><br><span class="line"></span><br><span class="line">      # 当第一个报警发送后，等待&#39;group_interval&#39;时间来发送新的一组报警信息。</span><br><span class="line">      group_interval: 5m</span><br><span class="line"></span><br><span class="line">      # 如果一个报警信息已经发送成功了，等待&#39;repeat_interval&#39;时间来重新发送他们</span><br><span class="line">      repeat_interval: 5m</span><br><span class="line"></span><br><span class="line">      # 默认的receiver：如果一个报警没有被一个route匹配，则发送给默认的接收器</span><br><span class="line">      receiver: default</span><br><span class="line"></span><br><span class="line">    receivers:</span><br><span class="line">    - name: &#39;default&#39;</span><br><span class="line">      email_configs:</span><br><span class="line">      - to: &#39;xxxx@qq.com&#39;</span><br><span class="line">        send_resolved: true</span><br></pre></td></tr></table></figure><p>2、dp.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: extensions&#x2F;v1beta1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: alertmanager</span><br><span class="line">  namespace: infra</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: alertmanager</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: alertmanager</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: alertmanager</span><br><span class="line">        image: harbor.od.com&#x2F;infra&#x2F;alertmanager:v0.14.0</span><br><span class="line">        args:</span><br><span class="line">          - &quot;--config.file&#x3D;&#x2F;etc&#x2F;alertmanager&#x2F;config.yml&quot;</span><br><span class="line">          - &quot;--storage.path&#x3D;&#x2F;alertmanager&quot;</span><br><span class="line">        ports:</span><br><span class="line">        - name: alertmanager</span><br><span class="line">          containerPort: 9093</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: alertmanager-cm</span><br><span class="line">          mountPath: &#x2F;etc&#x2F;alertmanager</span><br><span class="line">      volumes:</span><br><span class="line">      - name: alertmanager-cm</span><br><span class="line">        configMap:</span><br><span class="line">          name: alertmanager-config</span><br><span class="line">      imagePullSecrets:</span><br><span class="line">      - name: harbor</span><br></pre></td></tr></table></figure><p>3、svc.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: alertmanager</span><br><span class="line">  namespace: infra</span><br><span class="line">spec:</span><br><span class="line">  selector: </span><br><span class="line">    app: alertmanager</span><br><span class="line">  ports:</span><br><span class="line">    - port: 80</span><br><span class="line">      targetPort: 9093</span><br></pre></td></tr></table></figure><p>基础报警规则：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># vi &#x2F;data&#x2F;nfs-volume&#x2F;prometheus&#x2F;etc&#x2F;rules.yml</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line">groups:</span><br><span class="line">- name: hostStatsAlert</span><br><span class="line">  rules:</span><br><span class="line">  - alert: hostCpuUsageAlert</span><br><span class="line">    expr: sum(avg without (cpu)(irate(node_cpu&#123;mode!&#x3D;&#39;idle&#39;&#125;[5m]))) by (instance) &gt; 0.85</span><br><span class="line">    for: 5m</span><br><span class="line">    labels:</span><br><span class="line">      severity: warning</span><br><span class="line">    annotations:</span><br><span class="line">      summary: &quot;&#123;&#123; $labels.instance &#125;&#125; CPU usage above 85% (current value: &#123;&#123; $value &#125;&#125;%)&quot;</span><br><span class="line">  - alert: hostMemUsageAlert</span><br><span class="line">    expr: (node_memory_MemTotal - node_memory_MemAvailable)&#x2F;node_memory_MemTotal &gt; 0.85</span><br><span class="line">    for: 5m</span><br><span class="line">    labels:</span><br><span class="line">      severity: warning</span><br><span class="line">    annotations:</span><br><span class="line">      summary: &quot;&#123;&#123; $labels.instance &#125;&#125; MEM usage above 85% (current value: &#123;&#123; $value &#125;&#125;%)&quot;</span><br><span class="line">  - alert: OutOfInodes</span><br><span class="line">    expr: node_filesystem_free&#123;fstype&#x3D;&quot;overlay&quot;,mountpoint &#x3D;&quot;&#x2F;&quot;&#125; &#x2F; node_filesystem_size&#123;fstype&#x3D;&quot;overlay&quot;,mountpoint &#x3D;&quot;&#x2F;&quot;&#125; * 100 &lt; 10</span><br><span class="line">    for: 5m</span><br><span class="line">    labels:</span><br><span class="line">      severity: warning</span><br><span class="line">    annotations:</span><br><span class="line">      summary: &quot;Out of inodes (instance &#123;&#123; $labels.instance &#125;&#125;)&quot;</span><br><span class="line">      description: &quot;Disk is almost running out of available inodes (&lt; 10% left) (current value: &#123;&#123; $value &#125;&#125;)&quot;</span><br><span class="line">  - alert: OutOfDiskSpace</span><br><span class="line">    expr: node_filesystem_free&#123;fstype&#x3D;&quot;overlay&quot;,mountpoint &#x3D;&quot;&#x2F;rootfs&quot;&#125; &#x2F; node_filesystem_size&#123;fstype&#x3D;&quot;overlay&quot;,mountpoint &#x3D;&quot;&#x2F;rootfs&quot;&#125; * 100 &lt; 10</span><br><span class="line">    for: 5m</span><br><span class="line">    labels:</span><br><span class="line">      severity: warning</span><br><span class="line">    annotations:</span><br><span class="line">      summary: &quot;Out of disk space (instance &#123;&#123; $labels.instance &#125;&#125;)&quot;</span><br><span class="line">      description: &quot;Disk is almost full (&lt; 10% left) (current value: &#123;&#123; $value &#125;&#125;)&quot;</span><br><span class="line">  - alert: UnusualNetworkThroughputIn</span><br><span class="line">    expr: sum by (instance) (irate(node_network_receive_bytes[2m])) &#x2F; 1024 &#x2F; 1024 &gt; 100</span><br><span class="line">    for: 5m</span><br><span class="line">    labels:</span><br><span class="line">      severity: warning</span><br><span class="line">    annotations:</span><br><span class="line">      summary: &quot;Unusual network throughput in (instance &#123;&#123; $labels.instance &#125;&#125;)&quot;</span><br><span class="line">      description: &quot;Host network interfaces are probably receiving too much data (&gt; 100 MB&#x2F;s) (current value: &#123;&#123; $value &#125;&#125;)&quot;</span><br><span class="line">  - alert: UnusualNetworkThroughputOut</span><br><span class="line">    expr: sum by (instance) (irate(node_network_transmit_bytes[2m])) &#x2F; 1024 &#x2F; 1024 &gt; 100</span><br><span class="line">    for: 5m</span><br><span class="line">    labels:</span><br><span class="line">      severity: warning</span><br><span class="line">    annotations:</span><br><span class="line">      summary: &quot;Unusual network throughput out (instance &#123;&#123; $labels.instance &#125;&#125;)&quot;</span><br><span class="line">      description: &quot;Host network interfaces are probably sending too much data (&gt; 100 MB&#x2F;s) (current value: &#123;&#123; $value &#125;&#125;)&quot;</span><br><span class="line">  - alert: UnusualDiskReadRate</span><br><span class="line">    expr: sum by (instance) (irate(node_disk_bytes_read[2m])) &#x2F; 1024 &#x2F; 1024 &gt; 50</span><br><span class="line">    for: 5m</span><br><span class="line">    labels:</span><br><span class="line">      severity: warning</span><br><span class="line">    annotations:</span><br><span class="line">      summary: &quot;Unusual disk read rate (instance &#123;&#123; $labels.instance &#125;&#125;)&quot;</span><br><span class="line">      description: &quot;Disk is probably reading too much data (&gt; 50 MB&#x2F;s) (current value: &#123;&#123; $value &#125;&#125;)&quot;</span><br><span class="line">  - alert: UnusualDiskWriteRate</span><br><span class="line">    expr: sum by (instance) (irate(node_disk_bytes_written[2m])) &#x2F; 1024 &#x2F; 1024 &gt; 50</span><br><span class="line">    for: 5m</span><br><span class="line">    labels:</span><br><span class="line">      severity: warning</span><br><span class="line">    annotations:</span><br><span class="line">      summary: &quot;Unusual disk write rate (instance &#123;&#123; $labels.instance &#125;&#125;)&quot;</span><br><span class="line">      description: &quot;Disk is probably writing too much data (&gt; 50 MB&#x2F;s) (current value: &#123;&#123; $value &#125;&#125;)&quot;</span><br><span class="line">  - alert: UnusualDiskReadLatency</span><br><span class="line">    expr: rate(node_disk_read_time_ms[1m]) &#x2F; rate(node_disk_reads_completed[1m]) &gt; 100</span><br><span class="line">    for: 5m</span><br><span class="line">    labels:</span><br><span class="line">      severity: warning</span><br><span class="line">    annotations:</span><br><span class="line">      summary: &quot;Unusual disk read latency (instance &#123;&#123; $labels.instance &#125;&#125;)&quot;</span><br><span class="line">      description: &quot;Disk latency is growing (read operations &gt; 100ms) (current value: &#123;&#123; $value &#125;&#125;)&quot;</span><br><span class="line">  - alert: UnusualDiskWriteLatency</span><br><span class="line">    expr: rate(node_disk_write_time_ms[1m]) &#x2F; rate(node_disk_writes_completedl[1m]) &gt; 100</span><br><span class="line">    for: 5m</span><br><span class="line">    labels:</span><br><span class="line">      severity: warning</span><br><span class="line">    annotations:</span><br><span class="line">      summary: &quot;Unusual disk write latency (instance &#123;&#123; $labels.instance &#125;&#125;)&quot;</span><br><span class="line">      description: &quot;Disk latency is growing (write operations &gt; 100ms) (current value: &#123;&#123; $value &#125;&#125;)&quot;</span><br><span class="line">- name: http_status</span><br><span class="line">  rules:</span><br><span class="line">  - alert: ProbeFailed</span><br><span class="line">    expr: probe_success &#x3D;&#x3D; 0</span><br><span class="line">    for: 1m</span><br><span class="line">    labels:</span><br><span class="line">      severity: error</span><br><span class="line">    annotations:</span><br><span class="line">      summary: &quot;Probe failed (instance &#123;&#123; $labels.instance &#125;&#125;)&quot;</span><br><span class="line">      description: &quot;Probe failed (current value: &#123;&#123; $value &#125;&#125;)&quot;</span><br><span class="line">  - alert: StatusCode</span><br><span class="line">    expr: probe_http_status_code &lt;&#x3D; 199 OR probe_http_status_code &gt;&#x3D; 400</span><br><span class="line">    for: 1m</span><br><span class="line">    labels:</span><br><span class="line">      severity: error</span><br><span class="line">    annotations:</span><br><span class="line">      summary: &quot;Status Code (instance &#123;&#123; $labels.instance &#125;&#125;)&quot;</span><br><span class="line">      description: &quot;HTTP status code is not 200-399 (current value: &#123;&#123; $value &#125;&#125;)&quot;</span><br><span class="line">  - alert: SslCertificateWillExpireSoon</span><br><span class="line">    expr: probe_ssl_earliest_cert_expiry - time() &lt; 86400 * 30</span><br><span class="line">    for: 5m</span><br><span class="line">    labels:</span><br><span class="line">      severity: warning</span><br><span class="line">    annotations:</span><br><span class="line">      summary: &quot;SSL certificate will expire soon (instance &#123;&#123; $labels.instance &#125;&#125;)&quot;</span><br><span class="line">      description: &quot;SSL certificate expires in 30 days (current value: &#123;&#123; $value &#125;&#125;)&quot;</span><br><span class="line">  - alert: SslCertificateHasExpired</span><br><span class="line">    expr: probe_ssl_earliest_cert_expiry - time()  &lt;&#x3D; 0</span><br><span class="line">    for: 5m</span><br><span class="line">    labels:</span><br><span class="line">      severity: error</span><br><span class="line">    annotations:</span><br><span class="line">      summary: &quot;SSL certificate has expired (instance &#123;&#123; $labels.instance &#125;&#125;)&quot;</span><br><span class="line">      description: &quot;SSL certificate has expired already (current value: &#123;&#123; $value &#125;&#125;)&quot;</span><br><span class="line">  - alert: BlackboxSlowPing</span><br><span class="line">    expr: probe_icmp_duration_seconds &gt; 2</span><br><span class="line">    for: 5m</span><br><span class="line">    labels:</span><br><span class="line">      severity: warning</span><br><span class="line">    annotations:</span><br><span class="line">      summary: &quot;Blackbox slow ping (instance &#123;&#123; $labels.instance &#125;&#125;)&quot;</span><br><span class="line">      description: &quot;Blackbox ping took more than 2s (current value: &#123;&#123; $value &#125;&#125;)&quot;</span><br><span class="line">  - alert: BlackboxSlowRequests</span><br><span class="line">    expr: probe_http_duration_seconds &gt; 2 </span><br><span class="line">    for: 5m</span><br><span class="line">    labels:</span><br><span class="line">      severity: warning</span><br><span class="line">    annotations:</span><br><span class="line">      summary: &quot;Blackbox slow requests (instance &#123;&#123; $labels.instance &#125;&#125;)&quot;</span><br><span class="line">      description: &quot;Blackbox request took more than 2s (current value: &#123;&#123; $value &#125;&#125;)&quot;</span><br><span class="line">  - alert: PodCpuUsagePercent</span><br><span class="line">    expr: sum(sum(label_replace(irate(container_cpu_usage_seconds_total[1m]),&quot;pod&quot;,&quot;$1&quot;,&quot;container_label_io_kubernetes_pod_name&quot;, &quot;(.*)&quot;))by(pod) &#x2F; on(pod) group_right kube_pod_container_resource_limits_cpu_cores *100 )by(container,namespace,node,pod,severity) &gt; 80</span><br><span class="line">    for: 5m</span><br><span class="line">    labels:</span><br><span class="line">      severity: warning</span><br><span class="line">    annotations:</span><br><span class="line">      summary: &quot;Pod cpu usage percent has exceeded 80% (current value: &#123;&#123; $value &#125;&#125;%)&quot;</span><br></pre></td></tr></table></figure><p>在prometheus.yml中添加配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># vi prometheus.yml</span><br><span class="line">alerting:</span><br><span class="line">  alertmanagers:</span><br><span class="line">    - static_configs:</span><br><span class="line">        - targets: [&quot;alertmanager&quot;]</span><br><span class="line">rule_files:</span><br><span class="line"> - &quot;&#x2F;data&#x2F;etc&#x2F;rules.yml&quot;</span><br></pre></td></tr></table></figure><p>重载配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># curl -X POST http:&#x2F;&#x2F;prometheus.od.com&#x2F;-&#x2F;reload</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191218173411675-688635972.png" alt="img" title="img"></p><p>以上这些就是我们的告警规则</p><p>测试告警：</p><p>把app命名空间里的dubbo-demo-service给停掉：</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191218173935193-1795591117.png" alt="img" title="img"></p><p>看下blackbox里的信息：</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191218174004624-1646255779.png" alt="img" title="img"></p><p>看下alert：</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191218174052248-183200263.png" alt="img" title="img"></p><p>红色的时候就开会发邮件告警：</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191218174118507-915764907.png" alt="img" title="img"></p><p>已经收到告警了，后续上生产，还会更新如何添加微信、钉钉、短信告警</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191218174253105-950989449.png" alt="img" title="img"></p><p>如果需要自己定制告警规则和告警内容，需要研究一下promql，自己修改配置文件。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes实战-配置中心（四）分环境使用apollo配置中心</title>
      <link href="/posts/40025/"/>
      <url>/posts/40025/</url>
      
        <content type="html"><![CDATA[<p>kubernetes实战-配置中心（四）分环境使用apollo配置中心要进行分环境，需要将现有实验环境进行拆分portal服务，可以各个环境共用，但是apollo-adminservice和ap…</p><!-- more --><h1 id="kubernetes实战-配置中心（四）分环境使用apollo配置中心"><a href="#kubernetes实战-配置中心（四）分环境使用apollo配置中心" class="headerlink" title="kubernetes实战-配置中心（四）分环境使用apollo配置中心"></a>kubernetes实战-配置中心（四）分环境使用apollo配置中心</h1><p>要进行分环境，需要将现有实验环境进行拆分</p><p><strong>portal服务，可以各个环境共用，但是apollo-adminservice和apollo-configservice必须要分开。</strong></p><p>1、zk环境拆分为test和prod环境</p><p>添加dns解析：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># vi &#x2F;var&#x2F;named&#x2F;od.com.zone</span><br></pre></td></tr></table></figure><p>zk-test.od.com A 10.4.7.11</p><p>zk-prod.od.com A 10.4.7.12</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191214163421698-1711732614.png" alt="img" title="img"></p><p>2、namespace 分环境，创建test 和prod</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># kubectl create ns test</span><br><span class="line"># kubectl create ns prod</span><br></pre></td></tr></table></figure><p>创建secret：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># kubectl create secret docker-registry harbor --docker-server&#x3D;harbor.od.com --docker-username&#x3D;harbor --docker-password&#x3D;Harbor12345 -n test</span><br><span class="line"></span><br><span class="line"># kubectl create secret docker-registry harbor --docker-server&#x3D;harbor.od.com --docker-username&#x3D;harbor --docker-password&#x3D;Harbor12345 -n prod</span><br></pre></td></tr></table></figure><p>3、数据库进行拆分，因实验资源有限，故使用分库的形式模拟分环境</p><p>修改数据库初始化脚本，分别创建ApolloConfigTestDB和ApolloConfigProdDB</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191214165050503-1289549000.png" alt="img" title="img"></p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191214165155176-1839439337.png" alt="img" title="img"></p><p>修改数据库中eureka的地址，这里用到了两个新的域名，自行在bind9中添加解析</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; update ApolloConfigProdDB.ServerConfig set ServerConfig.Value&#x3D;&quot;http:&#x2F;&#x2F;config-prod.od.com&#x2F;eureka&quot; where ServerConfig.Key&#x3D;&quot;eureka.service.url&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt; grant INSERT,DELETE,UPDATE,SELECT on ApolloConfigProdDB.* to &quot;apolloconfig&quot;@&quot;10.4.7.%&quot; identified by &quot;123456&quot;;</span><br><span class="line"></span><br><span class="line">&gt; update ApolloConfigTestDB.ServerConfig set ServerConfig.Value&#x3D;&quot;http:&#x2F;&#x2F;config-test.od.com&#x2F;eureka&quot; where ServerConfig.Key&#x3D;&quot;eureka.service.url&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt; grant INSERT,DELETE,UPDATE,SELECT on ApolloConfigTestDB.* to &quot;apolloconfig&quot;@&quot;10.4.7.%&quot; identified by &quot;123456&quot;;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191214165539852-746921994.png" alt="img" title="img"></p><p>修改portal数据，支持fat和pro环境：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; update ServerConfig set Value&#x3D;&#39;fat,pro&#39; where Id&#x3D;1;</span><br></pre></td></tr></table></figure><p>修改portal的cm资源配置清单：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># vi &#x2F;data&#x2F;k8s-yaml&#x2F;apollo-portal&#x2F;cm.yaml</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191214170042505-861528126.png" alt="img" title="img"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;apollo-portal&#x2F;cm.yaml</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191214170419427-36077926.png" alt="img" title="img"></p><p>分别创建修改两个环境的资源配置文件：</p><p>test：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># cd &#x2F;data&#x2F;k8s-yaml</span><br><span class="line"># mkdir -p test&#x2F;&#123;apollo-adminservice,apollo-configservice,dubbo-demo-server,dubbo-demo-consumer&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># mkdir -p prod&#x2F;&#123;apollo-adminservice,apollo-configservice,dubbo-demo-server,dubbo-demo-consumer&#125;</span><br></pre></td></tr></table></figure><p>将之前的资源配置清单cp到对应环境的目录中，进行修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># cd  test&#x2F;apollo-configservice&#x2F;</span><br><span class="line"># cp ..&#x2F;..&#x2F;apollo-configservice&#x2F;* .&#x2F;</span><br></pre></td></tr></table></figure><p>1、cm.yaml 修改ns，数据库库名，eureka地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  name: apollo-configservice-cm</span><br><span class="line">  namespace: test</span><br><span class="line">data:</span><br><span class="line">  application-github.properties: |</span><br><span class="line">    # DataSource</span><br><span class="line">    spring.datasource.url &#x3D; jdbc:mysql:&#x2F;&#x2F;mysql.od.com:3306&#x2F;ApolloConfigTestDB?characterEncoding&#x3D;utf8</span><br><span class="line">    spring.datasource.username &#x3D; apolloconfig</span><br><span class="line">    spring.datasource.password &#x3D; 123456</span><br><span class="line">    eureka.service.url &#x3D; http:&#x2F;&#x2F;config-test.od.com&#x2F;eureka</span><br><span class="line">  app.properties: |</span><br><span class="line">    appId&#x3D;100003171</span><br></pre></td></tr></table></figure><p>2、dp.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">kind: Deployment</span><br><span class="line">apiVersion: extensions&#x2F;v1beta1</span><br><span class="line">metadata:</span><br><span class="line">  name: apollo-configservice</span><br><span class="line">  namespace: test </span><br><span class="line">  labels: </span><br><span class="line">    name: apollo-configservice</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels: </span><br><span class="line">      name: apollo-configservice</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels: </span><br><span class="line">        app: apollo-configservice </span><br><span class="line">        name: apollo-configservice</span><br><span class="line">    spec:</span><br><span class="line">      volumes:</span><br><span class="line">      - name: configmap-volume</span><br><span class="line">        configMap:</span><br><span class="line">          name: apollo-configservice-cm</span><br><span class="line">      containers:</span><br><span class="line">      - name: apollo-configservice</span><br><span class="line">        image: harbor.od.com&#x2F;infra&#x2F;apollo-configservice:v1.5.1</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 8080</span><br><span class="line">          protocol: TCP</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: configmap-volume</span><br><span class="line">          mountPath: &#x2F;apollo-configservice&#x2F;config</span><br><span class="line">        terminationMessagePath: &#x2F;dev&#x2F;termination-log</span><br><span class="line">        terminationMessagePolicy: File</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">      imagePullSecrets:</span><br><span class="line">      - name: harbor</span><br><span class="line">      restartPolicy: Always</span><br><span class="line">      terminationGracePeriodSeconds: 30</span><br><span class="line">      securityContext: </span><br><span class="line">        runAsUser: 0</span><br><span class="line">      schedulerName: default-scheduler</span><br><span class="line">  strategy:</span><br><span class="line">    type: RollingUpdate</span><br><span class="line">    rollingUpdate: </span><br><span class="line">      maxUnavailable: 1</span><br><span class="line">      maxSurge: 1</span><br><span class="line">  revisionHistoryLimit: 7</span><br><span class="line">  progressDeadlineSeconds: 600</span><br></pre></td></tr></table></figure><p>3、svc.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">kind: Service</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata: </span><br><span class="line">  name: apollo-configservice</span><br><span class="line">  namespace: test </span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - protocol: TCP</span><br><span class="line">    port: 8080</span><br><span class="line">    targetPort: 8080</span><br><span class="line">  selector: </span><br><span class="line">    app: apollo-configservice</span><br></pre></td></tr></table></figure><p>4、ingress.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">kind: Ingress</span><br><span class="line">apiVersion: extensions&#x2F;v1beta1</span><br><span class="line">metadata: </span><br><span class="line">  name: apollo-configservice</span><br><span class="line">  namespace: test </span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: config-test.od.com</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: &#x2F;</span><br><span class="line">        backend: </span><br><span class="line">          serviceName: apollo-configservice</span><br><span class="line">          servicePort: 8080</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191214204757028-115716474.png" alt="img" title="img"></p><p>服务已经注册进来了</p><p>接下来部署apollo-adminservice</p><p>修改apollo-adminservice的资源配置清单：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># cd &#x2F;data&#x2F;k8s-yaml&#x2F;test&#x2F;apollo-adminservice</span><br><span class="line"># cp ..&#x2F;..&#x2F;apollo-adminservice&#x2F;* .&#x2F;</span><br></pre></td></tr></table></figure><p>1、cm.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  name: apollo-adminservice-cm</span><br><span class="line">  namespace: test</span><br><span class="line">data:</span><br><span class="line">  application-github.properties: |</span><br><span class="line">    # DataSource</span><br><span class="line">    spring.datasource.url &#x3D; jdbc:mysql:&#x2F;&#x2F;mysql.od.com:3306&#x2F;ApolloConfigTestDB?characterEncoding&#x3D;utf8</span><br><span class="line">    spring.datasource.username &#x3D; apolloconfig</span><br><span class="line">    spring.datasource.password &#x3D; 123456</span><br><span class="line">    eureka.service.url &#x3D; http:&#x2F;&#x2F;config-test.od.com&#x2F;eureka</span><br><span class="line">  app.properties: |</span><br><span class="line">    appId&#x3D;100003172</span><br></pre></td></tr></table></figure><p>2、dp.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">kind: Deployment</span><br><span class="line">apiVersion: extensions&#x2F;v1beta1</span><br><span class="line">metadata:</span><br><span class="line">  name: apollo-adminservice</span><br><span class="line">  namespace: test </span><br><span class="line">  labels: </span><br><span class="line">    name: apollo-adminservice</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels: </span><br><span class="line">      name: apollo-adminservice</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels: </span><br><span class="line">        name: apollo-adminservice</span><br><span class="line">    spec:</span><br><span class="line">      volumes:</span><br><span class="line">      - name: configmap-volume</span><br><span class="line">        configMap:</span><br><span class="line">          name: apollo-adminservice-cm</span><br><span class="line">      containers:</span><br><span class="line">      - name: apollo-adminservice</span><br><span class="line">        image: harbor.od.com&#x2F;infra&#x2F;apollo-adminservice:v1.5.1</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 8080</span><br><span class="line">          protocol: TCP</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: configmap-volume</span><br><span class="line">          mountPath: &#x2F;apollo-adminservice&#x2F;config</span><br><span class="line">        terminationMessagePath: &#x2F;dev&#x2F;termination-log</span><br><span class="line">        terminationMessagePolicy: File</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">      imagePullSecrets:</span><br><span class="line">      - name: harbor</span><br><span class="line">      restartPolicy: Always</span><br><span class="line">      terminationGracePeriodSeconds: 30</span><br><span class="line">      securityContext: </span><br><span class="line">        runAsUser: 0</span><br><span class="line">      schedulerName: default-scheduler</span><br><span class="line">  strategy:</span><br><span class="line">    type: RollingUpdate</span><br><span class="line">    rollingUpdate: </span><br><span class="line">      maxUnavailable: 1</span><br><span class="line">      maxSurge: 1</span><br><span class="line">  revisionHistoryLimit: 7</span><br><span class="line">  progressDeadlineSeconds: 600</span><br></pre></td></tr></table></figure><p>应用资源配置清单：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;test&#x2F;apollo-adminservice&#x2F;cm.yaml</span><br><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;test&#x2F;apollo-adminservice&#x2F;dp.yaml</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191214205736284-1671020943.png" alt="img" title="img"></p><p>接下来部署prod环境的apollo-configservice，还是一样的套路：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># cd ..&#x2F;..&#x2F;prod&#x2F;apollo-configservice&#x2F;</span><br><span class="line"># cp ..&#x2F;..&#x2F;apollo-configservice&#x2F;* .&#x2F;</span><br></pre></td></tr></table></figure><p>修改资源配置清单：</p><p>1、cm.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  name: apollo-configservice-cm</span><br><span class="line">  namespace: prod</span><br><span class="line">data:</span><br><span class="line">  application-github.properties: |</span><br><span class="line">    # DataSource</span><br><span class="line">    spring.datasource.url &#x3D; jdbc:mysql:&#x2F;&#x2F;mysql.od.com:3306&#x2F;ApolloConfigProdDB?characterEncoding&#x3D;utf8</span><br><span class="line">    spring.datasource.username &#x3D; apolloconfig</span><br><span class="line">    spring.datasource.password &#x3D; 123456</span><br><span class="line">    eureka.service.url &#x3D; http:&#x2F;&#x2F;config-prod.od.com&#x2F;eureka</span><br><span class="line">  app.properties: |</span><br><span class="line">    appId&#x3D;100003171</span><br></pre></td></tr></table></figure><p>2、dp.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">kind: Deployment</span><br><span class="line">apiVersion: extensions&#x2F;v1beta1</span><br><span class="line">metadata:</span><br><span class="line">  name: apollo-configservice</span><br><span class="line">  namespace: prod </span><br><span class="line">  labels: </span><br><span class="line">    name: apollo-configservice</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels: </span><br><span class="line">      name: apollo-configservice</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels: </span><br><span class="line">        app: apollo-configservice </span><br><span class="line">        name: apollo-configservice</span><br><span class="line">    spec:</span><br><span class="line">      volumes:</span><br><span class="line">      - name: configmap-volume</span><br><span class="line">        configMap:</span><br><span class="line">          name: apollo-configservice-cm</span><br><span class="line">      containers:</span><br><span class="line">      - name: apollo-configservice</span><br><span class="line">        image: harbor.od.com&#x2F;infra&#x2F;apollo-configservice:v1.5.1</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 8080</span><br><span class="line">          protocol: TCP</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: configmap-volume</span><br><span class="line">          mountPath: &#x2F;apollo-configservice&#x2F;config</span><br><span class="line">        terminationMessagePath: &#x2F;dev&#x2F;termination-log</span><br><span class="line">        terminationMessagePolicy: File</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">      imagePullSecrets:</span><br><span class="line">      - name: harbor</span><br><span class="line">      restartPolicy: Always</span><br><span class="line">      terminationGracePeriodSeconds: 30</span><br><span class="line">      securityContext: </span><br><span class="line">        runAsUser: 0</span><br><span class="line">      schedulerName: default-scheduler</span><br><span class="line">  strategy:</span><br><span class="line">    type: RollingUpdate</span><br><span class="line">    rollingUpdate: </span><br><span class="line">      maxUnavailable: 1</span><br><span class="line">      maxSurge: 1</span><br><span class="line">  revisionHistoryLimit: 7</span><br><span class="line">  progressDeadlineSeconds: 600</span><br></pre></td></tr></table></figure><p>3、svc.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">kind: Service</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  name: apollo-configservice</span><br><span class="line">  namespace: prod</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - protocol: TCP</span><br><span class="line">    port: 8080</span><br><span class="line">    targetPort: 8080</span><br><span class="line">  selector:</span><br><span class="line">    app: apollo-configservice</span><br></pre></td></tr></table></figure><p>4、ingress.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">kind: Ingress</span><br><span class="line">apiVersion: extensions&#x2F;v1beta1</span><br><span class="line">metadata:</span><br><span class="line">  name: apollo-configservice</span><br><span class="line">  namespace: prod</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: config-prod.od.com</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: &#x2F;</span><br><span class="line">        backend:</span><br><span class="line">          serviceName: apollo-configservice</span><br><span class="line">          servicePort: 8080</span><br></pre></td></tr></table></figure><p>应用资源配置清单：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;prod&#x2F;apollo-configservice&#x2F;cm.yaml</span><br><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;prod&#x2F;apollo-configservice&#x2F;dp.yaml</span><br><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;prod&#x2F;apollo-configservice&#x2F;svc.yaml</span><br><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;prod&#x2F;apollo-configservice&#x2F;ingress.yaml</span><br></pre></td></tr></table></figure><p>修改apollo-adminservice的资源配置清单：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># cd ..&#x2F;apollo-adminservice&#x2F;</span><br><span class="line"># cp ..&#x2F;..&#x2F;apollo-adminservice&#x2F;* .&#x2F;</span><br></pre></td></tr></table></figure><p>1、cm.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  name: apollo-adminservice-cm</span><br><span class="line">  namespace: prod</span><br><span class="line">data:</span><br><span class="line">  application-github.properties: |</span><br><span class="line">    # DataSource</span><br><span class="line">    spring.datasource.url &#x3D; jdbc:mysql:&#x2F;&#x2F;mysql.od.com:3306&#x2F;ApolloConfigProdDB?characterEncoding&#x3D;utf8</span><br><span class="line">    spring.datasource.username &#x3D; apolloconfig</span><br><span class="line">    spring.datasource.password &#x3D; 123456</span><br><span class="line">    eureka.service.url &#x3D; http:&#x2F;&#x2F;config-prod.od.com&#x2F;eureka</span><br><span class="line">  app.properties: |</span><br><span class="line">    appId&#x3D;100003172</span><br></pre></td></tr></table></figure><p>2、dp.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">kind: Deployment</span><br><span class="line">apiVersion: extensions&#x2F;v1beta1</span><br><span class="line">metadata:</span><br><span class="line">  name: apollo-adminservice</span><br><span class="line">  namespace: prod </span><br><span class="line">  labels: </span><br><span class="line">    name: apollo-adminservice</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels: </span><br><span class="line">      name: apollo-adminservice</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels: </span><br><span class="line">        name: apollo-adminservice</span><br><span class="line">    spec:</span><br><span class="line">      volumes:</span><br><span class="line">      - name: configmap-volume</span><br><span class="line">        configMap:</span><br><span class="line">          name: apollo-adminservice-cm</span><br><span class="line">      containers:</span><br><span class="line">      - name: apollo-adminservice</span><br><span class="line">        image: harbor.od.com&#x2F;infra&#x2F;apollo-adminservice:v1.5.1</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 8080</span><br><span class="line">          protocol: TCP</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: configmap-volume</span><br><span class="line">          mountPath: &#x2F;apollo-adminservice&#x2F;config</span><br><span class="line">        terminationMessagePath: &#x2F;dev&#x2F;termination-log</span><br><span class="line">        terminationMessagePolicy: File</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">      imagePullSecrets:</span><br><span class="line">      - name: harbor</span><br><span class="line">      restartPolicy: Always</span><br><span class="line">      terminationGracePeriodSeconds: 30</span><br><span class="line">      securityContext: </span><br><span class="line">        runAsUser: 0</span><br><span class="line">      schedulerName: default-scheduler</span><br><span class="line">  strategy:</span><br><span class="line">    type: RollingUpdate</span><br><span class="line">    rollingUpdate: </span><br><span class="line">      maxUnavailable: 1</span><br><span class="line">      maxSurge: 1</span><br><span class="line">  revisionHistoryLimit: 7</span><br><span class="line">  progressDeadlineSeconds: 600</span><br></pre></td></tr></table></figure><p>应用资源配置清单：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;prod&#x2F;apollo-adminservice&#x2F;cm.yaml</span><br><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;prod&#x2F;apollo-adminservice&#x2F;dp.yaml</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191214212310351-1011324990.png" alt="img" title="img"></p><p>两个服务都已经注册进来了，删除portal数据库中存储的关于之前项目的配置，接下来启动portal项目：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># mysql -uroot -p</span><br><span class="line">&gt; use ApolloPortalDB ;</span><br><span class="line">&gt; truncate table App;</span><br><span class="line">&gt; truncate table AppNamespace;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191214212517854-1153075154.png" alt="img" title="img"></p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191214213528868-1456818381.png" alt="img" title="img"></p><p>打开portal.od.com验证，并且创建两个项目：</p><p>首先创建dubbo-demo-service</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191214213803923-653264700.png" alt="img" title="img"></p><p>添加配置：两个环境都添加上：注意连接地址一个是test.od.com,一个是prod.od.com</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191214214212905-915228782.png" alt="img" title="img"></p><p>接下来创建dubbo-demo-web项目：同样是两个环境都发布，注意一个是test.od.com,一个是prod.od.com</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191214214541219-415571329.png" alt="img" title="img"></p><p>接下来交付dubbo服务分环境交付：</p><p>同样操作，修改之前项目的资源配置清单：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># cd &#x2F;data&#x2F;k8s-yaml&#x2F;test&#x2F;dubbo-demo-server</span><br><span class="line"># cp ..&#x2F;..&#x2F;dubbo-server&#x2F;* .&#x2F;</span><br></pre></td></tr></table></figure><p>1、dp.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">kind: Deployment</span><br><span class="line">apiVersion: extensions&#x2F;v1beta1</span><br><span class="line">metadata:</span><br><span class="line">  name: dubbo-demo-service</span><br><span class="line">  namespace: test </span><br><span class="line">  labels: </span><br><span class="line">    name: dubbo-demo-service</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels: </span><br><span class="line">      name: dubbo-demo-service</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels: </span><br><span class="line">        app: dubbo-demo-service</span><br><span class="line">        name: dubbo-demo-service</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: dubbo-demo-service</span><br><span class="line">        image: harbor.od.com&#x2F;app&#x2F;dubbo-demo-service:apollo_191211_1916</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 20880</span><br><span class="line">          protocol: TCP</span><br><span class="line">        env:</span><br><span class="line">        - name: C_OPTS</span><br><span class="line">          value: -Denv&#x3D;fat -Dapollo.meta&#x3D;http:&#x2F;&#x2F;config-test.od.com</span><br><span class="line">        - name: JAR_BALL</span><br><span class="line">          value: dubbo-server.jar</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">      imagePullSecrets:</span><br><span class="line">      - name: harbor</span><br><span class="line">      restartPolicy: Always</span><br><span class="line">      terminationGracePeriodSeconds: 30</span><br><span class="line">      securityContext: </span><br><span class="line">        runAsUser: 0</span><br><span class="line">      schedulerName: default-scheduler</span><br><span class="line">  strategy:</span><br><span class="line">    type: RollingUpdate</span><br><span class="line">    rollingUpdate: </span><br><span class="line">      maxUnavailable: 1</span><br><span class="line">      maxSurge: 1</span><br><span class="line">  revisionHistoryLimit: 7</span><br><span class="line">  progressDeadlineSeconds: 600</span><br></pre></td></tr></table></figure><p>应用资源配置清单：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;test&#x2F;dubbo-demo-server&#x2F;dp.yaml</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191214214859225-1098759731.png" alt="img" title="img"></p><p>接下来交付dubbo-demo-consumer:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># cd &#x2F;data&#x2F;k8s-yaml&#x2F;test&#x2F;dubbo-demo-consumer</span><br><span class="line"># cp ..&#x2F;..&#x2F;dubbo-consumer&#x2F;* .&#x2F;</span><br></pre></td></tr></table></figure><p>1、dp.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">kind: Deployment</span><br><span class="line">apiVersion: extensions&#x2F;v1beta1</span><br><span class="line">metadata:</span><br><span class="line">  name: dubbo-demo-consumer</span><br><span class="line">  namespace: test </span><br><span class="line">  labels: </span><br><span class="line">    name: dubbo-demo-consumer</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels: </span><br><span class="line">      name: dubbo-demo-consumer</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels: </span><br><span class="line">        app: dubbo-demo-consumer</span><br><span class="line">        name: dubbo-demo-consumer</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: dubbo-demo-consumer</span><br><span class="line">        image: harbor.od.com&#x2F;app&#x2F;dubbo-demo-web:apollo_191212_1715</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 8080</span><br><span class="line">          protocol: TCP</span><br><span class="line">        - containerPort: 20880</span><br><span class="line">          protocol: TCP</span><br><span class="line">        env:</span><br><span class="line">        - name: C_OPTS</span><br><span class="line">          value: -Denv&#x3D;fat -Dapollo.meta&#x3D;http:&#x2F;&#x2F;config-test.od.com</span><br><span class="line">        - name: JAR_BALL</span><br><span class="line">          value: dubbo-client.jar</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">      imagePullSecrets:</span><br><span class="line">      - name: harbor</span><br><span class="line">      restartPolicy: Always</span><br><span class="line">      terminationGracePeriodSeconds: 30</span><br><span class="line">      securityContext: </span><br><span class="line">        runAsUser: 0</span><br><span class="line">      schedulerName: default-scheduler</span><br><span class="line">  strategy:</span><br><span class="line">    type: RollingUpdate</span><br><span class="line">    rollingUpdate: </span><br><span class="line">      maxUnavailable: 1</span><br><span class="line">      maxSurge: 1</span><br><span class="line">  revisionHistoryLimit: 7</span><br><span class="line">  progressDeadlineSeconds: 600</span><br></pre></td></tr></table></figure><p>2、svc.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">kind: Service</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  name: dubbo-demo-consumer</span><br><span class="line">  namespace: test</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - protocol: TCP</span><br><span class="line">    port: 8080</span><br><span class="line">    targetPort: 8080</span><br><span class="line">  selector:</span><br><span class="line">    app: dubbo-demo-consumer</span><br></pre></td></tr></table></figure><p>3、ingress.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">kind: Ingress</span><br><span class="line">apiVersion: extensions&#x2F;v1beta1</span><br><span class="line">metadata:</span><br><span class="line">  name: dubbo-demo-consumer</span><br><span class="line">  namespace: test</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: demo-test.od.com</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: &#x2F;</span><br><span class="line">        backend:</span><br><span class="line">          serviceName: dubbo-demo-consumer</span><br><span class="line">          servicePort: 8080</span><br></pre></td></tr></table></figure><p>这里会用到两个新的域名，添加解析：</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191214215712256-1053122700.png" alt="img" title="img"></p><p>应用test环境的dubbo-consumer资源配置清单：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;test&#x2F;dubbo-demo-consumer&#x2F;dp.yaml</span><br><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;test&#x2F;dubbo-demo-consumer&#x2F;svc.yaml</span><br><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;test&#x2F;dubbo-demo-consumer&#x2F;ingress.yaml</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191214215942748-1280830276.png" alt="img" title="img"></p><p>接下来交付prod环境的dubbo-demo-server和dubbo-demo-consumer服务：</p><p>同样套路，复制资源配置清单，然后修改成prod环境：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;data&#x2F;k8s-yaml&#x2F;prod&#x2F;dubbo-demo-server</span><br><span class="line"># cp ..&#x2F;..&#x2F;dubbo-server&#x2F;* .&#x2F;</span><br></pre></td></tr></table></figure><p>1、dp.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">kind: Deployment</span><br><span class="line">apiVersion: extensions&#x2F;v1beta1</span><br><span class="line">metadata:</span><br><span class="line">  name: dubbo-demo-service</span><br><span class="line">  namespace: prod </span><br><span class="line">  labels: </span><br><span class="line">    name: dubbo-demo-service</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels: </span><br><span class="line">      name: dubbo-demo-service</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels: </span><br><span class="line">        app: dubbo-demo-service</span><br><span class="line">        name: dubbo-demo-service</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: dubbo-demo-service</span><br><span class="line">        image: harbor.od.com&#x2F;app&#x2F;dubbo-demo-service:apollo_191211_1916</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 20880</span><br><span class="line">          protocol: TCP</span><br><span class="line">        env:</span><br><span class="line">        - name: C_OPTS</span><br><span class="line">          value: -Denv&#x3D;pro -Dapollo.meta&#x3D;http:&#x2F;&#x2F;config-prod.od.com</span><br><span class="line">        - name: JAR_BALL</span><br><span class="line">          value: dubbo-server.jar</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">      imagePullSecrets:</span><br><span class="line">      - name: harbor</span><br><span class="line">      restartPolicy: Always</span><br><span class="line">      terminationGracePeriodSeconds: 30</span><br><span class="line">      securityContext: </span><br><span class="line">        runAsUser: 0</span><br><span class="line">      schedulerName: default-scheduler</span><br><span class="line">  strategy:</span><br><span class="line">    type: RollingUpdate</span><br><span class="line">    rollingUpdate: </span><br><span class="line">      maxUnavailable: 1</span><br><span class="line">      maxSurge: 1</span><br><span class="line">  revisionHistoryLimit: 7</span><br><span class="line">  progressDeadlineSeconds: 600</span><br></pre></td></tr></table></figure><p>应用资源配置清单：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;prod&#x2F;dubbo-demo-server&#x2F;dp.yaml</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191214220552006-1254762527.png" alt="img" title="img"></p><p>接下来做dubbo-demo-consumer的资源配置清单：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># cd &#x2F;data&#x2F;k8s-yaml&#x2F;prod&#x2F;dubbo-demo-consumer</span><br><span class="line"># cp ..&#x2F;..&#x2F;dubbo-consumer&#x2F;* .&#x2F;</span><br></pre></td></tr></table></figure><p>1、dp.yaml <strong><a href="http://apollo-configservice/">http://apollo-configservice</a>:8080 这里可以直接使用svc资源名称调用，不用走ingress，因为svc资源只在当前namespace中生效。</strong></p><p><strong><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191214222349710-562062556.png" alt="img" title="img"></strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">kind: Deployment</span><br><span class="line">apiVersion: extensions&#x2F;v1beta1</span><br><span class="line">metadata:</span><br><span class="line">  name: dubbo-demo-consumer</span><br><span class="line">  namespace: prod </span><br><span class="line">  labels: </span><br><span class="line">    name: dubbo-demo-consumer</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels: </span><br><span class="line">      name: dubbo-demo-consumer</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels: </span><br><span class="line">        app: dubbo-demo-consumer</span><br><span class="line">        name: dubbo-demo-consumer</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: dubbo-demo-consumer</span><br><span class="line">        image: harbor.od.com&#x2F;app&#x2F;dubbo-demo-web:apollo_191212_1715</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 8080</span><br><span class="line">          protocol: TCP</span><br><span class="line">        - containerPort: 20880</span><br><span class="line">          protocol: TCP</span><br><span class="line">        env:</span><br><span class="line">        - name: C_OPTS</span><br><span class="line">          value: -Denv&#x3D;pro -Dapollo.meta&#x3D;http:&#x2F;&#x2F;apollo-configservice:8080</span><br><span class="line">        - name: JAR_BALL</span><br><span class="line">          value: dubbo-client.jar</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">      imagePullSecrets:</span><br><span class="line">      - name: harbor</span><br><span class="line">      restartPolicy: Always</span><br><span class="line">      terminationGracePeriodSeconds: 30</span><br><span class="line">      securityContext: </span><br><span class="line">        runAsUser: 0</span><br><span class="line">      schedulerName: default-scheduler</span><br><span class="line">  strategy:</span><br><span class="line">    type: RollingUpdate</span><br><span class="line">    rollingUpdate: </span><br><span class="line">      maxUnavailable: 1</span><br><span class="line">      maxSurge: 1</span><br><span class="line">  revisionHistoryLimit: 7</span><br><span class="line">  progressDeadlineSeconds: 600</span><br></pre></td></tr></table></figure><p>2、svc.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">kind: Service</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata: </span><br><span class="line">  name: dubbo-demo-consumer</span><br><span class="line">  namespace: prod </span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - protocol: TCP</span><br><span class="line">    port: 8080</span><br><span class="line">    targetPort: 8080</span><br><span class="line">  selector: </span><br><span class="line">    app: dubbo-demo-consumer</span><br></pre></td></tr></table></figure><p>3、ingress.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">kind: Service</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata: </span><br><span class="line">  name: dubbo-demo-consumer</span><br><span class="line">  namespace: prod </span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - protocol: TCP</span><br><span class="line">    port: 8080</span><br><span class="line">    targetPort: 8080</span><br><span class="line">  selector: </span><br><span class="line">    app: dubbo-demo-consumer</span><br><span class="line">[root@hdss7-200 dubbo-demo-consumer]# cat ingress.yaml </span><br><span class="line">kind: Ingress</span><br><span class="line">apiVersion: extensions&#x2F;v1beta1</span><br><span class="line">metadata: </span><br><span class="line">  name: dubbo-demo-consumer</span><br><span class="line">  namespace: prod </span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: demo-prod.od.com</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: &#x2F;</span><br><span class="line">        backend: </span><br><span class="line">          serviceName: dubbo-demo-consumer</span><br><span class="line">          servicePort: 8080</span><br></pre></td></tr></table></figure><p>应用资源配置清单：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;prod&#x2F;dubbo-demo-consumer&#x2F;dp.yaml</span><br><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;prod&#x2F;dubbo-demo-consumer&#x2F;svc.yaml</span><br><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;prod&#x2F;dubbo-demo-consumer&#x2F;ingress.yaml</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191214221038814-2061052893.png" alt="img" title="img"></p><p>访问两个环境的不同url：</p><p><a href="http://demo-test.od.com/">http://demo-test.od.com</a></p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191214221153725-1544677039.png" alt="img" title="img"></p><p><a href="http://demo-prod.od.com/">http://demo-prod.od.com</a></p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191214221216571-965731507.png" alt="img" title="img"></p><p>模拟发版：</p><p>使用jenkins构建新的镜像：</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191214224525002-320211269.png" alt="img" title="img"></p><p>构建成功，然后我们在测试环境发布此版本镜像：</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191214224834931-992581230.png" alt="img" title="img"></p><p>修改测试环境的dp.yaml</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191214224922504-230549710.png" alt="img" title="img"></p><p>应用修改后的资源配置清单：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;test&#x2F;dubbo-demo-consumer&#x2F;dp.yaml</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191214225241007-949796109.png" alt="img" title="img"></p><p>已经成功将新代码上线到test环境，接下来上线到prod环境</p><p>同样修改prod环境的dp.yaml,并且应用该资源配置清单：</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191214225558477-850571422.png" alt="img" title="img"></p><p>已经上线到生产环境，这样一套完整的分环境使用apollo配置中心发布流程已经可以使用了，并且真正做到了一次构建，多平台使用。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes实战-配置中心（三）配置服务使用apollo配置中心</title>
      <link href="/posts/1427/"/>
      <url>/posts/1427/</url>
      
        <content type="html"><![CDATA[<p>kubernetes实战-配置中心（三）配置服务使用apollo配置中心使用配置中心，需要开发对代码进行调整，将一些配置，通过变量的形式配置到apollo中，服务通过配置中心来获取具体的配置在配…</p><!-- more --><h1 id="kubernetes实战-配置中心（三）配置服务使用apollo配置中心"><a href="#kubernetes实战-配置中心（三）配置服务使用apollo配置中心" class="headerlink" title="kubernetes实战-配置中心（三）配置服务使用apollo配置中心"></a>kubernetes实战-配置中心（三）配置服务使用apollo配置中心</h1><p>使用配置中心，需要开发对代码进行调整，将一些配置，通过变量的形式配置到apollo中，服务通过配置中心来获取具体的配置</p><p>在配置中心修改新增如下配置：</p><p>项目信息：</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191211191509591-224073067.png" alt="img" title="img"></p><p>配置：</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191211191453532-1276390692.png" alt="img" title="img"></p><p>重新打包镜像，使用apollo版本的代码：</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191211191820356-768052077.png" alt="img" title="img"></p><p>修改dp.yaml，将镜像使用我们刚刚打包的这个：</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191212165021897-875544258.png" alt="img" title="img"></p><p>应用资源配置清单：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;dubbo-server&#x2F;dp.yaml</span><br></pre></td></tr></table></figure><p>创建dubbo服务消费者：</p><p>apollo中新建一个项目：dubbo-demo-web,新建配置dubbo.registry,值为zookeeper地址</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191212171234674-1033346701.png" alt="img" title="img"></p><p>使用jenkins重新打包构建一版镜像： <a href="mailto:&#103;&#x69;&#x74;&#x40;&#103;&#x69;&#x74;&#101;&#x65;&#x2e;&#x63;&#111;&#109;">&#103;&#x69;&#x74;&#x40;&#103;&#x69;&#x74;&#101;&#x65;&#x2e;&#x63;&#111;&#109;</a>:stanleywang/dubbo-demo-web.git</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191212171435845-1940297947.png" alt="img" title="img"></p><p>构建完成后，修改资源配置清单并应用：</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191212172433630-1495231734.png" alt="img" title="img"></p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191212172612084-965629920.png" alt="img" title="img"></p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191212172635322-132994833.png" alt="img" title="img"></p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191212172732355-402822084.png" alt="img" title="img"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes实战-配置中心（二）交付apollo配置中心到k8s</title>
      <link href="/posts/43827/"/>
      <url>/posts/43827/</url>
      
        <content type="html"><![CDATA[<p>kubernetes实战-配置中心（二）交付apollo配置中心到k8sapollo官网：官方地址apollo架构图：apollo需要使用数据库，这里使用mysql，注意版本需要在5.6以上：本…</p><!-- more --><h1 id="kubernetes实战-配置中心（二）交付apollo配置中心到k8s"><a href="#kubernetes实战-配置中心（二）交付apollo配置中心到k8s" class="headerlink" title="kubernetes实战-配置中心（二）交付apollo配置中心到k8s"></a>kubernetes实战-配置中心（二）交付apollo配置中心到k8s</h1><p>apollo官网：<a href="https://github.com/ctripcorp/apollo">官方地址</a></p><p>apollo架构图：</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191211110416988-457984528.png" alt="img" title="img"></p><p>apollo需要使用数据库，这里使用mysql，注意版本需要在5.6以上：</p><p>本次环境mysql部署在10.4.7.11上，使用mariadb：10.1以上版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># vi &#x2F;etc&#x2F;yum.repos.d&#x2F;MariaDB.repo</span><br><span class="line">[mariadb]</span><br><span class="line">name &#x3D; MariaDB</span><br><span class="line">baseurl &#x3D; https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;mariadb&#x2F;yum&#x2F;10.1&#x2F;centos7-amd64&#x2F;</span><br><span class="line">gpgkey&#x3D;https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;mariadb&#x2F;yum&#x2F;RPM-GPG-KEY-MariaDB</span><br><span class="line">gpgcheck&#x3D;1</span><br></pre></td></tr></table></figure><p>导入key：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># rpm --import https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;mariadb&#x2F;yum&#x2F;RPM-GPG-KEY-MariaDB</span><br><span class="line"># yum install MariaDB-server -y</span><br></pre></td></tr></table></figure><p>简单配置mysql：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># vi &#x2F;etc&#x2F;my.cnf.d&#x2F;server.cnf</span><br><span class="line">[mysqld]</span><br><span class="line">character_set_server &#x3D; utf8mb4</span><br><span class="line">collation_server &#x3D; utf8mb4_general_ci</span><br><span class="line">init_connect &#x3D; &quot;SET NAMES &#39;utf8mb4&#39;&quot;</span><br><span class="line"># vi &#x2F;etc&#x2F;my.cnf.d&#x2F;mysql-clients.cnf</span><br><span class="line">[mysql]</span><br><span class="line">default-character-set &#x3D; utf8mb4</span><br><span class="line"># systemctl start mariadb</span><br><span class="line"># systemctl enable mariadb</span><br><span class="line"># mysqladmin -u root password </span><br></pre></td></tr></table></figure><p>登录检查字符集：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># mysql -uroot -p</span><br><span class="line">&gt; \s</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191211112612161-1900642767.png" alt="img" title="img"></p><p>执行数据库初始化脚本：<a href="https://github.com/ctripcorp/apollo/blob/1.5.1/scripts/db/migration/configdb/V1.0.0__initialization.sql">configdb初始化脚本</a></p><p>下载脚本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># wget https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ctripcorp&#x2F;apollo&#x2F;1.5.1&#x2F;scripts&#x2F;db&#x2F;migration&#x2F;configdb&#x2F;V1.0.0__initialization.sql -O apolloconfig.sql</span><br></pre></td></tr></table></figure><p>执行初始化脚本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># mysql -uroot -p &lt; apolloconfig.sql</span><br></pre></td></tr></table></figure><p>检查数据库：</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191211113247771-1778301598.png" alt="img" title="img"></p><p>给数据库授权：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># grant INSERT,DELETE,UPDATE,SELECT on ApolloConfigDB.* to &#39;apolloconfig&#39;@&#39;10.4.7.%&#39;  identified by &quot;123456&quot;;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191211114116673-2001410083.png" alt="img" title="img"></p><p>修改初始化数据：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; update ServerConfig set Value&#x3D;&#39;http:&#x2F;&#x2F;config.od.com&#x2F;eureka&#39; where Id&#x3D;1;</span><br><span class="line">也可以使用下面的sql：执行一个即可</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes实战-配置中心（一）configmap资源</title>
      <link href="/posts/19840/"/>
      <url>/posts/19840/</url>
      
        <content type="html"><![CDATA[<p>kubernetes实战-配置中心（一）configmap资源在我们的环境中测试使用configmap资源，需要先对我们的环境进行一些准备，首先将dubbo服务调整为0个pod ，然后把zook…</p><!-- more --><h1 id="kubernetes实战-配置中心（一）configmap资源"><a href="#kubernetes实战-配置中心（一）configmap资源" class="headerlink" title="kubernetes实战-配置中心（一）configmap资源"></a>kubernetes实战-配置中心（一）configmap资源</h1><p>在我们的环境中测试使用configmap资源，需要先对我们的环境进行一些准备，首先将dubbo服务调整为0个pod ，然后把zookeeper进行拆分：</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191206152200951-1152409322.png" alt="img" title="img"></p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191206152906998-1949229974.png" alt="img" title="img"></p><p>拆分zk环境，模拟测试环境跟生产环境：</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191206152002087-1033990054.png" alt="img" title="img"></p><p>停止zookeeper：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># sh &#x2F;opt&#x2F;zookeeper&#x2F;bin&#x2F;zkServer.sh stop</span><br><span class="line"># rm -rf &#x2F;data&#x2F;zookeeper&#x2F;data&#x2F;*</span><br><span class="line"># rm -rf &#x2F;data&#x2F;zookeeper&#x2F;logs&#x2F;*</span><br><span class="line"># vi &#x2F;opt&#x2F;zookeeper&#x2F;conf&#x2F;zoo.cfg</span><br></pre></td></tr></table></figure><p>注释掉集群配置：</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191206160332428-705993688.png" alt="img" title="img"></p><p>启动zookeeper：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># sh &#x2F;opt&#x2F;zookeeper&#x2F;bin&#x2F;zkServer.sh start</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191206160503691-1722226541.png" alt="img" title="img"></p><p>创建资源配置清单：</p><p>1、cm.yaml 红色部分是配置文件的name，下面的是内容。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  name: dubbo-monitor-cm</span><br><span class="line">  namespace: infra</span><br><span class="line">data:</span><br><span class="line">  dubbo.properties: |</span><br><span class="line">    dubbo.container&#x3D;log4j,spring,registry,jetty</span><br><span class="line">    dubbo.application.name&#x3D;simple-monitor</span><br><span class="line">    dubbo.application.owner&#x3D;OldboyEdu</span><br><span class="line">    dubbo.registry.address&#x3D;zookeeper:&#x2F;&#x2F;zk1.od.com:2181</span><br><span class="line">    dubbo.protocol.port&#x3D;20880</span><br><span class="line">    dubbo.jetty.port&#x3D;8080</span><br><span class="line">    dubbo.jetty.directory&#x3D;&#x2F;dubbo-monitor-simple&#x2F;monitor</span><br><span class="line">    dubbo.charts.directory&#x3D;&#x2F;dubbo-monitor-simple&#x2F;charts</span><br><span class="line">    dubbo.statistics.directory&#x3D;&#x2F;dubbo-monitor-simple&#x2F;statistics</span><br><span class="line">    dubbo.log4j.file&#x3D;&#x2F;dubbo-monitor-simple&#x2F;logs&#x2F;dubbo-monitor.log</span><br><span class="line">    dubbo.log4j.level&#x3D;WARN</span><br></pre></td></tr></table></figure><p>2、dp-cm.yaml</p><p>在dp里面如何使用configmap资源：</p><p>首先声明一个卷，卷的名字叫configmap-volume,然后指定这个卷使用的configmap</p><p>然后定义这个卷的挂载，挂载到哪里。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># vi dp-cm.yaml</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">kind: Deployment</span><br><span class="line">apiVersion: extensions&#x2F;v1beta1</span><br><span class="line">metadata:</span><br><span class="line">  name: dubbo-monitor</span><br><span class="line">  namespace: infra</span><br><span class="line">  labels: </span><br><span class="line">    name: dubbo-monitor</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels: </span><br><span class="line">      name: dubbo-monitor</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels: </span><br><span class="line">        app: dubbo-monitor</span><br><span class="line">        name: dubbo-monitor</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: dubbo-monitor</span><br><span class="line">        image: harbor.od.com&#x2F;infra&#x2F;dubbo-monitor:latest</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 8080</span><br><span class="line">          protocol: TCP</span><br><span class="line">        - containerPort: 20880</span><br><span class="line">          protocol: TCP</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        volumeMounts:</span><br><span class="line">          - name: configmap-volume</span><br><span class="line">            mountPath: &#x2F;dubbo-monitor-simple&#x2F;conf</span><br><span class="line">      volumes:</span><br><span class="line">        - name: configmap-volume</span><br><span class="line">          configMap:</span><br><span class="line">            name: dubbo-monitor-cm</span><br><span class="line">      imagePullSecrets:</span><br><span class="line">      - name: harbor</span><br><span class="line">      restartPolicy: Always</span><br><span class="line">      terminationGracePeriodSeconds: 30</span><br><span class="line">      securityContext: </span><br><span class="line">        runAsUser: 0</span><br><span class="line">      schedulerName: default-scheduler</span><br><span class="line">  strategy:</span><br><span class="line">    type: RollingUpdate</span><br><span class="line">    rollingUpdate: </span><br><span class="line">      maxUnavailable: 1</span><br><span class="line">      maxSurge: 1</span><br><span class="line">  revisionHistoryLimit: 7</span><br><span class="line">  progressDeadlineSeconds: 600</span><br></pre></td></tr></table></figure><p>应用资源配置清单：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;dubbo-monitor&#x2F;cm.yaml</span><br><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;dubbo-monitor&#x2F;dp-cm.yaml</span><br></pre></td></tr></table></figure><p>去dashboard查看configmap资源：</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191206162727749-1572811779.png" alt="img" title="img"></p><p>我们可以创建多个configmap资源，然后在dp中去挂载应用这些configmap资源，达到修改配置的功能。</p><p>我们检查一下我们的容器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># kubectl get pod -n infra</span><br></pre></td></tr></table></figure><p>已经起来了</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191206163613708-1755986854.png" alt="img" title="img"></p><p>我们检查一下我们挂载的配置是不是我们定义的configmap资源中的配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># kubectl exec -it dubbo-monitor-6676dd74cc-pvf2f -n infra &#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure><p>我们把配置文件挂载到了**/dubbo-monitor-simple/<strong>**conf</strong> 这里，我们去看一下。（上面的dp-cm.yaml中声明的）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># cat &#x2F;dubbo-monitor-simple&#x2F;conf&#x2F;dubbo.properties</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191206163854491-1881028587.png" alt="img" title="img"></p><p>跟我们定义的一模一样。</p><p>这里如果想更换配置，有两种方法：</p><p>　　一、修改configmap 资源，然后apply一下更新资源，然后重启挂载这个configmap资源的dp。</p><p>　　二、准备多个configmap资源，然后在dp中更改挂载的configmap,apply以后，dp自动重启。</p><p>检查dubbo-monitor页面的注册信息：</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191206165345407-471585294.png" alt="img" title="img"></p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191206165403504-1421689285.png" alt="img" title="img"></p><p>连接的zk1.od.com，下面我们模拟更换configmap资源，来切换环境：</p><p>这里使用第二种方法，准备多个configmap，我们在准备一个configmap,就叫cm-pro.yaml:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># cp cm.yaml cm-pro.yaml</span><br><span class="line"># vi cm-pro.yaml</span><br></pre></td></tr></table></figure><p>然后我们把服务注册到zk2.od.com上：</p><p>把资源名字改成dubbo-monitor-cm-pro</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191206165858875-962602223.png" alt="img" title="img"></p><p>把服务注册到zk2上：</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191206165703012-1393173343.png" alt="img" title="img"></p><p>应用一下cm-pro.yaml:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;dubbo-monitor&#x2F;cm-pro.yaml</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191206170016686-52804254.png" alt="img" title="img"></p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191206170032252-234364529.png" alt="img" title="img"></p><p>然后我们修改dp-cm.yaml:</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191206170127881-234365593.png" alt="img" title="img"></p><p>然后apply这个dp-cm.yaml:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;dubbo-monitor&#x2F;dp-cm.yaml</span><br></pre></td></tr></table></figure><p>新的已经起来了，我们进去看看是不是应用的新的configmap配置：</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191206170323857-307632334.png" alt="img" title="img"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># kubectl exec -it dubbo-monitor-5cb756cc6c-xtnrt -n infra &#x2F;bin&#x2F;bash</span><br><span class="line"># cat &#x2F;dubbo-monitor-simple&#x2F;conf&#x2F;dubbo.properties </span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191206170428519-1061937897.png" alt="img" title="img"></p><p>已经生效了。</p><p><strong>更新configmap资源来更改配置需要更新(删除/apply/update)pod，否则无效。</strong></p><p>看下dubbo-monitor的页面：已经是zk2了。</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191206170524240-1778093972.png" alt="img" title="img"></p><p>但是注意，我们这里使用的是mountPath，这个是挂载整个目录，会使容器内的被挂载目录中原有的文件不可见，可以看见我们原来脚本中的命令已经无法对挂载的目录操作了。</p><p>查看我们pod容器启动的命令可以看见：如果想单独挂载一个配置配件，而不是整个目录，如何操作：</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191206163227083-533233850.png" alt="img" title="img"></p><p>这里我使用之前的nginx:curl来做如何挂载单个的文件：</p><p>查看资源key的使用方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># kubectl explain pod.spec.containers.volumeMounts</span><br></pre></td></tr></table></figure><p>这里有个挂载方法是：subPath,使用这个方法，可以挂载指定的文件，要结合mountPath来使用：</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191206174308385-1399833041.png" alt="img" title="img"></p><p>查看我们原来实验做的nginx:curl这个容器：在default命名空间里。</p><p>我们实验的需求，把<strong>dubbo.properties</strong>这个配置文件挂载到/usr/lib/目录下，并且保证原来容器内/usr/lib/目录下的文件都还在：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># kubectl get pod</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191206174637314-738116987.png" alt="img" title="img"></p><p>进入容器查看容器内/usr/lib/下有哪些文件：</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191206175137440-354418017.png" alt="img" title="img"></p><p>在default命名空间下创建configmap资源：</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191206175731510-1447265675.png" alt="img" title="img"></p><p>应用configmap资源配置清单：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;nginx-ds&#x2F;cm.yaml</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191206175920895-1307672044.png" alt="img" title="img"></p><p>然后修改这个容器的资源配置清单：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># kubectl edit ds nginx-ds -n default</span><br></pre></td></tr></table></figure><p>挂载configmap资源：一定要注意格式跟缩进<del>~</del></p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191206182032491-2128792466.png" alt="img" title="img"></p><p>然后重启pod</p><p>登录进容器中，查看：</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191206182217982-1739358712.png" alt="img" title="img"></p><p><img src="C:%5CUsers%5Cmu77ops%5CDesktop%5CK8S%5Cimg%5C1034759-20191206175137440-354418017.png" alt="img" title="img"></p><p>经过对比，我们原来/usr/lib/下的文件还在，并且新增了一个配置文件dubbo-properties这个配置文件。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes实战-交付dubbo服务到k8s集群（六）使用blue ocean流水线构建dubbo-consumer服务</title>
      <link href="/posts/61219/"/>
      <url>/posts/61219/</url>
      
        <content type="html"><![CDATA[<p>kubernetes实战-交付dubbo服务到k8s集群（六）使用blue ocean流水线构建dubbo-consumer服务我们这里的dubbo-consumer是dubbo-demo-se…</p><!-- more --><h1 id="kubernetes实战-交付dubbo服务到k8s集群（六）使用blue-ocean流水线构建dubbo-consumer服务"><a href="#kubernetes实战-交付dubbo服务到k8s集群（六）使用blue-ocean流水线构建dubbo-consumer服务" class="headerlink" title="kubernetes实战-交付dubbo服务到k8s集群（六）使用blue ocean流水线构建dubbo-consumer服务"></a>kubernetes实战-交付dubbo服务到k8s集群（六）使用blue ocean流水线构建dubbo-consumer服务</h1><p>我们这里的dubbo-consumer是dubbo-demo-service的消费者：</p><p>我们之前已经在jenkins配置好了流水线，只需要填写参数就行了。</p><p>由于dubbo-consumer用的gitee的私有仓库，需要添加公钥，这里大家可以自己找个client服务来做实验。</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191204182953280-549617155.png" alt="img" title="img"></p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191204182149184-1988121109.png" alt="img" title="img"></p><p>下面是我们通过jenkins构建的镜像，已经上传到我们的harbor私有仓库当中了：</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191204184217980-511779709.png" alt="img" title="img"></p><p>这里我们构建了两次，构建了两个镜像，11bb9cd这个用来做模拟生产发版更新实验。</p><p>准备资源配置清单：</p><p>1、dp.yaml <strong>红色部分根据实际镜像tag修改</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># mkdir &#x2F;data&#x2F;k8s-yaml&#x2F;dubbo-consumer</span><br><span class="line"># cd &#x2F;data&#x2F;k8s-yaml&#x2F;dubbo-consumer</span><br><span class="line"># vi dp.yaml</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">kind: Deployment</span><br><span class="line">apiVersion: extensions&#x2F;v1beta1</span><br><span class="line">metadata:</span><br><span class="line">  name: dubbo-demo-consumer</span><br><span class="line">  namespace: app</span><br><span class="line">  labels: </span><br><span class="line">    name: dubbo-demo-consumer</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels: </span><br><span class="line">      name: dubbo-demo-consumer</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels: </span><br><span class="line">        app: dubbo-demo-consumer</span><br><span class="line">        name: dubbo-demo-consumer</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: dubbo-demo-consumer</span><br><span class="line">        image: harbor.od.com&#x2F;app&#x2F;dubbo-demo-consumer:master_191201_1600</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 8080</span><br><span class="line">          protocol: TCP</span><br><span class="line">        - containerPort: 20880</span><br><span class="line">          protocol: TCP</span><br><span class="line">        env:</span><br><span class="line">        - name: JAR_BALL</span><br><span class="line">          value: dubbo-client.jar</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">      imagePullSecrets:</span><br><span class="line">      - name: harbor</span><br><span class="line">      restartPolicy: Always</span><br><span class="line">      terminationGracePeriodSeconds: 30</span><br><span class="line">      securityContext: </span><br><span class="line">        runAsUser: 0</span><br><span class="line">      schedulerName: default-scheduler</span><br><span class="line">  strategy:</span><br><span class="line">    type: RollingUpdate</span><br><span class="line">    rollingUpdate: </span><br><span class="line">      maxUnavailable: 1</span><br><span class="line">      maxSurge: 1</span><br><span class="line">  revisionHistoryLimit: 7</span><br><span class="line">  progressDeadlineSeconds: 600</span><br></pre></td></tr></table></figure><p>2、svc.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># vi svc.yaml</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">kind: Service</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata: </span><br><span class="line">  name: dubbo-demo-consumer</span><br><span class="line">  namespace: app</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - protocol: TCP</span><br><span class="line">    port: 8080</span><br><span class="line">    targetPort: 8080</span><br><span class="line">  selector: </span><br><span class="line">    app: dubbo-demo-consumer</span><br></pre></td></tr></table></figure><p>3、ingress.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># vi ingress.yaml</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">kind: Ingress</span><br><span class="line">apiVersion: extensions&#x2F;v1beta1</span><br><span class="line">metadata: </span><br><span class="line">  name: dubbo-demo-consumer</span><br><span class="line">  namespace: app</span><br><span class="line">spec:</span><br><span class="line">  rules:</span><br><span class="line">  - host: demo.od.com</span><br><span class="line">    http:</span><br><span class="line">      paths:</span><br><span class="line">      - path: &#x2F;</span><br><span class="line">        backend: </span><br><span class="line">          serviceName: dubbo-demo-consumer</span><br><span class="line">          servicePort: 8080</span><br></pre></td></tr></table></figure><p>应用资源配置清单：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;dubbo-consumer&#x2F;dp.yaml</span><br><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;dubbo-consumer&#x2F;svc.yaml</span><br><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;dubbo-consumer&#x2F;ingress.yaml</span><br><span class="line"># kubectl get pod -n app</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191204185606980-173323108.png" alt="img" title="img"></p><p>查看log，是否启动成功：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># kubectl logs dubbo-demo-consumer-f8d5f5f74-dgmqd -n app</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191204185706184-726464405.png" alt="img" title="img"></p><p>检查dubbo-monitor是否已经注册成功：</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191204185901594-1794752720.png" alt="img" title="img"></p><p>添加个dns解析，来验证：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># vi &#x2F;var&#x2F;named&#x2F;od.com.zone</span><br><span class="line"># systemctl restart named</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191204190330710-1152106839.png" alt="img" title="img"></p><p>浏览器访问<a href="http://demo.od.com/hello?name=slim">http://demo.od.com/hello?name=slim</a></p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191204190424208-1227852511.png" alt="img" title="img"></p><p>接下来我们模拟升级发版，我们提前修改了代码，并提交到了git仓库，发版的前提是使用jenkins提前构建了镜像并且上传到了我们的私有harbor仓库中，具体的构建流程不在赘述，只需要将远程git仓库的版本修改后构建就行了。</p><p>修改dp.yaml资源配置清单，修改harbor镜像仓库中对应的tag版本：</p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191204190648470-1335170472.png" alt="img" title="img"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># vi dp.yaml</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191204190718713-1299242715.png" alt="img" title="img"></p><p>应用修改后的资源配置清单，当然也可以在dashboard中进行在线修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># kubectl apply -f http:&#x2F;&#x2F;k8s-yaml.od.com&#x2F;dubbo-consumer&#x2F;dp.yaml</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191204190846796-129289757.png" alt="img" title="img"></p><p>已经启动起来了，使用浏览器验证：<a href="http://demo.od.com/hello?name=slim">http://demo.od.com/hello?name=slim</a></p><p><img src="https://gitee.com/xoxoyun/img/raw/master/image/1034759-20191204190916621-98388740.png" alt="img" title="img"></p><p>至此，我们一套完成的dubbo服务就已经交付到k8s集群当中了，并且也演示了如何发版。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>kafka和zookeeper设计部署</title>
      <link href="/posts/33135/"/>
      <url>/posts/33135/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>企业日常巡检的shell脚本</title>
      <link href="/posts/50514/"/>
      <url>/posts/50514/</url>
      
        <content type="html"><![CDATA[<p>脚本的显示效果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#########################系统信息#########################</span><br><span class="line">  系统类型：Linux</span><br><span class="line">  系统版本：CentOS Linux release 7.5.1804 (Core) </span><br><span class="line">  系统内核：3.10.0-862.el7.x86_64</span><br><span class="line">  当前时间：2020-06-06_15:18:22</span><br><span class="line">  运行时间：4:25</span><br><span class="line">最后重启时间：2020-06-06 18:53</span><br><span class="line">  本机名称：room9pc01.tedu.cn</span><br><span class="line">#########################网络信息#########################</span><br><span class="line">  访问外网：成功</span><br><span class="line">#########################硬件信息#########################</span><br><span class="line">   CPU数量: 1</span><br><span class="line">   CPU核心: 4</span><br><span class="line">   CPU型号: Intel(R) Core(TM) i5-6500 CPU @ 3.20GHz</span><br><span class="line"> 内存总容量: 15928MB</span><br><span class="line">剩余内存容量: 11982MB</span><br><span class="line"> 磁盘总容量: 400GB</span><br><span class="line">剩余磁盘容量：286GB</span><br><span class="line">#########################安全信息#########################</span><br><span class="line">当前登录用户：root</span><br><span class="line">  用户异常：是</span><br></pre></td></tr></table></figure><p>脚本如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line"></span><br><span class="line">function system()&#123;   #编写关于查看系统信息的函数</span><br><span class="line">echo &quot;#########################系统信息#########################&quot;</span><br><span class="line">OS_TYPE&#x3D;&#96;uname&#96;  #定义变量OS_TYPE,存的信息是系统类型,&#96;&#96;反引号代表的是执行uname命令的结果而不是字符串</span><br><span class="line">OS_VER&#x3D;&#96;cat &#x2F;etc&#x2F;redhat-release&#96;</span><br><span class="line">OS_KER&#x3D;&#96;uname -a|awk &#39;&#123;print $3&#125;&#39;&#96;  #awk &#39;&#123;print $3&#125;代表过滤第三行的信息</span><br><span class="line">OS_TIME&#x3D;&#96;date +%F_%T&#96;</span><br><span class="line">\# awk -F, &#39;&#123;print $1&#125;&#39;代表以逗号切分的,第一行信息</span><br><span class="line">OS_RUN_TIME&#x3D;&#96;uptime |awk &#39;&#123;print $3&#125;&#39;|awk -F, &#39;&#123;print $1&#125;&#39;&#96;</span><br><span class="line">OS_LAST_REBOOT_TIME&#x3D;&#96;who -b|awk &#39;&#123;print $2,$3&#125;&#39;&#96;</span><br><span class="line">OS_HOSTNAME&#x3D;&#96;hostname&#96;</span><br><span class="line"></span><br><span class="line">echo &quot;   系统类型：$OS_TYPE&quot;</span><br><span class="line">echo &quot;   系统版本：$OS_VER&quot;</span><br><span class="line">echo &quot;   系统内核：$OS_KER&quot;</span><br><span class="line">echo &quot;   当前时间：$OS_TIME&quot;</span><br><span class="line">echo &quot;   运行时间：$OS_RUN_TIME&quot;</span><br><span class="line">echo &quot;最后重启时间：$OS_LAST_REBOOT_TIME&quot;</span><br><span class="line">echo &quot;   本机名称：$OS_HOSTNAME&quot;</span><br><span class="line">&#125;</span><br><span class="line">function network()&#123;  #定义显示网络信息的函数</span><br><span class="line"></span><br><span class="line">echo &quot;#########################网络信息#########################&quot;</span><br><span class="line">\#定义变量INTERNET存ifconfig命令包涵flags的行,并以:分隔的第一行内容,此内容是一列</span><br><span class="line">INTERNET&#x3D;(&#96;ifconfig|grep flags|awk -F: &#39;&#123;print $1&#125;&#39;&#96;)</span><br><span class="line">\#注意echo $&#123;INTERNET[2]&#125; ---代表显示过滤处理一列的第3个数的具体数据</span><br><span class="line">\#echo $&#123;#INTERNET[*]&#125; ---代表第显示过滤处理一列的中总共的行数是多少,*代表所有的</span><br><span class="line">for((i&#x3D;0;i&lt;&#96;echo $&#123;#INTERNET[*]&#125;&#96;;i++))</span><br><span class="line">do</span><br><span class="line">\#定义变量OS_IP存ifconfig命令中包涵$&#123;INTERNET[$i]&#125;关键词的head -2前两行中的包含inet行的信息,并提取其中的第</span><br><span class="line">二个关键数</span><br><span class="line"> OS_IP&#x3D;&#96;ifconfig $&#123;INTERNET[$i]&#125;|head -2|grep inet|awk &#39;&#123;print $2&#125;&#39;&#96;</span><br><span class="line">\#$&#123;INTERNET[$i]&#125;关键词对应的ip地址OS_IP</span><br><span class="line"> echo &quot;      $&#123;INTERNET[$i]&#125;:$OS_IP&quot;</span><br><span class="line">done</span><br><span class="line">curl -I http:&#x2F;&#x2F;www.baidu.com &amp;&gt;&#x2F;dev&#x2F;null</span><br><span class="line">\#如果curl -I http:&#x2F;&#x2F;www.baidu.com &amp;&gt;&#x2F;dev&#x2F;null能访问成功$?的值是0,不然则是其他的随机数字</span><br><span class="line">if [ $? -eq 0 ]</span><br><span class="line">then echo &quot;   访问外网：成功&quot;</span><br><span class="line">else echo &quot;   访问外网：失败&quot;</span><br><span class="line">fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">function hardware()&#123;  #定义显示硬件信息的函数</span><br><span class="line"></span><br><span class="line">echo &quot;#########################硬件信息#########################&quot;</span><br><span class="line">\#过滤出CPU的数量,以数据的大小排序,只显示唯一数字,并统计大概有多少行</span><br><span class="line">CPUID&#x3D;&#96;grep &quot;physical id&quot; &#x2F;proc&#x2F;cpuinfo |sort|uniq|wc -l&#96;</span><br><span class="line">CPUCORES&#x3D;&#96;grep &quot;cores&quot; &#x2F;proc&#x2F;cpuinfo|sort|uniq|awk -F: &#39;&#123;print $2&#125;&#39;&#96;</span><br><span class="line">CPUMODE&#x3D;&#96;grep &quot;model name&quot; &#x2F;proc&#x2F;cpuinfo|sort|uniq|awk -F: &#39;&#123;print $2&#125;&#39;&#96;</span><br><span class="line"></span><br><span class="line">echo &quot;   CPU数量: $CPUID&quot;</span><br><span class="line">echo &quot;   CPU核心:$CPUCORES&quot;</span><br><span class="line">echo &quot;   CPU型号:$CPUMODE&quot;</span><br><span class="line"></span><br><span class="line">MEMTOTAL&#x3D;&#96;free -m|grep Mem|awk &#39;&#123;print $2&#125;&#39;&#96;</span><br><span class="line">MEMFREE&#x3D;&#96;free -m|grep Mem|awk &#39;&#123;print $7&#125;&#39;&#96;</span><br><span class="line"></span><br><span class="line">echo &quot;  内存总容量: $&#123;MEMTOTAL&#125;MB&quot;</span><br><span class="line">echo &quot;剩余内存容量: $&#123;MEMFREE&#125;MB&quot;</span><br><span class="line"></span><br><span class="line">disksize&#x3D;0</span><br><span class="line">swapsize&#x3D;&#96;free|grep Swap|awk &#123;&#39;print $2&#39;&#125;&#96;</span><br><span class="line">\#除去df -T命令的第一行并过滤掉包换tmpfs|sr0的行,所剩下的行打印出它的以空格分隔的第三行数据</span><br><span class="line">partitionsize&#x3D;(&#96;df -T|sed 1d|egrep -v &quot;tmpfs|sr0&quot;|awk &#123;&#39;print $3&#39;&#125;&#96;)</span><br><span class="line">\#将每块磁盘的大小相加</span><br><span class="line">for ((i&#x3D;0;i&lt;&#96;echo $&#123;#partitionsize[*]&#125;&#96;;i++))</span><br><span class="line">do</span><br><span class="line">disksize&#x3D;&#96;expr $disksize + $&#123;partitionsize[$i]&#125;&#96;</span><br><span class="line">done</span><br><span class="line">((disktotal&#x3D;$disksize+$swapsize$disksize+$swapsize&#x2F;1024&#x2F;1024))</span><br><span class="line"></span><br><span class="line">echo &quot;  磁盘总容量: $&#123;disktotal&#125;GB&quot;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">diskfree&#x3D;0</span><br><span class="line">swapfree&#x3D;&#96;free|grep Swap|awk &#39;&#123;print $4&#125;&#39;&#96;</span><br><span class="line">partitionfree&#x3D;(&#96;df -T|sed 1d|egrep -v &quot;tmpfs|sr0&quot;|awk &#39;&#123;print $5&#125;&#39;&#96;)</span><br><span class="line">\#将可用的磁盘容量相加</span><br><span class="line">for ((i&#x3D;0;i&lt;&#96;echo $&#123;#partitionfree[*]&#125;&#96;;i++))</span><br><span class="line">do</span><br><span class="line">diskfree&#x3D;&#96;expr $diskfree + $&#123;partitionfree[$i]&#125;&#96;</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">((freetotal&#x3D;$diskfree+$swapfree$diskfree+$swapfree&#x2F;1024&#x2F;1024))</span><br><span class="line"></span><br><span class="line">echo &quot;剩余磁盘容量：$&#123;freetotal&#125;GB&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function secure()&#123;</span><br><span class="line">echo &quot;#########################安全信息#########################&quot;</span><br><span class="line"></span><br><span class="line">countuser&#x3D;(&#96;last|grep &quot;still logged in&quot;|awk &#39;&#123;print $1&#125;&#39;|sort|uniq&#96;)</span><br><span class="line">for ((i&#x3D;0;i&lt;&#96;echo $&#123;#countuser[*]&#125;&#96;;i++))</span><br><span class="line">do echo &quot;当前登录用户：$&#123;countuser[$i]&#125;&quot;</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">md5sum -c --quiet &#x2F;opt&#x2F;passwd.db &amp;&gt;&#x2F;dev&#x2F;null</span><br><span class="line">if [ $? -eq 0 ]</span><br><span class="line">then echo &quot;   用户异常：否&quot;</span><br><span class="line">else echo &quot;   用户异常：是&quot;</span><br><span class="line">fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function chksys()&#123;</span><br><span class="line">system</span><br><span class="line">network</span><br><span class="line">hardware</span><br><span class="line">secure</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">chksys</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>k8s+jenkins高可用集群架构</title>
      <link href="/posts/38308/"/>
      <url>/posts/38308/</url>
      
        <content type="html"><![CDATA[<h1 id="Jenkins在k8s集群环境"><a href="#Jenkins在k8s集群环境" class="headerlink" title="Jenkins在k8s集群环境"></a>Jenkins在k8s集群环境</h1><p><img src="https://cdn.jsdelivr.net/gh/kococ/IMAGE/jenkins+k8s.png" alt="img"></p><h1 id="k8s高可用管理集群"><a href="#k8s高可用管理集群" class="headerlink" title="k8s高可用管理集群"></a>k8s高可用管理集群</h1><p><img src="https://cdn.jsdelivr.net/gh/kococ/IMAGE/k8sMHA.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> Docker+K8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> k8s </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决 Github 访问不了的问题</title>
      <link href="/posts/38409/"/>
      <url>/posts/38409/</url>
      
        <content type="html"><![CDATA[<p>访问这个地址 <a href="https://github.com.ipaddress.com/www.github.com">https://github.com.ipaddress.com/www.github.com</a><br>可以查到现在 github 的 ip 地址，然后把这个添加到 hosts 文件即可，之前的添加一大堆也没啥用<br>hosts 文件地址在 c 盘的 Windows/system32/dreivrs/etc<br>有的可能没权限改不了，就把文件先移到桌面，改完移动回去即可；或者一步到位修改一下权限也可以。<br>注意一下，添加的格式为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip github.com </span><br></pre></td></tr></table></figure><p>改完之后应该就可以流畅访问了</p>]]></content>
      
      
      <categories>
          
          <category> 云计算 </category>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GiThub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次阿里云学习</title>
      <link href="/posts/41718/"/>
      <url>/posts/41718/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux-指令入门-文件与权限展开目录"><a href="#Linux-指令入门-文件与权限展开目录" class="headerlink" title="Linux 指令入门 - 文件与权限展开目录"></a>Linux 指令入门 - 文件与权限展开目录</h1><h2 id="文件目录管理命令展开目录"><a href="#文件目录管理命令展开目录" class="headerlink" title="文件目录管理命令展开目录"></a>文件目录管理命令展开目录</h2><h2 id="tree展开目录"><a href="#tree展开目录" class="headerlink" title="tree展开目录"></a>tree展开目录</h2><p>命令描述：tree 命令用于以树状图列出目录的内容。</p><p>tree 命令没有内置在系统中，使用 tree 命令需要执行以下命令来安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y tree</span><br></pre></td></tr></table></figure><p>命令使用示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tree &#x2F;usr&#x2F;share&#x2F;wallpapers&#x2F;</span><br></pre></td></tr></table></figure><p>命令输出结果：</p><p><img src="https://img.alicdn.com/tfs/TB1FuM_Hvb2gK0jSZK9XXaEgFXa-533-237.png" alt="img" title="img"></p><h2 id="ls展开目录"><a href="#ls展开目录" class="headerlink" title="ls展开目录"></a>ls展开目录</h2><p>命令描述： ls 命令用于显示指定工作目录下的内容。</p><p>命令格式：<code>ls [参数] [目录名]</code>。</p><p>参数说明：</p><p>参数</p><p>说明</p><p>-a</p><p>显示所有文件及目录（包括隐藏文件）</p><p>-l</p><p>将文件的权限、拥有者、文件大小等详细信息列出（<code>ll</code> 等同于 <code>ls -l</code>）</p><p>-r</p><p>将文件反序列出（默认按英文字母正序）</p><p>-t</p><p>将文件按创建时间正序列出</p><p>-R</p><p>递归遍历目录下文件</p><p>命令使用示例：</p><p>查看当前目录下的所有文件（包括隐藏文件）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ll -a</span><br></pre></td></tr></table></figure><p>命令输出结果：</p><p><img src="https://img.alicdn.com/tfs/TB10gRXHQP2gK0jSZPxXXacQpXa-546-381.png" alt="img" title="img"></p><h2 id="pwd展开目录"><a href="#pwd展开目录" class="headerlink" title="pwd展开目录"></a>pwd展开目录</h2><p>命令描述：获取当前工作目录的绝对路径。</p><p>命令使用示例：</p><p><img src="https://img.alicdn.com/tfs/TB1UJhXHHr1gK0jSZR0XXbP8XXa-452-68.png" alt="img" title="img"></p><h2 id="cd展开目录"><a href="#cd展开目录" class="headerlink" title="cd展开目录"></a>cd展开目录</h2><p>命令描述：cd 命令用于切换工作目录。</p><p>命令使用示例：</p><p><img src="https://img.alicdn.com/tfs/TB16qddHHH1gK0jSZFwXXc7aXXa-412-217.png" alt="img" title="img"></p><p>在路径表示中：</p><ul><li>一个半角句号（<code>.</code>）表示当前目录，例如路径./app/log 等同于 app/log。</li><li>两个半角句号（<code>..</code>）表示上级目录，例如路径 /usr/local/../src 等同于 /usr/src，其中 local 和 src 目录同级。</li></ul><p><code>cd</code> 命令的默认参数为 <code>~</code>，符号 <code>~</code> 表示当前用户的家目录，即在 root 用户登录时，命令 <code>cd</code>、<code>cd ~</code> 和 <code>cd /root</code> 执行效果相同。</p><h2 id="touch展开目录"><a href="#touch展开目录" class="headerlink" title="touch展开目录"></a>touch展开目录</h2><p>命令描述：touch 命令用于修改文件或者目录的时间属性，包括存取时间和更改时间。若文件不存在，系统会建立一个新的文件。</p><p>命令格式：<code>touch [参数] [文件]</code>。</p><p>参数说明：</p><p>参数</p><p>说明</p><p>-c</p><p>如果指定文件不存在，不会建立新文件</p><p>-r</p><p>使用参考文件的时间记录</p><p>-t</p><p>设置文件的时间记录</p><p>命令使用示例：</p><ul><li>创建两个空文件。<br><img src="https://img.alicdn.com/tfs/TB1X_Z.HuT2gK0jSZFvXXXnFXXa-466-133.png" alt="img"></li><li>修改 demo1.txt 的时间记录为当前系统时间。<br><img src="http://icms-static-public.cn-hangzhou.oss-cdn.aliyun-inc.com/portal-file/21500202/587137/images/p103461.png" alt="cmd_touch_2"></li><li>更新 demo2.txt 的时间记录，使其和 demo1.txt 的时间记录相同。<br><img src="https://img.alicdn.com/tfs/TB1iMpXHUT1gK0jSZFrXXcNCXXa-499-132.png" alt="img"></li></ul><h2 id="mkdir展开目录"><a href="#mkdir展开目录" class="headerlink" title="mkdir展开目录"></a>mkdir展开目录</h2><p>命令描述：mkdir 命令用于新建子目录。<code>-p</code> 参数确保目录名称存在，不存在的就新建一个。</p><p>命令使用示例：</p><p>新建目录 a/b/c/d，并使用 tree 命令查看创建后的目录结构。</p><h2 id="展开目录"><a href="#展开目录" class="headerlink" title="展开目录"></a><img src="https://img.alicdn.com/tfs/TB1s2vcjcKfxu4jSZPfXXb3dXXa-510-254.png" alt="img">展开目录</h2><h2 id="rm展开目录"><a href="#rm展开目录" class="headerlink" title="rm展开目录"></a>rm展开目录</h2><p>命令描述：rm 命令用于删除一个文件或者目录。</p><p>命令格式：<code>rm [参数] [文件]</code>。</p><p>参数说明：</p><p>参数</p><p>说明</p><p>-i</p><p>删除前逐一询问确认</p><p>-f</p><p>无需确认，直接删除</p><p>-r</p><p>删除目录下所有文件</p><p>命令使用示例：</p><p>无需确认直接删除文件。</p><p><img src="https://img.alicdn.com/tfs/TB1vLo8HqL7gK0jSZFBXXXZZpXa-522-213.png" alt="img" title="img"></p><p>无需确认直接删除目录 a 及其目录下所有子目录和文件。</p><h2 id="展开目录-1"><a href="#展开目录-1" class="headerlink" title="展开目录"></a><img src="https://img.alicdn.com/tfs/TB1asFeHQT2gK0jSZFkXXcIQFXa-415-85.png" alt="img">展开目录</h2><h2 id="cp展开目录"><a href="#cp展开目录" class="headerlink" title="cp展开目录"></a>cp展开目录</h2><p>命令描述： cp 命令主要用于复制文件或目录。</p><p>命令格式：<code>cp [参数] [源文件] [目标文件]</code>。</p><p>参数说明：</p><p>参数</p><p>说明</p><p>-d</p><p>复制时保留链接</p><p>-f</p><p>覆盖已经存在的目标文件而不给出提示</p><p>-i</p><p>覆盖前询问</p><p>-p</p><p>除复制文件的内容外，还把修改时间和访问权限也复制到新文件中</p><p>-r</p><p>复制目录及目录内的所有项目</p><p>命令使用示例：</p><p>将目录 c/d 中的所有内容复制到目录 a/b 下。</p><h2 id="展开目录-2"><a href="#展开目录-2" class="headerlink" title="展开目录"></a><img src="https://img.alicdn.com/tfs/TB10Ck3HuL2gK0jSZPhXXahvXXa-673-465.png" alt="img">展开目录</h2><h2 id="mv展开目录"><a href="#mv展开目录" class="headerlink" title="mv展开目录"></a>mv展开目录</h2><p>命令描述： mv 命令用来为文件或目录改名、或将文件或目录移入其它位置。</p><p>命令格式：<code>mv [参数] [源文件] [目标文件]</code></p><p>参数说明：</p><p>参数</p><p>说明</p><p>-i</p><p>若指定目录已有同名文件，则先询问是否覆盖旧文件</p><p>-f</p><p>如果目标文件已经存在，不会询问而直接覆盖</p><p>命令使用示例：</p><ul><li>将文件名 a.txt 改为 b.txt。<br><img src="https://img.alicdn.com/tfs/TB1z1M_Hvb2gK0jSZK9XXaEgFXa-348-151.png" alt="img"></li><li>将 c 目录移动到 a/b/c/d/ 下。<br><img src="https://img.alicdn.com/tfs/TB1M9BiHRr0gK0jSZFnXXbRRXXa-387-276.png" alt="img"></li><li>将当前目录内容全部移动到 /tmp 目录中。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv .&#x2F;* &#x2F;tmp</span><br></pre></td></tr></table></figure><h2 id="rename展开目录"><a href="#rename展开目录" class="headerlink" title="rename展开目录"></a>rename展开目录</h2><p>命令描述：rename 命令用字符串替换的方式批量改变文件名。rename 命令有 C 语言和 Perl 语言两个版本，这里介绍 C 语言版本的 rename 命令，不支持正则表达式。</p><p>命令使用示例：</p><ul><li>将当前目录下所有文件名中的字符串 demo 改为大写的字符串 DEMO。<br><img src="https://img.alicdn.com/tfs/TB164qEaepyVu4jSZFhXXbBpVXa-410-150.png" alt="img"></li><li>将当前目录下所有<code>.txt</code> 文件后缀都改为 <code>text</code>。<br><img src="https://img.alicdn.com/tfs/TB1l3pXHUT1gK0jSZFrXXcNCXXa-386-84.png" alt="img"></li></ul><h2 id="文件权限管理展开目录"><a href="#文件权限管理展开目录" class="headerlink" title="文件权限管理展开目录"></a>文件权限管理展开目录</h2><p>ls 命令可以查看 Linux 系统上的文件、目录和设备的权限。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -l &#x2F;boot&#x2F;</span><br></pre></td></tr></table></figure><p><img src="https://img.alicdn.com/tfs/TB12gXcHND1gK0jSZFKXXcJrVXa-869-420.png" alt="img" title="img"></p><p>上述 <code>ls -l</code> 命令中显示的第一列就是文件权限信息，共 11 位字符，分 5 部分。</p><ul><li>第 1 位表示存档类型，<code>d</code> 表示目录，<code>-</code> 表示一般文件。</li><li>第 2~4 位表示当前用户的权限（属主权限）。</li><li>第 5~7 位表示同用户组的用户权限（属组权限）。</li><li>第 8~10 位表示不同用户组的用户权限（其他用户权限）。</li><li>第 11 位是一个半角句号<code>.</code>，表示 SELinux 安全标签。</li></ul><p>用户权限每组三位，rwx 分别表示读、写、执行权限，对应八进制表示为 4、2、1。</p><p>例如 efi 目录的 root 用户权限为 <code>drwxr-xr-x.</code>。</p><ul><li>该目录对 root 用户具有读写和执行所有权限。</li><li>该目录对 root 组其他用户有读和执行权限。</li><li>该目录对其他用户只有执行权限。</li></ul><p>所以该权限表示对应八进制权限表示为：</p><ul><li>属主权限：<code>4+2+1=7</code>。</li><li>属组权限：<code>4+1=5</code>。</li><li>其他用户权限：1。</li></ul><p>即 751。</p><h2 id="chmod展开目录"><a href="#chmod展开目录" class="headerlink" title="chmod展开目录"></a>chmod展开目录</h2><p>chmod 命令用于修改文件权限 mode，<code>-R</code> 参数以递归方式对子目录和文件进行修改。</p><p>命令使用示例：</p><p>1. 新建名为 hello.sh 的 Shell 脚本，该脚本将会输出 <code>Hello World</code>。用 <code>ll</code> 命令可以看到新建的脚本没有执行权限，其权限用八进制表示为 644。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;echo &#39;Hello World&#39;&quot; &gt; hello.sh</span><br><span class="line">ll</span><br></pre></td></tr></table></figure><p><img src="https://img.alicdn.com/tfs/TB1XPRcHNv1gK0jSZFFXXb0sXXa-520-111.png" alt="img" title="img"></p><p>2. 将 hello.sh 文件增加属主的执行权限。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod u+x hello.sh</span><br><span class="line">ll</span><br></pre></td></tr></table></figure><p><img src="https://img.alicdn.com/tfs/TB1RX7nXSRLWu4jSZKPXXb6BpXa-469-110.png" alt="img" title="img"></p><p>3. 将 hello.sh 文件撤销属主的执行权限。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod u-x hello.sh</span><br><span class="line">ll</span><br></pre></td></tr></table></figure><p><img src="https://img.alicdn.com/tfs/TB1.q8XHFP7gK0jSZFjXXc5aXXa-458-108.png" alt="img" title="img"></p><p>4. 将 hello.sh 文件权限修改为八进制表示的 744 权限。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 744 hello.sh</span><br><span class="line">ll</span><br></pre></td></tr></table></figure><p><img src="https://img.alicdn.com/tfs/TB1cq..HpT7gK0jSZFpXXaTkpXa-445-110.png" alt="img" title="img"></p><p>5. 使用 bash 命令解释器执行 hello.sh 脚本文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;bin&#x2F;bash hello.sh</span><br></pre></td></tr></table></figure><p><img src="https://img.alicdn.com/tfs/TB1mIFeHQT2gK0jSZFkXXcIQFXa-448-67.png" alt="img" title="img"></p><p>其中，<code>u+x</code> 表示增加属主的执行权限，u 表示属主，g 表示属组，o 表示其他，a 表示所有用户。</p><h2 id="chown展开目录"><a href="#chown展开目录" class="headerlink" title="chown展开目录"></a>chown展开目录</h2><p>chown 命令修改文件的属主和属组；<code>-R</code> 参数以递归方式对子目录和文件进行修改；<code>ls -l</code> 命令显示的第三列和第四列就是文件的属主和属组信息。</p><p>命令使用示例：</p><p>1. 新建一个文本文件 test.txt，用 <code>ll</code> 命令可以看到该文件的属主和属组是 root。<code>whoami</code> 命令可以查看当前 Shell 环境登录的用户名。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">whoami</span><br><span class="line">touch test.txt</span><br><span class="line">ll</span><br></pre></td></tr></table></figure><p><img src="https://img.alicdn.com/tfs/TB1Xq..HpT7gK0jSZFpXXaTkpXa-457-153.png" alt="img" title="img"></p><p>2. 创建两个用户。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">useradd test</span><br><span class="line">useradd admin</span><br></pre></td></tr></table></figure><p>3. 修改 test.txt 文件的属主用户为 test。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chown test test.txt</span><br><span class="line">ll</span><br></pre></td></tr></table></figure><h3 id="展开目录-3"><a href="#展开目录-3" class="headerlink" title="展开目录"></a><img src="https://img.alicdn.com/tfs/TB1IHVfHHj1gK0jSZFuXXcrHpXa-477-106.png" alt="img">展开目录</h3><p>4. 修改 test.txt 文件的属主和属组为 admin。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chown admin:admin test.txt</span><br><span class="line">ll</span><br></pre></td></tr></table></figure><p><img src="https://img.alicdn.com/tfs/TB1KbVfHHj1gK0jSZFuXXcrHpXa-471-108.png" alt="img" title="img"></p><h2 id="chgrp展开目录"><a href="#chgrp展开目录" class="headerlink" title="chgrp展开目录"></a>chgrp展开目录</h2><p>chgrp 命令用于修改文件的属组。</p><p>命令使用示例：</p><p>将 test.txt 文件的属组改为 root。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chgrp root test.txt</span><br><span class="line">ll</span><br></pre></td></tr></table></figure><p><img src="https://img.alicdn.com/tfs/TB1uLg.HxD1gK0jSZFsXXbldVXa-522-108.png" alt="img" title="img"></p><h1 id="Linux-指令入门-文本处理展开目录"><a href="#Linux-指令入门-文本处理展开目录" class="headerlink" title="Linux 指令入门 - 文本处理展开目录"></a>Linux 指令入门 - 文本处理展开目录</h1><h2 id="连接-ECS-服务器展开目录"><a href="#连接-ECS-服务器展开目录" class="headerlink" title="连接 ECS 服务器展开目录"></a>连接 ECS 服务器展开目录</h2><p>1. 打开系统自带的终端工具。</p><ul><li>Windows：CMD 或 Powershell。</li><li>MAC：Terminal。</li></ul><p>Windows 用户请检查系统中是否安装有 ssh 工具。检查方法：</p><p>1）在终端中输入命令 ssh -V。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -V</span><br></pre></td></tr></table></figure><p>2）出现如下结果说明已安装。</p><p><img src="https://img.alicdn.com/tfs/TB1bF9nc5cKOu4jSZKbXXc19XXa-336-48.png" alt="img" title="img"></p><p>3）否则请下载安装 <a href="https://www.mls-software.com/files/setupssh-8.2p1-1.exe">OpenSSH。</a></p><p>2. 在终端中输入连接命令 ssh [username]@[ipaddress]。您需要将其中的 username 和 ipaddress 替换为第 1 小节中创建的 ECS 服务器的登录名和公网地址。例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh root@123.123.123.123</span><br></pre></td></tr></table></figure><p><img src="https://img.alicdn.com/tfs/TB1OlyaHXT7gK0jSZFpXXaTkpXa-290-257.jpg" alt="img" title="img"></p><p>命令显示结果如下：</p><p><img src="https://img.alicdn.com/tfs/TB1mWdXc5cKOu4jSZKbXXc19XXa-644-228.png" alt="img" title="img"></p><p>3. 输入 yes。</p><p>4. 同意继续后将会提示输入登录密码。 密码为已创建的云服务的 ECS 的登录密码。</p><p><img src="https://img.alicdn.com/tfs/TB1FzjSHqL7gK0jSZFBXXXZZpXa-637-75.png" alt="img" title="img"></p><p>登录成功后会显示如下信息。</p><p><img src="https://img.alicdn.com/tfs/TB1iRbWHAP2gK0jSZPxXXacQpXa-516-157.png" alt="img" title="img"></p><h2 id="文本编辑工具-Vim展开目录"><a href="#文本编辑工具-Vim展开目录" class="headerlink" title="文本编辑工具 Vim展开目录"></a>文本编辑工具 Vim展开目录</h2><h3 id="vim-的三种操作模式展开目录"><a href="#vim-的三种操作模式展开目录" class="headerlink" title="vim 的三种操作模式展开目录"></a>vim 的三种操作模式展开目录</h3><p>vim 有三种操作模式，分别是命令模式（Command mode）、输入模式（Insert mode）和底线命令模式（Last line mode）。</p><p>三种模式切换快捷键：</p><p>模式</p><p>快捷键</p><p>命令模式</p><p>ESC</p><p>输入模式</p><p>i 或 a</p><p>底线命令模式</p><p>:</p><ul><li>命令模式</li></ul><p>在命令模式中控制光标移动和输入命令，可对文本进行复制、粘贴、删除和查找等工作。</p><p>使用命令 vim filename 后进入编辑器视图后，默认模式就是命令模式，此时敲击键盘字母会被识别为一个命令，例如在键盘上连续敲击两次 d，就会删除光标所在行。</p><p>以下是在命令模式中常用的快捷操作：</p><p>操作</p><p>快捷键</p><p>光标左移</p><p>h</p><p>光标右移</p><p>l（小写 L）</p><p>光标上移</p><p>k</p><p>光标下移</p><p>j</p><p>光标移动到下一个单词</p><p>w</p><p>光标移动到上一个单词</p><p>b</p><p>移动游标到第 n 行</p><p>nG</p><p>移动游标到第一行</p><p>gg</p><p>移动游标到最后一行</p><p>G</p><p>快速回到上一次光标所在位置</p><p>Ctrl+o</p><p>删除当前字符</p><p>x</p><p>删除前一个字符</p><p>X</p><p>删除整行</p><p>dd</p><p>删除一个单词</p><p>dw 或 daw</p><p>删除至行尾</p><p>d$ 或 D</p><p>删除至行首</p><p>d^</p><p>删除到文档末尾</p><p>dG</p><p>删除至文档首部</p><p>d1G</p><p>删除 n 行</p><p>ndd</p><p>删除 n 个连续字符</p><p>nx</p><p>将光标所在位置字母变成大写或小写</p><p>~</p><p>复制游标所在的整行</p><p>yy（3yy 表示复制 3 行）</p><p>粘贴至光标后（下）</p><p>p</p><p>粘贴至光标前（上）</p><p>P</p><p>剪切</p><p>dd</p><p>交换上下行</p><p>ddp</p><p>替换整行，即删除游标所在行并进入插入模式</p><p>cc</p><p>撤销一次或 n 次操作</p><p>u{n}</p><p>撤销当前行的所有修改</p><p>U</p><p>恢复撤销操作</p><p>Ctrl+r</p><p>整行将向右缩进</p><p>&gt;&gt;</p><p>整行将向左退回</p><p>&lt;&lt;</p><p>若档案没有更动，则不储存离开，若档案已经被更动过，则储存后离开</p><p>ZZ</p><ul><li>输入模式</li></ul><p>在命令模式下按 i 或 a 键就进入了输入模式，在输入模式下，您可以正常的使用键盘按键对文本进行插入和删除等操作。</p><ul><li>底线命令模式</li></ul><p>在命令模式下按<code>:</code> 键就进入了底线命令模式，在底线命令模式中可以输入单个或多个字符的命令。</p><p>以下是底线命令模式中常用的快捷操作：</p><p>操作</p><p>命令</p><p>保存</p><p>:w</p><p>退出</p><p>:q</p><p>保存并退出</p><p>:wq（<code>:wq!</code> 表示强制保存退出）</p><p>将文件另存为其他文件名</p><p>:w new_filename</p><p>显示行号</p><p>:set nu</p><p>取消行号</p><p>:set nonu</p><p>使本行内容居中</p><p>:ce</p><p>使本行文本靠右</p><p>:ri</p><p>使本行内容靠左</p><p>:le</p><p>向光标之下寻找一个名称为 word 的字符串</p><p>:/word</p><p>向光标之上寻找一个字符串名称为 word 的字符串</p><p>:?word</p><p>重复前一个搜寻的动作</p><p>:n</p><p>从第一行到最后一行寻找 word1 字符串，并将该字符串取代为 word2</p><p><code>:1,$s/word1/word2/g</code> 或 <code>:%s/word1/word2/g</code></p><h3 id="使用示例展开目录"><a href="#使用示例展开目录" class="headerlink" title="使用示例展开目录"></a>使用示例展开目录</h3><p>在本示例将使用 vim 在文本文件中写入一首唐诗。</p><p>1. 新建一个文件并进入 vim 命令模式。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim 静夜思.txt</span><br></pre></td></tr></table></figure><p><img src="https://img.alicdn.com/tfs/TB1VZ4LHG61gK0jSZFlXXXDKFXa-911-414.png" alt="img" title="img"></p><p>2. 按下 <code>i</code> 进入输入模式，输入《静夜思》的诗名。</p><p><img src="https://img.alicdn.com/tfs/TB1v7BEHQL0gK0jSZFtXXXQCXXa-913-410.png" alt="img" title="img"></p><p>3. 按下 ECS 键回到命令模式，并输入底线命令<code>:ce</code>，使诗名居中。</p><p><img src="https://img.alicdn.com/tfs/TB1S58EHUz1gK0jSZLeXXb9kVXa-905-428.png" alt="img" title="img"></p><p>4. 按下 <code>o</code> 键换行并进入输入模式，输入第一行诗。</p><p><img src="https://img.alicdn.com/tfs/TB1Db8GHHr1gK0jSZFDXXb9yVXa-904-412.png" alt="img" title="img"></p><p>5. 按下 ECS 键回到命令模式，并输入底线命令<code>:ce</code>，使第一行诗居中。</p><p><img src="https://img.alicdn.com/tfs/TB1poNDHFY7gK0jSZKzXXaikpXa-902-415.png" alt="img" title="img"></p><p>6. 按下 <code>o</code> 键换行并进入输入模式，输入第二行诗。</p><p><img src="https://img.alicdn.com/tfs/TB1YGNHHKH2gK0jSZFEXXcqMpXa-907-412.png" alt="img" title="img"></p><p>7. 按下 ECS 键回到命令模式，并输入底线命令<code>:ce</code>，使第二行诗居中。</p><p><img src="https://img.alicdn.com/tfs/TB1HoNDHLb2gK0jSZK9XXaEgFXa-905-412.png" alt="img" title="img"></p><p>8. 在命令模式中执行底线命令<code>:wq</code> 离开 vim。</p><h2 id="文本文件查看命令展开目录"><a href="#文本文件查看命令展开目录" class="headerlink" title="文本文件查看命令展开目录"></a>文本文件查看命令展开目录</h2><h2 id="cat展开目录"><a href="#cat展开目录" class="headerlink" title="cat展开目录"></a>cat展开目录</h2><p>命令描述：cat 命令用于查看内容较少的纯文本文件。</p><p>命令格式：<code>cat [选项] [文件]</code>。</p><p>命令参数说明：</p><p>参数</p><p>说明</p><p>-n 或 –number</p><p>显示行号</p><p>-b 或 –number-nonblank</p><p>显示行号，但是不对空白行进行编号</p><p>-s 或 –squeeze-blank</p><p>当遇到有连续两行以上的空白行，只显示一行的空白行</p><p>命令使用示例：</p><p>1. 将一个自增序列写入 test.txt 文件中。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for i in $(seq 1 10); do echo $i &gt;&gt; test.txt ; done</span><br></pre></td></tr></table></figure><p>2. 查看文件内容。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat test.txt</span><br></pre></td></tr></table></figure><p>命令输出结果：</p><p><img src="https://img.alicdn.com/tfs/TB17S4FHHr1gK0jSZR0XXbP8XXa-612-258.png" alt="img" title="img"></p><p>3. 将文件内容清空。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat &#x2F;dev&#x2F;null &gt; test.txt</span><br></pre></td></tr></table></figure><p>4. 再次检查文件内容。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat test.txt</span><br></pre></td></tr></table></figure><p>命令输出结果：</p><p><img src="https://img.alicdn.com/tfs/TB1CQBEHQL0gK0jSZFtXXXQCXXa-570-69.png" alt="img" title="img"></p><h2 id="more展开目录"><a href="#more展开目录" class="headerlink" title="more展开目录"></a>more展开目录</h2><p>命令描述：more 命令从前向后分页显示文件内容。</p><p>常用操作命令：</p><p>操作</p><p>作用</p><p>Enter</p><p>向下 n 行，n 需要定义，默认为 1 行</p><p>Ctrl+F 或空格键（Space）</p><p>向下滚动一页</p><p>Ctrl+B</p><p>向上滚动一页</p><p>=</p><p>输出当前行的行号</p><p>! 命令</p><p>调用 Shell 执行命令</p><p>q</p><p>退出 more</p><p>命令使用示例：</p><p>从第 20 行开始分页查看系统日志文件 /var/log/messages。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">more +20 &#x2F;var&#x2F;log&#x2F;messages</span><br></pre></td></tr></table></figure><p>命令输出结果：</p><p><img src="https://img.alicdn.com/tfs/TB1xcXGHHr1gK0jSZFDXXb9yVXa-1408-937.png" alt="img" title="img"></p><h2 id="less展开目录"><a href="#less展开目录" class="headerlink" title="less展开目录"></a>less展开目录</h2><p>命令描述：less 命令可以对文件或其它输出进行分页显示，与 moe 命令相似，但使用 less 可以随意浏览文件，而 more 仅能向前移动，却不能向后移动。</p><p>命令格式：<code>less [参数] 文件</code> 。</p><p>命令参数说明：</p><p>参数</p><p>说明</p><p>-e</p><p>当文件显示结束后，自动离开</p><p>-m</p><p>显示类似 more 命令的百分比</p><p>-N</p><p>显示每行的行号</p><p>-s</p><p>显示连续空行为一行</p><p>命令常用操作：</p><p>快捷键</p><p>说明</p><p>/ 字符串</p><p>向下搜索字符串</p><p>? 字符串</p><p>向上搜索字符串</p><p>n</p><p>重复前一个搜索</p><p>N</p><p>反向重复前一个搜索</p><p>b 或 <code>pageup</code> 键</p><p>向上翻一页</p><p>空格键或 <code>pagedown</code> 键</p><p>向下翻一页</p><p>u</p><p>向前翻半页</p><p>d</p><p>向后翻半页</p><p>y</p><p>向前滚动一行</p><p>回车键</p><p>向后滚动一行</p><p>q</p><p>退出 less 命令</p><p>命令使用示例：</p><p>查看命令历史使用记录并通过 less 分页显示。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">history | less</span><br></pre></td></tr></table></figure><h2 id="head展开目录"><a href="#head展开目录" class="headerlink" title="head展开目录"></a>head展开目录</h2><p>命令描述：head 命令用于查看文件开头指定行数的内容。</p><p>命令格式：<code>head [参数] [文件]</code>。</p><p>命令参数说明：</p><p>参数</p><p>说明</p><p>-n [行数]</p><p>显示开头指定行的文件内容，默认为 10</p><p>-c [字符数]</p><p>显示开头指定个数的字符数</p><p>-q</p><p>不显示文件名字信息，适用于多个文件，多文件时默认会显示文件名</p><p>命令使用示例：</p><p>查看 /etc/passwd 文件的前 5 行内容。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">head -5 &#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure><p>命令输出结果：</p><p><img src="https://img.alicdn.com/tfs/TB13Pl7Xj39YK4jSZPcXXXrUFXa-590-153.png" alt="img" title="img"></p><h2 id="tail展开目录"><a href="#tail展开目录" class="headerlink" title="tail展开目录"></a>tail展开目录</h2><p>命令描述：tail 命令用于查看文档的后 N 行或持续刷新内容。</p><p>命令格式：<code>tail [参数] [文件]</code>。</p><p>命令参数说明：</p><p>参数</p><p>说明</p><p>-f</p><p>显示文件最新追加的内容</p><p>-q</p><p>当有多个文件参数时，不输出各个文件名</p><p>-v</p><p>当有多个文件参数时，总是输出各个文件名</p><p>-c [字节数]</p><p>显示文件的尾部 n 个字节内容</p><p>-n [行数]</p><p>显示文件的尾部 n 行内容</p><p>命令使用示例：</p><p>查看 /var/log/messages 系统日志文件的最新 10 行，并保持实时刷新。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tail -f -n 10 &#x2F;var&#x2F;log&#x2F;messages</span><br></pre></td></tr></table></figure><p><img src="https://img.alicdn.com/tfs/TB1Pj8JHUY1gK0jSZFCXXcwqXXa-970-240.png" alt="img" title="img"></p><p>按 <code>ctrl+c</code> 键退出文本实时查看界面。</p><h2 id="stat展开目录"><a href="#stat展开目录" class="headerlink" title="stat展开目录"></a>stat展开目录</h2><p>命令描述：用来显示文件的详细信息，包括 inode、atime、mtime、ctime 等。</p><p>命令使用示例：</p><p>查看 /etc/passwd 文件的详细信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">stat &#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure><p>命令输出结果：</p><p><img src="https://img.alicdn.com/tfs/TB1cI8LHG61gK0jSZFlXXXDKFXa-628-195.png" alt="img" title="img"></p><h2 id="wc展开目录"><a href="#wc展开目录" class="headerlink" title="wc展开目录"></a>wc展开目录</h2><p>命令描述：wc 命令用于统计指定文本的行数、字数、字节数。</p><p>命令格式：<code>wc [参数] [文件]</code>。</p><p>命令参数说明：</p><p>参数</p><p>说明</p><p>-l</p><p>只显示行数</p><p>-w</p><p>只显示单词数</p><p>-c</p><p>只显示字节数</p><p>命令使用示例：</p><p>统计 /etc/passwd 文件的行数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wc -l &#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure><p>命令输出结果：</p><p><img src="https://img.alicdn.com/tfs/TB1E2FKHND1gK0jSZFyXXciOVXa-486-49.png" alt="img" title="img"></p><h2 id="file展开目录"><a href="#file展开目录" class="headerlink" title="file展开目录"></a>file展开目录</h2><p>命令描述： file 命令用于辨识文件类型。</p><p>命令格式：<code>file [参数] [文件]</code>。</p><p>命令参数说明：</p><p>参数</p><p>说明</p><p>-b</p><p>列出辨识结果时，不显示文件名称</p><p>-c</p><p>详细显示指令执行过程，便于排错或分析程序执行的情形</p><p>-f [文件]</p><p>指定名称文件，其内容有一个或多个文件名称时，让 file 依序辨识这些文件，格式为每列一个文件名称</p><p>-L</p><p>直接显示符号连接所指向的文件类别</p><p>命令使用示例：</p><p>查看 /var/log/messages 文件的文件类型。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file &#x2F;var&#x2F;log&#x2F;messages</span><br></pre></td></tr></table></figure><p>命令输出结果：</p><p><img src="https://img.alicdn.com/tfs/TB1aE0BHGL7gK0jSZFBXXXZZpXa-533-49.png" alt="img" title="img"></p><h2 id="diff展开目录"><a href="#diff展开目录" class="headerlink" title="diff展开目录"></a>diff展开目录</h2><p>命令描述：diff 命令用于比较文件的差异。</p><p>命令使用示例：</p><p>1. 构造两个相似的文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo -e &#39;第一行\n第二行\n我是log1第3行\n第四行\n第五行\n第六行&#39; &gt; 1.log</span><br><span class="line">echo -e &#39;第一行\n第二行\n我是log2第3行\n第四行&#39; &gt; 2.log</span><br></pre></td></tr></table></figure><p>2. 分别查看两个文件<img src="https://img.alicdn.com/tfs/TB1KBxLHHj1gK0jSZFuXXcrHpXa-758-318.png" alt="img"></p><p>3. 使用 diff 查看两个文件的差异</p><p><img src="https://img.alicdn.com/tfs/TB1dqRHHKH2gK0jSZFEXXcqMpXa-455-190.png" alt="img" title="img"></p><p>对比结果中的 3c3 表示两个文件在第 3 行有不同，5,6d4 表示 2.log 文件相比 1.log 文件在第 4 行处开始少了 1.log 文件的第 5 和第 6 行。</p><p>文本文件处理命令</p><h2 id="grep展开目录"><a href="#grep展开目录" class="headerlink" title="grep展开目录"></a>grep展开目录</h2><p>命令描述：grep 命令用于查找文件里符合条件的字符串。</p><p>grep 全称是 Global Regular Expression Print，表示全局正则表达式版本，它能使用正则表达式搜索文本，并把匹配的行打印出来。</p><p>在 Shell 脚本中，grep 通过返回一个状态值来表示搜索的状态：</p><ul><li>0：匹配成功。</li><li>1：匹配失败。</li><li>2：搜索的文件不存在。</li></ul><p>命令格式：<code>grep [参数] [正则表达式] [文件]</code>。</p><p>命令常用参数说明：</p><p>参数</p><p>说明</p><p>-c 或 –count</p><p>计算符合样式的列数</p><p>-d recurse 或 - r</p><p>指定要查找的是目录而非文件</p><p>-e [范本样式]</p><p>指定字符串做为查找文件内容的样式</p><p>-E 或 –extended-regexp</p><p>将样式为延伸的正则表达式来使用</p><p>-F 或 –fixed-regexp</p><p>将样式视为固定字符串的列表</p><p>-G 或 –basic-regexp</p><p>将样式视为普通的表示法来使用</p><p>-i 或 –ignore-case</p><p>忽略字符大小写的差别</p><p>-n 或 –line-number</p><p>在显示符合样式的那一行之前，标示出该行的列数编号</p><p>-v 或 –revert-match</p><p>显示不包含匹配文本的所有行</p><p>命令使用示例：</p><ul><li>查看 sshd 服务配置文件中监听端口配置所在行编号。<code>grep -n Port /etc/ssh/ssh_config</code></li></ul><p>命令输出结果：</p><ul><li>查询字符串在文本中出现的行数。<code>grep -c localhost /etc/hosts</code></li></ul><p>命令输出结果：</p><ul><li>反向查找，不显示符合条件的行。<code>ps -ef | grep sshd</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep -v grep | grep sshd</span><br></pre></td></tr></table></figure><p>命令输出结果：</p><p><img src="https://img.alicdn.com/tfs/TB1GVNGHUT1gK0jSZFrXXcNCXXa-668-149.png" alt="img" title="img"></p><ul><li>以递归的方式查找目录下含有关键字的文件。<code>grep -r ***.sh** /etc</code></li></ul><p>命令输出结果：</p><ul><li>使用正则表达式匹配 httpd 配置文件中异常状态码响应的相关配置。<code>grep &#39;ntp[0-9].aliyun.com&#39; /etc/ntp.conf</code></li></ul><p>命令输出结果：</p><h2 id="sed展开目录"><a href="#sed展开目录" class="headerlink" title="sed展开目录"></a>sed展开目录</h2><p>命令描述：sed 是一种流编辑器，它是文本处理中非常中的工具，能够完美的配合正则表达式使用。</p><p>1. 处理时，把当前处理的行存储在临时缓冲区中，称为模式空间（pattern space）。<br>2. 接着用 sed 命令处理缓冲区中的内容，处理完成后，把缓冲区的内容送往屏幕。<br>3. 接着处理下一行，这样不断重复，直到文件末尾。</p><p>注意：</p><ul><li>sed 命令不会修改原文件，例如删除命令只表示某些行不打印输出，而不是从原文件中删去。</li><li>如果要改变源文件，需要使用 - i 选项。</li></ul><p>命令格式：<code>sed [参数] [动作] [文件]</code>。</p><p>参数说明：</p><p>参数</p><p>说明</p><p>-e [script]</p><p>执行多个 script</p><p>-f [script 文件]</p><p>执行指定 script 文件</p><p>-n</p><p>仅显示 script 处理后的结果</p><p>-i</p><p>输出到原文件，静默执行（修改原文件）</p><p>动作说明：</p><p>动作</p><p>说明</p><p>a</p><p>在行后面增加内容</p><p>c</p><p>替换行</p><p>d</p><p>删除行</p><p>i</p><p>在行前面插入</p><p>p</p><p>打印相关的行</p><p>s</p><p>替换内容</p><p>命令使用示例：</p><ul><li>删除第 3 行到最后一行内容。<code>sed &#39;3,$d&#39; /etc/passwd</code></li></ul><p>命令输出结果：</p><ul><li>在最后一行新增行。<code>sed &#39;$a admin:x:1000:1000:admin:/home/admin:/bin/bash&#39; /etc/passwd</code></li></ul><p>命令输出结果：</p><ul><li>替换内容。<code>sed &#39;s/SELINUX=disabled/SELINUX=enforcing/&#39; /etc/selinux/config</code></li></ul><p>命令输出结果：</p><ul><li>替换行。<code>sed &#39;1c abcdefg&#39; /etc/passwd</code></li></ul><p>命令输出结果：</p><h2 id="awk展开目录"><a href="#awk展开目录" class="headerlink" title="awk展开目录"></a>awk展开目录</h2><p>命令描述：和 sed 命令类似，awk 命令也是逐行扫描文件（从第 1 行到最后一行），寻找含有目标文本的行，如果匹配成功，则会在该行上执行用户想要的操作；反之，则不对行做任何处理。</p><p>命令格式：<code>awk [参数] [脚本] [文件]</code>。</p><p>参数说明：</p><p>参数</p><p>说明</p><p>-F fs</p><p>指定以 fs 作为输入行的分隔符，awk 命令默认分隔符为空格或制表符</p><p>-f file</p><p>读取 awk 脚本</p><p>-v val=val</p><p>在执行处理过程之前，设置一个变量 var，并给其设置初始值为 val</p><p>内置变量：</p><p>变量</p><p>用途</p><p>FS</p><p>字段分隔符</p><p>$n</p><p>指定分隔的第 n 个字段，如 $1、$3 分别表示第 1、第三列</p><p>$0</p><p>当前读入的整行文本内容</p><p>NF</p><p>记录当前处理行的字段个数（列数）</p><p>NR</p><p>记录当前已读入的行数</p><p>FNR</p><p>当前行在源文件中的行号</p><p>awk 中还可以指定脚本命令的运行时机。默认情况下，awk 会从输入中读取一行文本，然后针对该行的数据执行程序脚本，但有时可能需要在处理数据前运行一些脚本命令，这就需要使用 BEGIN 关键字，BEGIN 会在 awsk 读取数据前强制执行该关键字后指定的脚本命令。</p><p>和 BEGIN 关键字相对应，END 关键字允许我们指定一些脚本命令，awk 会在读完数据后执行它们。</p><p>命令使用示例：</p><ul><li>查看本机 IP 地址。<code>ifconfig eth0 |awk &#39;/inet/&#123;print $2&#125;&#39;</code></li></ul><p>命令输出结果：</p><ul><li>查看本机剩余磁盘容量。<code>df -h |awk &#39;/\/$/&#123;print $4&#125;&#39;</code></li></ul><p>命令输出结果：</p><ul><li>统计系统用户个数。<code>awk -F: &#39;$3&lt;1000&#123;x++&#125; END&#123;print x&#125;&#39; /etc/passwd</code></li></ul><p>命令输出结果：</p><ul><li>输出其中登录 Shell 不以 nologin 结尾（对第 7 个字段做！～反向匹配）的用户名、登录 Shell 信息。<code>awk -F: &#39;$7!~/nologin$/&#123;print $1,$7&#125;&#39; /etc/passwd</code></li></ul><p>命令输出结果：</p><ul><li>输出 /etc/passwd 文件中前三行记录的用户名和用户 uid。<code>head -3 /etc/passwd | awk &#39;**BEGIN**&#123;**FS**=&quot;:&quot;;print &quot;name\tuid&quot;&#125;&#123;print $1,&quot;\t&quot;$3&#125;**END**&#123;print &quot;sum lines &quot;**NR**&#125;&#39;</code></li></ul><p>命令输出结果：</p><ul><li>查看 tcp 连接数。<code>netstat -na | awk &#39;/^tcp/ &#123;++S[$NF]&#125; END &#123;for(a in S) print a, S[a]&#125;&#39;</code></li></ul><p>命令输出结果：</p><ul><li>关闭指定服务的所有的进程。<code>ps -ef | **grep** httpd | awk &#123;&#39;print $2&#39;&#125; | xargs **kill** -9</code></li></ul><h2 id="cut展开目录"><a href="#cut展开目录" class="headerlink" title="cut展开目录"></a>cut展开目录</h2><p>命令描述：cut 命令主要用来切割字符串，可以对输入的数据进行切割然后输出。</p><p>命令格式：<code>cut [参数] [文件]</code>。</p><p>参数说明：</p><p>参数</p><p>说明</p><p>-b</p><p>以字节为单位进行分割</p><p>-c</p><p>以字符为单位进行分割</p><p>-d</p><p>自定义分隔符，默认为制表符</p><p>命令使用示例：</p><ul><li>按字节进行切割。</li></ul><p><img src="https://img.alicdn.com/tfs/TB1ulVKHQT2gK0jSZFkXXcIQFXa-514-109.png" alt="img" title="img"></p><ul><li>按字符进行切割。</li></ul><p><img src="https://img.alicdn.com/tfs/TB1HqRHHKH2gK0jSZFEXXcqMpXa-494-150.png" alt="img" title="img"></p><ul><li>按指定字符进行切割。</li></ul><p><img src="https://img.alicdn.com/tfs/TB17VNGHUT1gK0jSZFrXXcNCXXa-516-107.png" alt="img" title="img"></p><h2 id="tr展开目录"><a href="#tr展开目录" class="headerlink" title="tr展开目录"></a>tr展开目录</h2><p>命令描述：tr 命令用于对来自标准输入的字符进行替换、压缩和删除。</p><p>命令格式：<code>tr [参数] [文本]</code>。</p><p>参数说明：</p><p>参数</p><p>说明</p><p>-c</p><p>反选指定字符</p><p>-d</p><p>删除指定字符</p><p>-s</p><p>将重复的字符缩减成一个字符</p><p>-t [第一字符集] [第二字符集]</p><p>删除第一字符集较第二字符集多出的字符，使两个字符集长度相等</p><p>命令使用示例：</p><ul><li>将输入字符由大写转换为小写。<code>echo &quot;HELLO WORLD&quot; | tr &#39;A-Z&#39; &#39;a-z&#39;</code></li></ul><p>命令输出结果：</p><ul><li>删除字符。<code>echo &quot;hello 123 world 456&quot; | tr -d &#39;0-9&#39;</code></li></ul><p>命令输出结果：</p><ul><li>压缩字符。<code>echo &quot;thissss is a text linnnnnnne.&quot; | tr -s &#39; sn&#39;</code></li></ul><p>命令输出结果：</p><ul><li>产生随机密码。<code>cat /dev/urandom | tr -dc a-zA-Z0-9 | head -c 13</code></li></ul><p>命令输出结果：</p><ul><li><img src="https://img.alicdn.com/tfs/TB1kGFGHQP2gK0jSZPxXXacQpXa-573-69.png" alt="img"></li></ul><h1 id="Linux-指令入门-系统管理展开目录"><a href="#Linux-指令入门-系统管理展开目录" class="headerlink" title="Linux 指令入门 - 系统管理展开目录"></a>Linux 指令入门 - 系统管理展开目录</h1><h2 id="连接-ECS-服务器展开目录-1"><a href="#连接-ECS-服务器展开目录-1" class="headerlink" title="连接 ECS 服务器展开目录"></a>连接 ECS 服务器展开目录</h2><p>1. 打开系统自带的终端工具。</p><ul><li>Windows：CMD 或 Powershell。</li><li>MAC：Terminal。</li></ul><p>Windows 用户请检查系统中是否安装有 ssh 工具。检查方法：</p><p>1）在终端中输入命令 ssh -V。</p><p>2）出现如下结果说明已安装。</p><p><img src="https://img.alicdn.com/tfs/TB1bF9nc5cKOu4jSZKbXXc19XXa-336-48.png" alt="img" title="img"></p><p>3）否则请下载安装 <a href="https://www.mls-software.com/files/setupssh-8.2p1-1.exe">OpenSSH。</a></p><p>2. 在终端中输入连接命令 ssh [username]@[ipaddress]。您需要将其中的 username 和 ipaddress 替换为第 1 小节中创建的 ECS 服务器的登录名和公网地址。例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh root@123.123.123.123</span><br></pre></td></tr></table></figure><p><img src="https://img.alicdn.com/tfs/TB1OlyaHXT7gK0jSZFpXXaTkpXa-290-257.jpg" alt="img" title="img"></p><p>命令显示结果如下：</p><p><img src="https://img.alicdn.com/tfs/TB1mWdXc5cKOu4jSZKbXXc19XXa-644-228.png" alt="img" title="img"></p><p>3. 输入 yes。</p><p>4. 同意继续后将会提示输入登录密码。 密码为已创建的云服务的 ECS 的登录密码。</p><p><img src="https://img.alicdn.com/tfs/TB1FzjSHqL7gK0jSZFBXXXZZpXa-637-75.png" alt="img" title="img"></p><p>登录成功后会显示如下信息。</p><p><img src="https://img.alicdn.com/tfs/TB1iRbWHAP2gK0jSZPxXXacQpXa-516-157.png" alt="img" title="img"></p><h2 id="常用系统工作命令展开目录"><a href="#常用系统工作命令展开目录" class="headerlink" title="常用系统工作命令展开目录"></a>常用系统工作命令展开目录</h2><h2 id="echo展开目录"><a href="#echo展开目录" class="headerlink" title="echo展开目录"></a>echo展开目录</h2><p>命令描述：echo 命令用于在终端输出字符串或变量提取后的值。</p><p>命令格式：<code>echo [字符串 | $变量]</code>。</p><p>命令用法示例：</p><ul><li>显示普通字符串<code>echo &quot;Hello World&quot;</code></li><li>显示变量</li></ul><p>首先在 shell 环境中定义一个临时变量 name。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export name&#x3D;&quot;Tom&quot;</span><br></pre></td></tr></table></figure><p>使用 echo 命令将变量 name 的值显示到终端。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo $name</span><br></pre></td></tr></table></figure><p>输出结果：</p><p><img src="https://img.alicdn.com/tfs/TB1P6NMHHH1gK0jSZFwXXc7aXXa-506-89.png" alt="img" title="img"></p><ul><li>显示结果定向至文件</li></ul><p>以下命令会将文本 <code>This is a test text.</code> 输出重定向到文件 test.txt 中，如果文件已存在，将会覆盖文件内容，如果不存在则创建。其中 <code>&gt;</code> 符号表示输出重定向。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;This is a test text.&quot; &gt; test.txt</span><br></pre></td></tr></table></figure><p>如果您希望将文本追加到文件内容最后，而不是覆盖它，请使用 <code>&gt;&gt;</code> 输出追加重定向符号。</p><ul><li>显示命令执行结果</li></ul><p>以下命令将会在终端显示当前的工作路径。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &#96;pwd&#96;</span><br></pre></td></tr></table></figure><p>注意：pwd 命令是用一对反引号（``）包裹，而不是一对单引号（’’）。</p><p>使用 <code>$(command)</code> 形式可以达到相同效果。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo $(pwd)</span><br></pre></td></tr></table></figure><p>输出结果：</p><p><img src="https://img.alicdn.com/tfs/TB1ntFMHNv1gK0jSZFFXXb0sXXa-513-154.png" alt="img" title="img"></p><h2 id="date展开目录"><a href="#date展开目录" class="headerlink" title="date展开目录"></a>date展开目录</h2><p>命令描述：date 命令用于显示和设置系统的时间和日期。</p><p>命令格式：<code>date [选项] [+格式]</code>。</p><p>其中，时间格式的部分控制字符解释如下：</p><p>字符</p><p>说明</p><p>%a</p><p>当地时间的星期名缩写（例如： 日，代表星期日）</p><p>%A</p><p>当地时间的星期名全称 （例如：星期日）</p><p>%b</p><p>当地时间的月名缩写 （例如：一，代表一月）</p><p>%B</p><p>当地时间的月名全称 （例如：一月）</p><p>%c</p><p>当地时间的日期和时间 （例如：2005 年 3 月 3 日 星期四 23:05:25）</p><p>%C</p><p>世纪；比如 % Y，通常为省略当前年份的后两位数字（例如：20）</p><p>%d</p><p>按月计的日期（例如：01）</p><p>%D</p><p>按月计的日期；等于 % m/% d/% y</p><p>%F</p><p>完整日期格式，等价于 % Y-% m-% d</p><p>%j</p><p>按年计的日期（001-366）</p><p>%p</p><p>按年计的日期（001-366）</p><p>%r</p><p>当地时间下的 12 小时时钟时间 （例如：11:11:04 下午）</p><p>%R</p><p>24 小时时间的时和分，等价于 % H:% M</p><p>%s</p><p>自 UTC 时间 1970-01-01 00:00:00 以来所经过的秒数</p><p>%T</p><p>时间，等于 % H:% M:% S</p><p>%U</p><p>一年中的第几周，以周日为每星期第一天（00-53）</p><p>%x</p><p>当地时间下的日期描述 （例如：12/31/99）</p><p>%X</p><p>当地时间下的时间描述 （例如：23:13:48）</p><p>%w</p><p>一星期中的第几日（0-6），0 代表周一</p><p>%W</p><p>一星期中的第几日（0-6），0 代表周一</p><p>命令用法示例：</p><ul><li>按照默认格式查看当前系统时间<code>date</code></li></ul><p>输出结果：</p><p><img src="https://img.alicdn.com/tfs/TB1EXbMjcKfxu4jSZPfXXb3dXXa-476-46.png" alt="img" title="img"></p><ul><li>按照指定格式查看当前系统时间<code>date &quot;+%Y-%m-%d %H:%M:%S&quot;</code></li></ul><p>输出结果：</p><p><img src="https://img.alicdn.com/tfs/TB1tv9Yc5cKOu4jSZKbXXc19XXa-494-48.png" alt="img" title="img"></p><ul><li>查看今天是当年中的第几天<code>date &quot;+%j&quot;</code></li></ul><p>输出结果：</p><p><img src="https://img.alicdn.com/tfs/TB1Qq4OHKH2gK0jSZJnXXaT1FXa-492-46.png" alt="img" title="img"></p><ul><li>将系统的当前时间设置为 2020 年 02 月 20 日 20 点 20 分 20 秒<code>date -s &quot;20200220 20:20:20&quot;</code></li></ul><p>输出结果：</p><p><img src="https://img.alicdn.com/tfs/TB1sUJGHFY7gK0jSZKzXXaikpXa-576-47.png" alt="img" title="img"></p><ul><li>校正系统时间，与网络时间同步<ol><li>安装 ntp 校时工具</li></ol></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install ntp</span><br></pre></td></tr></table></figure><ol><li>用 ntpdate 从时间服务器更新时间</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ntpdate time.nist.gov</span><br></pre></td></tr></table></figure><p>输出结果：</p><p><img src="https://img.alicdn.com/tfs/TB11jd_Xj39YK4jSZPcXXXrUFXa-728-51.png" alt="img" title="img"></p><h2 id="wget展开目录"><a href="#wget展开目录" class="headerlink" title="wget展开目录"></a>wget展开目录</h2><p>命令描述：在终端中下载文件。</p><p>命令格式：<code>wget [参数] 下载地址</code>。</p><p>参数说明：</p><p>参数</p><p>作用</p><p>-b</p><p>后台下载</p><p>-P</p><p>下载到指定目录</p><p>-t</p><p>最大重试次数</p><p>-c</p><p>断点续传</p><p>-p</p><p>下载页面内所有资源，包括图片、视频等</p><p>-r</p><p>递归下载</p><p>命令使用示例：</p><p>下载一张图片到路径 /root/static/img/ 中，<code>-p</code> 参数默认值为当前路径，如果指定路径不存在会自动创建。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -P &#x2F;root&#x2F;static&#x2F;img&#x2F; http:&#x2F;&#x2F;img.alicdn.com&#x2F;tfs&#x2F;TB1.R._t7L0gK0jSZFxXXXWHVXa-2666-1500.png</span><br></pre></td></tr></table></figure><p>输出结果：</p><p><img src="https://img.alicdn.com/tfs/TB1vQxHHFT7gK0jSZFpXXaTkpXa-1740-257.png" alt="img" title="img"></p><h2 id="ps展开目录"><a href="#ps展开目录" class="headerlink" title="ps展开目录"></a>ps展开目录</h2><p>命令描述：ps 命令用于查看系统中的进程状态。</p><p>命令格式：<code>ps [参数]</code>。</p><p>命令参数说明：</p><p>参数</p><p>作用</p><p>-a</p><p>显示现行终端机下的所有程序，包括其他用户的程序</p><p>-u</p><p>以用户为主的格式来显示程序状况</p><p>-x</p><p>显示没有控制终端的进程，同时显示各个命令的具体路径</p><p>-e</p><p>列出程序时，显示每个程序所使用的环境变量</p><p>-f</p><p>显示当前所有的进程</p><p>-t</p><p>指定终端机编号，并列出属于该终端机的程序的状况</p><p>命令使用示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | grep sshd</span><br></pre></td></tr></table></figure><p>输出结果：</p><p><img src="https://img.alicdn.com/tfs/TB1PWHcaepyVu4jSZFhXXbBpVXa-588-93.png" alt="img" title="img"></p><h2 id="top展开目录"><a href="#top展开目录" class="headerlink" title="top展开目录"></a>top展开目录</h2><p>命令描述：top 命令动态地监视进程活动与系统负载等信息。</p><p>命令使用示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top</span><br></pre></td></tr></table></figure><p>输出结果：</p><p><img src="https://img.alicdn.com/tfs/TB1RGHcaepyVu4jSZFhXXbBpVXa-700-345.png" alt="img" title="img"></p><p>命令输出参数解释：</p><p>以上命令输出视图中分为两个区域，一个统计信息区，一个进程信息区。</p><ul><li>统计信息区<ul><li>第一行信息依次为：系统时间、运行时间、登录终端数、系统负载（三个数值分别为 1 分钟、5 分钟、15 分钟内的平均值，数值越小意味着负载越低）。</li><li>第二行信息依次为：进程总数、运行中的进程数、睡眠中的进程数、停止的进程数、僵死的进程数。</li><li>第三行信息依次为：用户占用资源百分比、系统内核占用资源百分比、改变过优先级的进程资源百分比、空闲的资源百分比等。</li><li>第四行信息依次为：物理内存总量、内存使用量、内存空闲量、作为内核缓存的内存量。</li><li>第五行信息依次为：虚拟内存总量、虚拟内存使用量、虚拟内存空闲量、预加载内存量。</li></ul></li><li>进程信息区</li></ul><table><thead><tr><th align="left">列名</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left">PID</td><td align="left">进程 ID</td></tr><tr><td align="left">USER</td><td align="left">进程所有者的用户名</td></tr><tr><td align="left">PR</td><td align="left">进程优先级</td></tr><tr><td align="left">NI</td><td align="left">nice 值。负值表示高优先级，正值表示低优先级</td></tr><tr><td align="left">VIRT</td><td align="left">进程使用的虚拟内存总量，单位 kb</td></tr><tr><td align="left">RES</td><td align="left">进程使用的、未被换出的物理内存大小，单位 kb</td></tr><tr><td align="left">SHR</td><td align="left">共享内存大小，单位 kb</td></tr><tr><td align="left">S</td><td align="left">进程状态 D：不可中断的睡眠状态 R：正在运行 S：睡眠 T：停止 Z：僵尸进程</td></tr><tr><td align="left">% CPU</td><td align="left">上次更新到现在的 CPU 时间占用百分比</td></tr><tr><td align="left">% MEM</td><td align="left">进程使用的物理内存百分比</td></tr><tr><td align="left">TIME+</td><td align="left">进程使用的 CPU 时间总计，单位 1/100 秒</td></tr><tr><td align="left">COMMAND</td><td align="left">命令名</td></tr></tbody></table><p>按 q 键退出监控页面。</p><h2 id="pidof展开目录"><a href="#pidof展开目录" class="headerlink" title="pidof展开目录"></a>pidof展开目录</h2><p>命令描述：pidof 命令用于查询指定服务进程的 PID 值。</p><p>命令格式：<code>pidof [服务名称]</code>。</p><p>命令参数说明：</p><p>参数</p><p>说明</p><p>-s</p><p>仅返回一个进程号</p><p>-c</p><p>只显示运行在 root 目录下的进程，这个选项只对 root 用户有效</p><p>-o</p><p>忽略指定进程号的进程</p><p>-x</p><p>显示由脚本开启的进程</p><p>命令使用示例：</p><p>查询出 crond 服务下的所有进程 ID。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pidof crond</span><br></pre></td></tr></table></figure><p>输出结果：</p><p><img src="https://img.alicdn.com/tfs/TB1iG8KHQL0gK0jSZFAXXcA9pXa-486-44.png" alt="img" title="img"></p><h2 id="kill展开目录"><a href="#kill展开目录" class="headerlink" title="kill展开目录"></a>kill展开目录</h2><p>命令描述：kill 命令用于终止指定 PID 的服务进程。</p><p>kill 可将指定的信息送至程序。预设的信息为 <code>SIGTERM(15)</code>，可将指定程序终止。若仍无法终止该程序，可使用 <code>SIGKILL(9)</code> 信息尝试强制删除程序。</p><p>命令格式：<code>kill [参数] [进程PID]</code>。</p><p>命令使用示例：</p><p>删除 pid 为 1247 的进程。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kill -9 1247</span><br></pre></td></tr></table></figure><h2 id="killall展开目录"><a href="#killall展开目录" class="headerlink" title="killall展开目录"></a>killall展开目录</h2><p>命令描述：killall 命令用于终止指定名称的服务对应的全部进程。</p><p>命令格式：<code>killall [进程名称]</code>。</p><p>命令使用示例：</p><p>删除 crond 服务下的所有进程。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">killall crond</span><br></pre></td></tr></table></figure><h2 id="reboot展开目录"><a href="#reboot展开目录" class="headerlink" title="reboot展开目录"></a>reboot展开目录</h2><p>命令描述：reboot 命令用来重启系统。</p><p>命令格式：<code>reboot [-n] [-w] [-d] [-f] [-i]</code>。</p><p>命令参数说明：</p><ul><li>-n：保存数据后再重新启动系统。</li><li>-w：仅做测试，并不是真的将系统重新开机，只会把重新开机的数据写入记录文件 /var/log/wtmp。</li><li>-d：重新启动时不把数据写入记录文件 /var/tmp/wtmp。</li><li>-f：强制重新开机，不调用 shutdown 指令的功能。</li><li>-i：关闭网络设置之后再重新启动系统。</li></ul><p>命令使用示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><h2 id="poweroff展开目录"><a href="#poweroff展开目录" class="headerlink" title="poweroff展开目录"></a>poweroff展开目录</h2><p>命令描述：poweroff 命令用来关闭系统。</p><p>命令使用示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">poweroff</span><br></pre></td></tr></table></figure><h2 id="系统状态检测命令展开目录"><a href="#系统状态检测命令展开目录" class="headerlink" title="系统状态检测命令展开目录"></a>系统状态检测命令展开目录</h2><h2 id="ifconfig展开目录"><a href="#ifconfig展开目录" class="headerlink" title="ifconfig展开目录"></a>ifconfig展开目录</h2><p>命令描述：ifconfig 命令用于获取网卡配置与网络状态等信息。</p><p>命令示例：</p><p><img src="https://img.alicdn.com/tfs/TB1L3dIHUH1gK0jSZSyXXXtlpXa-634-351.png" alt="img" title="img"></p><p>命令输出说明：</p><ul><li>第一部分的第一行显示网卡状态信息。<ul><li>eth0 表示第一块网卡。</li><li>UP 代表网卡开启状态。</li><li>RUNNING 代表网卡的网线被接上。</li><li>MULTICAST 表示支持组播。</li></ul></li><li>第二行显示网卡的网络信息。<ul><li>inet（IP 地址）：172.16.132.195。</li><li>broadcast（广播地址）：172.16.143.255。</li><li>netmask（掩码地址）：255.255.240.0。</li></ul></li><li>RX 表示接收数据包的情况，TX 表示发送数据包的情况。</li><li>lo 表示主机的回环网卡，是一种特殊的网络接口，不与任何实际设备连接，而是完全由软件实现。与回环地址（127.0.0.0/8 或 ::1/128）不同，回环网卡对系统显示为一块硬件。任何发送到该网卡上的数据都将立刻被同一网卡接收到。</li></ul><h2 id="uname展开目录"><a href="#uname展开目录" class="headerlink" title="uname展开目录"></a>uname展开目录</h2><p>命令描述：uname 命令用于查看系统内核与系统版本等信息。</p><p>命令语法：<code>uname [-amnrsv][--help][--version]</code></p><p>命令使用示例：</p><ul><li>显示系统信息。<code>uname -a</code></li></ul><p>命令输出结果：</p><ul><li>显示当前系统的硬件架构。<code>uname -i</code></li></ul><p>命令输出结果：</p><ul><li>显示操作系统发行编号。<code>uname -r</code></li></ul><p>命令输出结果：</p><ul><li>显示操作系统名称。<code>uname -s</code></li></ul><p>命令输出结果：</p><ul><li>显示主机名称。<code>uname -n</code></li></ul><p>命令输出结果：</p><h2 id="uptime展开目录"><a href="#uptime展开目录" class="headerlink" title="uptime展开目录"></a>uptime展开目录</h2><p>命令描述：uptime 用于查看系统的负载信息。</p><p>命令使用示例：</p><p><img src="https://img.alicdn.com/tfs/TB13YVJHHr1gK0jSZFDXXb9yVXa-606-50.png" alt="img" title="img"></p><p>命令输出说明：</p><p>负载信息</p><p>命令输出值</p><p>当前服务器时间</p><p>14:20:27</p><p>当前服务器运行时长</p><p>2 min</p><p>当前用户数</p><p>2 users</p><p>当前负载情况</p><p><code>load average: 0.03, 0.04, 0.02</code>（分别取 1min，5min，15min 的均值）</p><h2 id="free展开目录"><a href="#free展开目录" class="headerlink" title="free展开目录"></a>free展开目录</h2><p>命令描述：free 用于显示当前系统中内存的使用量信息。</p><p>命令语法：<code>free [-bkmotV][-s &lt;间隔秒数&gt;]</code>。</p><p>命令参数说明：</p><p>参数</p><p>说明</p><p>-b</p><p>以 Byte 为单位显示内存使用情况</p><p>-k</p><p>以 KB 为单位显示内存使用情况</p><p>-m</p><p>以 MB 为单位显示内存使用情况</p><p>-h</p><p>以合适的单位显示内存使用情况，最大为三位数，自动计算对应的单位值。</p><p>命令使用示例：</p><p><img src="https://img.alicdn.com/tfs/TB1xm4IHHr1gK0jSZR0XXbP8XXa-747-88.png" alt="img" title="img"></p><p>命令输出说明：</p><p>参数</p><p>说明</p><p>total</p><p>物理内存总数</p><p>used</p><p>已经使用的内存数</p><p>free</p><p>空间的内存数</p><p>share</p><p>多个进程共享的内存总额</p><p>buff/cache</p><p>应用使用内存数</p><p>available</p><p>可用的内存数</p><p>Swap</p><p>虚拟内存（阿里云 ECS 服务器默认不开启虚拟内存）</p><h2 id="who展开目录"><a href="#who展开目录" class="headerlink" title="who展开目录"></a>who展开目录</h2><p>命令描述：who 命令显示关于当前在本地系统上的所有用户的信息。</p><p>命令使用示例：</p><ul><li>显示当前登录系统的用户</li></ul><p><img src="https://img.alicdn.com/tfs/TB1sTdKHQY2gK0jSZFgXXc5OFXa-527-69.png" alt="img" title="img"></p><ul><li>显示用户登录来源</li></ul><p><img src="https://img.alicdn.com/tfs/TB1phBIHKT2gK0jSZFvXXXnFXXa-524-94.png" alt="img" title="img"></p><ul><li>只显示当前用户</li></ul><p><img src="https://img.alicdn.com/tfs/TB1fMFKHO_1gK0jSZFqXXcpaXXa-510-67.png" alt="img" title="img"></p><ul><li>精简模式显示</li></ul><h2 id="展开目录-4"><a href="#展开目录-4" class="headerlink" title="展开目录"></a><img src="https://img.alicdn.com/tfs/TB1saBJHQP2gK0jSZPxXXacQpXa-452-65.png" alt="img">展开目录</h2><h2 id="last展开目录"><a href="#last展开目录" class="headerlink" title="last展开目录"></a>last展开目录</h2><p>命令描述： last 命令用于显示用户最近登录信息。</p><p>命令使用示例：</p><p><img src="https://img.alicdn.com/tfs/TB107xHHQL0gK0jSZFtXXXQCXXa-645-215.png" alt="img" title="img"></p><p>由于这些信息都是以日志文件的形式保存在系统中，黑客可以很容易地对内容进行篡改，所以该命令输出的信息并不能作为服务器是否被入侵的依据。</p><h2 id="history展开目录"><a href="#history展开目录" class="headerlink" title="history展开目录"></a>history展开目录</h2><p>命令描述：history 命令用于显示历史执行过的命令。</p><p>bash 默认记录 1000 条执行过的历史命令，被记录在～/.bash_history 文件中。</p><p>命令使用示例：</p><ul><li>显示最新 10 条执行过的命令。</li></ul><p><img src="https://img.alicdn.com/tfs/TB1_PNMHHH1gK0jSZFwXXc7aXXa-592-238.png" alt="img" title="img"></p><ul><li>清除历史记录。<code>history -c</code></li></ul><h1 id="基于-ECS-搭建云上博客展开目录"><a href="#基于-ECS-搭建云上博客展开目录" class="headerlink" title="基于 ECS 搭建云上博客展开目录"></a>基于 ECS 搭建云上博客展开目录</h1><h2 id="连接-ECS-服务器展开目录-2"><a href="#连接-ECS-服务器展开目录-2" class="headerlink" title="连接 ECS 服务器展开目录"></a>连接 ECS 服务器展开目录</h2><p>1. 打开系统自带的终端工具。</p><ul><li>Windows：CMD 或 Powershell。</li><li>MAC：Terminal。</li></ul><p>Windows 用户请检查系统中是否安装有 ssh 工具。检查方法：</p><p>1）在终端中输入命令 ssh -V。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -V</span><br></pre></td></tr></table></figure><p>2）出现如下结果说明已安装。</p><p><img src="http://static-aliyun-doc.oss-cn-hangzhou.aliyuncs.com/assets/img/zh-CN/2223009851/p102980.png" alt="查看ssh版本" title="查看ssh版本"></p><p>3）否则请下载安装 <a href="https://www.mls-software.com/files/setupssh-8.2p1-1.exe">OpenSSH</a>。</p><p>2. 在终端中输入连接命令 ssh [username]@[ipaddress]。您需要将其中的 username 和 ipaddress 替换为第 1 小节中创建的 ECS 服务器的登录名和公网地址。例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh root@123.123.123.123</span><br></pre></td></tr></table></figure><p><img src="https://img.alicdn.com/tfs/TB1n5y0E7T2gK0jSZFkXXcIQFXa-327-286.jpg" alt="img" title="img"></p><p>命令显示结果如下：</p><p><img src="https://img.alicdn.com/tfs/TB1mWdXc5cKOu4jSZKbXXc19XXa-644-228.png" alt="img" title="img"></p><p>3. 输入 <code>yes</code>。</p><p>4. 同意继续后将会提示输入登录密码。 密码为已创建的云服务的 ECS 的登录密码。</p><p><img src="https://img.alicdn.com/tfs/TB1FzjSHqL7gK0jSZFBXXXZZpXa-637-75.png" alt="img" title="img"></p><p>登录成功后会显示如下信息。</p><p><img src="https://img.alicdn.com/tfs/TB1iRbWHAP2gK0jSZPxXXacQpXa-516-157.png" alt="img" title="img"></p><h2 id="安装-Apache-HTTP-服务展开目录"><a href="#安装-Apache-HTTP-服务展开目录" class="headerlink" title="安装 Apache HTTP 服务展开目录"></a>安装 Apache HTTP 服务展开目录</h2><p>Apache 是世界使用排名第一的 Web 服务器软件。它可以运行在几乎所有广泛使用的计算机平台上，由于其跨平台和安全性被广泛使用，是最流行的 Web 服务器端软件之一。</p><p>1. 执行如下命令，安装 Apache 服务及其扩展包。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install httpd httpd-manual mod_ssl mod_perl mod_auth_mysql</span><br></pre></td></tr></table></figure><p>返回类似如下图结果则表示安装成功。</p><p><img src="https://img.alicdn.com/tfs/TB1l7DUHpY7gK0jSZKzXXaikpXa-1050-137.png" alt="img" title="img"></p><p>2. 执行如下命令，启动 Apache 服务。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start httpd.service</span><br></pre></td></tr></table></figure><p>3. 测试 Apache 服务是否安装并启动成功。</p><p>Apache 默认监听 80 端口，所以只需在浏览器访问 ECS 分配的 IP 地址 <a href="http://</">http://&lt;</a>;ECS 公网地址 &gt;，如下图：</p><p><img src="https://img.alicdn.com/tfs/TB1HmVpaepyVu4jSZFhXXbBpVXa-1920-937.png" alt="img" title="img"></p><h2 id="安装-MySQL-数据库展开目录"><a href="#安装-MySQL-数据库展开目录" class="headerlink" title="安装 MySQL 数据库展开目录"></a>安装 MySQL 数据库展开目录</h2><p>由于使用 wordpress 搭建云上博客，需要使用 MySQL 数据库存储数据，所以这一步我们安装一下 MySQL。</p><p>1. 执行如下命令，下载并安装 MySQL 官方的 <code>Yum Repository</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget http:&#x2F;&#x2F;dev.mysql.com&#x2F;get&#x2F;mysql57-community-release-el7-10.noarch.rpm</span><br><span class="line">yum -y install mysql57-community-release-el7-10.noarch.rpm</span><br><span class="line">yum -y install mysql-community-server</span><br></pre></td></tr></table></figure><p><img src="https://img.alicdn.com/tfs/TB1BRnVHxz1gK0jSZSgXXavwpXa-958-431.png" alt="img" title="img"></p><p>2. 执行如下命令，启动 MySQL 数据库。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mysqld.service</span><br></pre></td></tr></table></figure><p>3. 执行如下命令，查看 MySQL 运行状态。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status mysqld.service</span><br></pre></td></tr></table></figure><p><img src="https://img.alicdn.com/tfs/TB1gszWHuT2gK0jSZFvXXXnFXXa-945-229.png" alt="img" title="img"></p><p>4. 执行如下命令，查看 MySQL 初始密码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep &quot;password&quot; &#x2F;var&#x2F;log&#x2F;mysqld.log</span><br></pre></td></tr></table></figure><p><img src="https://img.alicdn.com/tfs/TB1FmNpaepyVu4jSZFhXXbBpVXa-834-36.png" alt="img" title="img"></p><p>5. 执行如下命令，登录数据库。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure><p><img src="https://img.alicdn.com/tfs/TB1Wz6UHvb2gK0jSZK9XXaEgFXa-675-226.png" alt="img" title="img"></p><p>6. 执行如下命令，修改 MySQL 默认密码。</p><blockquote><p><strong>说明</strong> 新密码设置的时候如果设置的过于简单会报错，必须同时包含大小写英文字母、数字和特殊符号中的三类字符。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;NewPassWord1.&#39;;</span><br></pre></td></tr></table></figure><p>7. 执行如下命令，创建 wordpress 库。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database wordpress; </span><br></pre></td></tr></table></figure><p>8. 执行如下命令，创建 wordpress 库。 执行如下命令，查看是否创建成功。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show databases;</span><br></pre></td></tr></table></figure><p>9. 输入 <code>exit</code> 退出数据库。</p><p><img src="https://img.alicdn.com/tfs/TB14Bj0HxD1gK0jSZFKXXcJrVXa-836-664.png" alt="img" title="img"></p><h2 id="安装-PHP-语言环境展开目录"><a href="#安装-PHP-语言环境展开目录" class="headerlink" title="安装 PHP 语言环境展开目录"></a>安装 PHP 语言环境展开目录</h2><p>WordPress 是使用 PHP 语言开发的博客平台，用户可以在支持 PHP 和 MySQL 数据库的服务器上架设属于自己的网站。也可以把 WordPress 当作一个内容管理系统（CMS）来使用。</p><p>1. 执行如下命令，安装 PHP 环境。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install php php-mysql gd php-gd gd-devel php-xml php-common php-mbstring php-ldap php-pear php-xmlrpc php-imap</span><br></pre></td></tr></table></figure><p>2. 执行如下命令创建 PHP 测试页面。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;&lt;?php phpinfo(); ?&gt;&quot; &gt; &#x2F;var&#x2F;www&#x2F;html&#x2F;phpinfo.php</span><br></pre></td></tr></table></figure><p>3. 执行如下命令，重启 Apache 服务。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart httpd</span><br></pre></td></tr></table></figure><p>4. 打开浏览器，访问 <code>http://&lt;ECS公网地址&gt;/phpinfo.php</code>，显示如下页面表示 PHP 语言环境安装成功。</p><p><img src="https://img.alicdn.com/tfs/TB1oCVpaepyVu4jSZFhXXbBpVXa-601-840.png" alt="img" title="img"></p><h2 id="Wordpress-安装和配置展开目录"><a href="#Wordpress-安装和配置展开目录" class="headerlink" title="Wordpress 安装和配置展开目录"></a>Wordpress 安装和配置展开目录</h2><p>本小节将在已搭建好的 LAMP 环境中，安装部署 WordPress</p><p>1. 执行如下命令，安装 wordpress。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install wordpress</span><br></pre></td></tr></table></figure><p>显示如下信息表示安装成功。</p><p><img src="https://img.alicdn.com/tfs/TB1b02VHEz1gK0jSZLeXXb9kVXa-1042-156.png" alt="img" title="img"></p><p>2. 修改 WordPress 配置文件。</p><p>1）执行如下命令，修改 wp-config.php 指向路径为绝对路径。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 进入&#x2F;usr&#x2F;share&#x2F;wordpress目录。</span><br><span class="line">cd &#x2F;usr&#x2F;share&#x2F;wordpress</span><br><span class="line"># 修改路径。</span><br><span class="line">ln -snf &#x2F;etc&#x2F;wordpress&#x2F;wp-config.php wp-config.php</span><br><span class="line"># 查看修改后的目录结构。</span><br><span class="line">ll</span><br></pre></td></tr></table></figure><p>2）执行如下命令，移动 wordpress 到 Apache 根目录。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 在Apache的根目录&#x2F;var&#x2F;www&#x2F;html下，创建一个wp-blog文件夹。</span><br><span class="line">mkdir &#x2F;var&#x2F;www&#x2F;html&#x2F;wp-blog</span><br><span class="line">mv * &#x2F;var&#x2F;www&#x2F;html&#x2F;wp-blog&#x2F;</span><br></pre></td></tr></table></figure><p>3）执行以下命令修改 wp-config.php 配置文件。</p><p>在执行命令前，请先替换以下三个参数值。</p><ul><li>database_name_here 为之前步骤中创建的数据库名称，本示例为 wordpress。</li><li>username_here 为数据库的用户名，本示例为 root。</li><li>password_here 为数据库的登录密码，本示例为 NewPassWord1.。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#39;s&#x2F;database_name_here&#x2F;wordpress&#x2F;&#39; &#x2F;var&#x2F;www&#x2F;html&#x2F;wp-blog&#x2F;wp-config.php</span><br><span class="line">sed -i &#39;s&#x2F;username_here&#x2F;root&#x2F;&#39; &#x2F;var&#x2F;www&#x2F;html&#x2F;wp-blog&#x2F;wp-config.php</span><br><span class="line">sed -i &#39;s&#x2F;password_here&#x2F;NewPassWord1.&#x2F;&#39; &#x2F;var&#x2F;www&#x2F;html&#x2F;wp-blog&#x2F;wp-config.php</span><br></pre></td></tr></table></figure><p>4）执行以下命令，查看配置文件信息是否修改成功。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat -n &#x2F;var&#x2F;www&#x2F;html&#x2F;wp-blog&#x2F;wp-config.php</span><br></pre></td></tr></table></figure><p><img src="https://img.alicdn.com/tfs/TB1j02VHEz1gK0jSZLeXXb9kVXa-913-631.png" alt="img" title="img"></p><p>3. 执行如下命令，重启 Apache 服务。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart httpd</span><br></pre></td></tr></table></figure><p>测试 Wordpress</p><p>完成以上所有步骤后，就可以测试我们基于 ECS 所搭建的云上博客了。</p><p>1. 打开浏览器并访问 <a href="http://</">http://&lt;</a>;ECS 公网 IP&gt;/wp-blog/wp-admin/install.php。</p><p>2. 根据以下信息完成 wordpress 初始化配置。</p><ul><li>Site Title：站点名称，例如：Hello ADC。</li><li>Username：管理员用户名，例如：admin。</li><li>Password：访问密码，例如：cIxWg9t@a8MJBAnf% j。</li><li>Your Email：email 地址，建议为真实有效的地址。若没有，可以填写虚拟 email 地址，但将无法接收信息，例如：<a href="mailto:&#x61;&#100;&#x6d;&#x69;&#x6e;&#64;&#97;&#100;&#109;&#105;&#110;&#46;&#x63;&#x6f;&#x6d;">&#x61;&#100;&#x6d;&#x69;&#x6e;&#64;&#97;&#100;&#109;&#105;&#110;&#46;&#x63;&#x6f;&#x6d;</a>。</li></ul><p><img src="https://img.alicdn.com/tfs/TB1pCnYHuH2gK0jSZFEXXcqMpXa-723-689.png" alt="img" title="img"></p><p>3. 单击 Install WordPress 完成 Wordpress 初始化。</p><p>4. 单击 Log In 进行登录。</p><p><img src="https://img.alicdn.com/tfs/TB1ear2HxD1gK0jSZFyXXciOVXa-803-464.png" alt="img" title="img"></p><p>5. 输入设置的用户名和密码。</p><p><img src="https://img.alicdn.com/tfs/TB1kknYHAL0gK0jSZFAXXcA9pXa-704-862.png" alt="img" title="img"></p><p>6. 登录后，您就可以添加博客进行发布了。</p><p><img src="https://img.alicdn.com/tfs/TB1q7nYHAL0gK0jSZFAXXcA9pXa-939-420.png" alt="img" title="img"></p>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
          <category> 云计算 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> aliyun </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx服务</title>
      <link href="/posts/58676/"/>
      <url>/posts/58676/</url>
      
        <content type="html"><![CDATA[<h1 id="第一章Nginx介绍展开目录"><a href="#第一章Nginx介绍展开目录" class="headerlink" title="第一章Nginx介绍展开目录"></a><strong>第一章Nginx介绍</strong>展开目录</h1><p><strong>Nginx</strong> <strong>是什么</strong></p><p>Nginx是一个开源且高性能，可靠的Http Web服务，代理服务。<br>开源：直接获取源代码<br>高级：支持海量并发可靠<br>：服务稳定</p><p><strong>我们为什么选择Nginx服务</strong></p><p>Nginx非常轻量<br>功能模块少（来源唯一保留http与核心模块代码，其余不够核心代码会作为插件来安装）<br>代码转换（易读，交替二次开发，对于开发人员非常友好）<br>互联网公司都选择Nginx<br>1.Nginx技术成熟，具有的功能是企业最常使用而且最需要的<br>2。适合当前主流架构趋势，微服务，云架构，中间层<br>3。统一技术栈，降低维护成本，降低技术更新成本。</p><p><strong>Nginx</strong> <strong>重要特性</strong></p><p>Nginx采用Epool网络模型，Apache采用选择模型<br>选择：当用户发起一次请求，选择模型就会进行一次遍历扫描，从而导致性能低下<br>。Epool：当用户发起请求，epool模型会直接进行处理，效率高效，并无连接限制</p><p><strong>Nginx</strong> <strong>应用场景</strong></p><p><img src="https://www.kococ.cn/usr/uploads/2020/02/3319484971.png" alt="Nginx应用场景.png" title="Nginx应用场景.png"></p><h1 id="第二章Nginx安装部署展开目录"><a href="#第二章Nginx安装部署展开目录" class="headerlink" title="第二章Nginx安装部署展开目录"></a><strong>第二章Nginx安装部署</strong>展开目录</h1><p>Nginx分为几种<br>。原始码（1.版本随意2.安装复杂3.升级繁琐）<br>2.epel仓库（1.版本版本2.安装简单3.配置不易读）<br>3.官方仓库（1.版本较新2.安装简单3.配置易读，推荐）<br>下面分别介绍编译安装和yum安装方法</p><p><strong>1.</strong> <strong>编译安装方法</strong></p><p><strong>创建www用户</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# groupadd www -g 666</span><br><span class="line"></span><br><span class="line">[root@web01 ~]# useradd www -s &#x2F;sbin&#x2F;nologin -M -u 666 -g 666</span><br><span class="line"></span><br><span class="line">[root@web01 ~]# id www</span><br><span class="line"></span><br><span class="line">uid&#x3D;666(www) gid&#x3D;666(www) 组&#x3D;666(www)</span><br></pre></td></tr></table></figure><p><strong>安装依赖包</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# yum install openssl-devel pcre-devel -y</span><br></pre></td></tr></table></figure><p><strong>下载解压常数</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# mkdir &#x2F;data&#x2F;soft -p</span><br><span class="line"></span><br><span class="line">[root@web01 ~]# cd &#x2F;data&#x2F;soft&#x2F;</span><br><span class="line"></span><br><span class="line">[root@web01 &#x2F;data&#x2F;soft]# wget http:&#x2F;&#x2F;nginx.org&#x2F;download&#x2F;nginx-1.16.0.tar.gz</span><br><span class="line"></span><br><span class="line">[root@web01 &#x2F;data&#x2F;soft]# tar zxvf nginx-1.16.0.tar.gz </span><br></pre></td></tr></table></figure><p><strong>配置编译参数</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# cd &#x2F;data&#x2F;soft&#x2F;nginx-1.16.0&#x2F;</span><br><span class="line"></span><br><span class="line">[root@web01 &#x2F;data&#x2F;soft&#x2F;nginx-1.16.0]# .&#x2F;configure --help</span><br><span class="line"></span><br><span class="line">[root@web01 &#x2F;data&#x2F;soft&#x2F;nginx-1.16.0]# .&#x2F;configure --user&#x3D;www --group&#x3D;www --prefix&#x3D;&#x2F;opt&#x2F;nginx-1.16.0&#x2F; --with-http_stub_status_module --with-http_ssl_module --with-pcre</span><br></pre></td></tr></table></figure><p><strong>编译安装</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 &#x2F;data&#x2F;soft&#x2F;nginx-1.16.0]# make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p><strong>创建软链接</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 &#x2F;data&#x2F;soft&#x2F;nginx-1.16.0]# ln -s &#x2F;opt&#x2F;nginx-1.16.0&#x2F; &#x2F;opt&#x2F;nginx</span><br><span class="line"></span><br><span class="line">[root@web01 &#x2F;data&#x2F;soft&#x2F;nginx-1.16.0]# ls -lh &#x2F;opt&#x2F;</span><br><span class="line"></span><br><span class="line">总用量 4.0K</span><br><span class="line"></span><br><span class="line">lrwxrwxrwx 1 root root  18 7月 29 20:27 nginx -&gt; &#x2F;opt&#x2F;nginx-1.16.0&#x2F;</span><br><span class="line"></span><br><span class="line">drwxr-xr-x 11 1001 1001 4.0K 7月 29 20:26 nginx-1.16.0</span><br></pre></td></tr></table></figure><p><strong>检查语法</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 &#x2F;opt&#x2F;nginx]# &#x2F;opt&#x2F;nginx&#x2F;sbin&#x2F;nginx -t</span><br><span class="line"></span><br><span class="line">nginx: the configuration file &#x2F;opt&#x2F;nginx-1.16.0&#x2F;&#x2F;conf&#x2F;nginx.conf syntax is ok</span><br><span class="line"></span><br><span class="line">nginx: configuration file &#x2F;opt&#x2F;nginx-1.16.0&#x2F;&#x2F;conf&#x2F;nginx.conf test is successful</span><br></pre></td></tr></table></figure><p><strong>启动nginx</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 &#x2F;opt&#x2F;nginx]# &#x2F;opt&#x2F;nginx&#x2F;sbin&#x2F;nginx</span><br></pre></td></tr></table></figure><p><strong>检查测试</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 &#x2F;opt&#x2F;nginx]# netstat -lntup|grep nginx</span><br><span class="line">tcp    0   0 0.0.0.0:80       0.0.0.0:*        LISTEN   12828&#x2F;nginx: master </span><br><span class="line">[root@web01 &#x2F;opt&#x2F;nginx]# curl 10.0.1.7</span><br></pre></td></tr></table></figure><p><strong>比喻</strong></p><p>下载买菜</p><p>./configure切菜。洗菜，做什么菜</p><p>做炒菜，抄完之后，菜还在锅里</p><p>make install把菜端出来</p><p>/ opt / nginx / sbin / nginx -t尝一尝味道</p><p>/ opt / nginx / sbin / nginx吃菜</p><p>/ opt / nginx / sbin / nginx -s reload重新加载/加菜</p><p>/ opt / nginx / sbin / nginx -s stop收拾餐盘</p><p><strong>2.YUM</strong> <strong>安装方法</strong></p><p><strong>安装依赖包</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# yum install openssl-devel pcre-devel -y</span><br></pre></td></tr></table></figure><p><strong>配置官方yum源</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# vim &#x2F;etc&#x2F;yum.repos.d&#x2F;nginx.repo</span><br><span class="line"></span><br><span class="line">[root@web01 ~]# cat &#x2F;etc&#x2F;yum.repos.d&#x2F;nginx.repo</span><br><span class="line"></span><br><span class="line">[nginx-stable]</span><br><span class="line"></span><br><span class="line">name&#x3D;nginx stable repo</span><br><span class="line"></span><br><span class="line">baseurl&#x3D;http:&#x2F;&#x2F;nginx.org&#x2F;packages&#x2F;centos&#x2F;$releasever&#x2F;$basearch&#x2F;</span><br><span class="line"></span><br><span class="line">gpgcheck&#x3D;1</span><br><span class="line"></span><br><span class="line">enabled&#x3D;1</span><br><span class="line"></span><br><span class="line">gpgkey&#x3D;https:&#x2F;&#x2F;nginx.org&#x2F;keys&#x2F;nginx_signing.key</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">[nginx-mainline]</span><br><span class="line"></span><br><span class="line">name&#x3D;nginx mainline repo</span><br><span class="line"></span><br><span class="line">baseurl&#x3D;http:&#x2F;&#x2F;nginx.org&#x2F;packages&#x2F;mainline&#x2F;centos&#x2F;$releasever&#x2F;$basearch&#x2F;</span><br><span class="line"></span><br><span class="line">gpgcheck&#x3D;1</span><br><span class="line"></span><br><span class="line">enabled&#x3D;0</span><br><span class="line"></span><br><span class="line">gpgkey&#x3D;https:&#x2F;&#x2F;nginx.org&#x2F;keys&#x2F;nginx_signing.key</span><br></pre></td></tr></table></figure><p><strong>安装nginx服务</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# yum install nginx -y</span><br></pre></td></tr></table></figure><p><strong>启动服务并配置开机自启动</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# nginx -t</span><br><span class="line"></span><br><span class="line">nginx: the configuration file &#x2F;etc&#x2F;nginx&#x2F;nginx.conf syntax is ok</span><br><span class="line"></span><br><span class="line">nginx: configuration file &#x2F;etc&#x2F;nginx&#x2F;nginx.conf test is successful</span><br><span class="line"></span><br><span class="line">[root@web01 ~]# systemctl start nginx</span><br><span class="line"></span><br><span class="line">[root@web01 ~]# systemctl enable nginx</span><br></pre></td></tr></table></figure><p><strong>测试访问</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# curl 10.0.1.7</span><br></pre></td></tr></table></figure><p><strong>Nginx</strong> <strong>启动方式说明</strong></p><p>编译安装启动管理方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">nginx -t</span><br><span class="line"></span><br><span class="line">nginx</span><br><span class="line"></span><br><span class="line">nginx -s reload</span><br><span class="line"></span><br><span class="line">nginx -s stop</span><br></pre></td></tr></table></figure><p>yum安装启动管理方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">nginx -t</span><br><span class="line"></span><br><span class="line">systemctl start nginx</span><br><span class="line"></span><br><span class="line">systemctl reload nginx</span><br><span class="line"></span><br><span class="line">systemctl restart nginx</span><br><span class="line"></span><br><span class="line">systemctl stop nginx</span><br></pre></td></tr></table></figure><h1 id="第三章Nginx重要配置文件说明展开目录"><a href="#第三章Nginx重要配置文件说明展开目录" class="headerlink" title="第三章Nginx重要配置文件说明展开目录"></a><strong>第三章Nginx重要配置文件说明</strong>展开目录</h1><p><strong>查看配置文件</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# rpm -ql nginx </span><br><span class="line"></span><br><span class="line">...................................................           </span><br><span class="line"></span><br><span class="line">&#x2F;etc&#x2F;logrotate.d&#x2F;nginx           #nginx日志切割的配置文件</span><br><span class="line"></span><br><span class="line">&#x2F;etc&#x2F;nginx&#x2F;nginx.conf           #nginx主配置文件 </span><br><span class="line"></span><br><span class="line">&#x2F;etc&#x2F;nginx&#x2F;conf.d             #子配置文件</span><br><span class="line"></span><br><span class="line">&#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;default.conf       #默认展示的页面一样 </span><br><span class="line"></span><br><span class="line">&#x2F;etc&#x2F;nginx&#x2F;mime.types           #媒体类型 （http协议中的文件类型）</span><br><span class="line"></span><br><span class="line">&#x2F;etc&#x2F;sysconfig&#x2F;nginx            #systemctl 管理 nginx的使用的文件</span><br><span class="line"></span><br><span class="line">&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;nginx.service   #systemctl 管理nginx（开 关 重启 reload)配置文件    </span><br><span class="line"></span><br><span class="line">&#x2F;usr&#x2F;sbin&#x2F;nginx              #nginx命令</span><br><span class="line"></span><br><span class="line">&#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html           #站点目录 网站的根目录 </span><br><span class="line"></span><br><span class="line">&#x2F;var&#x2F;log&#x2F;nginx               #nginx日志 access.log 访问日志</span><br><span class="line"></span><br><span class="line">...................................................           </span><br></pre></td></tr></table></figure><p><strong>查看已经编译的模块</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# nginx -V</span><br></pre></td></tr></table></figure><p><strong>配置文件注解</strong></p><p>Nginx主配置文件/etc/nginx/nginx.conf是一个纯文本类型的文件，整个配置文件由区块链的形式组织的。一般，每个区块以一对大括号{}来表示开始与结束。<br>Nginx的主配置文件整体分为三块进行学习，分别是<br>CoreModule（核心模块）<br>EventModule（事件驱动模块）<br>HttpCoreModule（HTTP内核模块）</p><p><strong>第一部分：配置文件主区域配置</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">user nginx;          #定义运行nginx进程的用户</span><br><span class="line"></span><br><span class="line">worker_processes 1;      #Nginx运行的work进程数量(建议与CPU数量一致或 auto)</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">error_log &#x2F;var&#x2F;log&#x2F;nginx&#x2F;error.log warn;       #nginx错误日志</span><br><span class="line"></span><br><span class="line">pid    &#x2F;var&#x2F;run&#x2F;nginx.pid;            #nginx运行pid</span><br></pre></td></tr></table></figure><p><strong>第二部分：配置文件事件区域</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">events &#123;</span><br><span class="line"></span><br><span class="line">  worker_connections 1024; #每个 worker 进程支持的最大连接数</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>第三部分：配置http区域</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line"></span><br><span class="line">  include    &#x2F;etc&#x2F;nginx&#x2F;mime.types;     #Nginx支持的媒体类型库文件</span><br><span class="line"></span><br><span class="line">  default_type application&#x2F;octet-stream;    #默认的媒体类型 </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  log_format main &#39;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#39;</span><br><span class="line"></span><br><span class="line">​           &#39;$status $body_bytes_sent &quot;$http_referer&quot; &#39;</span><br><span class="line"></span><br><span class="line">​           &#39;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#39;;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  access_log &#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log main;  #访问日志保存路径</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  sendfile    on;               #开启高效传输模式</span><br><span class="line"></span><br><span class="line">  \#tcp_nopush   on;            </span><br><span class="line"></span><br><span class="line">  keepalive_timeout 65;             #连接超时时间</span><br><span class="line"></span><br><span class="line">  \#gzip on;                   #开启压缩</span><br><span class="line"></span><br><span class="line">  include &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;*.conf;        #包含子配置文件</span><br><span class="line"></span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p><strong>第四部分：子配置文件内容</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# egrep -v &quot;#|^$&quot; &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;default.conf   </span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line"></span><br><span class="line">  listen    80;       #指定监听端口</span><br><span class="line"></span><br><span class="line">  server_name localhost;   #指定监听的域名</span><br><span class="line"></span><br><span class="line">  location &#x2F; &#123;       </span><br><span class="line"></span><br><span class="line">​    root  &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html;   #定义站点的目录</span><br><span class="line"></span><br><span class="line">​    index index.html index.htm;    #定义首页文件</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  error_page  500 502 503 504 &#x2F;50x.html;  #优雅显示页面信息</span><br><span class="line"></span><br><span class="line">  location &#x3D; &#x2F;50x.html &#123;</span><br><span class="line"></span><br><span class="line">​    root  &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http server location 扩展了解项</span><br><span class="line"> http&#123;&#125;层下允许有多个 Server&#123;&#125;层，一个 Server&#123;&#125;层下又允许有多个 Location</span><br><span class="line"> http&#123;&#125; 标签主要用来解决用户的请求与响应。</span><br><span class="line"> server&#123;&#125; 标签主要用来响应具体的某一个网站。</span><br><span class="line"> location&#123;&#125; 标签主要用于匹配网站具体 URL 路径</span><br></pre></td></tr></table></figure><h1 id="第四章Nginx虚拟主机配置实战展开目录"><a href="#第四章Nginx虚拟主机配置实战展开目录" class="headerlink" title="第四章Nginx虚拟主机配置实战展开目录"></a><strong>第四章Nginx虚拟主机配置实战</strong>展开目录</h1><p><strong>基于域名的虚拟主机</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# cat &#x2F;etc&#x2F;nginx&#x2F;nginx.conf  </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">user nginx;</span><br><span class="line"></span><br><span class="line">worker_processes 1;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">error_log &#x2F;var&#x2F;log&#x2F;nginx&#x2F;error.log warn;</span><br><span class="line"></span><br><span class="line">pid    &#x2F;var&#x2F;run&#x2F;nginx.pid;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line"></span><br><span class="line">  worker_connections 1024;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line"></span><br><span class="line">  include    &#x2F;etc&#x2F;nginx&#x2F;mime.types;</span><br><span class="line"></span><br><span class="line">  default_type application&#x2F;octet-stream;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  log_format main &#39;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#39;</span><br><span class="line"></span><br><span class="line">​           &#39;$status $body_bytes_sent &quot;$http_referer&quot; &#39;</span><br><span class="line"></span><br><span class="line">​           &#39;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#39;;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  access_log &#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log main;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  sendfile    on;</span><br><span class="line"></span><br><span class="line">  \#tcp_nopush   on;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  keepalive_timeout 65;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  \#gzip on;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  \#include &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;*.conf;</span><br><span class="line"></span><br><span class="line">  server  &#123;</span><br><span class="line"></span><br><span class="line">​    listen    80;</span><br><span class="line"></span><br><span class="line">​    server_name www.oldboy.com;</span><br><span class="line"></span><br><span class="line">​    location &#x2F; &#123;</span><br><span class="line"></span><br><span class="line">​      root  &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F;www;</span><br><span class="line"></span><br><span class="line">​      index index.html index.htm;</span><br><span class="line"></span><br><span class="line">​    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  server  &#123;</span><br><span class="line"></span><br><span class="line">​    listen    80;</span><br><span class="line"></span><br><span class="line">​    server_name blog.oldboy.com;</span><br><span class="line"></span><br><span class="line">​    location &#x2F; &#123;</span><br><span class="line"></span><br><span class="line">​      root  &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F;blog;</span><br><span class="line"></span><br><span class="line">​      index index.html index.htm;</span><br><span class="line"></span><br><span class="line">​    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>基于端口的虚拟主机</strong></p><p>入口号优先级比域名要高</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# cat &#x2F;etc&#x2F;nginx&#x2F;nginx.conf  </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">user nginx;</span><br><span class="line"></span><br><span class="line">worker_processes 1;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">error_log &#x2F;var&#x2F;log&#x2F;nginx&#x2F;error.log warn;</span><br><span class="line"></span><br><span class="line">pid    &#x2F;var&#x2F;run&#x2F;nginx.pid;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line"></span><br><span class="line">  worker_connections 1024;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line"></span><br><span class="line">  include    &#x2F;etc&#x2F;nginx&#x2F;mime.types;</span><br><span class="line"></span><br><span class="line">  default_type application&#x2F;octet-stream;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  log_format main &#39;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#39;</span><br><span class="line"></span><br><span class="line">​           &#39;$status $body_bytes_sent &quot;$http_referer&quot; &#39;</span><br><span class="line"></span><br><span class="line">​           &#39;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#39;;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  access_log &#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log main;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  sendfile    on;</span><br><span class="line"></span><br><span class="line">  \#tcp_nopush   on;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  keepalive_timeout 65;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  \#gzip on;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  \#include &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;*.conf;</span><br><span class="line"></span><br><span class="line">  server  &#123;</span><br><span class="line"></span><br><span class="line">​    listen    81;</span><br><span class="line"></span><br><span class="line">​    server_name www.oldboy.com;</span><br><span class="line"></span><br><span class="line">​    location &#x2F; &#123;</span><br><span class="line"></span><br><span class="line">​      root  &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F;www;</span><br><span class="line"></span><br><span class="line">​      index index.html index.htm;</span><br><span class="line"></span><br><span class="line">​    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  server  &#123;</span><br><span class="line"></span><br><span class="line">​    listen    82;</span><br><span class="line"></span><br><span class="line">​    server_name blog.oldboy.com;</span><br><span class="line"></span><br><span class="line">​    location &#x2F; &#123;</span><br><span class="line"></span><br><span class="line">​      root  &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F;blog;</span><br><span class="line"></span><br><span class="line">​      index index.html index.htm;</span><br><span class="line"></span><br><span class="line">​    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>基于IP的虚拟主机</strong></p><p>添加第二IP</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip addr add 10.0.0.11&#x2F;24 dev eth0</span><br></pre></td></tr></table></figure><p>配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# cat &#x2F;etc&#x2F;nginx&#x2F;nginx.conf  </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">user nginx;</span><br><span class="line"></span><br><span class="line">worker_processes 1;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">error_log &#x2F;var&#x2F;log&#x2F;nginx&#x2F;error.log warn;</span><br><span class="line"></span><br><span class="line">pid    &#x2F;var&#x2F;run&#x2F;nginx.pid;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line"></span><br><span class="line">  worker_connections 1024;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line"></span><br><span class="line">  include    &#x2F;etc&#x2F;nginx&#x2F;mime.types;</span><br><span class="line"></span><br><span class="line">  default_type application&#x2F;octet-stream;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  log_format main &#39;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#39;</span><br><span class="line"></span><br><span class="line">​           &#39;$status $body_bytes_sent &quot;$http_referer&quot; &#39;</span><br><span class="line"></span><br><span class="line">​           &#39;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#39;;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  access_log &#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log main;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  sendfile    on;</span><br><span class="line"></span><br><span class="line">  \#tcp_nopush   on;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  keepalive_timeout 65;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  \#gzip on;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  \#include &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;*.conf;</span><br><span class="line"></span><br><span class="line">  server  &#123;</span><br><span class="line"></span><br><span class="line">​    listen    10.0.1.7:81;</span><br><span class="line"></span><br><span class="line">​    server_name www.oldboy.com;</span><br><span class="line"></span><br><span class="line">​    location &#x2F; &#123;</span><br><span class="line"></span><br><span class="line">​      root  &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F;www;</span><br><span class="line"></span><br><span class="line">​      index index.html index.htm;</span><br><span class="line"></span><br><span class="line">​    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  server  &#123;</span><br><span class="line"></span><br><span class="line">​    listen    10.0.1.11:82;</span><br><span class="line"></span><br><span class="line">​    server_name blog.oldboy.com;</span><br><span class="line"></span><br><span class="line">​    location &#x2F; &#123;</span><br><span class="line"></span><br><span class="line">​      root  &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F;blog;</span><br><span class="line"></span><br><span class="line">​      index index.html index.htm;</span><br><span class="line"></span><br><span class="line">​    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="第五章Nginx虚拟主机配置优化展开目录"><a href="#第五章Nginx虚拟主机配置优化展开目录" class="headerlink" title="第五章Nginx虚拟主机配置优化展开目录"></a><strong>第五章Nginx虚拟主机配置优化</strong>展开目录</h1><p>所有配置都写入一个配置文件维护起来比较麻烦，如果修改错了，影响所有的页面，所以我们应该拆分nginx的配置文件为各个子配置</p><p><strong>Nginx</strong> <strong>主配置文件</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 &#x2F;etc&#x2F;nginx&#x2F;conf.d]# cat &#x2F;etc&#x2F;nginx&#x2F;nginx.conf </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">user nginx;</span><br><span class="line"></span><br><span class="line">worker_processes 1;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">error_log &#x2F;var&#x2F;log&#x2F;nginx&#x2F;error.log warn;</span><br><span class="line"></span><br><span class="line">pid    &#x2F;var&#x2F;run&#x2F;nginx.pid;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line"></span><br><span class="line">  worker_connections 1024;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line"></span><br><span class="line">  include    &#x2F;etc&#x2F;nginx&#x2F;mime.types;</span><br><span class="line"></span><br><span class="line">  default_type application&#x2F;octet-stream;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  log_format main &#39;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#39;</span><br><span class="line"></span><br><span class="line">​           &#39;$status $body_bytes_sent &quot;$http_referer&quot; &#39;</span><br><span class="line"></span><br><span class="line">​           &#39;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#39;;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  access_log &#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log main;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  sendfile    on;</span><br><span class="line"></span><br><span class="line">  \#tcp_nopush   on;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  keepalive_timeout 65;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  \#gzip on;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">  include &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;*.conf;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>子配置文件www</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 &#x2F;etc&#x2F;nginx&#x2F;conf.d]# cat &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;01-www.conf </span><br><span class="line"></span><br><span class="line">server  &#123;</span><br><span class="line"></span><br><span class="line">  listen    80;</span><br><span class="line"></span><br><span class="line">  server_name www.oldboy.com;</span><br><span class="line"></span><br><span class="line">  location &#x2F; &#123;</span><br><span class="line"></span><br><span class="line">​    root  &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F;www;</span><br><span class="line"></span><br><span class="line">​    index index.html index.htm;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>子配置文件博客</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 &#x2F;etc&#x2F;nginx&#x2F;conf.d]# cat &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;02-blog.conf </span><br><span class="line"></span><br><span class="line">server  &#123;</span><br><span class="line"></span><br><span class="line">  listen    80;</span><br><span class="line"></span><br><span class="line">  server_name blog.oldboy.com;</span><br><span class="line"></span><br><span class="line">  location &#x2F; &#123;</span><br><span class="line"></span><br><span class="line">​    root  &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F;blog;</span><br><span class="line"></span><br><span class="line">​    index index.html index.htm;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>创建代码目录及首页</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[root@web01 &#x2F;etc&#x2F;nginx&#x2F;conf.d]# mkdir &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F;&#123;www,blog&#125;</span><br><span class="line"></span><br><span class="line">[root@web01 &#x2F;etc&#x2F;nginx&#x2F;conf.d]# echo &quot;www&quot; &gt; &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F;www&#x2F;index.html</span><br><span class="line"></span><br><span class="line">[root@web01 &#x2F;etc&#x2F;nginx&#x2F;conf.d]# echo &quot;blog&quot; &gt; &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F;blog&#x2F;index.html </span><br></pre></td></tr></table></figure><p><strong>检查语法重启服务</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# nginx -t</span><br><span class="line"></span><br><span class="line">nginx: the configuration file &#x2F;etc&#x2F;nginx&#x2F;nginx.conf syntax is ok</span><br><span class="line"></span><br><span class="line">nginx: configuration file &#x2F;etc&#x2F;nginx&#x2F;nginx.conf test is successful</span><br><span class="line"></span><br><span class="line">[root@web01 ~]# systemctl restart nginx</span><br></pre></td></tr></table></figure><p><strong>访问测试</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# tail -1 &#x2F;etc&#x2F;hosts </span><br><span class="line"></span><br><span class="line">10.0.1.7 www.oldboy.com blog.oldboy.com</span><br><span class="line"></span><br><span class="line">[root@web01 ~]# curl www.oldboy.com</span><br><span class="line"></span><br><span class="line">www</span><br><span class="line"></span><br><span class="line">[root@web01 ~]# curl blog.oldboy.com</span><br><span class="line"></span><br><span class="line">blog</span><br></pre></td></tr></table></figure><h1 id="第六章Nginx状态模块展开目录"><a href="#第六章Nginx状态模块展开目录" class="headerlink" title="第六章Nginx状态模块展开目录"></a><strong>第六章Nginx状态模块</strong>展开目录</h1><p>nginx状态模块：–with-http_stub_status_module</p><p><strong>状态模块配置文件</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 &#x2F;etc&#x2F;nginx&#x2F;conf.d]# cat status.conf </span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line"></span><br><span class="line">  listen 80;</span><br><span class="line"></span><br><span class="line">  server_name status.oldboy.com;</span><br><span class="line"></span><br><span class="line">  stub_status on;</span><br><span class="line"></span><br><span class="line">  access_log off;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[root@web01 &#x2F;etc&#x2F;nginx&#x2F;conf.d]# tail -1 &#x2F;etc&#x2F;hosts  </span><br><span class="line"></span><br><span class="line">10.0.1.7 www.oldboy.com blog.oldboy.com status.oldboy.com</span><br><span class="line"></span><br><span class="line">[root@web01 &#x2F;etc&#x2F;nginx&#x2F;conf.d]# nginx -t</span><br><span class="line"></span><br><span class="line">nginx: the configuration file &#x2F;etc&#x2F;nginx&#x2F;nginx.conf syntax is ok</span><br><span class="line"></span><br><span class="line">nginx: configuration file &#x2F;etc&#x2F;nginx&#x2F;nginx.conf test is successful</span><br><span class="line"></span><br><span class="line">[root@web01 &#x2F;etc&#x2F;nginx&#x2F;conf.d]# systemctl restart nginx</span><br><span class="line"></span><br><span class="line">[root@web01 &#x2F;etc&#x2F;nginx&#x2F;conf.d]# curl status.oldboy.com </span><br><span class="line"></span><br><span class="line">Active connections: 1 </span><br><span class="line"></span><br><span class="line">server accepts handled requests</span><br><span class="line"></span><br><span class="line"> 1 1 1 </span><br><span class="line"></span><br><span class="line">Reading: 0 Writing: 1 Waiting: 0 </span><br></pre></td></tr></table></figure><h1 id="第七章Nginx日志展开目录"><a href="#第七章Nginx日志展开目录" class="headerlink" title="第七章Nginx日志展开目录"></a><strong>第七章Nginx日志</strong>展开目录</h1><p>日志解释</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">$remote_addr # 记录客户端 IP 地址</span><br><span class="line"></span><br><span class="line">$remote_user # 记录客户端用户名</span><br><span class="line"></span><br><span class="line">$time_local # 记录通用的本地时间</span><br><span class="line"></span><br><span class="line">$time_iso8601 # 记录 ISO8601 标准格式下的本地时间</span><br><span class="line"></span><br><span class="line">$request # 记录请求的方法以及请求的 http 协议</span><br><span class="line"></span><br><span class="line">$status # 记录请求状态码(用于定位错误信息)</span><br><span class="line"></span><br><span class="line">$body_bytes_sent # 发送给客户端的资源字节数，不包括响应头的大小</span><br><span class="line"></span><br><span class="line">$bytes_sent # 发送给客户端的总字节数</span><br><span class="line"></span><br><span class="line">$msec # 日志写入时间。单位为秒，精度是毫秒。</span><br><span class="line"></span><br><span class="line">$http_referer # 记录从哪个页面链接访问过来的</span><br><span class="line"></span><br><span class="line">$http_user_agent # 记录客户端浏览器相关信息</span><br><span class="line"></span><br><span class="line">$http_x_forwarded_for #记录客户端 IP 地址</span><br><span class="line"></span><br><span class="line">$request_length # 请求的长度（包括请求行， 请求头和请求正文）。</span><br><span class="line"></span><br><span class="line">$request_time # 请求花费的时间，单位为秒，精度毫秒</span><br><span class="line"></span><br><span class="line">\# 注:如果 Nginx 位于负载均衡器， nginx 反向代理之后， web 服务器无法直接获取到客 户端真实的 IP 地址。</span><br><span class="line"></span><br><span class="line">\# $remote_addr 获取的是反向代理的 IP 地址。 反向代理服务器在转发请求的 http 头信息中，</span><br><span class="line"></span><br><span class="line">\# 增加 X-Forwarded-For 信息，用来记录客户端 IP 地址和客户端请求的服务器地址。</span><br></pre></td></tr></table></figure><h1 id="第八章nginx连环坑展开目录"><a href="#第八章nginx连环坑展开目录" class="headerlink" title="第八章nginx连环坑展开目录"></a><strong>第八章nginx连环坑</strong>展开目录</h1><p>1.如果是yum安装，启动关闭命令推荐使用systemctl。不要混着nginx -s这样用。</p><p>2.相同域名相同端口会报冲突，某些都是0.0.0.0:80</p><p>3.没有家庭会报403而不是404</p><p>4.大部分优先级高于域名</p><p>5.ip +扩展的优先级是最高的</p><p>6.所有域名都匹配不上的时候，交替转发到根据ASCII码排序优先的配置文件</p><p>7.可以添加参数指定替代匹配的页面，这样就无需修改文件名了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line"></span><br><span class="line">  listen    80 default_server;</span><br><span class="line"></span><br><span class="line">  server_name www.mysun.com;</span><br><span class="line"></span><br><span class="line">  location &#x2F; &#123;</span><br><span class="line"></span><br><span class="line">​    root  &#x2F;code&#x2F;www;</span><br><span class="line"></span><br><span class="line">​    index index.html index.htm;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="章第九日志切割展开目录"><a href="#章第九日志切割展开目录" class="headerlink" title="章第九日志切割展开目录"></a><strong>章第九日志切割</strong>展开目录</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 &#x2F;var&#x2F;log&#x2F;nginx]# cat &#x2F;etc&#x2F;logrotate.d&#x2F;nginx</span><br><span class="line"></span><br><span class="line">&#x2F;var&#x2F;log&#x2F;nginx&#x2F;*.log &#123;</span><br><span class="line"></span><br><span class="line">​    daily</span><br><span class="line"></span><br><span class="line">​    missingok</span><br><span class="line"></span><br><span class="line">​    rotate 52</span><br><span class="line"></span><br><span class="line">​    compress</span><br><span class="line"></span><br><span class="line">​    delaycompress</span><br><span class="line"></span><br><span class="line">  dateext</span><br><span class="line"></span><br><span class="line">​    notifempty</span><br><span class="line"></span><br><span class="line">​    create 640 nginx adm</span><br><span class="line"></span><br><span class="line">​    sharedscripts</span><br><span class="line"></span><br><span class="line">​    postrotate</span><br><span class="line"></span><br><span class="line">​        if [ -f &#x2F;var&#x2F;run&#x2F;nginx.pid ]; then</span><br><span class="line"></span><br><span class="line">​            kill -USR1 &#96;cat &#x2F;var&#x2F;run&#x2F;nginx.pid&#96;</span><br><span class="line"></span><br><span class="line">​        fi</span><br><span class="line"></span><br><span class="line">​    endscript</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx服务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>这些百度搜索小技巧，让你的搜索高效无广告</title>
      <link href="/posts/18865/"/>
      <url>/posts/18865/</url>
      
        <content type="html"><![CDATA[<p><strong>不同的搜索方式会导致搜索的结果往往大大不同，利用好搜索引擎可以大大提升我们查阅资料的效率</strong>，目前几乎所有的浏览器都适用以上几种小技巧，可以举一反三哦。</p><p><strong>01</strong><br>去广告搜索</p><p>在百度中，经常搜索出来第一个页面都是广告，并且百度搜索提供的 “广告” 标志太不明显，很容易就中招点进了广告。可以先看下没有去广告搜索之前的效果，<strong>以搜索 “瘦脸” 为例，首屏共有 6 条信息，其中 4 条是不知名医院的广告</strong>。</p><p><img src="http://ray-or.com/wp-content/uploads/2020/03/2020032207074845819922910.jpg" alt="img" title="img"></p><p>未去广告的搜索结果</p><p>去广告的小技巧就是在搜索词后添加 “<strong>-advertisement</strong>”，例如 “<strong>瘦脸 -advertisement</strong>”，搜索词后是有一个空格的，这样就可以起到简单过滤广告的效果。</p><p><img src="http://ray-or.com/wp-content/uploads/2020/03/2020032207074886217278756.jpg" alt="img" title="img"></p><p>未去广告的搜索结果</p><p><strong>总结：搜索词 + “-advertisement” 可以快速屏蔽百度搜索的广告信息。</strong></p><p><strong>02</strong><br>特定网站搜索</p><p>特定的资源在特定的网站寻找，有时候会事半功倍。搜索的范围太广了，我们想指定搜索某个网站或者某些网站怎么办。我们可以使用 “<strong>site: 域名 + 搜索词</strong>” 的方式<strong>进行指定网站快速搜索</strong>。<strong>注意 site: 后直接连接域名，然后空格才输入搜索词，搜索词可以继续叠加或者剔除</strong>。</p><p>我们使用 “<strong>site:yunziyuan.com.cn WordPress</strong>” 就<strong>可以在 5G 云源码分享网中快速找到 WordPress 相关资讯了</strong>。</p><p><img src="http://ray-or.com/wp-content/uploads/2020/03/baidu.png" alt="img" title="img"></p><p><strong>总结：使用 site: 域名 + 搜索词，可以在特定的网站内快速搜索。</strong></p><p><strong>03</strong><br>去连接词的关键词搜索</p><p>经常在使用百度的时候输入一大长串句子进行搜索，有时候会发现，百度搜索将很多连接词等也识别成了关键词，如 “什么”、“哪些”、“的” 等等。</p><p>例如我们搜索 “小程序有哪些坑”。</p><p><img src="http://ray-or.com/wp-content/uploads/2020/03/2020032207074945892443163.jpg" alt="img" title="img"></p><p>小程序有哪些坑</p><p>可以发现，“哪些” 也被做成了关键词，按照搜索意愿，只要搜索结果把小程序的坑展示出来即可。这个时候我们<strong>可以去掉连接词，只保留关键的信息，并且使用空格连接起来</strong>。继续搜索 “<strong>小程序 坑</strong>”，<strong>页面更加简洁，清晰明了</strong>：</p><p><img src="http://ray-or.com/wp-content/uploads/2020/03/2020032207074984364067010.jpg" alt="img" title="img"></p><p>去连接词搜索</p><p><strong>总结：使用百度搜索长句的时候，可以将句子中的关键词拆解出来，使用空格进行连接叠加关键词，可以更加精准搜索想要的结果，避免连接词的干扰。</strong></p><p><strong>04</strong><br>限定文件类型搜索</p><p>想找一份简历 Word 模板，劳动合同 Word 模板，工资条 Excel 模板，PDF 电子书？百度搜索出来的结果太杂乱了怎么办？</p><p>这个时候就可以使用限定文件类型搜索了，什么是文件类型搜索呢？简单来说就是搜索某种扩展名的文件。</p><p>我们使用 “<strong>filetype: 文件类型 + 搜索词</strong>” 进行限定文件类型搜索，如<strong>搜索小程序的 pdf 教程，使用 “filetype:pdf 小程序 教程”</strong></p><p><img src="http://ray-or.com/wp-content/uploads/2020/03/2020032207075012517044092.jpg" alt="img" title="img"></p><p>搜索小程序教程 pdf 电子书</p><p><strong>总结：使用 “filetype: 文件类型 + 搜索词” 搜索特定的文件，目前支持 “doc，xls，ppt” 等。</strong></p><p><strong>05</strong><br>特定时间内的关键词搜索</p><p>经常<strong>需要搜索某段时间内的一些资讯或者信息，如果通过普通的搜索在进行查看无疑会消耗大量的时间，降低检索的效率</strong>，我们<strong>使用 “关键词 20xx..20xx” 就可以搜索某段时间内的信息，其中 20xx 表示年份</strong>。</p><p>如 “<strong>天猫双十一营业额 2008..2017</strong>” 表示 2008 年到 2017 年所有有关天猫双十一营业额的信息：</p><p><img src="http://ray-or.com/wp-content/uploads/2020/03/2020032207075043060648601.jpg" alt="img" title="img"></p><p>天猫双十一 2008..2017</p><p><strong>可以看到上述搜索出来的所有网页都是在 2008 年和 2017 年被收录的，即网页在 2008 年～2017 年被产生出来。</strong></p><p><strong>总结：使用 “关键词 20xx..20xx” 搜索特定时间内关于某关键词的信息。</strong></p><p><strong>06</strong><br>去除特定关键词搜索</p><p>搜索的时候，除了搜索关键词 A，有时候要需要排除关键词 B、关键词 C 等等。去除特定关键词搜索给我们提供了一个很好的解决方案，前面的去除广告也是这个小技巧。</p><p>我们<strong>使用 “关键词 A - 关键词 B - 关键词 C” 保证搜索的结果里只有 “关键词 A” 没有 “关键词 B” 和 “关键词 C”</strong>。</p><p>搜索：“祛痘美白”，我们先来看下不去除的效果：</p><p><img src="http://ray-or.com/wp-content/uploads/2020/03/2020032207075070275627654.jpg" alt="img" title="img"></p><p>未取出关键词</p><p><strong>可以看到满屏广告和推广链接</strong>，<strong>我们使用 “祛痘美白 - 推广 - 广告 - 推广链接 - 广告链接” 进行搜索</strong>（真是难为人）：</p><p><img src="http://ray-or.com/wp-content/uploads/2020/03/2020032207075126868800800.jpg" alt="img" title="img"></p><p>去除关键词效果</p><p>这个时候页面才显示整洁了很多，并且可以搜索到有用的信息。</p><p><strong>总结：使用 “关键词 A - 关键词 B - 关键词 C” 去除某些特定关键词进行搜索。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 百度搜索技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx 反向代理负载均衡</title>
      <link href="/posts/58995/"/>
      <url>/posts/58995/</url>
      
        <content type="html"><![CDATA[<h1 id="第一章-反向代理"><a href="#第一章-反向代理" class="headerlink" title="第一章 反向代理"></a>第一章 反向代理</h1><h2 id="Nginx-代理服务基本概述"><a href="#Nginx-代理服务基本概述" class="headerlink" title="Nginx 代理服务基本概述"></a>Nginx 代理服务基本概述</h2><p>1. 代理一词往往并不陌生，该服务我们常常用到如 (代理理财、代理租房、代理收货等等)，如下图所示</p><p><a href="https://blog.kococ.cn/wp-content/uploads/2020/02/2020071411193740.png"><img src="https://blog.kococ.cn/wp-content/uploads/2020/02/2020071411193740-1024x437.png" title="img"></a></p><p>2. 在没有代理模式的情况下，客户端和 Nginx 服务端，都是客户端直接请求服务端，服务端直接响应客户端。</p><p><a href="https://blog.kococ.cn/wp-content/uploads/2020/02/2020071411193891.png"><img src="https://blog.kococ.cn/wp-content/uploads/2020/02/2020071411193891-1024x441.png" title="img"></a></p><p>3. 那么在互联网请求里面，客户端往往无法直接向服务端发起请求，那么就需要用到代理服务，来实现客户端和服务通信，如下图所示</p><p><a href="https://blog.kococ.cn/wp-content/uploads/2020/02/2020071411193944.png"><img src="https://blog.kococ.cn/wp-content/uploads/2020/02/2020071411193944-1024x437.png" title="img"></a></p><h2 id="正向代理和反向代理"><a href="#正向代理和反向代理" class="headerlink" title="正向代理和反向代理"></a>正向代理和反向代理</h2><p>以访问 Goo 为例，客户端连接到 VPN 相当于正向代理<br>VPN 代理请求访问后端服务器并返回属于反向代理</p><h2 id="Nginx-代理服务支持的协议"><a href="#Nginx-代理服务支持的协议" class="headerlink" title="Nginx 代理服务支持的协议"></a>Nginx 代理服务支持的协议</h2><p>1.Nginx 作为代理服务，可支持的代理协议非常的多，具体如下图</p><p><a href="https://blog.kococ.cn/wp-content/uploads/2020/02/2020071411194057.png"><img src="https://blog.kococ.cn/wp-content/uploads/2020/02/2020071411194057-1024x529.png" title="img"></a></p><p>2. 如果将 Nginx 作为反向代理服务，常常会用到如下几种代理协议，如下图所示</p><p><a href="https://blog.kococ.cn/wp-content/uploads/2020/02/2020071411194124.png"><img src="https://blog.kococ.cn/wp-content/uploads/2020/02/2020071411194124-1024x726.png" title="img"></a></p><p>3. 反向代理模式与 Nginx 代理模块总结如表格所示</p><p><a href="https://blog.kococ.cn/wp-content/uploads/2020/02/2020071411194258.png"><img src="https://blog.kococ.cn/wp-content/uploads/2020/02/2020071411194258.png" title="img"></a></p><h2 id="Nginx-反向代理配置语法"><a href="#Nginx-反向代理配置语法" class="headerlink" title="Nginx 反向代理配置语法"></a>Nginx 反向代理配置语法</h2><p>1.Nginx 代理配置语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Syntax: proxy_pass URL;</span><br><span class="line">Default: —</span><br><span class="line">Context: location, if in location, limit_except</span><br><span class="line">http:&#x2F;&#x2F;localhost:8000&#x2F;uri&#x2F;</span><br><span class="line">http:&#x2F;&#x2F;192.168.56.11:8000&#x2F;uri&#x2F;</span><br><span class="line">http:&#x2F;&#x2F;unix:&#x2F;tmp&#x2F;backend.socket:&#x2F;uri&#x2F;</span><br></pre></td></tr></table></figure><p>2. 添加传递给后端服务器的请求头信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Syntax: proxy_set_header field value;</span><br><span class="line">Default: proxy_set_header Host $proxy_host;</span><br><span class="line">proxy_set_header Connection close;</span><br><span class="line">Context: http, server, location</span><br><span class="line"># 用户请求的时候 HOST 的值是 www.oldboy.com, 那么代理服务会像后端传递请求的还是 www.oldboy.com</span><br><span class="line">proxy_set_header Host $http_host;</span><br><span class="line"># 将$remote_addr 的值放进变量 X-Real-IP 中， $remote_addr 的值为客户端的 ip</span><br><span class="line">proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line"># 客户端通过代理服务访问后端服务, 后端服务通过该变量会记录真实客户端地址</span><br><span class="line">proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br></pre></td></tr></table></figure><p>3. 代理到后端的 TCP 连接数，响应，返回等超时时间</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;nginx 代理与后端服务器连接超时时间(代理连接超时)</span><br><span class="line">Syntax: proxy_connect_timeout time;</span><br><span class="line">Default: proxy_connect_timeout 60s;</span><br><span class="line">Context: http, server, location</span><br><span class="line">&#x2F;&#x2F;nginx 代理等待后端服务器的响应时间</span><br><span class="line">Syntax: proxy_read_timeout time;</span><br><span class="line">Default: proxy_read_timeout 60s;</span><br><span class="line">Context: http, server, location</span><br><span class="line">&#x2F;&#x2F;后端服务器数据回传给 nginx 代理超时时间</span><br><span class="line">Syntax: proxy_send_timeout time;</span><br><span class="line">Default: proxy_send_timeout 60s;</span><br><span class="line">Context: http, server, location</span><br></pre></td></tr></table></figure><p>4. 代理缓冲区</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;nignx 会把后端返回的内容先放到缓冲区当中，然后再返回给客户端,边收边传, 不是全部接收完再传给客户端</span><br><span class="line">Syntax: proxy_buffering on | off;</span><br><span class="line">Default: proxy_buffering on;</span><br><span class="line">Context: http, server, location</span><br><span class="line">&#x2F;&#x2F;设置 nginx 代理保存用户头信息的缓冲区大小</span><br><span class="line">Syntax: proxy_buffer_size size;</span><br><span class="line">Default: proxy_buffer_size 4k|8k;</span><br><span class="line">Context: http, server, location</span><br><span class="line">&#x2F;&#x2F;proxy_buffers 缓冲区</span><br><span class="line">Syntax: proxy_buffers number size;</span><br><span class="line">Default: proxy_buffers 8 4k|8k;</span><br><span class="line">Context: http, server, location</span><br></pre></td></tr></table></figure><p>5.proxy 代理网站常用配置<br>将配置写入新文件，调用时使用 include 引用即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01 ~]# cat &#x2F;etc&#x2F;nginx&#x2F;proxy_params </span><br><span class="line">proxy_set_header Host $http_host;</span><br><span class="line">proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">proxy_connect_timeout 30;</span><br><span class="line">proxy_send_timeout 60;</span><br><span class="line">proxy_read_timeout 60;</span><br><span class="line">proxy_buffering on;</span><br><span class="line">proxy_buffer_size 32k;</span><br><span class="line">proxy_buffers 4 128k;</span><br></pre></td></tr></table></figure><p>6. 代理配置 location 时调用，方便后面多个 location 重复使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location &#x2F; &#123;</span><br><span class="line">    proxy_pass http:&#x2F;&#x2F;127.0.0.1:8080;</span><br><span class="line">    include proxy_params;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Nginx-反向代理实战"><a href="#Nginx-反向代理实战" class="headerlink" title="Nginx 反向代理实战"></a>Nginx 反向代理实战</h2><p>配置关系图：</p><p><a href="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071411243293.png"><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071411243293-1024x321.png" alt="img" title="img"></a></p><p>1. 环境准备</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lb01       代理服务器</span><br><span class="line">web01   web服务器</span><br></pre></td></tr></table></figure><p>2.web01 服务器配置<br>配置一个网站，监听在 8080，此时网站仅 172 网段的用户能访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# cd &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;</span><br><span class="line">[root@web01 conf.d]# vim web.conf</span><br><span class="line">server &#123;</span><br><span class="line">    listen 8080;</span><br><span class="line">    server_name localhost;</span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line">        root &#x2F;code;</span><br><span class="line">        index index.html;</span><br><span class="line">        deny 10.0.0.0&#x2F;24;</span><br><span class="line">        allow all;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@web01 conf.d]# mkdir &#x2F;code</span><br><span class="line">[root@web01 conf.d]# echo &quot;web01-7&quot; &gt;&#x2F;code&#x2F;index.html</span><br><span class="line">[root@web01 conf.d]# systemctl restart nginx</span><br></pre></td></tr></table></figure><p>3. 配置 lb01 代理服务器<br>配置监听 eth0 的 80 端口，使 10.0.0.0 网段的用户，能够通过代理服务器访问到后端的 172.16.1.7 的 8080 端口站点内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01 ~]# cd &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;</span><br><span class="line">[root@lb01 conf.d]# cat proxy_web_node1.conf</span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name nginx.oldboy.com;</span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line">        proxy_pass http:&#x2F;&#x2F;172.16.1.7:8080;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@lb01 conf.d]# systemctl enable nginx</span><br><span class="line">[root@lb01 conf.d]# systemctl start nginx</span><br></pre></td></tr></table></figure><h1 id="第二章-负载均衡"><a href="#第二章-负载均衡" class="headerlink" title="第二章 负载均衡"></a>第二章 负载均衡</h1><h2 id="Nginx-负载均衡概述"><a href="#Nginx-负载均衡概述" class="headerlink" title="Nginx 负载均衡概述"></a>Nginx 负载均衡概述</h2><h3 id="为什么需要负载均衡"><a href="#为什么需要负载均衡" class="headerlink" title="为什么需要负载均衡"></a>为什么需要负载均衡</h3><p>我们的 Web 服务器直接面向用户，往往要承载大量并发请求，单台服务器难以负荷，我使用多台 WEB 服务器组成集群，前端使用 Nginx 负载均衡，将请求分散的打到我们的后端服务器集群中，实现负载的分发。那么会大大提升系统的吞吐率、请求性能、高容灾</p><p><a href="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071411245866.png"><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071411245866-1024x496.png" alt="img" title="img"></a></p><p>往往我们接触的最多的是 SLB (Server Load Balance) 负载均衡，实现最多的也是 SLB、那么 SLB 它的调度节点和服务节点通常是在一个地域里面。那么它在这个小的逻辑地域里面决定了他对部分服务的实时性、响应性是非常好的。<br>所以说当海量用户请求过来以后，它同样是请求调度节点，调度节点将用户的请求转发给后端对应的服务节点，服务节点处理完请求后在转发给调度节点，调度节点最后响应给用户节点。这样也能实现一个均衡的作用，那么 Nginx 则是一个典型的 SLB</p><h2 id="Nginx-负载均衡配置场景"><a href="#Nginx-负载均衡配置场景" class="headerlink" title="Nginx 负载均衡配置场景"></a>Nginx 负载均衡配置场景</h2><h3 id="1-四层负载均衡"><a href="#1-四层负载均衡" class="headerlink" title="1. 四层负载均衡"></a>1. 四层负载均衡</h3><p>所谓四层负载均衡指的是 OSI 七层模型中的传输层，那么传输层 Nginx 已经能支持 TCP/IP 的控制，所以只需要对客户端的请求进行 TCP/IP 协议的包转发就可以实现负载均衡，那么它的好处是性能非常快、只需要底层进行应用处理，而不需要进行一些复杂的逻辑</p><p><a href="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071411264966.png"><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071411264966-1024x430.png" alt="img" title="img"></a></p><h3 id="2-七层负载均衡"><a href="#2-七层负载均衡" class="headerlink" title="2. 七层负载均衡"></a>2. 七层负载均衡</h3><p>七层负载均衡它是在应用层，那么它可以完成很多应用方面的协议请求，比如我们说的 http 应用的负载均衡，它可以实现 http 信息的改写、头信息的改写、安全应用规则控制、 URL 匹配规则控制、以及转发、 rewrite 等等的规则，所以在应用层的服务里面，我们可以做的内容就更多，那么 Nginx 则是一个典型的七层负载均衡 SLB</p><p><a href="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071411264212.png"><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071411264212-1024x433.png" alt="img" title="img"></a></p><h3 id="3-四层负载均衡与七层负载均衡区别"><a href="#3-四层负载均衡与七层负载均衡区别" class="headerlink" title="3. 四层负载均衡与七层负载均衡区别"></a>3. 四层负载均衡与七层负载均衡区别</h3><p>四层负载均衡数据包在底层就进行了分发，而七层负载均衡数据包则是在最顶层进行分发、由此可以看出，七层负载均衡效率没有四负载均衡高。<br>但七层负载均衡更贴近于服务，如:http 协议就是七层协议，我们可以用 Nginx 可以作会话保持， URL 路径规则匹配、 head 头改写等等，这些是四层负载均衡无法实现的</p><h2 id="Nginx-负载均衡调度算法"><a href="#Nginx-负载均衡调度算法" class="headerlink" title="Nginx 负载均衡调度算法"></a>Nginx 负载均衡调度算法</h2><p><a href="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071411263381.png"><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071411263381-1024x435.png" alt="img" title="img"></a></p><h2 id="Nginx-负载均衡配置参数"><a href="#Nginx-负载均衡配置参数" class="headerlink" title="Nginx 负载均衡配置参数"></a>Nginx 负载均衡配置参数</h2><p><a href="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071411262639.png"><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071411262639.png" alt="img" title="img"></a></p><h2 id="Nginx-反向代理负载均衡关系图"><a href="#Nginx-反向代理负载均衡关系图" class="headerlink" title="Nginx 反向代理负载均衡关系图"></a>Nginx 反向代理负载均衡关系图</h2><p><a href="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071411262066.png"><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071411262066.png" alt="img" title="img"></a></p><h2 id="Nginx-负载均衡实战"><a href="#Nginx-负载均衡实战" class="headerlink" title="Nginx 负载均衡实战"></a>Nginx 负载均衡实战</h2><h3 id="1-规划分类"><a href="#1-规划分类" class="headerlink" title="1. 规划分类"></a>1. 规划分类</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;upload     10.0.0.8:80     upload服务器</span><br><span class="line">&#x2F;static     10.0.0.7:80     static静态服务器</span><br><span class="line">&#x2F;           10.0.0.9:80     默认服务器</span><br></pre></td></tr></table></figure><h3 id="2-创建地址池"><a href="#2-创建地址池" class="headerlink" title="2. 创建地址池"></a>2. 创建地址池</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">upstream upload_pools&#123;</span><br><span class="line">    server 10.0.0.8:80;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">upstream static_pools&#123;</span><br><span class="line">    server 10.0.0.7:80;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">upstream defaule_pools&#123;</span><br><span class="line">    server 10.0.0.9:80;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-匹配条件"><a href="#3-匹配条件" class="headerlink" title="3. 匹配条件"></a>3. 匹配条件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">location &#x2F;static&#x2F; &#123; </span><br><span class="line">    proxy_pass http:&#x2F;&#x2F;static_pools;</span><br><span class="line">    include proxy_params;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">###将符合upload的请求交给上传服务器池upload_pools,配置如下</span><br><span class="line">location &#x2F;upload&#x2F; &#123; </span><br><span class="line">    proxy_pass http:&#x2F;&#x2F;upload_pools;</span><br><span class="line">    include proxy_params;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">###不符合上述规则的请求,默认全交给动态服务器池default_pools,配置如下:</span><br><span class="line">location &#x2F; &#123; </span><br><span class="line">    proxy_pass http:&#x2F;&#x2F;default_pools;</span><br><span class="line">    include proxy_params;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-组合在一起"><a href="#4-组合在一起" class="headerlink" title="4. 组合在一起"></a>4. 组合在一起</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01 ~]# cat &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;node_proxy.conf</span><br><span class="line">upstream upload_pools &#123;</span><br><span class="line">    server 10.0.0.8:80;</span><br><span class="line">&#125;</span><br><span class="line">upstream static_pools &#123;</span><br><span class="line">    server 10.0.0.7:80;</span><br><span class="line">&#125;</span><br><span class="line">upstream default_pools &#123;</span><br><span class="line">    server 10.0.0.9:80;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name www.oldboy.com;</span><br><span class="line">    location &#x2F;static&#x2F; &#123; </span><br><span class="line">        proxy_pass http:&#x2F;&#x2F;static_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">    location &#x2F;upload&#x2F; &#123; </span><br><span class="line">        proxy_pass http:&#x2F;&#x2F;upload_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">    location &#x2F; &#123; </span><br><span class="line">        proxy_pass http:&#x2F;&#x2F;default_pools;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-创建代码环境"><a href="#5-创建代码环境" class="headerlink" title="5. 创建代码环境"></a>5. 创建代码环境</h3><p>每个虚拟机存放的网页路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">www.oldboy.com&#x2F;index.html</span><br><span class="line">www.oldboy.com&#x2F;upload&#x2F;index.html</span><br><span class="line">www.oldboy.com&#x2F;static&#x2F;index.html</span><br></pre></td></tr></table></figure><p>创建目录及测试页面命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p &#x2F;data&#x2F;html&#x2F;www&#x2F;&#123;upload,static&#125;</span><br><span class="line">echo  &quot;$(hostname) default&quot; &gt;&#x2F;data&#x2F;html&#x2F;www&#x2F;index.html </span><br><span class="line">echo  &quot;$(hostname) upload&quot; &gt;&#x2F;data&#x2F;html&#x2F;www&#x2F;upload&#x2F;index.html </span><br><span class="line">echo  &quot;$(hostname) static&quot; &gt;&#x2F;data&#x2F;html&#x2F;www&#x2F;static&#x2F;index.html </span><br></pre></td></tr></table></figure><h3 id="6-进行测试"><a href="#6-进行测试" class="headerlink" title="6. 进行测试"></a>6. 进行测试</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01 ~]# curl www.oldboy.com&#x2F;index.html</span><br><span class="line">sweb01 default</span><br><span class="line">[root@lb01 ~]# curl www.oldboy.com&#x2F;static&#x2F;</span><br><span class="line">web01 static</span><br><span class="line">[root@lb01 ~]# curl www.oldboy.com&#x2F;upload&#x2F;</span><br><span class="line">web02 upload</span><br></pre></td></tr></table></figure><h1 id="第三章-根据条件转发实战"><a href="#第三章-根据条件转发实战" class="headerlink" title="第三章 根据条件转发实战"></a>第三章 根据条件转发实战</h1><h2 id="3-1-根据文件类型转发"><a href="#3-1-根据文件类型转发" class="headerlink" title="3.1 根据文件类型转发"></a>3.1 根据文件类型转发</h2><h3 id="转发需求"><a href="#转发需求" class="headerlink" title="转发需求"></a>转发需求</h3><p>只需修改 nginx.conf 的配置文件中的 loaction 区块代码即可</p><h3 id="lb-配置文件"><a href="#lb-配置文件" class="headerlink" title="lb 配置文件"></a>lb 配置文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">location ~ .*.(gif|jpg|jpeg|png|bmp|swf|css|js)$ &#123;</span><br><span class="line">    proxy_pass http:&#x2F;&#x2F;static_pools;</span><br><span class="line">    proxy_set_header Host $host;</span><br><span class="line">    proxy_set_header X-Forwarded-For $remote_addr;</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line">    upstream server_pools &#123;</span><br><span class="line">        server 10.0.0.7 weight&#x3D;1 max_fails&#x3D;3 fail_timeout&#x3D;10s;</span><br><span class="line">        server 10.0.0.8 weight&#x3D;1 max_fails&#x3D;3 fail_timeout&#x3D;10s;</span><br><span class="line">        server 10.0.0.9 weight&#x3D;1 max_fails&#x3D;3 fail_timeout&#x3D;10s;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="3-2-动静分离"><a href="#3-2-动静分离" class="headerlink" title="3.2 动静分离"></a>3.2 动静分离</h2><h3 id="转发需求-1"><a href="#转发需求-1" class="headerlink" title="转发需求"></a>转发需求</h3><p>动态资源转发到 php 服务器<br>静态资源转发到静态服务器</p><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01 &#x2F;etc&#x2F;nginx&#x2F;conf.d]# cat ds_proxy.conf </span><br><span class="line">root@lb01 conf.d]# cat ds_proxy.conf</span><br><span class="line">upstream static &#123;</span><br><span class="line">    server 10.0.0.7:80;</span><br><span class="line">&#125;</span><br><span class="line">upstream php &#123;</span><br><span class="line">    server 10.0.0.8:8080;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name ds.oldboy.com;</span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line">        root &#x2F;code;</span><br><span class="line">        index index.html;</span><br><span class="line">    &#125;</span><br><span class="line">    location ~ .*\.(png|jpg|gif)$ &#123;</span><br><span class="line">        proxy_pass http:&#x2F;&#x2F;static;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">    location ~ .*\.php$ &#123;</span><br><span class="line">        proxy_pass http:&#x2F;&#x2F;php;</span><br><span class="line">        include proxy_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-3-根据客户端转发"><a href="#3-3-根据客户端转发" class="headerlink" title="3.3 根据客户端转发"></a>3.3 根据客户端转发</h2><h3 id="转发需求-2"><a href="#转发需求-2" class="headerlink" title="转发需求"></a>转发需求</h3><p>手机和电脑 访问相同的网站 —- 结果不同</p><h3 id="lb-服务器配置文件"><a href="#lb-服务器配置文件" class="headerlink" title="lb 服务器配置文件"></a>lb 服务器配置文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01 conf.d]# cat sj.conf    </span><br><span class="line">upstream iphone &#123;</span><br><span class="line">    server 172.16.1.7:9091;</span><br><span class="line">&#125;</span><br><span class="line">upstream android &#123;</span><br><span class="line">    server 172.16.1.7:9090;</span><br><span class="line">&#125;</span><br><span class="line">upstream pc &#123;</span><br><span class="line">    server 172.16.1.7:9092;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name sj.oldboy.com;</span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line">        #默认跳转至 pc 站点</span><br><span class="line">        proxy_pass http:&#x2F;&#x2F;pc;</span><br><span class="line">        include proxy_params;</span><br><span class="line">        #如果客户端是 Iphone 则跳转到 iphone 的资源池</span><br><span class="line">        if ($http_user_agent ~* &quot;Iphone&quot;) &#123;</span><br><span class="line">            proxy_pass http:&#x2F;&#x2F;iphone;</span><br><span class="line">        &#125; </span><br><span class="line">        #如果客户端是 Android 则跳转到 android 的资源池</span><br><span class="line">        if ($http_user_agent ~* &quot;Android&quot;)&#123;</span><br><span class="line">            proxy_pass http:&#x2F;&#x2F;android;</span><br><span class="line">        &#125; </span><br><span class="line">        #如果客户端是 IE 浏览器，则返回 403 错误。</span><br><span class="line">        if ($http_user_agent ~* &quot;msie&quot;)&#123;</span><br><span class="line">         return 403;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="web-服务器配置"><a href="#web-服务器配置" class="headerlink" title="web 服务器配置"></a>web 服务器配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 conf.d]# cat sj.conf    </span><br><span class="line">server &#123;</span><br><span class="line">    listen 9090;</span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line">        root &#x2F;code&#x2F;android;</span><br><span class="line">        index index.html;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen 9091;</span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line">        root &#x2F;code&#x2F;iphone;</span><br><span class="line">        index index.html;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen 9092;</span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line">        root &#x2F;code&#x2F;pc;</span><br><span class="line">        index index.html;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@web01 conf.d]# mkdir -p &#x2F;code&#x2F;&#123;android,iphone,pc&#125;</span><br><span class="line">[root@web01 conf.d]# echo &quot;PC&quot; &gt; &#x2F;code&#x2F;pc&#x2F;index.html</span><br><span class="line">[root@web01 conf.d]# echo &quot;Iphone&quot; &gt; &#x2F;code&#x2F;iphone&#x2F;index.html</span><br><span class="line">[root@web01 conf.d]# echo &quot;Android&quot; &gt; &#x2F;code&#x2F;android&#x2F;index.html</span><br><span class="line">[root@web01 conf.d]# systemctl restart nginx</span><br></pre></td></tr></table></figure><h3 id="访问测试"><a href="#访问测试" class="headerlink" title="访问测试"></a>访问测试</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@lb01 conf.d]# curl -A &quot;chrome&quot; sj.oldboy.com</span><br><span class="line">PC</span><br><span class="line">[root@lb01 conf.d]# curl -A &quot;iphone&quot; sj.oldboy.com      </span><br><span class="line">Iphone</span><br><span class="line">[root@lb01 conf.d]# curl -A &quot;android&quot; sj.oldboy.com      </span><br><span class="line">Android  </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx反向代理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker基本架构网络模型</title>
      <link href="/posts/24460/"/>
      <url>/posts/24460/</url>
      
        <content type="html"><![CDATA[<h3 id="一，NAT（最小）"><a href="#一，NAT（最小）" class="headerlink" title="一，NAT（最小）"></a>一，NAT（最小）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NAT网络模型，默认情况下，均为NAT模式，如网络的端口映射就为NAT</span><br></pre></td></tr></table></figure><h3 id="二，none"><a href="#二，none" class="headerlink" title="二，none"></a>二，none</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">格式：docker run --net&#x3D;none</span><br><span class="line"></span><br><span class="line">[root@docker ~]# docker run --rm -ti --net&#x3D;none centos:centos7</span><br></pre></td></tr></table></figure><h3 id="三，主机（与主机相同-IP）"><a href="#三，主机（与主机相同-IP）" class="headerlink" title="三，主机（与主机相同 IP）"></a>三，主机（与主机相同 IP）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">格式：docker run --net&#x3D;host</span><br><span class="line"></span><br><span class="line">[root@docker ~]# docker run --rm -ti --net&#x3D;Host centos:centos7</span><br><span class="line">[root@docker &#x2F;]# ifconfig</span><br><span class="line">docker0: flags&#x3D;4099&lt;UP,BROADCAST,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 172.7.5.1  netmask 255.255.255.0  broadcast 172.7.5.255</span><br><span class="line">        inet6 fe80::42:28ff:fe56:8b6  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        ether 02:42:28:56:08:b6  txqueuelen 0  (Ethernet)</span><br><span class="line">        RX packets 135990  bytes 9017234 (8.5 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 158771  bytes 317188403 (302.4 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">ens192: flags&#x3D;4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 10.3.153.120  netmask 255.255.255.0  broadcast 10.3.153.255</span><br><span class="line">        inet6 fe80::36aa:b367:aa13:b475  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        ether 00:50:56:9b:00:06  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 747539  bytes 528246025 (503.7 MiB)</span><br><span class="line">        RX errors 0  dropped 1227  overruns 0  frame 0</span><br><span class="line">        TX packets 249250  bytes 38867074 (37.0 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">lo: flags&#x3D;73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;</span><br><span class="line">        loop  txqueuelen 1  (Local Loopback)</span><br><span class="line">        RX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure><h3 id="四，联合网络（即两个容器共享一个-IP-地址）"><a href="#四，联合网络（即两个容器共享一个-IP-地址）" class="headerlink" title="四，联合网络（即两个容器共享一个 IP 地址）"></a>四，联合网络（即两个容器共享一个 IP 地址）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">第一个容器运行</span><br><span class="line">-----</span><br><span class="line">[root@docker ~]# docker run --rm -ti centos:centos7     #以nat模式启动了一个容器</span><br><span class="line">[root@2f504d6966dc &#x2F;]# ifconfig</span><br><span class="line">eth0: flags&#x3D;4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 172.7.5.2  netmask 255.255.255.0  broadcast 172.7.5.255     #IP172.7.5.2</span><br><span class="line">        ether 02:42:ac:07:05:02  txqueuelen 0  (Ethernet)</span><br><span class="line">        RX packets 7417  bytes 13726936 (13.0 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 6118  bytes 473182 (462.0 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">第二个容器运行，以联合网络的方式</span><br><span class="line">-----</span><br><span class="line">格式：Docker run —net&#x3D;container:$&#123;container_id&#125;</span><br><span class="line"></span><br><span class="line">[root@docker ~]# docker ps       #查看第一个容器的ID值</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES</span><br><span class="line">2f504d6966dc        centos:centos7      &quot;&#x2F;bin&#x2F;bash&quot;         6 minutes ago       Up 6 minutes                            thirsty_bhabha</span><br><span class="line">[root@docker ~]# docker run --rm -ti --net&#x3D;container:2f504d6966dc centos:centos7</span><br><span class="line">[root@2f504d6966dc &#x2F;]# ifconfig</span><br><span class="line">eth0: flags&#x3D;4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 172.7.5.2  netmask 255.255.255.0  broadcast 172.7.5.255</span><br><span class="line">        ether 02:42:ac:07:05:02  txqueuelen 0  (Ethernet)</span><br><span class="line">        RX packets 15431  bytes 27381590 (26.1 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 13359  bytes 1061065 (1.0 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">lo: flags&#x3D;73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        loop  txqueuelen 1  (Local Loopback)</span><br><span class="line">        RX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Docker+K8s </category>
          
          <category> 云计算 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker网络模型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dockerfile 小实验</title>
      <link href="/posts/39655/"/>
      <url>/posts/39655/</url>
      
        <content type="html"><![CDATA[<h1 id="综合实验"><a href="#综合实验" class="headerlink" title="综合实验"></a>综合实验</h1><p>运行一个 Docker 容器，在浏览器打开 niubi.com 能访问到百度首页运行一个 Docker 容器，在浏览器打开 niubi.com 能访问到百度首页</p><h2 id="准备-Docekr-镜像"><a href="#准备-Docekr-镜像" class="headerlink" title="准备 Docekr 镜像"></a>准备 Docekr 镜像</h2><p>DockerfileDockerfile</p><p>/data/docker/dockerfile/Dockerfile</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">FROM xoxoyun&#x2F;nginx:v1.12.2</span><br><span class="line">USER root</span><br><span class="line">ENV WWW &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;conf.d</span><br><span class="line">ENV CONF &#x2F;etc&#x2F;nginx&#x2F;conf.d</span><br><span class="line">RUN &#x2F;bin&#x2F;cp &#x2F;usr&#x2F;share&#x2F;zoneinfo&#x2F;Asia&#x2F;Shanghai &#x2F;etc&#x2F;localtime &amp;&amp; echo &#39;Aisa&#x2F;Shanghai&#39; &gt;&#x2F;etc&#x2F;timezone</span><br><span class="line">WORKDIR $WWW</span><br><span class="line">ADD index.html $WWW&#x2F;index.html</span><br><span class="line">ADD niubi.com.conf $CONF&#x2F;niubi.com.conf</span><br><span class="line">EXPOSE 80</span><br><span class="line">CMD [&quot;nginx&quot;,&quot;-g&quot;,&quot;daemon off;&quot;]</span><br></pre></td></tr></table></figure><p>index.htmlindex.html</p><blockquote><p>/data/docker/dockerfile/index.html</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget www.baidu.com -O index.html</span><br></pre></td></tr></table></figure><p>niubi.com.confniubi.com.conf (虚拟主机配置文件)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">   listen 80;</span><br><span class="line">   server_name niubi.com;</span><br><span class="line">   root &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="构建镜像"><a href="#构建镜像" class="headerlink" title="构建镜像"></a>构建镜像</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker build . -t xoxoyun&#x2F;nginx:niubibaidu</span><br><span class="line">docker run --rm -p80:80 xoxoyun&#x2F;nginx:niubibaidu </span><br></pre></td></tr></table></figure><h2 id="Win-R-运行-drivers-找到-hosts-文件添加域名解析-浏览器访问即可"><a href="#Win-R-运行-drivers-找到-hosts-文件添加域名解析-浏览器访问即可" class="headerlink" title="Win+R 运行 drivers 找到 hosts 文件添加域名解析 浏览器访问即可"></a>Win+R 运行 drivers 找到 hosts 文件添加域名解析 浏览器访问即可</h2>]]></content>
      
      
      <categories>
          
          <category> Docker+K8s </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Dockerfile </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL进阶之路初级DBA（十二）</title>
      <link href="/posts/17150/"/>
      <url>/posts/17150/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL-lesson12-优化"><a href="#MySQL-lesson12-优化" class="headerlink" title="MySQL-lesson12-优化"></a>MySQL-lesson12-优化</h1><h1 id="1-优化哲学"><a href="#1-优化哲学" class="headerlink" title="1.优化哲学"></a>1.优化哲学</h1><h2 id="1-1-为什么优化？"><a href="#1-1-为什么优化？" class="headerlink" title="1.1 为什么优化？"></a>1.1 为什么优化？</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">为了获得成就感?</span><br><span class="line">为了证实比系统设计者更懂数据库?</span><br><span class="line">为了从优化成果来证实优化者更有价值?</span><br></pre></td></tr></table></figure><p><img src="http://upload-images.jianshu.io/upload_images/16956686-07ec8ccb021ce95b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/208/format/webp" alt="img"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">但通常事实证实的结果往往会和您期待相反！</span><br><span class="line">优化有风险，涉足需谨慎！</span><br></pre></td></tr></table></figure><h2 id="1-2-优化风险"><a href="#1-2-优化风险" class="headerlink" title="1.2 优化风险"></a>1.2 优化风险</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">优化不总是对一个单纯的环境进行！还很可能是一个复杂的已投产的系统。</span><br><span class="line">优化手段本来就有很大的风险，只不过你没能力意识到和预见到！</span><br><span class="line">任何的技术可以解决一个问题，但必然存在带来一个问题的风险！</span><br><span class="line">对于优化来说解决问题而带来的问题控制在可接受的范围内才是有成果。</span><br><span class="line">保持现状或出现更差的情况都是失败！</span><br><span class="line"></span><br><span class="line">稳定性和业务可持续性通常比性能更重要！</span><br><span class="line">优化不可避免涉及到变更，变更就有风险！</span><br><span class="line">优化使性能变好，维持和变差是等概率事件！</span><br><span class="line">优化不能只是数据库管理员担当风险，但会所有的人分享优化成果！</span><br><span class="line">所以优化工作是由业务需要驱使的！！！</span><br></pre></td></tr></table></figure><h2 id="1-3-谁参与优化"><a href="#1-3-谁参与优化" class="headerlink" title="1.3 谁参与优化"></a>1.3 谁参与优化</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">数据库管理员</span><br><span class="line">业务部门代表</span><br><span class="line">应用程序架构师</span><br><span class="line">应用程序设计人员</span><br><span class="line">应用程序开发人员</span><br><span class="line">硬件及系统管理员</span><br><span class="line">存储管理员</span><br></pre></td></tr></table></figure><p><img src="http://upload-images.jianshu.io/upload_images/16956686-76d310bb00d62d3e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/361/format/webp" alt="img"></p><p>image.png</p><h2 id="1-4-优化方向"><a href="#1-4-优化方向" class="headerlink" title="1.4 优化方向"></a>1.4 优化方向</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">安全优化（业务持续性）</span><br><span class="line">性能优化（业务高效性）</span><br></pre></td></tr></table></figure><h2 id="1-5-优化的范围及思路"><a href="#1-5-优化的范围及思路" class="headerlink" title="1.5 优化的范围及思路"></a>1.5 优化的范围及思路</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">优化范围：</span><br><span class="line">存储、主机和操作系统:</span><br><span class="line">    主机架构稳定性</span><br><span class="line">    I&#x2F;O规划及配置</span><br><span class="line">    Swap</span><br><span class="line">    OS内核参数</span><br><span class="line">        网络问题</span><br><span class="line">应用程序:（Index，lock，session）</span><br><span class="line">        应用程序稳定性和性能</span><br><span class="line">        SQL语句性能</span><br><span class="line">    串行访问资源</span><br><span class="line">    性能欠佳会话管理</span><br><span class="line">数据库优化:（内存、数据库设计、参数）</span><br><span class="line">    内存</span><br><span class="line">    数据库结构(物理&amp;逻辑)</span><br><span class="line">    实例配置</span><br></pre></td></tr></table></figure><h2 id="优化效果和成本的评估："><a href="#优化效果和成本的评估：" class="headerlink" title="优化效果和成本的评估："></a>优化效果和成本的评估：</h2><p><img src="http://upload-images.jianshu.io/upload_images/16956686-678232e9db29674c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/816/format/webp" alt="img"></p><p>image.png</p><h1 id="2-优化工具的使用"><a href="#2-优化工具的使用" class="headerlink" title="2. 优化工具的使用"></a>2. 优化工具的使用</h1><h2 id="2-1-系统层面的"><a href="#2-1-系统层面的" class="headerlink" title="2.1 系统层面的"></a>2.1 系统层面的</h2><h3 id="2-1-1-CPU"><a href="#2-1-1-CPU" class="headerlink" title="2.1.1 CPU"></a>2.1.1 CPU</h3><h3 id="top"><a href="#top" class="headerlink" title="top"></a>top</h3><h3 id="cpu使用情况的平均值："><a href="#cpu使用情况的平均值：" class="headerlink" title="cpu使用情况的平均值："></a>cpu使用情况的平均值：</h3><p><img src="http://upload-images.jianshu.io/upload_images/16956686-5a9ab6361f5bd39b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/882/format/webp" alt="img"></p><p>image.png</p><h3 id="CPU每个核心的分别使用的情况（按1）："><a href="#CPU每个核心的分别使用的情况（按1）：" class="headerlink" title="CPU每个核心的分别使用的情况（按1）："></a>CPU每个核心的分别使用的情况（按1）：</h3><p><img src="http://upload-images.jianshu.io/upload_images/16956686-79cd367c7f5cc972.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/880/format/webp" alt="img"></p><p>image.png</p><h3 id="程序是如何使用CPU的？"><a href="#程序是如何使用CPU的？" class="headerlink" title="程序是如何使用CPU的？"></a>程序是如何使用CPU的？</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">系统给每个程序分配CPU的时候，以时间来划分表的。</span><br></pre></td></tr></table></figure><h3 id="CPU有效工作时间"><a href="#CPU有效工作时间" class="headerlink" title="CPU有效工作时间?"></a>CPU有效工作时间?</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">计算: 程序运行,数据处理</span><br><span class="line">控制: 少量的关于申请资源和释放资源等</span><br></pre></td></tr></table></figure><h3 id="CPU无效工作时间"><a href="#CPU无效工作时间" class="headerlink" title="CPU无效工作时间"></a>CPU无效工作时间</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">等待 IO</span><br></pre></td></tr></table></figure><h3 id="CPU各项指标说明"><a href="#CPU各项指标说明" class="headerlink" title="CPU各项指标说明"></a>CPU各项指标说明</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">0.0 us</span><br><span class="line">用户程序，在运行过程中，使用的CPU时间的占比。</span><br><span class="line">我们希望的是越高越好，尽量控制在90%</span><br><span class="line">0.0 sy</span><br><span class="line">控制: 资源管理，内核的工作(系统调用)</span><br><span class="line">sys高的原因: </span><br><span class="line">      1.  bug ,中病毒了</span><br><span class="line">      2.  锁的问题</span><br><span class="line">99.9 id </span><br><span class="line">CPU空间的时间占比      </span><br><span class="line"></span><br><span class="line">0.0 wa</span><br><span class="line">CPU花在等待上的时间</span><br><span class="line">wa高的原因：</span><br><span class="line">          1. 锁</span><br><span class="line">          2. IO （raid，过度条带化）</span><br><span class="line">          3. 索引</span><br><span class="line">多cpu使用情况监控：</span><br><span class="line">主要判断我们cpu多核心有没有被充分利用。</span><br><span class="line">现象：单颗很忙，其他很闲，对于MySQL来讲，有可能是并发参数设定不合理导致的。</span><br></pre></td></tr></table></figure><h2 id="2-1-2-MEM"><a href="#2-1-2-MEM" class="headerlink" title="2.1.2 MEM"></a>2.1.2 MEM</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">KiB Mem :  4028432 total,  3774464 free,   116240 used,   137728 buff&#x2F;cache</span><br><span class="line">### 1.2.1 名称介绍</span><br><span class="line">total :总内存大小</span><br><span class="line">free  ：空闲的</span><br><span class="line">used  ：在使用的</span><br><span class="line">buff&#x2F;cache ：缓冲区 和 缓存</span><br></pre></td></tr></table></figure><h3 id="2-1-3-内存管理子系统："><a href="#2-1-3-内存管理子系统：" class="headerlink" title="2.1.3 内存管理子系统："></a>2.1.3 内存管理子系统：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">slab Allocator</span><br><span class="line">buddy system </span><br><span class="line">程序&#x3D;指令+数据</span><br><span class="line">对于page cache来讲(OS buffer)</span><br><span class="line">1. 内存的可用空间的计算   free +buffer cache </span><br><span class="line">2. 内存回收(buffer)的方式:</span><br><span class="line">        (1) 写入磁盘</span><br><span class="line">        (2) swap  </span><br><span class="line">对于数据库来讲：需要将swap屏蔽掉</span><br></pre></td></tr></table></figure><h2 id="2-1-4-swap"><a href="#2-1-4-swap" class="headerlink" title="2.1.4 swap"></a>2.1.4 swap</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">KiB Swap:  2097148 total,  2097148 free,        0 used.  3701464 avail Mem </span><br><span class="line">Linux 6操作系统，默认回收策略（buffer cache），不立即回收策略</span><br><span class="line">内存使用达到100%-60%时候，40% 会使用swap</span><br><span class="line">Linux 7操作系统</span><br><span class="line">内存使用达到100%-30%（70%）时候，才会时候swap</span><br><span class="line">cat &#x2F;proc&#x2F;sys&#x2F;vm&#x2F;swappiness </span><br><span class="line">30  </span><br><span class="line">echo 0 &gt;&#x2F;proc&#x2F;sys&#x2F;vm&#x2F;swappiness    的内容改成0（临时）</span><br><span class="line">vim &#x2F;etc&#x2F;sysctl.conf</span><br><span class="line">添加:</span><br><span class="line">vm.swappiness&#x3D;0</span><br><span class="line">sysctl -p </span><br></pre></td></tr></table></figure><h3 id="2-2-iostat-命令"><a href="#2-2-iostat-命令" class="headerlink" title="2.2. iostat 命令"></a>2.2. iostat 命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">dd if&#x3D;&#x2F;dev&#x2F;zero of&#x3D;&#x2F;tmp&#x2F;bigfile bs&#x3D;1M count&#x3D;4096</span><br><span class="line">iostat -dm 1</span><br><span class="line">现象说明</span><br><span class="line">1. IO 高 cpu us 也高,属于正常现象</span><br><span class="line">2. CPU  us高  IO很低   ,MySQL 不在做增删改查,有可能是存储过程,函数,排序,分组,多表连接</span><br><span class="line">3. Wait,SYS 高  , IO低:IO出问题了,锁等待过多的几率比较大. </span><br><span class="line">IOPS：每秒磁盘最多能够发生的IO次数，这是个定值 </span><br><span class="line">频繁小事务,IOPS很高,达到阈值,可能IO吞吐量没超过IO最大吞吐量.无法新的IO了</span><br><span class="line">存储规划有问题.</span><br></pre></td></tr></table></figure><h2 id="2-3-数据库优化工具"><a href="#2-3-数据库优化工具" class="headerlink" title="2.3 数据库优化工具"></a>2.3 数据库优化工具</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">show status  </span><br><span class="line">show variables </span><br><span class="line">show index  </span><br><span class="line">show processlist </span><br><span class="line">show slave status</span><br><span class="line">show engine innodb status </span><br><span class="line">desc &#x2F;explain </span><br><span class="line">    slowlog</span><br><span class="line">扩展类深度优化:</span><br><span class="line">pt系列</span><br><span class="line">mysqlslap </span><br><span class="line">sysbench </span><br><span class="line">information_schema </span><br><span class="line">performance_schema</span><br><span class="line">sys</span><br></pre></td></tr></table></figure><h1 id="3-优化思路分解"><a href="#3-优化思路分解" class="headerlink" title="3. 优化思路分解"></a>3. 优化思路分解</h1><h2 id="3-1-硬件优化"><a href="#3-1-硬件优化" class="headerlink" title="3.1 硬件优化"></a>3.1 硬件优化</h2><h2 id="主机"><a href="#主机" class="headerlink" title="主机"></a>主机</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">真实的硬件（PC Server）: DELL  R系列 ，华为，浪潮，HP，联想</span><br><span class="line">云产品：ECS、数据库RDS、DRDS</span><br><span class="line">IBM 小型机 P6  570  595   P7 720  750 780     P8 </span><br></pre></td></tr></table></figure><h2 id="CPU根据数据库类型"><a href="#CPU根据数据库类型" class="headerlink" title="CPU根据数据库类型"></a>CPU根据数据库类型</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">OLTP </span><br><span class="line">OLAP  </span><br><span class="line">IO密集型：线上系统，OLTP主要是IO密集型的业务，高并发</span><br><span class="line">CPU密集型：数据分析数据处理，OLAP，cpu密集型的，需要CPU高计算能力（i系列，IBM power系列）</span><br><span class="line">CPU密集型： I 系列的，主频很高，核心少 </span><br><span class="line">IO密集型：  E系列（至强），主频相对低，核心数量多</span><br></pre></td></tr></table></figure><h2 id="内存"><a href="#内存" class="headerlink" title="内存"></a>内存</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">建议2-3倍cpu核心数量 （ECC）</span><br></pre></td></tr></table></figure><h2 id="磁盘选择"><a href="#磁盘选择" class="headerlink" title="磁盘选择"></a>磁盘选择</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SATA-III   SAS    Fc    SSD（sata） pci-e  ssd  Flash</span><br><span class="line">主机 RAID卡的BBU(Battery Backup Unit)关闭</span><br></pre></td></tr></table></figure><h2 id="存储"><a href="#存储" class="headerlink" title="存储"></a>存储</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">根据存储数据种类的不同，选择不同的存储设备</span><br><span class="line">配置合理的RAID级别(raid5、raid10、热备盘)   </span><br><span class="line">r0 :条带化 ,性能高</span><br><span class="line">r1 :镜像，安全</span><br><span class="line">r5 :校验+条带化，安全较高+性能较高（读），写性能较低 （适合于读多写少）</span><br><span class="line">r10：安全+性能都很高，最少四块盘，浪费一半的空间（高IO要求）</span><br></pre></td></tr></table></figure><h2 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1、硬件买好的（单卡单口）</span><br><span class="line">2、网卡绑定（bonding），交换机堆叠</span><br><span class="line">以上问题，提前规避掉。</span><br></pre></td></tr></table></figure><h2 id="3-2-操作系统优化"><a href="#3-2-操作系统优化" class="headerlink" title="3.2 操作系统优化"></a>3.2 操作系统优化</h2><h2 id="Swap调整"><a href="#Swap调整" class="headerlink" title="Swap调整"></a>Swap调整</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">echo 0 &gt;&#x2F;proc&#x2F;sys&#x2F;vm&#x2F;swappiness的内容改成0（临时），</span><br><span class="line">&#x2F;etc&#x2F;sysctl.conf</span><br><span class="line">上添加vm.swappiness&#x3D;0（永久）</span><br><span class="line">sysctl -p</span><br><span class="line"></span><br><span class="line">这个参数决定了Linux是倾向于使用swap，还是倾向于释放文件系统cache。在内存紧张的情况下，数值越低越倾向于释放文件系统cache。</span><br><span class="line">当然，这个参数只能减少使用swap的概率，并不能避免Linux使用swap。</span><br><span class="line"></span><br><span class="line">修改MySQL的配置参数innodb_flush_method，开启O_DIRECT模式</span><br><span class="line">这种情况下，InnoDB的buffer pool会直接绕过文件系统cache来访问磁盘，但是redo log依旧会使用文件系统cache。值得注意的是，Redo log是覆写模式的，即使使用了文件系统的cache，也不会占用太多</span><br></pre></td></tr></table></figure><h2 id="IO调度策略"><a href="#IO调度策略" class="headerlink" title="IO调度策略"></a>IO调度策略</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">centos 7 默认是deadline</span><br><span class="line">cat   &#x2F;sys&#x2F;block&#x2F;sda&#x2F;queue&#x2F;scheduler</span><br><span class="line"></span><br><span class="line">#临时修改为deadline(centos6)</span><br><span class="line">echo deadline &gt;&#x2F;sys&#x2F;block&#x2F;sda&#x2F;queue&#x2F;scheduler </span><br><span class="line">vi &#x2F;boot&#x2F;grub&#x2F;grub.conf</span><br><span class="line">更改到如下内容:</span><br><span class="line">kernel &#x2F;boot&#x2F;vmlinuz-2.6.18-8.el5 ro root&#x3D;LABEL&#x3D;&#x2F; elevator&#x3D;deadline rhgb quiet</span><br><span class="line"></span><br><span class="line">IO ：</span><br><span class="line">    raid</span><br><span class="line">    no lvm</span><br><span class="line">    ext4或xfs</span><br><span class="line">    ssd</span><br><span class="line">    IO调度策略</span><br><span class="line">提前规划好以上所有问题，减轻MySQL优化的难度。</span><br></pre></td></tr></table></figure><h2 id="3-3-应用端"><a href="#3-3-应用端" class="headerlink" title="3.3 应用端"></a>3.3 应用端</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1. 开发过程规范,标准</span><br><span class="line">2. 减少烂SQL:不走索引,复杂逻辑,切割大事务.</span><br><span class="line">3. 避免业务逻辑错误,避免锁争用.</span><br><span class="line">这个阶段,需要我们DBA深入业务,或者要和开发人员\业务人员配合实现</span><br><span class="line"></span><br><span class="line">优化,最根本的是&quot;优化&quot;人.</span><br><span class="line">                    ----oldguo      </span><br></pre></td></tr></table></figure><h1 id="4-MySQL参数优化测试"><a href="#4-MySQL参数优化测试" class="headerlink" title="4. MySQL参数优化测试"></a>4. MySQL参数优化测试</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">虚拟机vm12.5，OS centos 6.9（系统已优化），cpu*4（I5 4440 3.1GHZ）,MEM*4GB ,HardDisk:SSD</span><br><span class="line"></span><br><span class="line">模拟数据库数据</span><br><span class="line">drop database if exists oldboy;</span><br><span class="line">create database oldboy charset utf8mb4 collate utf8mb4_bin;</span><br><span class="line">use oldboy;</span><br><span class="line">create table t_100w (id int,num int,k1 char(2),k2 char(4),dt timestamp);</span><br><span class="line">delimiter &#x2F;&#x2F;</span><br><span class="line">create  procedure rand_data(in num int)</span><br><span class="line">begin</span><br><span class="line">declare str char(62) default &#39;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#39;;</span><br><span class="line">declare str2 char(2);</span><br><span class="line">declare str4 char(4);</span><br><span class="line">declare i int default 0;</span><br><span class="line">while i&lt;num do</span><br><span class="line">set str2&#x3D;concat(substring(str,1+floor(rand()*61),1),substring(str,1+floor(rand()*61),1));</span><br><span class="line">set str4&#x3D;concat(substring(str,1+floor(rand()*61),2),substring(str,1+floor(rand()*61),2));</span><br><span class="line">set i&#x3D;i+1;</span><br><span class="line">insert into t_100w values (i,floor(rand()*num),str2,str4,now());</span><br><span class="line">end while;</span><br><span class="line">end;</span><br><span class="line">&#x2F;&#x2F;</span><br><span class="line">delimiter ;</span><br><span class="line">插入100w条数据：</span><br><span class="line">call rand_data(10000000);</span><br><span class="line">commit;</span><br><span class="line"></span><br><span class="line">mysqlslap --defaults-file&#x3D;&#x2F;etc&#x2F;my.cnf \</span><br><span class="line">--concurrency&#x3D;100 --iterations&#x3D;1 --create-schema&#x3D;&#39;oldboy&#39; \</span><br><span class="line">--query&#x3D;&quot;select * from oldboy.t1000w where k2&#x3D;&#39;FGCD&#39;&quot; engine&#x3D;innodb \</span><br><span class="line">--number-of-queries&#x3D;200 -uroot -p123 -verbose</span><br></pre></td></tr></table></figure><h1 id="5-优化细节："><a href="#5-优化细节：" class="headerlink" title="5. 优化细节："></a>5. 优化细节：</h1><h2 id="5-1-参数优化"><a href="#5-1-参数优化" class="headerlink" title="5.1 参数优化"></a>5.1 参数优化</h2><h2 id="Max-connections"><a href="#Max-connections" class="headerlink" title="Max_connections *"></a>Max_connections <strong>*</strong></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">（1）简介</span><br><span class="line">Mysql的最大连接数，如果服务器的并发请求量比较大，可以调高这个值，当然这是要建立在机器能够支撑的情况下，因为如果连接数越来越多，mysql会为每个连接提供缓冲区，就会开销的越多的内存，所以需要适当的调整该值，不能随便去提高设值。</span><br><span class="line">（2）判断依据</span><br><span class="line">show variables like &#39;max_connections&#39;;</span><br><span class="line">    +-----------------+-------+</span><br><span class="line">    | Variable_name   | Value |</span><br><span class="line">    +-----------------+-------+</span><br><span class="line">    | max_connections | 151   |</span><br><span class="line">    +-----------------+-------+</span><br><span class="line">show status like &#39;Max_used_connections&#39;;</span><br><span class="line">    +----------------------+-------+</span><br><span class="line">    | Variable_name        | Value |</span><br><span class="line">    +----------------------+-------+</span><br><span class="line">    | Max_used_connections | 101   |</span><br><span class="line">    +----------------------+-------+</span><br><span class="line"></span><br><span class="line">（3）修改方式举例</span><br><span class="line">vim &#x2F;etc&#x2F;my.cnf </span><br><span class="line">Max_connections&#x3D;1024</span><br><span class="line"></span><br><span class="line">补充:</span><br><span class="line">    1.开启数据库时,我们可以临时设置一个比较大的测试值</span><br><span class="line">    2.观察show status like &#39;Max_used_connections&#39;;变化</span><br><span class="line">    3.如果max_used_connections跟max_connections相同,</span><br><span class="line">    那么就是max_connections设置过低或者超过服务器的负载上限了，</span><br><span class="line">    低于10%则设置过大. </span><br></pre></td></tr></table></figure><h2 id="back-log"><a href="#back-log" class="headerlink" title="back_log ***"></a>back_log ***</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">（1）简介</span><br><span class="line">mysql能暂存的连接数量，当主要mysql线程在一个很短时间内得到非常多的连接请求时候它就会起作用，如果mysql的连接数据达到max_connections时候，新来的请求将会被存在堆栈中，等待某一连接释放资源，该推栈的数量及back_log,如果等待连接的数量超过back_log，将不被授予连接资源。</span><br><span class="line">back_log值指出在mysql暂时停止回答新请求之前的短时间内有多少个请求可以被存在推栈中，只有如果期望在一个短时间内有很多连接的时候需要增加它</span><br><span class="line">（2）判断依据</span><br><span class="line">show full processlist</span><br><span class="line">发现大量的待连接进程时，就需要加大back_log或者加大max_connections的值</span><br><span class="line">（3）修改方式举例</span><br><span class="line">vim &#x2F;etc&#x2F;my.cnf </span><br><span class="line">back_log&#x3D;1024</span><br></pre></td></tr></table></figure><h2 id="wait-timeout和interactive-timeout"><a href="#wait-timeout和interactive-timeout" class="headerlink" title="wait_timeout和interactive_timeout ****"></a>wait_timeout和interactive_timeout ****</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">（1）简介</span><br><span class="line">wait_timeout：指的是mysql在关闭一个非交互的连接之前所要等待的秒数</span><br><span class="line">interactive_timeout：指的是mysql在关闭一个交互的连接之前所需要等待的秒数，比如我们在终端上进行mysql管理，使用的即使交互的连接，这时候，如果没有操作的时间超过了interactive_time设置的时间就会自动的断开，默认的是28800，可调优为7200。</span><br><span class="line">wait_timeout:如果设置太小，那么连接关闭的就很快，从而使一些持久的连接不起作用</span><br><span class="line">（2）设置建议</span><br><span class="line">如果设置太大，容易造成连接打开时间过长，在show processlist时候，能看到很多的连接 ，一般希望wait_timeout尽可能低</span><br><span class="line">（3）修改方式举例</span><br><span class="line">wait_timeout&#x3D;60</span><br><span class="line">interactive_timeout&#x3D;1200</span><br><span class="line">长连接的应用，为了不去反复的回收和分配资源，降低额外的开销。</span><br><span class="line">一般我们会将wait_timeout设定比较小，interactive_timeout要和应用开发人员沟通长链接的应用是否很多。如果他需要长链接，那么这个值可以不需要调整。</span><br><span class="line">另外还可以使用类外的参数弥补。</span><br></pre></td></tr></table></figure><h2 id="5-4-key-buffer-size"><a href="#5-4-key-buffer-size" class="headerlink" title="5.4 key_buffer_size *"></a>5.4 key_buffer_size <strong>*</strong></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">（1）简介</span><br><span class="line">key_buffer_size指定索引缓冲区的大小，它决定索引处理的速度，尤其是索引读的速度</span><br><span class="line">《1》此参数与myisam表的索引有关</span><br><span class="line">《2》临时表的创建有关（多表链接、子查询中、union）</span><br><span class="line">     在有以上查询语句出现的时候，需要创建临时表，用完之后会被丢弃</span><br><span class="line">     临时表有两种创建方式：</span><br><span class="line">                        内存中-------&gt;key_buffer_size</span><br><span class="line">                        磁盘上-------&gt;ibdata1(5.6)</span><br><span class="line">                                      ibtmp1 (5.7）</span><br><span class="line">（2）设置依据</span><br><span class="line">通过key_read_requests和key_reads可以直到key_baffer_size设置是否合理。</span><br><span class="line">mysql&gt; show variables like &quot;key_buffer_size%&quot;;</span><br><span class="line">+-----------------+---------+</span><br><span class="line">| Variable_name   | Value   |</span><br><span class="line">+-----------------+---------+</span><br><span class="line">| key_buffer_size | 8388608 |</span><br><span class="line">+-----------------+---------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; </span><br><span class="line">mysql&gt; show status like &quot;key_read%&quot;;</span><br><span class="line">+-------------------+-------+</span><br><span class="line">| Variable_name     | Value |</span><br><span class="line">+-------------------+-------+</span><br><span class="line">| Key_read_requests | 10    |</span><br><span class="line">| Key_reads         | 2     |</span><br><span class="line">+-------------------+-------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; </span><br><span class="line">一共有10个索引读取请求，有2个请求在内存中没有找到直接从硬盘中读取索引</span><br><span class="line">控制在 5%以内 。</span><br><span class="line">注：key_buffer_size只对myisam表起作用，即使不使用myisam表，但是内部的临时磁盘表是myisam表，也要使用该值。</span><br><span class="line">可以使用检查状态值created_tmp_disk_tables得知：</span><br><span class="line"></span><br><span class="line">mysql&gt; show status like &quot;created_tmp%&quot;;</span><br><span class="line">+-------------------------+-------+</span><br><span class="line">| Variable_name           | Value |</span><br><span class="line">+-------------------------+-------+</span><br><span class="line">| Created_tmp_disk_tables | 0     |</span><br><span class="line">| Created_tmp_files       | 6     |</span><br><span class="line">| Created_tmp_tables      | 1     |</span><br><span class="line">+-------------------------+-------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line">mysql&gt; </span><br><span class="line">通常地，我们习惯以 Created_tmp_tables&#x2F;(Created_tmp_disk_tables + Created_tmp_tables) </span><br><span class="line">Created_tmp_disk_tables&#x2F;(Created_tmp_disk_tables + Created_tmp_tables) </span><br><span class="line"></span><br><span class="line">或者已各自的一个时段内的差额计算，来判断基于内存的临时表利用率。所以，我们会比较关注 Created_tmp_disk_tables 是否过多，从而认定当前服务器运行状况的优劣。</span><br><span class="line">Created_tmp_disk_tables&#x2F;(Created_tmp_disk_tables + Created_tmp_tables) </span><br><span class="line">控制在5%-10%以内</span><br><span class="line">看以下例子：</span><br><span class="line">在调用mysqldump备份数据时，大概执行步骤如下：</span><br><span class="line">180322 17:39:33       7 Connect     root@localhost on</span><br><span class="line">7 Query       &#x2F;*!40100 SET @@SQL_MODE&#x3D;&#39;&#39; *&#x2F;</span><br><span class="line">7 Init DB     guo</span><br><span class="line">7 Query       SHOW TABLES LIKE &#39;guo&#39;</span><br><span class="line">7 Query       LOCK TABLES &#96;guo&#96; READ &#x2F;*!32311 LOCAL *&#x2F;</span><br><span class="line">7 Query       SET OPTION SQL_QUOTE_SHOW_CREATE&#x3D;1</span><br><span class="line">7 Query       show create table &#96;guo&#96;</span><br><span class="line">7 Query       show fields from &#96;guo&#96;</span><br><span class="line">7 Query       show table status like &#39;guo&#39;</span><br><span class="line">7 Query       SELECT &#x2F;*!40001 SQL_NO_CACHE *&#x2F; * FROM &#96;guo&#96;</span><br><span class="line">7 Query       UNLOCK TABLES</span><br><span class="line">7 Quit</span><br><span class="line"></span><br><span class="line">其中，有一步是：show fields from &#96;guo&#96;。从slow query记录的执行计划中，可以知道它也产生了 Tmp_table_on_disk。</span><br><span class="line"></span><br><span class="line">所以说，以上公式并不能真正反映到mysql里临时表的利用率，有些情况下产生的 Tmp_table_on_disk 我们完全不用担心，因此没必要过分关注 Created_tmp_disk_tables，但如果它的值大的离谱的话，那就好好查一下，你的服务器到底都在执行什么查询了。 </span><br><span class="line">（3）配置方法</span><br><span class="line">key_buffer_size&#x3D;64M</span><br></pre></td></tr></table></figure><h2 id="query-cache-size"><a href="#query-cache-size" class="headerlink" title="query_cache_size ***"></a>query_cache_size ***</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line">（1）简介：</span><br><span class="line">查询缓存简称QC，使用查询缓冲，mysql将查询结果存放在缓冲区中，今后对于同样的select语句（区分大小写）,将直接从缓冲区中读取结果。</span><br><span class="line"></span><br><span class="line">SQL层：</span><br><span class="line">select * from t1 where name&#x3D;:NAME;</span><br><span class="line">select * from t1 where name&#x3D;:NAME;</span><br><span class="line"></span><br><span class="line">1、查询完结果之后，会对SQL语句进行hash运算，得出hash值,我们把他称之为SQL_ID</span><br><span class="line">2、会将存储引擎返回的结果+SQL_ID存储到缓存中。</span><br><span class="line"></span><br><span class="line">存储方式：</span><br><span class="line">例子：select * from t1  where id&#x3D;10;      100次</span><br><span class="line"></span><br><span class="line">1、将select * from t1  where id&#x3D;10; 进行hash运算计算出一串hash值，我们把它称之为“SQL_ID&quot;</span><br><span class="line">2、将存储引擎返回上来的表的内容+SQLID存储到查询缓存中</span><br><span class="line"></span><br><span class="line">使用方式：</span><br><span class="line">1、一条SQL执行时，进行hash运算，得出SQLID，去找query cache</span><br><span class="line">2、如果cache中有，则直接返回数据行，如果没有，就走原有的SQL执行流程</span><br><span class="line"></span><br><span class="line">一个sql查询如果以select开头，那么mysql服务器将尝试对其使用查询缓存。</span><br><span class="line">注：两个sql语句，只要想差哪怕是一个字符（列如大小写不一样；多一个空格等）,那么这两个sql将使用不同的一个cache。</span><br><span class="line"></span><br><span class="line">（2）判断依据</span><br><span class="line">mysql&gt; show status like &quot;%Qcache%&quot;;</span><br><span class="line">+-------------------------+---------+</span><br><span class="line">| Variable_name           | Value   |</span><br><span class="line">+-------------------------+---------+</span><br><span class="line">| Qcache_free_blocks      | 1       |</span><br><span class="line">| Qcache_free_memory      | 1031360 |</span><br><span class="line">| Qcache_hits             | 0       |</span><br><span class="line">| Qcache_inserts          | 0       |</span><br><span class="line">| Qcache_lowmem_prunes    | 0       |</span><br><span class="line">| Qcache_not_cached       | 2002    |</span><br><span class="line">| Qcache_queries_in_cache | 0       |</span><br><span class="line">| Qcache_total_blocks     | 1       |</span><br><span class="line">+-------------------------+---------+</span><br><span class="line">8 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">---------------------状态说明--------------------</span><br><span class="line">Qcache_free_blocks：缓存中相邻内存块的个数。</span><br><span class="line">如果该值显示较大，则说明Query Cache 中的内存碎片较多了，FLUSH QUERY CACHE会对缓存中的碎片进行整理，从而得到一个空闲块。</span><br><span class="line">注：当一个表被更新之后，和它相关的cache </span><br><span class="line">blocks将被free。但是这个block依然可能存在队列中，除非是在队列的尾部。可以用FLUSH QUERY CACHE语句来清空free blocks</span><br><span class="line"></span><br><span class="line">Qcache_free_memory：Query Cache 中目前剩余的内存大小。通过这个参数我们可以较为准确的观察出当前系统中的Query Cache 内存大小是否足够，是需要增加还是过多了。</span><br><span class="line"></span><br><span class="line">Qcache_hits：表示有多少次命中缓存。我们主要可以通过该值来验证我们的查询缓存的效果。数字越大，缓存效果越理想。</span><br><span class="line"></span><br><span class="line">Qcache_inserts：表示多少次未命中然后插入，意思是新来的SQL请求在缓存中未找到，不得不执行查询处理，执行查询处理后把结果insert到查询缓存中。这样的情况的次数越多，表示查询缓存应用到的比较少，效果也就不理想。当然系统刚启动后，查询缓存是空的，这很正常。</span><br><span class="line"></span><br><span class="line">Qcache_lowmem_prunes：</span><br><span class="line">多少条Query因为内存不足而被清除出QueryCache。通过“Qcache_lowmem_prunes”和“Qcache_free_memory”相互结合，能够更清楚的了解到我们系统中Query Cache 的内存大小是否真的足够，是否非常频繁的出现因为内存不足而有Query 被换出。这个数字最好长时间来看；如果这个数字在不断增长，就表示可能碎片非常严重，或者内存很少。（上面的free_blocks和free_memory可以告诉您属于哪种情况）</span><br><span class="line"></span><br><span class="line">Qcache_not_cached：不适合进行缓存的查询的数量，通常是由于这些查询不是 SELECT 语句或者用了now()之类的函数。</span><br><span class="line"></span><br><span class="line">Qcache_queries_in_cache：当前Query Cache 中cache 的Query 数量；</span><br><span class="line">Qcache_total_blocks：当前Query Cache 中的block 数量；。</span><br><span class="line">Qcache_hits &#x2F; (Qcache_inserts+Qcache_not_cached+Qcache_hits) </span><br><span class="line">    90&#x2F;         10000             0             90</span><br><span class="line"></span><br><span class="line">如果出现hits比例过低，其实就可以关闭查询缓存了。使用redis专门缓存数据库</span><br><span class="line"></span><br><span class="line">Qcache_free_blocks    来判断碎片</span><br><span class="line">Qcache_free_memory   +   Qcache_lowmem_prunes  来判断内存够不够</span><br><span class="line">Qcache_hits 多少次命中  Qcache_hits &#x2F; (Qcache_inserts+Qcache_not_cached+Qcache_hits)  </span><br><span class="line"></span><br><span class="line">（3）配置示例</span><br><span class="line">mysql&gt; show variables like &#39;%query_cache%&#39; ;</span><br><span class="line">+------------------------------+---------+</span><br><span class="line">| Variable_name                | Value   |</span><br><span class="line">+------------------------------+---------+</span><br><span class="line">| have_query_cache             | YES     |</span><br><span class="line">| query_cache_limit            | 1048576 |</span><br><span class="line">| query_cache_min_res_unit     | 4096    |</span><br><span class="line">| query_cache_size             | 1048576 |</span><br><span class="line">| query_cache_type             | OFF     |</span><br><span class="line">| query_cache_wlock_invalidate | OFF     |</span><br><span class="line">+------------------------------+---------+</span><br><span class="line">6 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; </span><br><span class="line">-------------------配置说明-------------------------------</span><br><span class="line">以上信息可以看出query_cache_type为off表示不缓存任何查询</span><br><span class="line"></span><br><span class="line">各字段的解释：</span><br><span class="line">query_cache_limit：超过此大小的查询将不缓存</span><br><span class="line">query_cache_min_res_unit：缓存块的最小大小，query_cache_min_res_unit的配置是一柄”双刃剑”，默认是4KB，设置值大对大数据查询有好处，但如果你的查询都是小数据查询，就容易造成内存碎片和浪费。</span><br><span class="line">query_cache_size：查询缓存大小 (注：QC存储的最小单位是1024byte，所以如果你设定了一个不是1024的倍数的值，这个值会被四舍五入到最接近当前值的等于1024的倍数的值。)</span><br><span class="line"></span><br><span class="line">query_cache_type：缓存类型，决定缓存什么样的查询，注意这个值不能随便设置，必须设置为数字，可选项目以及说明如下：</span><br><span class="line">如果设置为0，那么可以说，你的缓存根本就没有用，相当于禁用了。</span><br><span class="line">如果设置为1，将会缓存所有的结果，除非你的select语句使用SQL_NO_CACHE禁用了查询缓存。</span><br><span class="line">如果设置为2，则只缓存在select语句中通过SQL_CACHE指定需要缓存的查询。</span><br><span class="line"></span><br><span class="line">修改&#x2F;etc&#x2F;my.cnf,配置完后的部分文件如下：</span><br><span class="line">query_cache_size&#x3D;128M</span><br><span class="line">query_cache_type&#x3D;1</span><br></pre></td></tr></table></figure><h2 id="max-connect-errors"><a href="#max-connect-errors" class="headerlink" title="max_connect_errors ***"></a>max_connect_errors ***</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">max_connect_errors是一个mysql中与安全有关的计数器值，它负责阻止过多尝试失败的客户端以防止暴力破解密码等情况，当超过指定次数，mysql服务器将禁止host的连接请求，直到mysql服务器重启或通过flush hosts命令清空此host的相关信息 max_connect_errors的值与性能并无太大关系。</span><br><span class="line">修改&#x2F;etc&#x2F;my.cnf文件，在[mysqld]下面添加如下内容</span><br><span class="line">max_connect_errors&#x3D;2000</span><br></pre></td></tr></table></figure><h2 id="sort-buffer-size"><a href="#sort-buffer-size" class="headerlink" title="sort_buffer_size ***"></a>sort_buffer_size ***</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">（1）简介：</span><br><span class="line">每个需要进行排序的线程分配该大小的一个缓冲区。增加这值加速</span><br><span class="line">ORDER BY </span><br><span class="line">GROUP BY</span><br><span class="line">distinct</span><br><span class="line">union </span><br><span class="line"></span><br><span class="line">（2）配置依据</span><br><span class="line">Sort_Buffer_Size并不是越大越好，由于是connection级的参数，过大的设置+高并发可能会耗尽系统内存资源。</span><br><span class="line">列如：500个连接将会消耗500*sort_buffer_size（2M）&#x3D;1G内存</span><br><span class="line">（3）配置方法</span><br><span class="line"> 修改&#x2F;etc&#x2F;my.cnf文件，在[mysqld]下面添加如下：</span><br><span class="line">sort_buffer_size&#x3D;1M</span><br></pre></td></tr></table></figure><h2 id="max-allowed-packet"><a href="#max-allowed-packet" class="headerlink" title="max_allowed_packet *"></a>max_allowed_packet <strong>*</strong></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">（1）简介：</span><br><span class="line">mysql根据配置文件会限制，server接受的数据包大小。</span><br><span class="line">（2）配置依据：</span><br><span class="line">有时候大的插入和更新会受max_allowed_packet参数限制，导致写入或者更新失败，更大值是1GB，必须设置1024的倍数</span><br><span class="line">（3）配置方法：</span><br><span class="line">max_allowed_packet&#x3D;32M</span><br></pre></td></tr></table></figure><h2 id="join-buffer-size"><a href="#join-buffer-size" class="headerlink" title="join_buffer_size ***"></a>join_buffer_size ***</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select a.name,b.name from a join b on a.id&#x3D;b.id where xxxx</span><br><span class="line">用于表间关联缓存的大小，和sort_buffer_size一样，该参数对应的分配内存也是每个连接独享。</span><br><span class="line">尽量在SQL与方面进行优化，效果较为明显。</span><br><span class="line">优化的方法：在on条件列加索引，至少应当是有MUL索引</span><br></pre></td></tr></table></figure><h2 id="thread-cache-size"><a href="#thread-cache-size" class="headerlink" title="thread_cache_size *"></a>thread_cache_size <strong>*</strong></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">(1)简介</span><br><span class="line">服务器线程缓存，这个值表示可以重新利用保存在缓存中线程的数量,当断开连接时,那么客户端的线程将被放到缓存中以响应下一个客户而不是销毁(前提是缓存数未达上限),如果线程重新被请求，那么请求将从缓存中读取,如果缓存中是空的或者是新的请求，那么这个线程将被重新创建,如果有很多新的线程，增加这个值可以改善系统性能.</span><br><span class="line">（2）配置依据</span><br><span class="line">通过比较 Connections 和 Threads_created 状态的变量，可以看到这个变量的作用。</span><br><span class="line">设置规则如下：1GB 内存配置为8，2GB配置为16，3GB配置为32，4GB或更高内存，可配置更大。</span><br><span class="line">服务器处理此客户的线程将会缓存起来以响应下一个客户而不是销毁(前提是缓存数未达上限)</span><br><span class="line"></span><br><span class="line">试图连接到MySQL(不管是否连接成功)的连接数</span><br><span class="line">mysql&gt;  show status like &#39;threads_%&#39;;</span><br><span class="line">+-------------------+-------+</span><br><span class="line">| Variable_name     | Value |</span><br><span class="line">+-------------------+-------+</span><br><span class="line">| Threads_cached    | 8     |</span><br><span class="line">| Threads_connected | 2     |</span><br><span class="line">| Threads_created   | 4783  |</span><br><span class="line">| Threads_running   | 1     |</span><br><span class="line">+-------------------+-------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">Threads_cached :代表当前此时此刻线程缓存中有多少空闲线程。</span><br><span class="line">Threads_connected:代表当前已建立连接的数量，因为一个连接就需要一个线程，所以也可以看成当前被使用的线程数。</span><br><span class="line">Threads_created:代表从最近一次服务启动，已创建线程的数量，如果发现Threads_created值过大的话，表明MySQL服务器一直在创建线程，这也是比较耗cpu SYS资源，可以适当增加配置文件中thread_cache_size值。</span><br><span class="line">Threads_running :代表当前激活的（非睡眠状态）线程数。并不是代表正在使用的线程数，有时候连接已建立，但是连接处于sleep状态。</span><br><span class="line">(3)配置方法：</span><br><span class="line">thread_cache_size&#x3D;32</span><br><span class="line"></span><br><span class="line">整理：</span><br><span class="line">Threads_created  ：一般在架构设计阶段，会设置一个测试值，做压力测试。</span><br><span class="line">结合zabbix监控，看一段时间内此状态的变化。</span><br><span class="line">如果在一段时间内，Threads_created趋于平稳，说明对应参数设定是OK。</span><br><span class="line">如果一直陡峭的增长，或者出现大量峰值，那么继续增加此值的大小，在系统资源够用的情况下（内存）</span><br></pre></td></tr></table></figure><h2 id="innodb-buffer-pool-size"><a href="#innodb-buffer-pool-size" class="headerlink" title="innodb_buffer_pool_size *"></a>innodb_buffer_pool_size <strong>*</strong></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">（1）简介</span><br><span class="line">对于InnoDB表来说，innodb_buffer_pool_size的作用就相当于key_buffer_size对于MyISAM表的作用一样。</span><br><span class="line">（2）配置依据：</span><br><span class="line">InnoDB使用该参数指定大小的内存来缓冲数据和索引。</span><br><span class="line">对于单独的MySQL数据库服务器，最大可以把该值设置成物理内存的80%,一般我们建议不要超过物理内存的70%。</span><br><span class="line">（3）配置方法</span><br><span class="line">innodb_buffer_pool_size&#x3D;2048M</span><br></pre></td></tr></table></figure><h2 id="innodb-flush-log-at-trx-commit"><a href="#innodb-flush-log-at-trx-commit" class="headerlink" title="innodb_flush_log_at_trx_commit"></a>innodb_flush_log_at_trx_commit</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">（1）简介</span><br><span class="line">主要控制了innodb将log buffer中的数据写入日志文件并flush磁盘的时间点，取值分别为0、1、2三个。</span><br><span class="line">0，表示当事务提交时，不做日志写入操作，而是每秒钟将log buffer中的数据写入日志文件并flush磁盘一次；</span><br><span class="line">1，</span><br><span class="line">每次事务的提交都会引起redo日志文件写入、flush磁盘的操作，确保了事务的ACID；</span><br><span class="line">2，每次事务提交引起写入日志文件的动作,但每秒钟完成一次flush磁盘操作。</span><br><span class="line"></span><br><span class="line">（2）配置依据</span><br><span class="line">实际测试发现，该值对插入数据的速度影响非常大，设置为2时插入10000条记录只需要2秒，设置为0时只需要1秒，而设置为1时则需要229秒。因此，MySQL手册也建议尽量将插入操作合并成一个事务，这样可以大幅提高速度。</span><br><span class="line">根据MySQL官方文档，在允许丢失最近部分事务的危险的前提下，可以把该值设为0或2。</span><br><span class="line">（3）配置方法</span><br><span class="line">innodb_flush_log_at_trx_commit&#x3D;1</span><br><span class="line">双1标准中的一个1</span><br></pre></td></tr></table></figure><h2 id="innodb-thread-concurrency"><a href="#innodb-thread-concurrency" class="headerlink" title="innodb_thread_concurrency ***"></a>innodb_thread_concurrency ***</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">（1）简介</span><br><span class="line">此参数用来设置innodb线程的并发数量，默认值为0表示不限制。</span><br><span class="line">（2）配置依据</span><br><span class="line">在官方doc上，对于innodb_thread_concurrency的使用，也给出了一些建议，如下：</span><br><span class="line">如果一个工作负载中，并发用户线程的数量小于64，建议设置innodb_thread_concurrency&#x3D;0；</span><br><span class="line">如果工作负载一直较为严重甚至偶尔达到顶峰，建议先设置innodb_thread_concurrency&#x3D;128，</span><br><span class="line">并通过不断的降低这个参数，96, 80, 64等等，直到发现能够提供最佳性能的线程数，</span><br><span class="line">例如，假设系统通常有40到50个用户，但定期的数量增加至60，70，甚至200。你会发现，</span><br><span class="line">性能在80个并发用户设置时表现稳定，如果高于这个数，性能反而下降。在这种情况下，</span><br><span class="line">建议设置innodb_thread_concurrency参数为80，以避免影响性能。</span><br><span class="line">如果你不希望InnoDB使用的虚拟CPU数量比用户线程使用的虚拟CPU更多（比如20个虚拟CPU），</span><br><span class="line">建议通过设置innodb_thread_concurrency 参数为这个值（也可能更低，这取决于性能体现），</span><br><span class="line">如果你的目标是将MySQL与其他应用隔离，你可以l考虑绑定mysqld进程到专有的虚拟CPU。</span><br><span class="line">但是需 要注意的是，这种绑定，在myslqd进程一直不是很忙的情况下，可能会导致非最优的硬件使用率。在这种情况下，</span><br><span class="line">你可能会设置mysqld进程绑定的虚拟 CPU，允许其他应用程序使用虚拟CPU的一部分或全部。</span><br><span class="line">在某些情况下，最佳的innodb_thread_concurrency参数设置可以比虚拟CPU的数量小。</span><br><span class="line">定期检测和分析系统，负载量、用户数或者工作环境的改变可能都需要对innodb_thread_concurrency参数的设置进行调整。</span><br><span class="line"></span><br><span class="line">128   -----&gt; top  cpu  </span><br><span class="line">设置标准：</span><br><span class="line">1、当前系统cpu使用情况，均不均匀</span><br><span class="line">top</span><br><span class="line"></span><br><span class="line">2、当前的连接数，有没有达到顶峰</span><br><span class="line">show status like &#39;threads_%&#39;;</span><br><span class="line">show processlist;</span><br><span class="line">（3）配置方法：</span><br><span class="line">innodb_thread_concurrency&#x3D;8</span><br><span class="line">方法:</span><br><span class="line">    1. 看top ,观察每个cpu的各自的负载情况</span><br><span class="line">    2. 发现不平均,先设置参数为cpu个数,然后不断增加(一倍)这个数值</span><br><span class="line">    3. 一直观察top状态,直到达到比较均匀时,说明已经到位了.</span><br></pre></td></tr></table></figure><h2 id="innodb-log-buffer-size"><a href="#innodb-log-buffer-size" class="headerlink" title="innodb_log_buffer_size"></a>innodb_log_buffer_size</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">此参数确定些日志文件所用的内存大小，以M为单位。缓冲区更大能提高性能，对于较大的事务，可以增大缓存大小。</span><br><span class="line">innodb_log_buffer_size&#x3D;128M</span><br><span class="line"></span><br><span class="line">设定依据：</span><br><span class="line">1、大事务： 存储过程调用 CALL</span><br><span class="line">2、多事务</span><br></pre></td></tr></table></figure><h2 id="innodb-log-file-size-100M"><a href="#innodb-log-file-size-100M" class="headerlink" title="innodb_log_file_size = 100M *"></a>innodb_log_file_size = 100M <strong>*</strong></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">设置 ib_logfile0  ib_logfile1 </span><br><span class="line">此参数确定数据日志文件的大小，以M为单位，更大的设置可以提高性能.</span><br><span class="line">innodb_log_file_size &#x3D; 100M</span><br></pre></td></tr></table></figure><h2 id="innodb-log-files-in-group-3"><a href="#innodb-log-files-in-group-3" class="headerlink" title="innodb_log_files_in_group = 3 *"></a>innodb_log_files_in_group = 3 <strong>*</strong></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">为提高性能，MySQL可以以循环方式将日志文件写到多个文件。推荐设置为3</span><br></pre></td></tr></table></figure><h2 id="read-buffer-size-1M"><a href="#read-buffer-size-1M" class="headerlink" title="read_buffer_size = 1M **"></a>read_buffer_size = 1M **</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MySql读入缓冲区大小。对表进行顺序扫描的请求将分配一个读入缓冲区，MySql会为它分配一段内存缓冲区。如果对表的顺序扫描请求非常频繁，并且你认为频繁扫描进行得太慢，可以通过增加该变量值以及内存缓冲区大小提高其性能。和 sort_buffer_size一样，该参数对应的分配内存也是每个连接独享</span><br></pre></td></tr></table></figure><h2 id="read-rnd-buffer-size-1M"><a href="#read-rnd-buffer-size-1M" class="headerlink" title="read_rnd_buffer_size = 1M **"></a>read_rnd_buffer_size = 1M **</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">MySql的随机读（查询操作）缓冲区大小。当按任意顺序读取行时(例如，按照排序顺序)，将分配一个随机读缓存区。进行排序查询时，MySql会首先扫描一遍该缓冲，以避免磁盘搜索，提高查询速度，如果需要排序大量数据，可适当调高该值。但MySql会为每个客户连接发放该缓冲空间，所以应尽量适当设置该值，以避免内存开销过大。</span><br><span class="line">注：顺序读是指根据索引的叶节点数据就能顺序地读取所需要的行数据。随机读是指一般需要根据辅助索引叶节点中的主键寻找实际行数据，而辅助索引和主键所在的数据段不同，因此访问方式是随机的。</span><br></pre></td></tr></table></figure><h2 id="bulk-insert-buffer-size-8M"><a href="#bulk-insert-buffer-size-8M" class="headerlink" title="bulk_insert_buffer_size = 8M **"></a>bulk_insert_buffer_size = 8M **</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">批量插入数据缓存大小，可以有效提高插入效率，默认为8M</span><br><span class="line">tokuDB    percona</span><br><span class="line">myrocks   </span><br><span class="line">RocksDB</span><br><span class="line">TiDB</span><br><span class="line">MongoDB</span><br></pre></td></tr></table></figure><h2 id="binary-log"><a href="#binary-log" class="headerlink" title="binary log *"></a>binary log <strong>*</strong></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">log-bin&#x3D;&#x2F;data&#x2F;mysql-bin</span><br><span class="line">binlog_cache_size &#x3D; 2M &#x2F;&#x2F;为每个session 分配的内存，在事务过程中用来存储二进制日志的缓存, 提高记录bin-log的效率。没有什么大事务，dml也不是很频繁的情况下可以设置小一点，如果事务大而且多，dml操作也频繁，则可以适当的调大一点。前者建议是--1M，后者建议是：即 2--4M</span><br><span class="line">max_binlog_cache_size &#x3D; 8M &#x2F;&#x2F;表示的是binlog 能够使用的最大cache 内存大小</span><br><span class="line">max_binlog_size&#x3D; 512M &#x2F;&#x2F;指定binlog日志文件的大小，如果当前的日志大小达到max_binlog_size，还会自动创建新的二进制日志。你不能将该变量设置为大于1GB或小于4096字节。默认值是1GB。在导入大容量的sql文件时，建议关闭sql_log_bin，否则硬盘扛不住，而且建议定期做删除。</span><br><span class="line">expire_logs_days &#x3D; 7 &#x2F;&#x2F;定义了mysql清除过期日志的时间。</span><br><span class="line">二进制日志自动删除的天数。默认值为0,表示“没有自动删除”。</span><br><span class="line">log-bin&#x3D;&#x2F;data&#x2F;mysql-bin</span><br><span class="line">binlog_format&#x3D;row </span><br><span class="line">sync_binlog&#x3D;1</span><br><span class="line">双1标准(基于安全的控制)：</span><br><span class="line">sync_binlog&#x3D;1   什么时候刷新binlog到磁盘，每次事务commit</span><br><span class="line">innodb_flush_log_at_trx_commit&#x3D;1</span><br><span class="line">set sql_log_bin&#x3D;0;</span><br><span class="line">show status like &#39;com_%&#39;;</span><br></pre></td></tr></table></figure><h2 id="安全参数"><a href="#安全参数" class="headerlink" title="安全参数 *"></a>安全参数 <strong>*</strong></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Innodb_flush_method&#x3D;(O_DIRECT, fsync) </span><br><span class="line">1、fsync    ：</span><br><span class="line">（1）在数据页需要持久化时，首先将数据写入OS buffer中，然后由os决定什么时候写入磁盘</span><br><span class="line">（2）在redo buffuer需要持久化时，首先将数据写入OS buffer中，然后由os决定什么时候写入磁盘</span><br><span class="line">但，如果innodb_flush_log_at_trx_commit&#x3D;1的话，日志还是直接每次commit直接写入磁盘</span><br><span class="line">2、 Innodb_flush_method&#x3D;O_DIRECT</span><br><span class="line">（1）在数据页需要持久化时，直接写入磁盘</span><br><span class="line">（2）在redo buffuer需要持久化时，首先将数据写入OS buffer中，然后由os决定什么时候写入磁盘</span><br><span class="line">但，如果innodb_flush_log_at_trx_commit&#x3D;1的话，日志还是直接每次commit直接写入磁盘</span><br><span class="line"></span><br><span class="line">最安全模式：</span><br><span class="line">innodb_flush_log_at_trx_commit&#x3D;1</span><br><span class="line">innodb_flush_method&#x3D;O_DIRECT</span><br><span class="line">最高性能模式：</span><br><span class="line">innodb_flush_log_at_trx_commit&#x3D;0</span><br><span class="line">innodb_flush_method&#x3D;fsync</span><br><span class="line"></span><br><span class="line">一般情况下，我们更偏向于安全。 </span><br><span class="line">“双一标准”</span><br><span class="line">innodb_flush_log_at_trx_commit&#x3D;1        ***************</span><br><span class="line">sync_binlog&#x3D;1                                   ***************</span><br><span class="line">innodb_flush_method&#x3D;O_DIRECT</span><br></pre></td></tr></table></figure><h1 id="6-参数优化结果"><a href="#6-参数优化结果" class="headerlink" title="6. 参数优化结果"></a>6. 参数优化结果</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">basedir&#x3D;&#x2F;data&#x2F;mysql</span><br><span class="line">datadir&#x3D;&#x2F;data&#x2F;mysql&#x2F;data</span><br><span class="line">socket&#x3D;&#x2F;tmp&#x2F;mysql.sock</span><br><span class="line">log-error&#x3D;&#x2F;var&#x2F;log&#x2F;mysql.log</span><br><span class="line">log_bin&#x3D;&#x2F;data&#x2F;binlog&#x2F;mysql-bin</span><br><span class="line">binlog_format&#x3D;row</span><br><span class="line">skip-name-resolve</span><br><span class="line">server-id&#x3D;52</span><br><span class="line">gtid-mode&#x3D;on</span><br><span class="line">enforce-gtid-consistency&#x3D;true</span><br><span class="line">log-slave-updates&#x3D;1</span><br><span class="line">relay_log_purge&#x3D;0</span><br><span class="line">max_connections&#x3D;1024</span><br><span class="line">back_log&#x3D;128</span><br><span class="line">wait_timeout&#x3D;60</span><br><span class="line">interactive_timeout&#x3D;7200</span><br><span class="line">key_buffer_size&#x3D;16M</span><br><span class="line">query_cache_size&#x3D;64M</span><br><span class="line">query_cache_type&#x3D;1</span><br><span class="line">query_cache_limit&#x3D;50M</span><br><span class="line">max_connect_errors&#x3D;20</span><br><span class="line">sort_buffer_size&#x3D;2M</span><br><span class="line">max_allowed_packet&#x3D;32M</span><br><span class="line">join_buffer_size&#x3D;2M</span><br><span class="line">thread_cache_size&#x3D;200</span><br><span class="line">innodb_buffer_pool_size&#x3D;1024M</span><br><span class="line">innodb_flush_log_at_trx_commit&#x3D;1</span><br><span class="line">innodb_log_buffer_size&#x3D;32M</span><br><span class="line">innodb_log_file_size&#x3D;128M</span><br><span class="line">innodb_log_files_in_group&#x3D;3</span><br><span class="line">binlog_cache_size&#x3D;2M</span><br><span class="line">max_binlog_cache_size&#x3D;8M</span><br><span class="line">max_binlog_size&#x3D;512M</span><br><span class="line">expire_logs_days&#x3D;7</span><br><span class="line">read_buffer_size&#x3D;2M</span><br><span class="line">read_rnd_buffer_size&#x3D;2M</span><br><span class="line">bulk_insert_buffer_size&#x3D;8M</span><br></pre></td></tr></table></figure><p>[client]</p><p>socket=/tmp/mysql.sock 再次压力测试 ： mysqlslap –defaults-file=/etc/my.cnf –concurrency=100 –iterations=1 –create-schema=’oldboy’ –query=”select * from oldboy.t_100w where k2=’FGCD’” engine=innodb –number-of-queries=200000 -uroot -p123 -verbose</p><h1 id="7-锁的监控及处理"><a href="#7-锁的监控及处理" class="headerlink" title="7. 锁的监控及处理"></a>7. 锁的监控及处理</h1><h2 id="7-1-锁等待模拟"><a href="#7-1-锁等待模拟" class="headerlink" title="7.1 锁等待模拟"></a>7.1 锁等待模拟</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">概念：</span><br><span class="line">Record Lock </span><br><span class="line">Next Lock </span><br><span class="line">GAP Lock</span><br><span class="line">X </span><br><span class="line">IX</span><br><span class="line">S </span><br><span class="line">IS</span><br></pre></td></tr></table></figure><h2 id="tx1"><a href="#tx1" class="headerlink" title="tx1:"></a>tx1:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">USE oldboy</span><br><span class="line">UPDATE t_100w SET k1&#x3D;&#39;av&#39; WHERE id&#x3D;10;</span><br><span class="line">## tx2:</span><br><span class="line">USE oldboy </span><br><span class="line">UPDATE  t_100w SET k1&#x3D;&#39;az&#39; WHERE id&#x3D;10;</span><br></pre></td></tr></table></figure><h2 id="监控锁状态"><a href="#监控锁状态" class="headerlink" title="监控锁状态"></a>监控锁状态</h2><p><img src="http://upload-images.jianshu.io/upload_images/16956686-9e1bcd370862c1fa.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p>image.png</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">## 1. 看有没有锁等待</span><br><span class="line">SHOW  STATUS LIKE &#39;innodb_row_lock%&#39;;</span><br><span class="line"></span><br><span class="line">## 2. 查看哪个事务在等待(被阻塞了)</span><br><span class="line">USE information_schema</span><br><span class="line">SELECT * FROM information_schema.INNODB_TRX WHERE trx_state&#x3D;&#39;LOCK WAIT&#39;;</span><br><span class="line">trx_id : 事务ID号</span><br><span class="line">trx_state : 当前事务的状态</span><br><span class="line">trx_mysql_thread_id:连接层的,连接线程ID(SHOW PROCESSLIST &#x3D;&#x3D;&#x3D;&gt;Id或trx_id )</span><br><span class="line">trx_query : 当前被阻塞的操作(一般是要丢给开发的)</span><br></pre></td></tr></table></figure><h2 id="7-3-查看锁源-谁锁的我"><a href="#7-3-查看锁源-谁锁的我" class="headerlink" title="7.3.查看锁源,谁锁的我!"></a>7.3.查看锁源,谁锁的我!</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM sys.innodb_lock_waits;     ## &#x3D;&#x3D;&#x3D;&#x3D;&gt;被锁的和锁定它的之间关系</span><br><span class="line"></span><br><span class="line">locked_table : 哪张表出现的等待 </span><br><span class="line">waiting_trx_id: 等待的事务(与上个视图trx_id 对应)</span><br><span class="line">waiting_pid   : 等待的线程号(与上个视图trx_mysql_thread_id)</span><br><span class="line">blocking_trx_id : 锁源的事务ID </span><br><span class="line">blocking_pid    : 锁源的线程号</span><br></pre></td></tr></table></figure><h2 id="7-4-找到锁源的thread-id"><a href="#7-4-找到锁源的thread-id" class="headerlink" title="7.4. 找到锁源的thread_id"></a>7.4. 找到锁源的thread_id</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM performance_schema.threads WHERE processlist_id&#x3D;15;</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&gt; 41</span><br></pre></td></tr></table></figure><h2 id="7-5-找到锁源的SQL语句"><a href="#7-5-找到锁源的SQL语句" class="headerlink" title="7.5. 找到锁源的SQL语句"></a>7.5. 找到锁源的SQL语句</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">-- 当前在执行的语句</span><br><span class="line">SELECT * FROM performance_schema.&#96;events_statements_current&#96; WHERE thread_id&#x3D;41;</span><br><span class="line">-- 执行语句的历史</span><br><span class="line">SELECT * FROM performance_schema.&#96;events_statements_history&#96; WHERE thread_id&#x3D;41;</span><br><span class="line"></span><br><span class="line">得出结果,丢给开发</span><br><span class="line">表信息 </span><br><span class="line">被阻塞的</span><br><span class="line">锁源SQL</span><br><span class="line"></span><br><span class="line">练习:</span><br><span class="line">一键获得以上信息,请写出具体的SQL语句</span><br></pre></td></tr></table></figure><h2 id="7-6-优化项目-锁的监控及处理"><a href="#7-6-优化项目-锁的监控及处理" class="headerlink" title="7.6 优化项目:锁的监控及处理"></a>7.6 优化项目:锁的监控及处理</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">1. 背景: </span><br><span class="line">硬件环境: DELL R720,E系列16核,48G MEM,SAS*900G*6,RAID10</span><br><span class="line">在例行巡检时,发现9-11点时间段的CPU压力非常高(80-90%)</span><br><span class="line"></span><br><span class="line">2. 项目的职责</span><br><span class="line">    2.1 通过top详细排查,发现mysqld进程占比达到了700-800%</span><br><span class="line">    2.2 其中有量的CPU是被用作的SYS和WAIT,us处于正常</span><br><span class="line">    2.3 怀疑是MySQL 锁 或者SQL语句出了问题</span><br><span class="line">    2.4 经过排查slowlog及锁等待情况,发现有大量锁等待及少量慢语句    </span><br><span class="line">    (1) pt-query-diagest 查看慢日志  </span><br><span class="line">    (2) 锁等待有没有?</span><br><span class="line">    db03 [(none)]&gt;show status like &#39;innodb_row_lock%&#39;;</span><br><span class="line">    +-------------------------------+-------+</span><br><span class="line">    | Variable_name                 | Value |</span><br><span class="line">    +-------------------------------+-------+</span><br><span class="line">    | Innodb_row_lock_current_waits | 0     |</span><br><span class="line">    | Innodb_row_lock_time          | 0     |</span><br><span class="line">    | Innodb_row_lock_time_avg      | 0     |</span><br><span class="line">    | Innodb_row_lock_time_max      | 0     |</span><br><span class="line">    | Innodb_row_lock_waits         | 0     |</span><br><span class="line">    +-------------------------------+-------+</span><br><span class="line">    情况一:</span><br><span class="line">            有100多个current_waits,说明当前很多锁等待情况</span><br><span class="line">    情况二:</span><br><span class="line">            1000多个lock_waits,说明历史上发生过的锁等待很多</span><br><span class="line">    2.5 查看那个事务在等待(被阻塞了)</span><br><span class="line">    2.6 查看锁源事务信息(谁锁的我)</span><br><span class="line">    2.7 找到锁源的thread_id </span><br><span class="line">    2.8 找到锁源的SQL语句</span><br><span class="line">3. 找到语句之后,和应用开发人员进行协商   </span><br><span class="line">    (1)</span><br><span class="line">    开发人员描述,此语句是事务挂起导致</span><br><span class="line">    我们提出建议是临时kill 会话,最终解决问题</span><br><span class="line">    (2) </span><br><span class="line">    开发人员查看后,发现是业务逻辑问题导致的死锁,产生了大量锁等待</span><br><span class="line">    临时解决方案,将阻塞事务的会话kill掉.</span><br><span class="line">    最终解决方案,修改代码中的业务逻辑</span><br><span class="line">项目结果:</span><br><span class="line">    经过排查处理,锁等待的个数减少80%.解决了CPU持续峰值的问题.</span><br><span class="line"></span><br><span class="line">锁监控设计到的命令:</span><br><span class="line">show status like &#39;innodb_rows_lock%&#39;</span><br><span class="line">select * from information_schema.innodb_trx;</span><br><span class="line">select * from sys.innodb_lock_waits;</span><br><span class="line">select * from performance_schema.threads;</span><br><span class="line">select * from performance_schema.events_statements_current;</span><br><span class="line">select * from performance_schema.events_statements_history;</span><br></pre></td></tr></table></figure><h2 id="7-7-死锁监控"><a href="#7-7-死锁监控" class="headerlink" title="7.7 死锁监控"></a>7.7 死锁监控</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">show engine innodb status\G</span><br><span class="line">show variables like &#39;%deadlock%&#39;;</span><br><span class="line">vim &#x2F;etc&#x2F;my.cnf </span><br><span class="line">innodb_print_all_deadlocks &#x3D; 1  </span><br></pre></td></tr></table></figure><h1 id="8-主从优化："><a href="#8-主从优化：" class="headerlink" title="8. 主从优化："></a>8. 主从优化：</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">## 5.7 从库多线程MTS</span><br><span class="line">基本要求:</span><br><span class="line">5.7以上的版本(忘记小版本)</span><br><span class="line">必须开启GTID </span><br><span class="line">binlog必须是row模式  </span><br><span class="line"></span><br><span class="line">gtid_mode&#x3D;ON</span><br><span class="line">enforce_gtid_consistency&#x3D;ON</span><br><span class="line">log_slave_updates&#x3D;ON</span><br><span class="line">slave-parallel-type&#x3D;LOGICAL_CLOCK</span><br><span class="line">slave-parallel-workers&#x3D;16</span><br><span class="line">master_info_repository&#x3D;TABLE</span><br><span class="line">relay_log_info_repository&#x3D;TABLE</span><br><span class="line">relay_log_recovery&#x3D;ON</span><br><span class="line"></span><br><span class="line">5.7 :</span><br><span class="line">slave-parallel-type&#x3D;LOGICAL_CLOCK</span><br><span class="line">slave-parallel-workers&#x3D;8</span><br><span class="line">cpu核心数作为标准</span><br><span class="line"></span><br><span class="line">CHANGE MASTER TO</span><br><span class="line">  MASTER_HOST&#x3D;&#39;10.0.0.128&#39;,</span><br><span class="line">  MASTER_USER&#x3D;&#39;repl&#39;,</span><br><span class="line">  MASTER_PASSWORD&#x3D;&#39;123&#39;,</span><br><span class="line">  MASTER_PORT&#x3D;3307,</span><br><span class="line">  MASTER_AUTO_POSITION&#x3D;1;</span><br><span class="line">start slave;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL进阶 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Jenkins（CA/CI）部署</title>
      <link href="/posts/28194/"/>
      <url>/posts/28194/</url>
      
        <content type="html"><![CDATA[<h3 id="Jenkins展开目录"><a href="#Jenkins展开目录" class="headerlink" title="Jenkins展开目录"></a>Jenkins展开目录</h3><p>官网</p><p><a href="https://jenkins.io/">https://jenkins.io</a></p><p>Jenkins 是一个开源软件项目，是基于 Java 开发的一种持续集成工具，用于监控持续重复的工作，指在提供一个开<br>放易用的软件平台，使软件的持续集成变成可能。</p><h4 id="01-安装准备展开目录"><a href="#01-安装准备展开目录" class="headerlink" title="01. 安装准备展开目录"></a>01. 安装准备展开目录</h4><p>主机</p><p>IP</p><p>内存</p><p>硬盘</p><p>Jenkins</p><p>10.0.0.201</p><p>2G</p><p>50G+</p><p>nexus</p><p>10.0.0.202</p><p>2G</p><p>50G+</p><h4 id="02-安装-Jdk-和-Jenkins展开目录"><a href="#02-安装-Jdk-和-Jenkins展开目录" class="headerlink" title="02 . 安装 Jdk 和 Jenkins展开目录"></a>02 . 安装 Jdk 和 Jenkins展开目录</h4><p>上传 JDK 和 Jenkins 安装包，使用 rpm ‐ivh 进行安装，安装完 JDK 运行 Java 测试是否安装成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@jenkins ~]# ll</span><br><span class="line">-rw-r--r-- 1 root root 170023183 2018-08-14 11:05 jdk-8u181-linux-x64.rpm</span><br><span class="line">-rw-r--r-- 1 root root 74141787 2018-08-13 20:23 jenkins-2.99-1.1.noarch.rpm</span><br><span class="line">[root@jenkins ~]# rpm -ivh jdk-8u181-linux-x64.rpm </span><br><span class="line">warning: jdk-8u181-linux-x64.rpm: Header V3 RSA&#x2F;SHA256 Signature, key ID ec551f03: NOKEY</span><br><span class="line">Preparing... ################################# [100%]</span><br><span class="line">Updating &#x2F; installing...</span><br><span class="line">1:jdk1.8-2000:1.8.0_181-fcs ################################# [100%]</span><br><span class="line">Unpacking JAR files...</span><br><span class="line"> tools.jar...</span><br><span class="line"> plugin.jar...</span><br><span class="line"> javaws.jar...</span><br><span class="line"> deploy.jar...</span><br><span class="line"> rt.jar...</span><br><span class="line"> jsse.jar...</span><br><span class="line"> charsets.jar...</span><br><span class="line"> localedata.jar...</span><br><span class="line">[root@jenkins ~]# rpm -ivh jenkins-2.99-1.1.noarch.rpm </span><br><span class="line">warning: jenkins-2.99-1.1.noarch.rpm: Header V4 DSA&#x2F;SHA1 Signature, key ID d50582e6: NOKEY</span><br><span class="line">Preparing... ################################# [100%]</span><br><span class="line">Updating &#x2F; installing...</span><br><span class="line">1:jenkins-2.99-1.1 ################################# [100%]</span><br></pre></td></tr></table></figure><h4 id="03-配置-Jenkins展开目录"><a href="#03-配置-Jenkins展开目录" class="headerlink" title="03 . 配置 Jenkins展开目录"></a>03 . 配置 Jenkins展开目录</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">#启动用户修改为root</span><br><span class="line">[root@jenkins ~]# grep &#39;root&#39; &#x2F;etc&#x2F;sysconfig&#x2F;jenkins</span><br><span class="line">JENKINS_USER&#x3D;&quot;root&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#启动</span><br><span class="line">[root@jenkins ~]# systemctl start jenkins</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#查看端口</span><br><span class="line">[root@jenkins ~]# netstat -lntp | grep 8080</span><br><span class="line">tcp6 0 0 :::8080 ::: LISTEN 8504&#x2F;java</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#查看进程</span><br><span class="line">[root@jenkins ~]# ps aux |grep jenkins</span><br><span class="line">root 8504 8.8 11.6 2618104 235556 ? Ssl 15:29 0:25 &#x2F;etc&#x2F;alternatives&#x2F;java -Dcom.sun.akuma.Daemon&#x3D;daemonized -Djava.awt.headless&#x3D;true -DJENKINS_HOME&#x3D;&#x2F;var&#x2F;lib&#x2F;jenkins -jar &#x2F;usr&#x2F;lib&#x2F;jenkins&#x2F;jenkins.war --logfile&#x3D;&#x2F;var&#x2F;log&#x2F;jenkins&#x2F;jenkins.log --webroot&#x3D;&#x2F;var&#x2F;cache&#x2F;jenkins&#x2F;war --daemon --httpPort&#x3D;8080 --debug&#x3D;5 --handlerCountMax&#x3D;100 --handlerCountMaxIdle&#x3D;20</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#访问页面进行配置</span><br><span class="line">http:&#x2F;&#x2F;10.0.0.201:8080</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#查看密码</span><br><span class="line">[root@jenkins ~]# cat &#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;secrets&#x2F;initialAdminPassword</span><br><span class="line">e8e69c5646cc4f3b88315fb20156ce6c</span><br></pre></td></tr></table></figure><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_88.png" alt="img" title="img"></p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_89.png" alt="img" title="img"></p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_90.png" alt="img" title="img"></p><p>修改密码</p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_91.png" alt="img" title="img"></p><h4 id="04-插件安装展开目录"><a href="#04-插件安装展开目录" class="headerlink" title="04. 插件安装展开目录"></a>04. 插件安装展开目录</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">#插件安装（跳过安装插件，直接上传插件到目录）</span><br><span class="line">1.自动安装可选插件</span><br><span class="line">2.手动下载插件上传安装</span><br><span class="line">3.插件放入插件目录</span><br><span class="line"></span><br><span class="line">[root@jenkins ~]# cd &#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;</span><br><span class="line">[root@jenkins jenkins]# ll         #jobs为每次构建后构建的结果目录，plugins为插件目录</span><br><span class="line">总用量 36</span><br><span class="line">‐rw‐‐‐‐‐‐‐ 1 root root 1822 8月 26 00:35 config.xml</span><br><span class="line">‐rw‐‐‐‐‐‐‐ 1 root root 156 8月 26 00:31 hudson.model.UpdateCenter.xml</span><br><span class="line">‐rw‐‐‐‐‐‐‐ 1 root root 1712 8月 26 00:32 identity.key.enc</span><br><span class="line">‐rw‐‐‐‐‐‐‐ 1 root root 94 8月 26 00:32 jenkins.CLI.xml</span><br><span class="line">‐rw‐r‐‐r‐‐ 1 root root 4 8月 26 00:35 jenkins.install.InstallUtil.lastExecVersion</span><br><span class="line">‐rw‐r‐‐r‐‐ 1 root root 4 8月 26 00:35 jenkins.install.UpgradeWizard.state</span><br><span class="line">drwxr‐xr‐x 2 root root 6 8月 26 00:31 jobs</span><br><span class="line">drwxr‐xr‐x 3 root root 18 8月 26 00:32 logs</span><br><span class="line">‐rw‐‐‐‐‐‐‐ 1 root root 907 8月 26 00:32 nodeMonitors.xml</span><br><span class="line">drwxr‐xr‐x 2 root root 6 8月 26 00:32 nodes</span><br><span class="line">drwxr‐xr‐x 2 root root 6 8月 26 00:31 plugins</span><br><span class="line">‐rw‐‐‐‐‐‐‐ 1 root root 64 8月 26 00:31 secret.key</span><br><span class="line">‐rw‐r‐‐r‐‐ 1 root root 0 8月 26 00:31 secret.key.not‐so‐secret</span><br><span class="line">drwx‐‐‐‐‐‐ 4 root root 4096 8月 26 00:32 secrets</span><br><span class="line">drwxr‐xr‐x 2 root root 23 8月 26 00:32 userContent</span><br><span class="line">drwxr‐xr‐x 3 root root 18 8月 26 00:34 users</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#上传插件包解压到plugins</span><br><span class="line">[root@jenkins jenkins]# cd plugins&#x2F;</span><br><span class="line">[root@jenkins plugins]# ll</span><br><span class="line">total 160580</span><br><span class="line">-rw-r--r-- 1 root root 164431230 2018-08-14 21:00 plugins.tar.gz</span><br><span class="line">[root@jenkins plugins]# tar xf plugins.tar.gz</span><br><span class="line">[root@jenkins plugins]# rm -f plugins.tar.gz</span><br><span class="line">[root@jenkins plugins]# mv plugins&#x2F; .&#x2F;</span><br><span class="line">[root@jenkins plugins]# rm -rf plugins&#x2F;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#重启生效</span><br><span class="line">[root@jenkins plugins]# systemctl restart jenkins.service</span><br></pre></td></tr></table></figure><p>4.jenkins 主要的目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;usr&#x2F;lib&#x2F;jenkins&#x2F;：          #jenkins安装目录，WAR包会放在这里</span><br><span class="line">&#x2F;etc&#x2F;sysconfig&#x2F;jenkins：        #jenkins配置文件，&quot;端口&quot;，&quot;JENKINS_HOME&quot;等都可以在这里配置</span><br><span class="line">&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;：          #默认的JENKINS_HOME</span><br><span class="line">&#x2F;var&#x2F;log&#x2F;jenkins&#x2F;jenkins.log：    #Jenkins日志文件</span><br></pre></td></tr></table></figure><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_92.png" alt="img" title="img"></p><h4 id="05-创建项目展开目录"><a href="#05-创建项目展开目录" class="headerlink" title="05. 创建项目展开目录"></a>05. 创建项目展开目录</h4><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_93.png" alt="img" title="img"></p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_94.png" alt="img" title="img"></p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_95.png" alt="img" title="img"></p><p>进行构建</p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_96.png" alt="img" title="img"></p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_97.png" alt="img" title="img"></p><p>进入控制台</p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_98.png" alt="img" title="img"></p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_99.png" alt="img" title="img"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@jenkins plugins]# ll &#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;freestyle-job</span><br><span class="line">total 0</span><br></pre></td></tr></table></figure><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_100.png" alt="img" title="img"></p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_101.png" alt="img" title="img"></p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_102.png" alt="img" title="img"></p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_103.png" alt="img" title="img"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@jenkins plugins]# ll &#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;freestyle-job</span><br><span class="line">total 0</span><br><span class="line">-rw-r--r-- 1 root root 0 2019-11-19 16:19 test.txt</span><br></pre></td></tr></table></figure><h4 id="06-Jenkins-获取-Git-源代码展开目录"><a href="#06-Jenkins-获取-Git-源代码展开目录" class="headerlink" title="06. Jenkins 获取 Git 源代码展开目录"></a>06. Jenkins 获取 Git 源代码展开目录</h4><p>这里我们有码云导入一个 HTML 页面的监控平台到 gitlab 仓库，打开码云，找到一个大转盘项目，将其代码路径进行复制</p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_104.png" alt="img" title="img"></p><p>在 Gitlab 上面新创建一个项目仓库。将源代码导入进去。</p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_105.png" alt="img" title="img"></p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_106.png" alt="img" title="img"></p><p>dev 用户端配置从 git 获取代码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">[root@dev ~]# git clone git@10.0.0.100:OPS&#x2F;dzp.git </span><br><span class="line">Cloning into &#39;dzp&#39;... </span><br><span class="line">remote: Counting objects: 19, done. </span><br><span class="line">remote: Compressing objects: 100% (15&#x2F;15), done. </span><br><span class="line">remote: Total 19 (delta 2), reused 0 (delta 0) </span><br><span class="line">Receiving objects: 100% (19&#x2F;19), 104.36 KiB | 0 bytes&#x2F;s, done. </span><br><span class="line">Resolving deltas: 100% (2&#x2F;2), done. </span><br><span class="line">[root@dev ~]# ll </span><br><span class="line">drwxr-xr-x 6 root root 87 Nov 19 20:41 dzp </span><br><span class="line">drwxr-xr-x 3 root root 52 Nov 17 17:21 git_test </span><br><span class="line">[root@dev ~]# cd dzp&#x2F; </span><br><span class="line">[root@dev ~&#x2F;dzp]# ll </span><br><span class="line">total 8 </span><br><span class="line">drwxr-xr-x 2 root root 25 Nov 19 20:41 css </span><br><span class="line">drwxr-xr-x 2 root root 84 Nov 19 20:41 img </span><br><span class="line">drwxr-xr-x 2 root root 41 Nov 19 20:41 js </span><br><span class="line">-rw-r--r-- 1 root root 2170 Nov 19 20:41 lottery.html </span><br><span class="line">-rw-r--r-- 1 root root 113 Nov 19 20:41 README.md </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#dev用户修改了源代码</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@dev ~&#x2F;dzp]# vim lottery.html </span><br><span class="line">[root@dev ~&#x2F;dzp]# </span><br><span class="line">[root@dev ~&#x2F;dzp]# </span><br><span class="line">[root@dev ~&#x2F;dzp]# git commit -am &quot;modify html&quot; </span><br><span class="line">[master 1e2125e] modify html </span><br><span class="line">1 file changed, 5 insertions(+), 5 deletions(-) </span><br><span class="line">[root@dev ~&#x2F;dzp]# git push -u origin master </span><br><span class="line">Counting objects: 5, done. </span><br><span class="line">Compressing objects: 100% (3&#x2F;3), done. </span><br><span class="line">Writing objects: 100% (3&#x2F;3), 365 bytes | 0 bytes&#x2F;s, done. </span><br><span class="line">Total 3 (delta 2), reused 0 (delta 0) </span><br><span class="line">To git@10.0.0.100:OPS&#x2F;dzp.git </span><br><span class="line">3935eb7..1e2125e master -&gt; master </span><br><span class="line">Branch master set up to track remote branch master from origin.</span><br></pre></td></tr></table></figure><p>Jenkins 配置从 Git 获取代码，由于我们 dev 用户不是配置在 Jenkins 上，所以需认证即可下载代码。进行面认证方法，需要配置 deploy key</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@jenkins ~]# ssh-keygen -t rsa </span><br><span class="line">Generating public&#x2F;private rsa key pair. </span><br><span class="line">Enter file in which to save the key (&#x2F;root&#x2F;.ssh&#x2F;id_rsa): </span><br><span class="line">Enter passphrase (empty for no passphrase): </span><br><span class="line">Enter same passphrase again: </span><br><span class="line">Your identification has been saved in &#x2F;root&#x2F;.ssh&#x2F;id_rsa. </span><br><span class="line">Your public key has been saved in &#x2F;root&#x2F;.ssh&#x2F;id_rsa.pub. </span><br><span class="line">The key fingerprint is: </span><br><span class="line">SHA256:1z+H0mc9hUwOWiO3mFOGswuOW9jNr2bmOwRE50eECQU root@jenkins </span><br><span class="line">The key&#39;s randomart image is: </span><br><span class="line">+---[RSA 2048]----+ </span><br><span class="line">| .E+o+o | </span><br><span class="line">| .ooo | </span><br><span class="line">| . &#x3D; O . | </span><br><span class="line">| . # B . | </span><br><span class="line">| S.B o + .| </span><br><span class="line">| &#x3D; &#x3D;.o o .o| </span><br><span class="line">| o +.+ . &#x3D;.&#x3D;| </span><br><span class="line">| o &#x3D;. . &#x3D;.| </span><br><span class="line">| . &#x3D;++. | </span><br><span class="line">+----[SHA256]-----+ </span><br><span class="line">[root@jenkins ~]# cat .ssh&#x2F; </span><br><span class="line">id_rsa id_rsa.pub known_hosts </span><br><span class="line">[root@jenkins ~]# cat .ssh&#x2F;id_rsa.pub </span><br><span class="line">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCY3WrgTCmZeapjV9Tx6GmmHX+SVigxHnz37f8iUUjAexmR2&#x2F;gSAjvsY3ez5iITmamf2I62+5n+gx9f1OPXUsUAzOApD6R8zHmvzQ&#x2F;yheDO1y5XHcmRtklN1HpOq2g0PChrRjrr4QcXITKafU30OjTu4Fx3vndxqD&#x2F;3RpHD3IVSZGAsiJC6T+C&#x2F;PYW8YfeLNEAA7O3QKskjuSkoH2PZyF7qQgwjxfudno1g3qLQkmB+CjFFwgj0vkam&#x2F;W4OwUwapC1O591CU7+VmSWL&#x2F;z8uMTpSV+FQkyH04qS&#x2F;HSs27pfpAI0wpBB&#x2F;gBxx+wU8FCUh++2SWpuJR8&#x2F;TPqkS8YKhfl+p root@jenkins  #复制该串代码</span><br></pre></td></tr></table></figure><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_107.png" alt="img" title="img"></p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_108.png" alt="img" title="img"></p><p>Jenkins 配置从 Git 获取代码，配置好后保存</p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_109.png" alt="img" title="img"></p><h4 id="07-立即构建获取源代码展开目录"><a href="#07-立即构建获取源代码展开目录" class="headerlink" title="07. 立即构建获取源代码展开目录"></a>07. 立即构建获取源代码展开目录</h4><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_110.png" alt="img" title="img"></p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_111.png" alt="img" title="img"></p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_112.png" alt="img" title="img"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Jenkins服务器查看代码</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@jenkins ~]# ll &#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;freestyle-job&#x2F;</span><br><span class="line">total 8</span><br><span class="line">drwxr-xr-x 2 root root 25 2019-11-19 21:12 css</span><br><span class="line">drwxr-xr-x 2 root root 84 2019-11-19 21:12 img</span><br><span class="line">drwxr-xr-x 2 root root 41 2019-11-19 21:12 js</span><br><span class="line">-rw-r--r-- 1 root root 2205 2019-11-19 21:12 lottery.html</span><br><span class="line">-rw-r--r-- 1 root root 113 2019-11-19 21:12 README.md</span><br></pre></td></tr></table></figure><h4 id="08-Jenkins-代码推送到-Web展开目录"><a href="#08-Jenkins-代码推送到-Web展开目录" class="headerlink" title="08. Jenkins 代码推送到 Web展开目录"></a>08. Jenkins 代码推送到 Web展开目录</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">#写一个脚本把从git仓库里获取的代码上传到web服务器站点目录下</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@jenkins ~]# mkdir -p &#x2F;server&#x2F;script </span><br><span class="line">[root@jenkins ~]# cd &#x2F;server&#x2F;script </span><br><span class="line">[root@jenkins script]# vim deploy.sh </span><br><span class="line">[root@jenkins script]# cat deploy.sh </span><br><span class="line">#!&#x2F;bin&#x2F;sh </span><br><span class="line">Date&#x3D;$(date +%s) </span><br><span class="line">Code_Dir&#x3D;&#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;freestyle-job </span><br><span class="line">Web_Dir&#x3D;&#x2F;code </span><br><span class="line">Ip&#x3D;10.0.0.202 </span><br><span class="line">Code_Tar() &#123; </span><br><span class="line"> cd Code_Dir &amp;&amp; tar zcf &#x2F;opt&#x2F;web_Code_Dir &amp;&amp; tar zcf &#x2F;opt&#x2F;web_&#123;Date&#125;.tar.gz .&#x2F; </span><br><span class="line">&#125; </span><br><span class="line">Scp_Code_Web() &#123; </span><br><span class="line"> scp &#x2F;opt&#x2F;web_Date.tar.gzroot@Date.tar.gzroot@&#123;Ip&#125;:&#x2F;opt </span><br><span class="line">&#125; </span><br><span class="line">Code_Tar_Xf() &#123; </span><br><span class="line"> ssh root@Ip &quot; cd &#x2F;opt &amp;&amp; mkdir web_Ip &quot; cd &#x2F;opt &amp;&amp; mkdir web_Date &amp;&amp; tar xf web_&#123;Date&#125;.tar.gz -C web_&#123;Date&#125;.tar.gz -C web_Date &quot; </span><br><span class="line">&#125; </span><br><span class="line">Ln_Html() &#123; </span><br><span class="line"> ssh root@Ip&quot;rm−rfIp&quot;rm−rfWeb_Dir &amp;&amp; ln -s &#x2F;opt&#x2F;web_$Date &#x2F;code &quot; </span><br><span class="line">&#125; </span><br><span class="line">Code_Tar; </span><br><span class="line">Scp_Code_Web; </span><br><span class="line">Code_Tar_Xf; </span><br><span class="line">Ln_Html </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#分发公钥</span><br><span class="line"></span><br><span class="line">[root@jenkins script]# ssh-copy-id -i &#x2F;root&#x2F;.ssh&#x2F;id_rsa.pub root@10.0.0.202 </span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;ssh-copy-id: INFO: Source of key(s) to be installed: &quot;&#x2F;root&#x2F;.ssh&#x2F;id_rsa.pub&quot; </span><br><span class="line">The authenticity of host &#39;10.0.0.202 (10.0.0.202)&#39; can&#39;t be established. </span><br><span class="line">ECDSA key fingerprint is SHA256:K8NapPzlTxhCMXC&#x2F;bRFTtI9mdwr63FH4Wu7psrXXqBs. </span><br><span class="line">ECDSA key fingerprint is MD5:73:9f:67:f1:5d:39:10:3d:b2:be:f7:c1:66:aa:00:6e. </span><br><span class="line">Are you sure you want to continue connecting (yes&#x2F;no)? yes </span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed </span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys </span><br><span class="line">root@10.0.0.202&#39;s password: </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Number of key(s) added: 1 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Now try logging into the machine, with: &quot;ssh &#39;root@10.0.0.202&#39;&quot; </span><br><span class="line">and check to make sure that only the key(s) you wanted were added. </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@jenkins script]# ssh root@10.0.0.202 </span><br><span class="line">Last login: Tue Nov 19 15:10:55 2019 from 10.0.0.1 </span><br><span class="line">[root@nexus ~]# logout </span><br><span class="line">Connection to 10.0.0.202 closed. </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#Jenkins上面添加脚本进行构建</span><br></pre></td></tr></table></figure><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_113.png" alt="img" title="img"></p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_114.png" alt="img" title="img"></p><p>查看网站是否更新成功</p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_115.png" alt="img" title="img"></p><h4 id="09-配置自动触发构建展开目录"><a href="#09-配置自动触发构建展开目录" class="headerlink" title="09. 配置自动触发构建展开目录"></a>09. 配置自动触发构建展开目录</h4><h1 id="需要设置安全令牌-Secret-token"><a href="#需要设置安全令牌-Secret-token" class="headerlink" title="需要设置安全令牌 Secret token"></a>需要设置安全令牌 Secret token</h1><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_116.png" alt="img" title="img"></p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_117.png" alt="img" title="img"></p><p>Gitlab 上面操作</p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_118.png" alt="img" title="img"></p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_119.png" alt="img" title="img"></p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_120.png" alt="img" title="img"></p><h4 id="10-测试是否触发展开目录"><a href="#10-测试是否触发展开目录" class="headerlink" title="10. 测试是否触发展开目录"></a>10. 测试是否触发展开目录</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#dev用户修改源代码后进行推送测试是否自动触发</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@dev ~&#x2F;dzp]# vim lottery.html </span><br><span class="line">[root@dev ~&#x2F;dzp]# git commit -am &quot;modify html test&quot;</span><br><span class="line">[master d8849aa] modify html test</span><br><span class="line">1 file changed, 3 insertions(+), 3 deletions(-)</span><br><span class="line">[root@dev ~&#x2F;dzp]# git push -u origin master</span><br><span class="line">Counting objects: 5, done.</span><br><span class="line">Compressing objects: 100% (3&#x2F;3), done.</span><br><span class="line">Writing objects: 100% (3&#x2F;3), 303 bytes | 0 bytes&#x2F;s, done.</span><br><span class="line">Total 3 (delta 2), reused 0 (delta 0)</span><br><span class="line">To git@10.0.0.100:OPS&#x2F;dzp.git</span><br><span class="line">1e2125e..d8849aa master -&gt; master</span><br><span class="line">Branch master set up to track remote branch master from origin.</span><br></pre></td></tr></table></figure><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_121.png" alt="img" title="img"></p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_122.png" alt="img" title="img"></p><h4 id="11-返回构建状态展开目录"><a href="#11-返回构建状态展开目录" class="headerlink" title="11. 返回构建状态展开目录"></a>11. 返回构建状态展开目录</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#Jenkins配置Jenkins返回构建状态到Gitlab</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#先获得gitlab的token</span><br></pre></td></tr></table></figure><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_123.png" alt="img" title="img"></p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_124.png" alt="img" title="img"></p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_125.png" alt="img" title="img"></p><p>将获得的 token 值进行复制备用</p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_126.png" alt="img" title="img"></p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_127.png" alt="img" title="img"></p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_128.png" alt="img" title="img"></p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_129.png" alt="img" title="img"></p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_130.png" alt="img" title="img"></p><p>进行测试</p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_131.png" alt="img" title="img"></p><p>添加构建后操作</p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_132.png" alt="img" title="img"></p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_133.png" alt="img" title="img"></p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_134.png" alt="img" title="img"></p><p>检查结果</p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_135.png" alt="img" title="img"></p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_136.png" alt="img" title="img"></p><h1 id="创建-Maven-项目展开目录"><a href="#创建-Maven-项目展开目录" class="headerlink" title="创建 Maven 项目展开目录"></a>创建 Maven 项目展开目录</h1><p>Maven 是一个项目管理和综合工具。Maven 提供给开发人员构建一个完整的生命周期框架。<br>开发团队可以自动完成该项目的基础设施建设，Maven 使用标准的目录结构和默认构建生命周期。<br>Apache 的开源项目主要服务于 Java 平台的构建、依赖管理、项目管理。<br>Project Object Model，项目对象模型。通过 xml 格式保存的 pom.xml 文件。该文件用于管理：源代码、配置文<br>件、开发者的信息和角色、问题追踪系统、组织信息、项目授权、项目的 url、项目的依赖关系等等。该文件是由开发维护，我们运维人员可以不用去关心。</p><p>mvn package #会去 maven 的中央仓库去下载需要的依赖包和插件到.m2 目录下<br>5. 创建 Maven 私服 nexus<br>部署私服 xenus 下载 <a href="https://www.sonatype.com/download">https://www.sonatype.com/download</a>‐oss‐sonatype</p><p>配置仓库两个选项<br>1、项目下的 pom.xml 配置、只生效当前的项目<br>2、在 maven 配置全局所有项目生效<br>上传 JDK 和 nexus 安装包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rpm ‐ivh jdk‐8u121‐linux‐x64.rpm</span><br><span class="line">mv nexus‐3.13.0‐01 &#x2F;usr&#x2F;local&#x2F;</span><br><span class="line">ln ‐s &#x2F;usr&#x2F;local&#x2F;nexus‐3.13.0‐01 &#x2F;usr&#x2F;local&#x2F;nexus</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;nexus&#x2F;bin&#x2F;nexus start</span><br><span class="line">10.0.0.202:8081 admin admin123</span><br></pre></td></tr></table></figure><p>配置 Maven 全局配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;usr&#x2F;local&#x2F;maven&#x2F;conf&#x2F;settings.xml</span><br></pre></td></tr></table></figure><p>6. 创建一个 Maven 项目<br>创建前上传代码到 gitlab 服务器，把 java 项目添加到 gitlab 仓库中</p><h4 id="01-部署-Maven展开目录"><a href="#01-部署-Maven展开目录" class="headerlink" title="01. 部署 Maven展开目录"></a>01. 部署 Maven展开目录</h4><p>官网： <a href="http://maven.apache.org/download.cgi">http://maven.apache.org/download.cgi</a><br>清华镜像： <a href="https://mirrors.tuna.tsinghua.edu.cn/apache/maven/">https://mirrors.tuna.tsinghua.edu.cn/apache/maven/</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">#上传软件包</span><br><span class="line">[root@jenkins ~]# ll</span><br><span class="line">-rw-r--r-- 1 root root 8491533 2018-08-27 14:38 apache-maven-3.3.9-bin.tar.gz</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#解压</span><br><span class="line">[root@jenkins ~]# tar xf apache-maven-3.3.9-bin.tar.gz</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#改变目录位置</span><br><span class="line">[root@jenkins maven]# mv apache-maven-3.3.9 &#x2F;usr&#x2F;local&#x2F;maven-3.3.9</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#软连接</span><br><span class="line">[root@jenkins maven]# ln -s &#x2F;usr&#x2F;local&#x2F;maven-3.3.9 &#x2F;usr&#x2F;local&#x2F;maven</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@jenkins ~]# cd &#x2F;usr&#x2F;local&#x2F;maven</span><br><span class="line">[root@jenkins maven]# ll</span><br><span class="line">total 32</span><br><span class="line">drwxr-xr-x 2 root root 97 2019-11-20 21:55 bin</span><br><span class="line">drwxr-xr-x 2 root root 42 2019-11-20 21:55 boot</span><br><span class="line">drwxr-xr-x 3 root root 63 2015-11-11 00:38 conf</span><br><span class="line">drwxr-xr-x 3 root root 4096 2019-11-20 21:55 lib</span><br><span class="line">-rw-r--r-- 1 root root 19335 2015-11-11 00:44 LICENSE</span><br><span class="line">-rw-r--r-- 1 root root 182 2015-11-11 00:44 NOTICE</span><br><span class="line">-rw-r--r-- 1 root root 2541 2015-11-11 00:38 README.txt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#设置环境变量</span><br><span class="line">[root@jenkins maven]# echo &quot;export PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;maven&#x2F;bin&#x2F;:$PATH&quot; &gt;&gt;&#x2F;etc&#x2F;profile</span><br><span class="line">[root@jenkins maven]# source &#x2F;etc&#x2F;profile</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#查看结果</span><br><span class="line">[root@jenkins maven]# mvn -v</span><br><span class="line">Apache Maven 3.3.9 (bb52d8502b132ec0a5a3f4c09453c07478323dc5; 2015-11-11T00:41:47+08:00)</span><br><span class="line">Maven home: &#x2F;usr&#x2F;local&#x2F;maven</span><br><span class="line">Java version: 1.8.0_181, vendor: Oracle Corporation</span><br><span class="line">Java home: &#x2F;usr&#x2F;java&#x2F;jdk1.8.0_181-amd64&#x2F;jre</span><br><span class="line">Default locale: en_US, platform encoding: UTF-8</span><br><span class="line">OS name: &quot;linux&quot;, version: &quot;3.10.0-957.el7.x86_64&quot;, arch: &quot;amd64&quot;, family: &quot;unix&quot;</span><br></pre></td></tr></table></figure><h4 id="02-编译测试展开目录"><a href="#02-编译测试展开目录" class="headerlink" title="02. 编译测试展开目录"></a>02. 编译测试展开目录</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#上传一个简单的java项目包hello‐world.tar.gz进行解压</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@jenkins ~]# ll</span><br><span class="line">-rw-r--r-- 1 root root 1325 2018-08-22 13:43 hello-world.tar.gz</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@jenkins ~]# tar xf hello-world.tar.gz </span><br><span class="line">[root@jenkins ~]# cd hello-world&#x2F;</span><br><span class="line"></span><br><span class="line">validate（验证）:   验证项目正确，并且所有必要信息可用。</span><br><span class="line">compile（编译）:  编译项目源码</span><br><span class="line">test（测试）:     使用合适的单元测试框架测试编译后的源码。</span><br><span class="line">package（打包）:   源码编译之后，使用合适的格式（例如JAR格式）对编译后的源码进行打包。</span><br><span class="line">integration‐test（集成测试）: 如果有需要，把包处理并部署到可以运行集成测试的环境中去。</span><br><span class="line">verify（验证）:   进行各种测试来验证包是否有效并且符合质量标准。</span><br><span class="line">install（安装）:   把包安装到本地仓库，使该包可以作为其他本地项目的依赖。</span><br><span class="line">deploy（部署）:   在集成或发布环境中完成，将最终软件包复制到远程存储库，以与其他开发人员和项目共享。</span><br><span class="line">mvn clean (清除) : 清除上次编译的结果</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#测试</span><br><span class="line">[root@jenkins hello-world]# mvn test</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#打包</span><br><span class="line">[root@jenkins hello-world]# mvn package  #会去maven的中央仓库去下载需要的依赖包和插件到.m2目录下</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#打包结果</span><br><span class="line">[root@jenkins hello-world]# ll target&#x2F;</span><br><span class="line">total 8</span><br><span class="line">drwxr-xr-x 3 root root 17 2019-11-20 22:13 classes</span><br><span class="line">-rw-r--r-- 1 root root 3130 2019-11-20 23:39 hello-world-1.0-SNAPSHOT.jar</span><br><span class="line">drwxr-xr-x 2 root root 28 2019-11-20 23:38 maven-archiver</span><br><span class="line">drwxr-xr-x 3 root root 35 2019-11-20 22:13 maven-status</span><br><span class="line">-rw-r--r-- 1 root root 2872 2019-11-20 23:38 original-hello-world-1.0-SNAPSHOT.jar</span><br><span class="line">drwxr-xr-x 2 root root 125 2019-11-20 22:14 surefire-reports</span><br><span class="line">drwxr-xr-x 3 root root 17 2019-11-20 22:13 test-classes</span><br></pre></td></tr></table></figure><h4 id="03-部署-Tomcat-及数据库展开目录"><a href="#03-部署-Tomcat-及数据库展开目录" class="headerlink" title="03. 部署 Tomcat 及数据库展开目录"></a>03. 部署 Tomcat 及数据库展开目录</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">#上传压缩包</span><br><span class="line">[root@tomcat ~]# ll</span><br><span class="line">-rw-r--r-- 1 root root 9128610 Mar 27 2019 apache-tomcat-8.0.27.tar.gz</span><br><span class="line">-rw-r--r-- 1 root root 170023183 Aug 14 2018 jdk-8u181-linux-x64.rpm</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#安装JDK</span><br><span class="line">[root@tomcat ~]# rpm -ivh jdk-8u181-linux-x64.rpm </span><br><span class="line">warning: jdk-8u181-linux-x64.rpm: Header V3 RSA&#x2F;SHA256 Signature, key ID ec551f03: NOKEY</span><br><span class="line">Preparing... ################################# [100%]</span><br><span class="line">Updating &#x2F; installing...</span><br><span class="line">1:jdk1.8-2000:1.8.0_181-fcs ################################# [100%]</span><br><span class="line">Unpacking JAR files...</span><br><span class="line"> tools.jar...</span><br><span class="line"> plugin.jar...</span><br><span class="line"> javaws.jar...</span><br><span class="line"> deploy.jar...</span><br><span class="line"> rt.jar...</span><br><span class="line"> jsse.jar...</span><br><span class="line"> charsets.jar...</span><br><span class="line"> localedata.jar...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#解压Tomcat</span><br><span class="line">[root@tomcat ~]# mkdir &#x2F;application</span><br><span class="line">[root@tomcat ~]# tar xf apache-tomcat-8.0.27.tar.gz -C &#x2F;application</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#创建软连接</span><br><span class="line">[root@tomcat ~]# ln -s &#x2F;application&#x2F;apache-tomcat-8.0.27 &#x2F;application&#x2F;tomcat</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#tomcat启动加速的方法</span><br><span class="line">[root@tomcat ~]# vim &#x2F;usr&#x2F;java&#x2F;jdk1.8.0_181-amd64&#x2F;jre&#x2F;lib&#x2F;security&#x2F;java.security </span><br><span class="line">117 securerandom.source&#x3D;file:&#x2F;dev&#x2F;urandom #修改之后</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#启动tomcat</span><br><span class="line">[root@tomcat ~]# &#x2F;application&#x2F;tomcat&#x2F;bin&#x2F;startup.sh </span><br><span class="line">Using CATALINA_BASE: &#x2F;application&#x2F;tomcat</span><br><span class="line">Using CATALINA_HOME: &#x2F;application&#x2F;tomcat</span><br><span class="line">Using CATALINA_TMPDIR: &#x2F;application&#x2F;tomcat&#x2F;temp</span><br><span class="line">Using JRE_HOME: &#x2F;usr</span><br><span class="line">Using CLASSPATH: &#x2F;application&#x2F;tomcat&#x2F;bin&#x2F;bootstrap.jar:&#x2F;application&#x2F;tomcat&#x2F;bin&#x2F;tomcat-juli.jar</span><br><span class="line">Tomcat started.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#检查端口</span><br><span class="line">[root@tomcat ~]# netstat -lntp</span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address Foreign Address State PID&#x2F;Program name </span><br><span class="line">tcp 0 0 0.0.0.0:22 0.0.0.0: LISTEN 6758&#x2F;sshd </span><br><span class="line">tcp 0 0 127.0.0.1:25 0.0.0.0: LISTEN 7134&#x2F;master </span><br><span class="line">tcp6 0 0 :::8009 ::: LISTEN 24383&#x2F;java </span><br><span class="line">tcp6 0 0 :::8080 ::: LISTEN 24383&#x2F;java </span><br><span class="line">tcp6 0 0 :::22 ::: LISTEN 6758&#x2F;sshd </span><br><span class="line">tcp6 0 0 ::1:25 ::: LISTEN 7134&#x2F;master </span><br><span class="line">tcp6 0 0 127.0.0.1:8005 ::: LISTEN 24383&#x2F;java</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#浏览器使用8080端口访问</span><br></pre></td></tr></table></figure><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_137.png" alt="img" title="img"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line">#为项目准备好数据库jeesns，设置数据库root用户密码为root</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#安装数据库</span><br><span class="line">[root@tomcat ~]# yum install mariadb-server -y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@tomcat ~]# systemctl start mariadb.service </span><br><span class="line">[root@tomcat ~]# mysqladmin password &#39;root&#39;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#创建jeesns库</span><br><span class="line">[root@tomcat ~]# mysql -uroot -proot -e &quot;create database jeesns;&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#dev上面上传一个项目</span><br><span class="line">[root@git ~]# ll</span><br><span class="line">-rw-r--r-- 1 root root 15376795 2019-03-27 17:33 jeesns.tar.gz</span><br><span class="line">[root@git ~]# tar xf jeesns.tar.gz </span><br><span class="line">[root@git ~]# cd jeesns&#x2F;</span><br><span class="line">[root@git ~&#x2F;jeesns]# git remote</span><br><span class="line">origin</span><br><span class="line">[root@git ~&#x2F;jeesns]# git remote remove origin </span><br><span class="line">[root@git ~&#x2F;jeesns]# ll jeesns-web&#x2F;database&#x2F;</span><br><span class="line">total 40</span><br><span class="line">-rwxr-xr-x 1 root root 28667 2018-11-19 15:01 jeesns.sql</span><br><span class="line">-rw-r--r-- 1 root root 3491 2018-11-19 15:01 update_1.2.0to1.2.1.sql</span><br><span class="line">-rw-r--r-- 1 root root 1026 2018-11-19 15:01 update_1.2.1to1.3.sql</span><br><span class="line">-rw-r--r-- 1 root root 1344 2018-11-19 15:01 update_1.3to1.3.1.sql</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#将该数据库传输到tomcat节点进行导入</span><br><span class="line">[root@git ~&#x2F;jeesns]# scp jeesns-web&#x2F;database&#x2F;jeesns.sql root@10.0.0.80:~</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#导入数据库</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@tomcat ~]# mysql -uroot -proot jeesns &lt; jeesns.sql </span><br><span class="line">[root@tomcat ~]# mysql -uroot -proot -e &quot;use jeesns; show tables&quot;</span><br><span class="line">+---------------------------+</span><br><span class="line">| Tables_in_jeesns |</span><br><span class="line">+---------------------------+</span><br><span class="line">| tbl_action |</span><br><span class="line">| tbl_action_log |</span><br><span class="line">| tbl_ads |</span><br><span class="line">| tbl_archive |</span><br><span class="line">| tbl_archive_favor |</span><br><span class="line">| tbl_article |</span><br><span class="line">| tbl_article_cate |</span><br><span class="line">| tbl_article_comment |</span><br><span class="line">| tbl_checkin |</span><br><span class="line">| tbl_config |</span><br><span class="line">| tbl_group |</span><br><span class="line">| tbl_group_fans |</span><br><span class="line">| tbl_group_topic |</span><br><span class="line">| tbl_group_topic_comment |</span><br><span class="line">| tbl_group_topic_type |</span><br><span class="line">| tbl_group_type |</span><br><span class="line">| tbl_link |</span><br><span class="line">| tbl_member |</span><br><span class="line">| tbl_member_fans |</span><br><span class="line">| tbl_member_level |</span><br><span class="line">| tbl_member_token |</span><br><span class="line">| tbl_memgroup |</span><br><span class="line">| tbl_message |</span><br><span class="line">| tbl_picture |</span><br><span class="line">| tbl_picture_album |</span><br><span class="line">| tbl_picture_album_comment |</span><br><span class="line">| tbl_picture_album_favor |</span><br><span class="line">| tbl_picture_comment |</span><br><span class="line">| tbl_picture_favor |</span><br><span class="line">| tbl_picture_tag |</span><br><span class="line">| tbl_score_detail |</span><br><span class="line">| tbl_score_rule |</span><br><span class="line">| tbl_tag |</span><br><span class="line">| tbl_validate_code |</span><br><span class="line">| tbl_weibo |</span><br><span class="line">| tbl_weibo_comment |</span><br><span class="line">| tbl_weibo_favor |</span><br><span class="line">| tbl_weibo_topic |</span><br><span class="line">+---------------------------+</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#打包jeesns项目</span><br><span class="line">[root@git ~&#x2F;jeesns]# mvn package</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#打包之后生成的war包</span><br><span class="line">[root@git ~&#x2F;jeesns]# ll jeesns-web&#x2F;target&#x2F;</span><br><span class="line">total 25496</span><br><span class="line">drwxr-xr-x 4 root root 181 2019-11-20 23:19 classes</span><br><span class="line">drwxr-xr-x 3 root root 25 2019-11-20 23:19 generated-sources</span><br><span class="line">drwxr-xr-x 5 root root 104 2019-11-20 23:19 jeesns-web</span><br><span class="line">-rw-r--r-- 1 root root 26106028 2019-11-20 23:20 jeesns-web.war</span><br><span class="line">drwxr-xr-x 2 root root 28 2019-11-20 23:19 maven-archiver</span><br><span class="line">drwxr-xr-x 3 root root 35 2019-11-20 23:19 maven-status</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#将其手动传输到tomcat节点上面测试</span><br><span class="line">[root@git ~&#x2F;jeesns]# scp jeesns-web&#x2F;target&#x2F;jeesns-web.war root@10.0.0.80:&#x2F;application&#x2F;tomcat&#x2F;webapps&#x2F;ROOT.war</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#浏览器刷新测试</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_138.png" alt="img" title="img"></p><h4 id="04-创建一个-jeesns-项目展开目录"><a href="#04-创建一个-jeesns-项目展开目录" class="headerlink" title="04. 创建一个 jeesns 项目展开目录"></a>04. 创建一个 jeesns 项目展开目录</h4><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_139.png" alt="img" title="img"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#清除上次编译的结果</span><br><span class="line">[root@git ~&#x2F;jeesns]# mvn clean</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@git ~&#x2F;jeesns]# git remote remove origin</span><br><span class="line">[root@git ~&#x2F;jeesns]# </span><br><span class="line">[root@git ~&#x2F;jeesns]# </span><br><span class="line">[root@git ~&#x2F;jeesns]# git remote add origin git@10.0.0.100:OPS&#x2F;jeesns.git</span><br><span class="line">[root@git ~&#x2F;jeesns]# git add .</span><br><span class="line">[root@git ~&#x2F;jeesns]# git commit -m &quot;Initial commit&quot;</span><br><span class="line"># On branch master</span><br><span class="line">nothing to commit, working directory clean</span><br><span class="line">[root@git ~&#x2F;jeesns]# git push -u origin master</span><br><span class="line">Counting objects: 1946, done.</span><br><span class="line">Compressing objects: 100% (1862&#x2F;1862), done.</span><br><span class="line">Writing objects: 100% (1946&#x2F;1946), 7.09 MiB | 7.25 MiB&#x2F;s, done.</span><br><span class="line">Total 1946 (delta 285), reused 0 (delta 0)</span><br><span class="line">remote: Resolving deltas: 100% (285&#x2F;285), done.</span><br><span class="line">To git@10.0.0.100:OPS&#x2F;jeesns.git</span><br><span class="line"> [new branch] master -&gt; master</span><br><span class="line">Branch master set up to track remote branch master from origin.</span><br></pre></td></tr></table></figure><h4 id="05-Jenkins-创建一个-maven展开目录"><a href="#05-Jenkins-创建一个-maven展开目录" class="headerlink" title="05. Jenkins 创建一个 maven展开目录"></a>05. Jenkins 创建一个 maven展开目录</h4><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_140.png" alt="img" title="img"></p><h1 id="此处如果出现报错，请添加-Deploy-Keys"><a href="#此处如果出现报错，请添加-Deploy-Keys" class="headerlink" title="此处如果出现报错，请添加 Deploy Keys"></a>此处如果出现报错，请添加 Deploy Keys</h1><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_141.png" alt="img" title="img"></p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_142.png" alt="img" title="img"></p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_143.png" alt="img" title="img"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#发现已经打包成功了</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@jenkins ~]# ll &#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;maven-job&#x2F;jeesns-web&#x2F;target&#x2F;jeesns-web.war </span><br><span class="line">-rw-r--r-- 1 root root 26106007 2019-11-23 11:49 &#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;maven-job&#x2F;jeesns-web&#x2F;target&#x2F;jeesns-web.war </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#jenkins用户给tomcat节点进行分发公钥</span><br><span class="line"></span><br><span class="line">[root@jenkins ~]# ssh-copy-id -i .ssh&#x2F;id_rsa.pub root@10.0.0.80 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#构建后操作</span><br><span class="line"></span><br><span class="line">ssh root@10.0.0.80 &quot;mv &#x2F;application&#x2F;tomcat&#x2F;webapps&#x2F;ROOT.war &#x2F;tmp&#x2F;$BUILD_ID-ROOT.war&quot; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">scp &#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;workspace&#x2F;maven-job&#x2F;jeesns-web&#x2F;target&#x2F;jeesns-web.war root@10.0.0.80:&#x2F;application&#x2F;tomcat&#x2F;webapps&#x2F;ROOT.war </span><br></pre></td></tr></table></figure><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_144.png" alt="img" title="img"></p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_145.png" alt="img" title="img"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@tomcat ~]# ll &#x2F;tmp&#x2F; </span><br><span class="line">total 50992 </span><br><span class="line">-rw-r--r-- 1 root root 26106004 2019-11-23 01:28 2-ROOT.war </span><br></pre></td></tr></table></figure><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_146.png" alt="img" title="img"></p><h1 id="Pipeline-项目展开目录"><a href="#Pipeline-项目展开目录" class="headerlink" title="Pipeline 项目展开目录"></a>Pipeline 项目展开目录</h1><h4 id="01-基础概念展开目录"><a href="#01-基础概念展开目录" class="headerlink" title="01. 基础概念展开目录"></a>01. 基础概念展开目录</h4><p><strong>CI/CD 持续集成 / 持续部署</strong></p><p>持续集成 (Continuous integration) 是一种软件开发实践，即团队开发成员经常集成它们的工作，通过每个成员</p><p>每天至少集成一次，也就意味着每天可能会发生多次集成。每次集成都通过自动化的构建（包括编译，发布，自动</p><p>化测试）来验证，从而尽早地发现集成错误。</p><p>比如（你家装修厨房，其中一项是铺地砖，边角地砖要切割大小。如果一次全切割完再铺上去，发现尺寸有误的话</p><p>浪费和返工时间就大了，不如切一块铺一块。这就是持续集成。）</p><p>持续部署（continuous deployment）是通过自动化的构建、测试和部署循环来快速交付高质量的产品。某种程度上代表了一个开发团队工程化的程度，毕竟快速运转的互联网公司人力成本会高于机器，投资机器优化开发流程化</p><p>相对也提高了人的效率。</p><p>比如（装修厨房有很多部分，每个部分都有检测手段，如地砖铺完了要测试漏水与否，线路铺完了要通电测试电路</p><p>通顺，水管装好了也要测试冷水热水。如果全部装完了再测，出现问题可能会互相影响，比如电路不行可能要把地</p><p>砖给挖开……。那么每完成一部分就测试，这是持续部署。）</p><p>持续交付 Continuous Delivery: 频繁地将软件的新版本，交付给质量团队或者用户，以供评审尽早发现生产环境中存在的问题；如果评审通过，代码就进入生产阶段.</p><p>比如（全部装修完了，你去验收，发现地砖颜色不合意，水池太小，灶台位置不对，返工吗？所以不如没完成一部</p><p>分，你就去用一下试用验收，这就是持续交付。）</p><p>敏捷思想中提出的这三个观点，还强调一件事：通过技术手段自动化这三个工作。加快交付速度。</p><p>1. 什么是 pipeline</p><p>Jenkins 2.0 的精髓是 Pipeline as Code，是帮助 Jenkins 实现 CI 到 CD 转变的重要角色。什么是 Pipeline，简单来说，就是一套运行于 Jenkins 上的工作流框架，将原本独立运行于单个或者多个节点的任务连接起来，实现单个</p><p>任务难以完成的复杂发布流程。Pipeline 的实现方式是一套 Groovy DSL，任何发布流程都可以表述为一段 Groovy<br>脚本，并且 Jenkins 支持从代码库直接读取脚本，从而实现了 Pipeline as Code 的理念。</p><p>2.Pipeline 概念</p><p>Pipeline 是一个用户定义的 CD 流水线模式。Pipeline 代码定义了通常包含构建、测试和发布步骤的完整的构</p><p>建过程。</p><p>Node<br>node 是一个机器，它是 Jenkins 环境的一部分，并且能够执行 Pipeline。同时，node 代码块也是脚本式</p><p>Pipeline 语法的关键特性。</p><p>Stage<br>Stage 块定义了在整个 Pipeline 中执行的概念上不同的任务子集（例如 “构建”，”测试” 和 “部署” 阶段），</p><p>许多插件使用它来可视化或呈现 Jenkins 管道状态 / 进度。</p><p>Step<br>一项任务。从根本上讲，一个步骤告诉 Jenkins 在特定时间点（或过程中的 “步骤”）要做什么。例如，使用</p><p>sh step：sh ‘make’ 可以执行 make 这个 shell 命令。</p><p>3.jenkins file<br>声明式<br>脚本式</p><p>脚本式语法格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">pipeline&#123; </span><br><span class="line"> agent any </span><br><span class="line">stages&#123; </span><br><span class="line"> stage(&quot;get code&quot;)&#123; </span><br><span class="line">   steps&#123; </span><br><span class="line">     echo &quot;get code from scm&quot; </span><br><span class="line">   &#125; </span><br><span class="line"> &#125; </span><br><span class="line"> stage(&quot;package&quot;)&#123; </span><br><span class="line">   steps&#123; </span><br><span class="line">   echo &quot;packge code&quot; </span><br><span class="line">   &#125; </span><br><span class="line"> &#125; </span><br><span class="line"> stage(&quot;deploy&quot;)&#123; </span><br><span class="line">   steps&#123; </span><br><span class="line">     echo &quot;deploy packge to node1&quot; </span><br><span class="line">   &#125; </span><br><span class="line"> &#125; </span><br><span class="line"> &#125; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h4 id="02-创建-pipeline-项目展开目录"><a href="#02-创建-pipeline-项目展开目录" class="headerlink" title="02. 创建 pipeline 项目展开目录"></a>02. 创建 pipeline 项目展开目录</h4><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_147.png" alt="img" title="img"></p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_148.png" alt="img" title="img"></p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_149.png" alt="img" title="img"></p><p>在仓库创建一个 Jenkinsfile 文件进行调用</p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_150.png" alt="img" title="img"></p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_151.png" alt="img" title="img"></p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_152.png" alt="img" title="img"></p><p>编辑 Jenkinsfile 文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">pipeline&#123; </span><br><span class="line"> agent any </span><br><span class="line">stages&#123; </span><br><span class="line"> stage(&quot;get code&quot;)&#123; </span><br><span class="line">   steps&#123; </span><br><span class="line">     echo &quot;get code&quot; </span><br><span class="line">   &#125; </span><br><span class="line"> &#125; </span><br><span class="line"> stage(&quot;unit test&quot;)&#123; </span><br><span class="line">   steps&#123; </span><br><span class="line">   echo &quot;unit test&quot; </span><br><span class="line">   &#125; </span><br><span class="line"> &#125; </span><br><span class="line"> stage(&quot;package&quot;)&#123; </span><br><span class="line">   steps&#123; </span><br><span class="line"> sh &#39;tar zcf &#x2F;opt&#x2F;web-$&#123;BUILD_ID&#125;.tar.gz .&#x2F; --exclude&#x3D;.&#x2F;.git --exclude&#x3D;Jenkinsfile&#39; </span><br><span class="line">   &#125; </span><br><span class="line"> &#125; </span><br><span class="line"> stage(&quot;deploy&quot;)&#123; </span><br><span class="line">   steps&#123; </span><br><span class="line">     sh &#39;ssh 10.0.0.80 &quot;mkdir &#x2F;opt&#x2F;web-$&#123;BUILD_ID&#125;&quot;&#39; </span><br><span class="line">     sh &#39;scp &#x2F;opt&#x2F;web-$&#123;BUILD_ID&#125;.tar.gz 10.0.0.80:&#x2F;opt&#39; </span><br><span class="line">     sh &#39;ssh 10.0.0.80 &quot;tar xf &#x2F;opt&#x2F;web-$&#123;BUILD_ID&#125;.tar.gz -C &#x2F;code&quot;&#39; </span><br><span class="line">   &#125; </span><br><span class="line"> &#125; </span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_153.png" alt="img" title="img"></p><p>执行构建报错</p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_154.png" alt="img" title="img"></p><p>修改脚本再次构建</p><p><img src="https://www.increase93.com/wp-content/uploads/2019/11/112319_1634_155.png" alt="img" title="img"></p><h1 id="回滚脚本展开目录"><a href="#回滚脚本展开目录" class="headerlink" title="回滚脚本展开目录"></a>回滚脚本展开目录</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">cd &#x2F;usr&#x2F;share&#x2F;nginx</span><br><span class="line">ls -d web-*</span><br><span class="line">read -p &quot;请复制你需要回滚的目录版本&quot; ver</span><br><span class="line">rm -rf html*</span><br><span class="line">ln -s $ver html</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 云计算 </category>
          
          <category> 自动化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Gitlab+Jenkins </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Etc 目录详解 - linux 启动顺序 - vim 编辑器 - 文件过滤</title>
      <link href="/posts/6840/"/>
      <url>/posts/6840/</url>
      
        <content type="html"><![CDATA[<p><img src="https://www.kococ.cn/usr/uploads/2020/03/1352352684.png" alt="etc目录集合vim集合文件过滤集合.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MySQL进阶之路初级DBA（十一）</title>
      <link href="/posts/53892/"/>
      <url>/posts/53892/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL-lesson11–读写分离架构-Atlas"><a href="#MySQL-lesson11–读写分离架构-Atlas" class="headerlink" title="MySQL-lesson11–读写分离架构-Atlas"></a>MySQL-lesson11–读写分离架构-Atlas</h1><h1 id="1-Atlas介绍"><a href="#1-Atlas介绍" class="headerlink" title="1. Atlas介绍"></a>1. Atlas介绍</h1><p><img src="http://upload-images.jianshu.io/upload_images/16956686-24b9752549843352.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/567/format/webp" alt="img"></p><p>image.png</p><p><img src="http://upload-images.jianshu.io/upload_images/16956686-dce5742c72a16dac.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/546/format/webp" alt="img"></p><p>image.png</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> Atlas是由 Qihoo 360, Web平台部基础架构团队开发维护的一个基于MySQL协议的数据中间层项目。</span><br><span class="line">它是在mysql-proxy 0.8.2版本的基础上，对其进行了优化，增加了一些新的功能特性。</span><br><span class="line">360内部使用Atlas运行的mysql业务，每天承载的读写请求数达几十亿条。</span><br><span class="line">下载地址</span><br><span class="line">http:&#x2F;&#x2F;github.com&#x2F;Qihoo360&#x2F;Atlas&#x2F;releases</span><br><span class="line">注意：</span><br><span class="line">1、Atlas只能安装运行在64位的系统上</span><br><span class="line">2、Centos 5.X安装 Atlas-XX.el5.x86_64.rpm，Centos 6.X安装Atlas-XX.el6.x86_64.rpm。</span><br><span class="line">3、后端mysql版本应大于5.1，建议使用Mysql 5.6以上</span><br></pre></td></tr></table></figure><h1 id="2-安装配置"><a href="#2-安装配置" class="headerlink" title="2.安装配置"></a>2.安装配置</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum install -y Atlas*</span><br><span class="line">cd &#x2F;usr&#x2F;local&#x2F;mysql-proxy&#x2F;conf</span><br><span class="line">mv test.cnf test.cnf.bak</span><br><span class="line"> vi test.cnf</span><br></pre></td></tr></table></figure><p>[mysql-proxy]</p><p>admin-username = user admin-password = pwd proxy-backend-addresses = 10.0.0.55:3306 proxy-read-only-backend-addresses = 10.0.0.51:3306,10.0.0.53:3306 pwds = repl:3yb5jEku5h4=,mha:O2jBXONX098= daemon = true keepalive = true event-threads = 8 log-level = message log-path = /usr/local/mysql-proxy/log sql-log=ON proxy-address = 0.0.0.0:33060 admin-address = 0.0.0.0:2345 charset=utf8 启动atlas /usr/local/mysql-proxy/bin/mysql-proxyd test start ps -ef |grep proxy</p><h1 id="3-Atlas功能测试"><a href="#3-Atlas功能测试" class="headerlink" title="3. Atlas功能测试"></a>3. Atlas功能测试</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">测试读操作：</span><br><span class="line">mysql -umha -pmha  -h 10.0.0.53 -P 33060 </span><br><span class="line">db03 [(none)]&gt;select @@server_id;</span><br><span class="line">测试写操作：</span><br><span class="line">mysql&gt; begin;select @@server_id;commit;</span><br></pre></td></tr></table></figure><h1 id="4-生产用户要求"><a href="#4-生产用户要求" class="headerlink" title="4. 生产用户要求"></a>4. 生产用户要求</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">开发人员申请一个应用用户 app(  select  update  insert)  密码123456,要通过10网段登录</span><br><span class="line">1. 在主库中,创建用户</span><br><span class="line">grant select ,update,insert on *.* to app@&#39;10.0.0.%&#39; identified by &#39;123456&#39;;</span><br><span class="line">2. 在atlas中添加生产用户</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;mysql-proxy&#x2F;bin&#x2F;encrypt  123456      ----&gt;制作加密密码</span><br><span class="line">vim test.cnf</span><br><span class="line">pwds &#x3D; repl:3yb5jEku5h4&#x3D;,mha:O2jBXONX098&#x3D;,app:&#x2F;iZxz+0GRoA&#x3D;</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;mysql-proxy&#x2F;bin&#x2F;mysql-proxyd test restart</span><br><span class="line">[root@db03 conf]# mysql -uapp -p123456  -h 10.0.0.53 -P 33060</span><br></pre></td></tr></table></figure><h1 id="5-Atlas基本管理"><a href="#5-Atlas基本管理" class="headerlink" title="5. Atlas基本管理"></a>5. Atlas基本管理</h1><h1 id="连接管理接口"><a href="#连接管理接口" class="headerlink" title="连接管理接口"></a>连接管理接口</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uuser -ppwd -h127.0.0.1 -P2345</span><br></pre></td></tr></table></figure><h1 id="打印帮助："><a href="#打印帮助：" class="headerlink" title="打印帮助："></a>打印帮助：</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from help;</span><br></pre></td></tr></table></figure><h1 id="查询后端所有节点信息："><a href="#查询后端所有节点信息：" class="headerlink" title="查询后端所有节点信息："></a>查询后端所有节点信息：</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;  SELECT * FROM backends    ;</span><br><span class="line">+-------------+----------------+-------+------+</span><br><span class="line">| backend_ndx | address        | state | type |</span><br><span class="line">+-------------+----------------+-------+------+</span><br><span class="line">|           1 | 10.0.0.55:3306 | up    | rw   |</span><br><span class="line">|           2 | 10.0.0.51:3306 | up    | ro   |</span><br><span class="line">|           3 | 10.0.0.53:3306 | up    | ro   |</span><br><span class="line">+-------------+----------------+-------+------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><h1 id="动态添加删除节点"><a href="#动态添加删除节点" class="headerlink" title="动态添加删除节点"></a>动态添加删除节点</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">REMOVE BACKEND 3;</span><br></pre></td></tr></table></figure><h1 id="动态添加节点"><a href="#动态添加节点" class="headerlink" title="动态添加节点"></a>动态添加节点</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ADD SLAVE 10.0.0.53:3306;</span><br></pre></td></tr></table></figure><h1 id="保存配置到配置文件"><a href="#保存配置到配置文件" class="headerlink" title="保存配置到配置文件"></a>保存配置到配置文件</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SAVE CONFIG;</span><br></pre></td></tr></table></figure><h1 id="6-自动分表"><a href="#6-自动分表" class="headerlink" title="6. 自动分表"></a>6. 自动分表</h1><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">使用Atlas的分表功能时，首先需要在配置文件test.cnf设置tables参数。</span><br><span class="line">tables参数设置格式：数据库名.表名.分表字段.子表数量，</span><br><span class="line">比如：</span><br><span class="line">你的数据库名叫school，表名叫stu，分表字段叫id，总共分为2张表，那么就写为school.stu.id.2，如果还有其他的分表，以逗号分隔即可。</span><br></pre></td></tr></table></figure><h1 id="7-关于读写分离建议"><a href="#7-关于读写分离建议" class="headerlink" title="7. 关于读写分离建议"></a>7. 关于读写分离建议</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MySQL-Router    ---&gt; MySQL官方</span><br><span class="line">ProxySQL         ---&gt;Percona</span><br><span class="line">Maxscale         ---&gt; MariaDB</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL进阶 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes入门</title>
      <link href="/posts/38872/"/>
      <url>/posts/38872/</url>
      
        <content type="html"><![CDATA[<h1 id="Kubernetes-快速入门展开目录"><a href="#Kubernetes-快速入门展开目录" class="headerlink" title="Kubernetes 快速入门展开目录"></a>Kubernetes 快速入门展开目录</h1><p>学习 Kubernetes 最权威的知识来源就是 Kubernetes 官方文档，而且对于初学者来说，官方文档可能不是最佳选择。本章将带你循循序渐进的学习 Kubernetes，后面章节会通过大量的实践案例来理解和掌握 Kubernetes 的知识。</p><ul><li>Kubernetes 官方文档：<a href="https://kubernetes.io/docs/home/">https://kubernetes.io/docs/home/</a></li><li>Kuernetes Github：<a href="https://github.com/kubernetes/">https://github.com/kubernetes/</a></li></ul><h2 id="Kubernetes-架构介绍展开目录"><a href="#Kubernetes-架构介绍展开目录" class="headerlink" title="Kubernetes 架构介绍展开目录"></a>Kubernetes 架构介绍展开目录</h2><p>Kubernetes 源于希腊语，意为 “舵手” 或 “飞行员”，是用于自动部署，扩展和管理容器化应用程序的开源系统，由于 K 和 S 之间有 8 个字母，被简称为 K8S。Kubernetes 构建在 Google 15 年生产环境经验基础之上，可以将 Kubernetes 看作为 Google 内部的容器管理平台 Brog 的开源版本，当然他们之间是有一些差异的。</p><h3 id="Kubernetes-系统架构展开目录"><a href="#Kubernetes-系统架构展开目录" class="headerlink" title="Kubernetes 系统架构展开目录"></a>Kubernetes 系统架构展开目录</h3><p>Kubernetes 被设计为 Master 和 Node 两个角色，这类似于 OpenStack 的架构理念，Master 为控制节点，Node 为计算节点或者叫工作节点，在 Master 节点上有一个 API Server 服务，对外提供标准的 RestAPI，这也是 Kubernetes 集群的入口，意外着只要和集群进行交互必须连接到 API Server 上。</p><p><a href="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071410253383.png"><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071410253383.png" alt="img" title="img"></a></p><p><strong>Master 节点介绍</strong></p><p>Kubernetes Master 节点主要有 4 个组件，API Server、Scheduler、Controller、etcd。如下图所示：</p><p><a href="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071410254156.png"><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071410254156.png" alt="img" title="img"></a></p><ul><li><strong>API Server</strong>：提供 Kubernetes API 接口，主要处理 Rest 操作以及更新 Etcd 中的对象。是所有资源增删改查的唯一入口。</li><li><strong>Scheduler</strong>：绑定 Pod 到 Node 上，主要做资源调度。</li><li><strong>Controller Manager</strong>：所有其他群集级别的功能，目前由控制器 Manager 执行。资源对象的自动化控制中心，Kubernetes 集群有很多控制器。</li><li><strong>Etcd</strong>：所有持久化的状态信息存储在 Etcd 中，这个是 Kubernetes 集群的数据库。</li></ul><p><strong>Node 节点介绍</strong></p><p>Node 节点是 Kubernetes 集群的工作节点，在 Node 节点上主要运行了 Docker、Kubelet、kube-proxy 三个服务（Fluentd 请先忽略），如下图所示：</p><p><a href="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071410254671.png"><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071410254671-1024x683.png" alt="img" title="img"></a></p><ul><li><strong>Docker Engine</strong>：负责节点的容器的管理工作，最终创建出来的是一个 Docker 容器。</li><li><strong>Kubelet</strong>：安装在 Node 上的代理服务，用来管理 Pods 以及容器、镜像、Volume 等，实现对集群对节点的管理。</li><li><strong>Kube-proxy</strong>：安装在 Node 上的网络代理服务，提供网络代理以及负载均衡，实现与 Service 通讯。</li></ul><h3 id="Kubernetes-逻辑架构展开目录"><a href="#Kubernetes-逻辑架构展开目录" class="headerlink" title="Kubernetes 逻辑架构展开目录"></a>Kubernetes 逻辑架构展开目录</h3><p>在上面的介绍中提到像 Pod、Service 这些概念，在 Kubernetes 的系统架构图中并没有体现出来，这些可以理解为 Kubernetes 逻辑架构中的组件。也就是在 Master 和 Node 上并不具体存在的一个服务或者进程，但却是 Kubernetes 的组件，也是我们的管理对象。主要有 Pod、Service 和各种控制器等。</p><p><strong>Pod</strong></p><p>Pod 是 Kubernetes 的最小管理单元，一个 Pod 可以包含一组容器和卷。虽然一个 Pod 里面可以包含一个或者多个容器，但是 Pod 只有一个 IP 地址，而且 Pod 重启后，IP 地址会发生变化。</p><p><a href="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071410255078.png"><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071410255078.png" alt="img" title="img"></a></p><p><strong>Controller</strong></p><p>一个应用如果可以有一个或者多个 Pod，就像你给某一个应用做集群，集群中的所有 Pod 是一模一样的。Kubernetes 中有很多控制器可以来管理 Pod，例如下图的 Replication Controller 可以控制 Pod 的副本数量，从而实现横向扩展。</p><p><a href="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071410255495.png"><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071410255495.png" alt="img" title="img"></a></p><p>Kubernetes 中有很多控制器，后面的章节我们会一一讲到，常用的控制器如下：</p><ul><li>Replication Controller（新版本已经被 ReplicaSet 所替代）</li><li>ReplicaSet（新版本被封装在 Deployment 中）</li><li>Deployment：封装了 Pod 的副本管理、部署更新、回滚、扩容、缩容等功能。</li><li>DaemonSet：保证所有的 Node 上有且只有一个 Pod 在运行。</li><li>StatefulSet：有状态的应用，为 Pod 提供唯一的标识，它可以保证部署和 scale 的顺序。</li><li>Job：使用 Kubernetes 运行单一任务。</li><li>CronJob：使用 Kubernetes 运行定时任务。</li></ul><p><strong>Service</strong></p><p>由于 Pod 的生命周期是短暂的，而且每次重启 Pod 的 IP 地址都会发生变化，而且一个 Pod 有多个副本，也就是说一个集群中有了多个节点，就需要考虑负载均衡的问题。Kubernetes 使用 Service 来实现 Pod 的访问，而且 Service 有一个 Cluster IP，通常也称之为 VIP，是固定不变的。</p><p><a href="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071410255816.png"><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071410255816.png" alt="img" title="img"></a></p><h3 id="Kubernetes-网络介绍展开目录"><a href="#Kubernetes-网络介绍展开目录" class="headerlink" title="Kubernetes 网络介绍展开目录"></a>Kubernetes 网络介绍展开目录</h3><p>在 Kubernetes 集群中存在着三种网络，分别是 Node 网络、Pod 网络和 Service 网络，这几种网络之间的通信需要依靠网络插件，Kubernetes 本身并没有提供，社区提供了像 Flannel、Calico、Cannal 等，后面章节会详述。</p><p><strong>Node 网络</strong></p><p>Node 网络指的是 Kubernetes Node 节点本地的网络，在本实验环境中使用的是 192.168.56.0/24 这个网段，所有的 Node 和 Master 在该网段都可以正常通信。</p><p><strong>Pod 网络</strong></p><p>后面创建的 Pod，每一个 Pod 都会有一个 IP 地址，这个 IP 地址网络段被称之为 Pod 网络，如下图所示。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@linux-node1 ~]# kubectl get pod -o wide</span><br><span class="line"></span><br><span class="line">NAME READY STATUS RESTARTS AGE IP NODE NOMINATED NODE READINESS GATES</span><br><span class="line"></span><br><span class="line">nginx-54458cd494-hpn68 1&#x2F;1 Running 0 9m7s 10.2.1.2 linux-node2.linuxhot.com</span><br><span class="line">&lt;none&gt; &lt;none&gt;</span><br><span class="line"></span><br><span class="line">nginx-54458cd494-r4mfq 1&#x2F;1 Running 0 7m46s 10.2.1.3 linux-node2.linuxhot.com</span><br><span class="line">&lt;none&gt; &lt;none&gt;</span><br></pre></td></tr></table></figure><p><strong>Service 网络</strong></p><p>Service 是为 Pod 提供访问和负载均衡的网络地址段，如下图所示。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@linux-node1 ~]# kubectl get service</span><br><span class="line"></span><br><span class="line">NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE</span><br><span class="line"></span><br><span class="line">kubernetes ClusterIP 10.1.0.1 &lt;none&gt; 443&#x2F;TCP 64m</span><br><span class="line"></span><br><span class="line">nginx NodePort 10.1.216.23 &lt;none&gt; 80:30893&#x2F;TCP 8m3s</span><br></pre></td></tr></table></figure><h3 id="一、核心组件三部件展开目录"><a href="#一、核心组件三部件展开目录" class="headerlink" title="一、核心组件三部件展开目录"></a>一、核心组件三部件展开目录</h3><p><img src="https://cdn.jsdelivr.net/gh/xoxoyun/MCDN/usr/uploads/2020/06/3518867386.png" alt="K8s核心部件.png" title="K8s核心部件.png"></p><h3 id="二、配置存储中心（etcd-服务）展开目录"><a href="#二、配置存储中心（etcd-服务）展开目录" class="headerlink" title="二、配置存储中心（etcd 服务）展开目录"></a>二、配置存储中心（etcd 服务）展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">可定义理解为整个K8S的MYSQL数据库作用（非关系型数据），存储集群的元数据信息，作用类同于ZK等。</span><br></pre></td></tr></table></figure><h3 id="二、kube-apiserver-服务展开目录"><a href="#二、kube-apiserver-服务展开目录" class="headerlink" title="二、kube-apiserver 服务展开目录"></a>二、kube-apiserver 服务展开目录</h3><p>1、提供了集群管理的 REST API 接口（包括鉴权、数据校验及集群状态变更）。<br>2、负责其他模块之间数据交互，承担通信枢纽功能。<br>3、是资源配额控制的入口。<br>4、提供完备的集群安全机制。</p><h3 id="三、kube-controller-manager-服务展开目录"><a href="#三、kube-controller-manager-服务展开目录" class="headerlink" title="三、kube-controller-manager 服务展开目录"></a>三、kube-controller-manager 服务展开目录</h3><p>1、由一系列控制器组成，通过 apiserver 监控整个集群的状态，并确保集群上于预期的工作状态。</p><h3 id="四、kube-scheduler-服务展开目录"><a href="#四、kube-scheduler-服务展开目录" class="headerlink" title="四、kube-scheduler 服务展开目录"></a>四、kube-scheduler 服务展开目录</h3><p>1、主要功能是接收调度 Pod 到适合的运算节点上，如：预算策略、优选策略。</p><h3 id="五、kube-kubelet-服务展开目录"><a href="#五、kube-kubelet-服务展开目录" class="headerlink" title="五、kube-kubelet 服务展开目录"></a>五、kube-kubelet 服务展开目录</h3><p>1、kubelet 的主要功能就是定是从某上地方获取节点上 pod 的期望状态（运行什么容器、运行的副本数量、网络或存储如何配置寺等），并调用对应的容器平台接口达到这个状态。<br>2、定时汇报当前节点的状态给 apiserver，以供调度的时使用。<br>3、镜像和容器的清理工作，保证节点上镜像不会占满磁盘空间，退出容器不会占用太多资源</p><h3 id="六、kube-proxy-服务展开目录"><a href="#六、kube-proxy-服务展开目录" class="headerlink" title="六、kube-proxy 服务展开目录"></a>六、kube-proxy 服务展开目录</h3><p>1、在 K8S 在每个节点上运行的网络代理，service 资源的载体建立了 pod 网络和集群网络的关系（clusterip-podip）<br>2、常用三种 流量调度模式：UserspaceIptablesipvs (lvs 推荐)<br>3、负责建立和删除包括更新调度规则，通知 apiserver 自己的更新，或者从 apiserver 哪里获取其他 kube-proxy 的调度规则变化来更新自己</p><h3 id="七、网络架构的理解展开目录"><a href="#七、网络架构的理解展开目录" class="headerlink" title="七、网络架构的理解展开目录"></a>七、网络架构的理解展开目录</h3><p><img src="https://cdn.jsdelivr.net/gh/xoxoyun/MCDN/usr/uploads/2020/06/1607210422.png" alt="三条网络.png" title="三条网络.png"></p><p><img src="https://cdn.jsdelivr.net/gh/xoxoyun/MCDN/usr/uploads/2020/06/1589703888.png" alt="3.p![ng][3]" title="3.p![ng][3]"></p><h3 id="八、实验高可用拓扑图（部署架构图）展开目录"><a href="#八、实验高可用拓扑图（部署架构图）展开目录" class="headerlink" title="八、实验高可用拓扑图（部署架构图）展开目录"></a>八、实验高可用拓扑图（部署架构图）展开目录</h3><p><img src="https://cdn.jsdelivr.net/gh/xoxoyun/MCDN/usr/uploads/2020/06/3392579223.png" alt="微信截图_20200629090645.png" title="微信截图_20200629090645.png"></p>]]></content>
      
      
      <categories>
          
          <category> Docker+K8s </category>
          
          <category> 云计算 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> K8s </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL进阶之路初级DBA（十）</title>
      <link href="/posts/35357/"/>
      <url>/posts/35357/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL-lesson10-MHA高可用技术"><a href="#MySQL-lesson10-MHA高可用技术" class="headerlink" title="MySQL-lesson10-MHA高可用技术"></a>MySQL-lesson10-MHA高可用技术</h1><h1 id="1-主从复制架构演变介绍"><a href="#1-主从复制架构演变介绍" class="headerlink" title="1. 主从复制架构演变介绍"></a>1. 主从复制架构演变介绍</h1><h2 id="1-1-基本结构"><a href="#1-1-基本结构" class="headerlink" title="1.1 基本结构"></a>1.1 基本结构</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">（1）一主一从</span><br><span class="line">（2）一主多从</span><br><span class="line">（3）多级主从</span><br><span class="line">（4）双主</span><br><span class="line">（5）循环复制</span><br></pre></td></tr></table></figure><h2 id="1-2-高级应用架构演变"><a href="#1-2-高级应用架构演变" class="headerlink" title="1.2 高级应用架构演变"></a>1.2 高级应用架构演变</h2><h3 id="1-2-1-高性能架构"><a href="#1-2-1-高性能架构" class="headerlink" title="1.2.1 高性能架构"></a>1.2.1 高性能架构</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">读写分离架构(读性能较高)</span><br><span class="line">代码级别</span><br><span class="line">MySQL proxy (Atlas,mysql router,proxySQL(percona),maxscale)、</span><br><span class="line">amoeba(taobao)</span><br><span class="line">xx-dbproxy等。</span><br><span class="line">分布式架构(读写性能都提高):</span><br><span class="line">分库分表——cobar---&gt;TDDL(头都大了),DRDS</span><br><span class="line">Mycat---&gt;DBLE自主研发等。</span><br><span class="line">NewSQL--&gt;TiDB</span><br></pre></td></tr></table></figure><h3 id="1-2-2-高可用架构"><a href="#1-2-2-高可用架构" class="headerlink" title="1.2.2 高可用架构"></a>1.2.2 高可用架构</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">（3）单活:MMM架构——mysql-mmm（google）</span><br><span class="line">（4）单活:MHA架构——mysql-master-ha（日本DeNa）,T-MHA</span><br><span class="line">（5）多活:MGR ——5.7 新特性 MySQL Group replication(5.7.17) ---&gt;Innodb Cluster  </span><br><span class="line">（6）多活:MariaDB Galera Cluster架构,(PXC)Percona XtraDB Cluster、MySQL Cluster(Oracle rac)架构</span><br></pre></td></tr></table></figure><h1 id="2-高可用MHA"><a href="#2-高可用MHA" class="headerlink" title="2. 高可用MHA *"></a>2. 高可用MHA <strong>*</strong></h1><h2 id="2-1-架构工作原理"><a href="#2-1-架构工作原理" class="headerlink" title="2.1 架构工作原理"></a>2.1 架构工作原理</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">主库宕机处理过程</span><br><span class="line">1. 监控节点 (通过配置文件获取所有节点信息)</span><br><span class="line">   系统,网络,SSH连接性</span><br><span class="line">   主从状态,重点是主库</span><br><span class="line"></span><br><span class="line">2. 选主</span><br><span class="line">(1) 如果判断从库(position或者GTID),数据有差异,最接近于Master的slave,成为备选主</span><br><span class="line">(2) 如果判断从库(position或者GTID),数据一致,按照配置文件顺序,选主.</span><br><span class="line">(3) 如果设定有权重(candidate_master&#x3D;1),按照权重强制指定备选主.</span><br><span class="line">    1. 默认情况下如果一个slave落后master 100M的relay logs的话，即使有权重,也会失效.</span><br><span class="line">    2. 如果check_repl_delay&#x3D;0的化,即使落后很多日志,也强制选择其为备选主</span><br><span class="line">3. 数据补偿</span><br><span class="line">(1) 当SSH能连接,从库对比主库GTID 或者position号,立即将二进制日志保存至各个从节点并且应用(save_binary_logs )</span><br><span class="line">(2) 当SSH不能连接, 对比从库之间的relaylog的差异(apply_diff_relay_logs) </span><br><span class="line">4. Failover</span><br><span class="line">将备选主进行身份切换,对外提供服务</span><br><span class="line">其余从库和新主库确认新的主从关系</span><br><span class="line">5. 应用透明(VIP)</span><br><span class="line">6. 故障切换通知(send_reprt)</span><br><span class="line">7. 二次数据补偿(binlog_server)</span><br><span class="line">8. 自愈自治(待开发...)</span><br></pre></td></tr></table></figure><h3 id="2-2-架构介绍"><a href="#2-2-架构介绍" class="headerlink" title="2.2 架构介绍:"></a>2.2 架构介绍:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1主2从，master：db01   slave：db02   db03 ）：</span><br><span class="line">MHA 高可用方案软件构成</span><br><span class="line">Manager软件：选择一个从节点安装</span><br><span class="line">Node软件：所有节点都要安装</span><br></pre></td></tr></table></figure><h2 id="2-3-MHA软件构成"><a href="#2-3-MHA软件构成" class="headerlink" title="2.3 MHA软件构成"></a>2.3 MHA软件构成</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Manager工具包主要包括以下几个工具：</span><br><span class="line">masterha_manger             启动MHA </span><br><span class="line">masterha_check_ssh      检查MHA的SSH配置状况 </span><br><span class="line">masterha_check_repl         检查MySQL复制状况 </span><br><span class="line">masterha_master_monitor     检测master是否宕机 </span><br><span class="line">masterha_check_status       检测当前MHA运行状态 </span><br><span class="line">masterha_master_switch  控制故障转移（自动或者手动）</span><br><span class="line">masterha_conf_host      添加或删除配置的server信息</span><br><span class="line"></span><br><span class="line">Node工具包主要包括以下几个工具：</span><br><span class="line">这些工具通常由MHA Manager的脚本触发，无需人为操作</span><br><span class="line">save_binary_logs            保存和复制master的二进制日志 </span><br><span class="line">apply_diff_relay_logs       识别差异的中继日志事件并将其差异的事件应用于其他的</span><br><span class="line">purge_relay_logs            清除中继日志（不会阻塞SQL线程）</span><br></pre></td></tr></table></figure><h2 id="2-4-MHA环境搭建"><a href="#2-4-MHA环境搭建" class="headerlink" title="2.4 MHA环境搭建"></a>2.4 MHA环境搭建</h2><h3 id="2-4-1-规划"><a href="#2-4-1-规划" class="headerlink" title="2.4.1 规划:"></a>2.4.1 规划:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">主库: 51    node </span><br><span class="line">从库: </span><br><span class="line">52      node</span><br><span class="line">53      node    manager</span><br></pre></td></tr></table></figure><h3 id="2-4-2-准备环境（略。1主2从GTID）"><a href="#2-4-2-准备环境（略。1主2从GTID）" class="headerlink" title="2.4.2 准备环境（略。1主2从GTID）"></a>2.4.2 准备环境（略。1主2从GTID）</h3><h3 id="2-4-3-配置关键程序软连接"><a href="#2-4-3-配置关键程序软连接" class="headerlink" title="2.4.3 配置关键程序软连接"></a>2.4.3 配置关键程序软连接</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln -s &#x2F;data&#x2F;mysql&#x2F;bin&#x2F;mysqlbinlog    &#x2F;usr&#x2F;bin&#x2F;mysqlbinlog</span><br><span class="line">ln -s &#x2F;data&#x2F;mysql&#x2F;bin&#x2F;mysql          &#x2F;usr&#x2F;bin&#x2F;mysql</span><br></pre></td></tr></table></figure><h3 id="2-4-4-配置各节点互信"><a href="#2-4-4-配置各节点互信" class="headerlink" title="2.4.4 配置各节点互信"></a>2.4.4 配置各节点互信</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">db01：</span><br><span class="line">rm -rf &#x2F;root&#x2F;.ssh </span><br><span class="line">ssh-keygen</span><br><span class="line">cd &#x2F;root&#x2F;.ssh </span><br><span class="line">mv id_rsa.pub authorized_keys</span><br><span class="line">scp  -r  &#x2F;root&#x2F;.ssh  10.0.0.52:&#x2F;root </span><br><span class="line">scp  -r  &#x2F;root&#x2F;.ssh  10.0.0.53:&#x2F;root </span><br><span class="line">各节点验证</span><br><span class="line">db01:</span><br><span class="line">ssh 10.0.0.51 date</span><br><span class="line">ssh 10.0.0.52 date</span><br><span class="line">ssh 10.0.0.53 date</span><br><span class="line">db02:</span><br><span class="line">ssh 10.0.0.51 date</span><br><span class="line">ssh 10.0.0.52 date</span><br><span class="line">ssh 10.0.0.53 date</span><br><span class="line">db03:</span><br><span class="line">ssh 10.0.0.51 date</span><br><span class="line">ssh 10.0.0.52 date</span><br><span class="line">ssh 10.0.0.53 date</span><br></pre></td></tr></table></figure><h3 id="2-4-5-安装软件"><a href="#2-4-5-安装软件" class="headerlink" title="2.4.5 安装软件"></a>2.4.5 安装软件</h3><h3 id="下载mha软件"><a href="#下载mha软件" class="headerlink" title="下载mha软件"></a>下载mha软件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mha官网：https:&#x2F;&#x2F;code.google.com&#x2F;archive&#x2F;p&#x2F;mysql-master-ha&#x2F;</span><br><span class="line">github下载地址：https:&#x2F;&#x2F;github.com&#x2F;yoshinorim&#x2F;mha4mysql-manager&#x2F;wiki&#x2F;Downloads</span><br></pre></td></tr></table></figure><h3 id="所有节点安装Node软件依赖包"><a href="#所有节点安装Node软件依赖包" class="headerlink" title="所有节点安装Node软件依赖包"></a>所有节点安装Node软件依赖包</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install perl-DBD-MySQL -y</span><br><span class="line">rpm -ivh mha4mysql-node-0.56-0.el6.noarch.rpm</span><br></pre></td></tr></table></figure><h3 id="在db01主库中创建mha需要的用户"><a href="#在db01主库中创建mha需要的用户" class="headerlink" title="在db01主库中创建mha需要的用户"></a>在db01主库中创建mha需要的用户</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant all privileges on *.* to mha@&#39;10.0.0.%&#39; identified by &#39;mha&#39;;</span><br></pre></td></tr></table></figure><h3 id="Manager软件安装（db03）"><a href="#Manager软件安装（db03）" class="headerlink" title="Manager软件安装（db03）"></a>Manager软件安装（db03）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y perl-Config-Tiny epel-release perl-Log-Dispatch perl-Parallel-ForkManager perl-Time-HiRes</span><br><span class="line">rpm -ivh mha4mysql-manager-0.56-0.el6.noarch.rpm</span><br></pre></td></tr></table></figure><h3 id="2-4-6-配置文件准备-db03"><a href="#2-4-6-配置文件准备-db03" class="headerlink" title="2.4.6 配置文件准备(db03)"></a>2.4.6 配置文件准备(db03)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">创建配置文件目录</span><br><span class="line"> mkdir -p &#x2F;etc&#x2F;mha</span><br><span class="line">创建日志目录</span><br><span class="line"> mkdir -p &#x2F;var&#x2F;log&#x2F;mha&#x2F;app1</span><br><span class="line">编辑mha配置文件</span><br><span class="line">vim &#x2F;etc&#x2F;mha&#x2F;app1.cnf</span><br></pre></td></tr></table></figure><p>[server default]</p><p>manager_log=/var/log/mha/app1/manager manager_workdir=/var/log/mha/app1 master_binlog_dir=/data/binlog user=mha password=mha ping_interval=2 repl_password=123 repl_user=repl ssh_user=root</p><p>[server1]</p><p>hostname=10.0.0.51 port=3306</p><p>[server2]</p><p>hostname=10.0.0.52 port=3306</p><p>[server3]</p><p>hostname=10.0.0.53 port=3306</p><h3 id="2-4-7-状态检查"><a href="#2-4-7-状态检查" class="headerlink" title="2.4.7 状态检查"></a>2.4.7 状态检查</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">### 互信检查</span><br><span class="line">masterha_check_ssh  --conf&#x3D;&#x2F;etc&#x2F;mha&#x2F;app1.cnf </span><br><span class="line">Fri Apr 19 16:39:34 2019 - [warning] Global configuration file &#x2F;etc&#x2F;masterha_default.cnf not found. Skipping.</span><br><span class="line">Fri Apr 19 16:39:34 2019 - [info] Reading application default configuration from &#x2F;etc&#x2F;mha&#x2F;app1.cnf..</span><br><span class="line">Fri Apr 19 16:39:34 2019 - [info] Reading server configuration from &#x2F;etc&#x2F;mha&#x2F;app1.cnf..</span><br><span class="line">Fri Apr 19 16:39:34 2019 - [info] Starting SSH connection tests..</span><br><span class="line">Fri Apr 19 16:39:35 2019 - [debug] </span><br><span class="line">Fri Apr 19 16:39:34 2019 - [debug]  Connecting via SSH from root@10.0.0.51(10.0.0.51:22) to root@10.0.0.52(10.0.0.52:22)..</span><br><span class="line">Fri Apr 19 16:39:34 2019 - [debug]   ok.</span><br><span class="line">Fri Apr 19 16:39:34 2019 - [debug]  Connecting via SSH from root@10.0.0.51(10.0.0.51:22) to root@10.0.0.53(10.0.0.53:22)..</span><br><span class="line">Fri Apr 19 16:39:35 2019 - [debug]   ok.</span><br><span class="line">Fri Apr 19 16:39:36 2019 - [debug] </span><br><span class="line">Fri Apr 19 16:39:35 2019 - [debug]  Connecting via SSH from root@10.0.0.52(10.0.0.52:22) to root@10.0.0.51(10.0.0.51:22)..</span><br><span class="line">Fri Apr 19 16:39:35 2019 - [debug]   ok.</span><br><span class="line">Fri Apr 19 16:39:35 2019 - [debug]  Connecting via SSH from root@10.0.0.52(10.0.0.52:22) to root@10.0.0.53(10.0.0.53:22)..</span><br><span class="line">Fri Apr 19 16:39:35 2019 - [debug]   ok.</span><br><span class="line">Fri Apr 19 16:39:37 2019 - [debug] </span><br><span class="line">Fri Apr 19 16:39:35 2019 - [debug]  Connecting via SSH from root@10.0.0.53(10.0.0.53:22) to root@10.0.0.51(10.0.0.51:22)..</span><br><span class="line">Fri Apr 19 16:39:35 2019 - [debug]   ok.</span><br><span class="line">Fri Apr 19 16:39:35 2019 - [debug]  Connecting via SSH from root@10.0.0.53(10.0.0.53:22) to root@10.0.0.52(10.0.0.52:22)..</span><br><span class="line">Fri Apr 19 16:39:36 2019 - [debug]   ok.</span><br><span class="line">Fri Apr 19 16:39:37 2019 - [info] All SSH connection tests passed successfully.</span><br></pre></td></tr></table></figure><h3 id="主从状态检查"><a href="#主从状态检查" class="headerlink" title="主从状态检查"></a>主从状态检查</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">[root@db03 ~]# masterha_check_ssh  --conf&#x3D;&#x2F;etc&#x2F;mha&#x2F;app1.cnf </span><br><span class="line">Fri Apr 19 16:39:34 2019 - [warning] Global configuration file &#x2F;etc&#x2F;masterha_default.cnf not found. Skipping.</span><br><span class="line">Fri Apr 19 16:39:34 2019 - [info] Reading application default configuration from &#x2F;etc&#x2F;mha&#x2F;app1.cnf..</span><br><span class="line">Fri Apr 19 16:39:34 2019 - [info] Reading server configuration from &#x2F;etc&#x2F;mha&#x2F;app1.cnf..</span><br><span class="line">Fri Apr 19 16:39:34 2019 - [info] Starting SSH connection tests..</span><br><span class="line">Fri Apr 19 16:39:35 2019 - [debug] </span><br><span class="line">Fri Apr 19 16:39:34 2019 - [debug]  Connecting via SSH from root@10.0.0.51(10.0.0.51:22) to root@10.0.0.52(10.0.0.52:22)..</span><br><span class="line">Fri Apr 19 16:39:34 2019 - [debug]   ok.</span><br><span class="line">Fri Apr 19 16:39:34 2019 - [debug]  Connecting via SSH from root@10.0.0.51(10.0.0.51:22) to root@10.0.0.53(10.0.0.53:22)..</span><br><span class="line">Fri Apr 19 16:39:35 2019 - [debug]   ok.</span><br><span class="line">Fri Apr 19 16:39:36 2019 - [debug] </span><br><span class="line">Fri Apr 19 16:39:35 2019 - [debug]  Connecting via SSH from root@10.0.0.52(10.0.0.52:22) to root@10.0.0.51(10.0.0.51:22)..</span><br><span class="line">Fri Apr 19 16:39:35 2019 - [debug]   ok.</span><br><span class="line">Fri Apr 19 16:39:35 2019 - [debug]  Connecting via SSH from root@10.0.0.52(10.0.0.52:22) to root@10.0.0.53(10.0.0.53:22)..</span><br><span class="line">Fri Apr 19 16:39:35 2019 - [debug]   ok.</span><br><span class="line">Fri Apr 19 16:39:37 2019 - [debug] </span><br><span class="line">Fri Apr 19 16:39:35 2019 - [debug]  Connecting via SSH from root@10.0.0.53(10.0.0.53:22) to root@10.0.0.51(10.0.0.51:22)..</span><br><span class="line">Fri Apr 19 16:39:35 2019 - [debug]   ok.</span><br><span class="line">Fri Apr 19 16:39:35 2019 - [debug]  Connecting via SSH from root@10.0.0.53(10.0.0.53:22) to root@10.0.0.52(10.0.0.52:22)..</span><br><span class="line">Fri Apr 19 16:39:36 2019 - [debug]   ok.</span><br><span class="line">Fri Apr 19 16:39:37 2019 - [info] All SSH connection tests passed successfully.</span><br><span class="line">[root@db03 ~]# masterha_check_repl  --conf&#x3D;&#x2F;etc&#x2F;mha&#x2F;app1.cnf </span><br><span class="line">Fri Apr 19 16:40:50 2019 - [warning] Global configuration file &#x2F;etc&#x2F;masterha_default.cnf not found. Skipping.</span><br><span class="line">Fri Apr 19 16:40:50 2019 - [info] Reading application default configuration from &#x2F;etc&#x2F;mha&#x2F;app1.cnf..</span><br><span class="line">Fri Apr 19 16:40:50 2019 - [info] Reading server configuration from &#x2F;etc&#x2F;mha&#x2F;app1.cnf..</span><br><span class="line">Fri Apr 19 16:40:50 2019 - [info] MHA::MasterMonitor version 0.56.</span><br><span class="line">Fri Apr 19 16:40:51 2019 - [info] GTID failover mode &#x3D; 1</span><br><span class="line">Fri Apr 19 16:40:51 2019 - [info] Dead Servers:</span><br><span class="line">Fri Apr 19 16:40:51 2019 - [info] Alive Servers:</span><br><span class="line">Fri Apr 19 16:40:51 2019 - [info]   10.0.0.51(10.0.0.51:3306)</span><br><span class="line">Fri Apr 19 16:40:51 2019 - [info]   10.0.0.52(10.0.0.52:3306)</span><br><span class="line">Fri Apr 19 16:40:51 2019 - [info]   10.0.0.53(10.0.0.53:3306)</span><br><span class="line">Fri Apr 19 16:40:51 2019 - [info] Alive Slaves:</span><br><span class="line">Fri Apr 19 16:40:51 2019 - [info]   10.0.0.52(10.0.0.52:3306)  Version&#x3D;5.7.20-log (oldest major version between slaves) log-bin:enabled</span><br><span class="line">Fri Apr 19 16:40:51 2019 - [info]     GTID ON</span><br><span class="line">Fri Apr 19 16:40:51 2019 - [info]     Replicating from 10.0.0.51(10.0.0.51:3306)</span><br><span class="line">Fri Apr 19 16:40:51 2019 - [info]   10.0.0.53(10.0.0.53:3306)  Version&#x3D;5.7.20-log (oldest major version between slaves) log-bin:enabled</span><br><span class="line">Fri Apr 19 16:40:51 2019 - [info]     GTID ON</span><br><span class="line">Fri Apr 19 16:40:51 2019 - [info]     Replicating from 10.0.0.51(10.0.0.51:3306)</span><br><span class="line">Fri Apr 19 16:40:51 2019 - [info] Current Alive Master: 10.0.0.51(10.0.0.51:3306)</span><br><span class="line">Fri Apr 19 16:40:51 2019 - [info] Checking slave configurations..</span><br><span class="line">Fri Apr 19 16:40:51 2019 - [info]  read_only&#x3D;1 is not set on slave 10.0.0.52(10.0.0.52:3306).</span><br><span class="line">Fri Apr 19 16:40:51 2019 - [info]  read_only&#x3D;1 is not set on slave 10.0.0.53(10.0.0.53:3306).</span><br><span class="line">Fri Apr 19 16:40:51 2019 - [info] Checking replication filtering settings..</span><br><span class="line">Fri Apr 19 16:40:51 2019 - [info]  binlog_do_db&#x3D; , binlog_ignore_db&#x3D; </span><br><span class="line">Fri Apr 19 16:40:51 2019 - [info]  Replication filtering check ok.</span><br><span class="line">Fri Apr 19 16:40:51 2019 - [info] GTID (with auto-pos) is supported. Skipping all SSH and Node package checking.</span><br><span class="line">Fri Apr 19 16:40:51 2019 - [info] Checking SSH publickey authentication settings on the current master..</span><br><span class="line">Fri Apr 19 16:40:51 2019 - [info] HealthCheck: SSH to 10.0.0.51 is reachable.</span><br><span class="line">Fri Apr 19 16:40:51 2019 - [info] </span><br><span class="line">10.0.0.51(10.0.0.51:3306) (current master)</span><br><span class="line"> +--10.0.0.52(10.0.0.52:3306)</span><br><span class="line"> +--10.0.0.53(10.0.0.53:3306)</span><br><span class="line"></span><br><span class="line">Fri Apr 19 16:40:51 2019 - [info] Checking replication health on 10.0.0.52..</span><br><span class="line">Fri Apr 19 16:40:51 2019 - [info]  ok.</span><br><span class="line">Fri Apr 19 16:40:51 2019 - [info] Checking replication health on 10.0.0.53..</span><br><span class="line">Fri Apr 19 16:40:51 2019 - [info]  ok.</span><br><span class="line">Fri Apr 19 16:40:51 2019 - [warning] master_ip_failover_script is not defined.</span><br><span class="line">Fri Apr 19 16:40:51 2019 - [warning] shutdown_script is not defined.</span><br><span class="line">Fri Apr 19 16:40:51 2019 - [info] Got exit code 0 (Not master dead).</span><br><span class="line">MySQL Replication Health is OK.</span><br></pre></td></tr></table></figure><h3 id="2-4-8-开启MHA-db03-："><a href="#2-4-8-开启MHA-db03-：" class="headerlink" title="2.4.8 开启MHA(db03)："></a>2.4.8 开启MHA(db03)：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup masterha_manager --conf&#x3D;&#x2F;etc&#x2F;mha&#x2F;app1.cnf --remove_dead_master_conf --ignore_last_failover  &lt; &#x2F;dev&#x2F;null&gt; &#x2F;var&#x2F;log&#x2F;mha&#x2F;app1&#x2F;manager.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><h3 id="2-4-9-查看MHA状态"><a href="#2-4-9-查看MHA状态" class="headerlink" title="2.4.9 查看MHA状态"></a>2.4.9 查看MHA状态</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@db03 ~]# masterha_check_status --conf&#x3D;&#x2F;etc&#x2F;mha&#x2F;app1.cnf</span><br><span class="line">app1 (pid:4719) is running(0:PING_OK), master:10.0.0.51</span><br><span class="line">[root@db03 ~]# mysql -umha -pmha -h 10.0.0.51 -e &quot;show variables like &#39;server_id&#39;&quot;</span><br><span class="line">mysql: [Warning] Using a password on the command line interface can be insecure.</span><br><span class="line">+---------------+-------+</span><br><span class="line">| Variable_name | Value |</span><br><span class="line">+---------------+-------+</span><br><span class="line">| server_id     | 51    |</span><br><span class="line">+---------------+-------+</span><br><span class="line">[root@db03 ~]# mysql -umha -pmha -h 10.0.0.52 -e &quot;show variables like &#39;server_id&#39;&quot;</span><br><span class="line">mysql: [Warning] Using a password on the command line interface can be insecure.</span><br><span class="line">+---------------+-------+</span><br><span class="line">| Variable_name | Value |</span><br><span class="line">+---------------+-------+</span><br><span class="line">| server_id     | 52    |</span><br><span class="line">+---------------+-------+</span><br><span class="line">[root@db03 ~]# mysql -umha -pmha -h 10.0.0.53 -e &quot;show variables like &#39;server_id&#39;&quot;</span><br><span class="line">mysql: [Warning] Using a password on the command line interface can be insecure.</span><br><span class="line">+---------------+-------+</span><br><span class="line">| Variable_name | Value |</span><br><span class="line">+---------------+-------+</span><br><span class="line">| server_id     | 53    |</span><br><span class="line">+---------------+-------+</span><br></pre></td></tr></table></figure><h3 id="2-4-10-故障模拟及处理"><a href="#2-4-10-故障模拟及处理" class="headerlink" title="2.4.10 故障模拟及处理"></a>2.4.10 故障模拟及处理</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">### 停主库db01:    </span><br><span class="line">&#x2F;etc&#x2F;init.d&#x2F;mysqld stop</span><br><span class="line"></span><br><span class="line">观察manager  日志 tail -f &#x2F;var&#x2F;log&#x2F;mha&#x2F;app1&#x2F;manager</span><br><span class="line">末尾必须显示successfully，才算正常切换成功。                            </span><br></pre></td></tr></table></figure><h3 id="修复主库"><a href="#修复主库" class="headerlink" title="修复主库"></a>修复主库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]# &#x2F;etc&#x2F;init.d&#x2F;mysqld start</span><br></pre></td></tr></table></figure><h3 id="恢复主从结构"><a href="#恢复主从结构" class="headerlink" title="恢复主从结构"></a>恢复主从结构</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CHANGE MASTER TO </span><br><span class="line">MASTER_HOST&#x3D;&#39;10.0.0.52&#39;,</span><br><span class="line">MASTER_PORT&#x3D;3306, </span><br><span class="line">MASTER_AUTO_POSITION&#x3D;1, </span><br><span class="line">MASTER_USER&#x3D;&#39;repl&#39;, </span><br><span class="line">MASTER_PASSWORD&#x3D;&#39;123&#39;;</span><br><span class="line">start slave ;</span><br></pre></td></tr></table></figure><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[server1]</span><br><span class="line">hostname&#x3D;10.0.0.51</span><br><span class="line">port&#x3D;3306</span><br></pre></td></tr></table></figure><h3 id="启动MHA"><a href="#启动MHA" class="headerlink" title="启动MHA"></a>启动MHA</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup masterha_manager --conf&#x3D;&#x2F;etc&#x2F;mha&#x2F;app1.cnf --remove_dead_master_conf --ignore_last_failover  &lt; &#x2F;dev&#x2F;null&gt; &#x2F;var&#x2F;log&#x2F;mha&#x2F;app1&#x2F;manager.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><h3 id="2-4-11-Manager额外参数介绍"><a href="#2-4-11-Manager额外参数介绍" class="headerlink" title="2.4.11 Manager额外参数介绍"></a>2.4.11 Manager额外参数介绍</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">说明：</span><br><span class="line">主库宕机谁来接管？</span><br><span class="line">1. 所有从节点日志都是一致的，默认会以配置文件的顺序去选择一个新主。</span><br><span class="line">2. 从节点日志不一致，自动选择最接近于主库的从库</span><br><span class="line">3. 如果对于某节点设定了权重（candidate_master&#x3D;1），权重节点会优先选择。</span><br><span class="line">但是此节点日志量落后主库100M日志的话，也不会被选择。可以配合check_repl_delay&#x3D;0，关闭日志量的检查，强制选择候选节点。</span><br><span class="line"></span><br><span class="line">(1)  ping_interval&#x3D;1</span><br><span class="line">#设置监控主库，发送ping包的时间间隔，尝试三次没有回应的时候自动进行failover</span><br><span class="line">(2) candidate_master&#x3D;1</span><br><span class="line">#设置为候选master，如果设置该参数以后，发生主从切换以后将会将此从库提升为主库，即使这个主库不是集群中事件最新的slave</span><br><span class="line">(3)check_repl_delay&#x3D;0</span><br><span class="line">#默认情况下如果一个slave落后master 100M的relay logs的话，</span><br><span class="line">MHA将不会选择该slave作为一个新的master，因为对于这个slave的恢复需要花费很长时间，通过设置check_repl_delay&#x3D;0,MHA触发切换在选择一个新的master的时候将会忽略复制延时，这个参数对于设置了candidate_master&#x3D;1的主机非常有用，因为这个候选主在切换的过程中一定是新的master</span><br></pre></td></tr></table></figure><h3 id="2-4-12-MHA-的vip功能"><a href="#2-4-12-MHA-的vip功能" class="headerlink" title="2.4.12 MHA 的vip功能"></a>2.4.12 MHA 的vip功能</h3><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">master_ip_failover_script&#x3D;&#x2F;usr&#x2F;local&#x2F;bin&#x2F;master_ip_failover</span><br><span class="line">注意：&#x2F;usr&#x2F;local&#x2F;bin&#x2F;master_ip_failover，必须事先准备好</span><br></pre></td></tr></table></figure><h3 id="修改脚本内容"><a href="#修改脚本内容" class="headerlink" title="修改脚本内容"></a>修改脚本内容</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vi  &#x2F;usr&#x2F;local&#x2F;bin&#x2F;master_ip_failover</span><br><span class="line">my $vip &#x3D; &#39;10.0.0.55&#x2F;24&#39;;</span><br><span class="line">my $key &#x3D; &#39;1&#39;;</span><br><span class="line">my $ssh_start_vip &#x3D; &quot;&#x2F;sbin&#x2F;ifconfig eth0:$key $vip&quot;;</span><br><span class="line">my $ssh_stop_vip &#x3D; &quot;&#x2F;sbin&#x2F;ifconfig eth0:$key down&quot;;</span><br></pre></td></tr></table></figure><h3 id="更改manager配置文件："><a href="#更改manager配置文件：" class="headerlink" title="更改manager配置文件："></a>更改manager配置文件：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vi &#x2F;etc&#x2F;mha&#x2F;app1.cnf</span><br><span class="line">添加：</span><br><span class="line">master_ip_failover_script&#x3D;&#x2F;usr&#x2F;local&#x2F;bin&#x2F;master_ip_failover</span><br><span class="line">注意：</span><br><span class="line">[root@db03 ~]# dos2unix &#x2F;usr&#x2F;local&#x2F;bin&#x2F;master_ip_failover </span><br><span class="line">dos2unix: converting file &#x2F;usr&#x2F;local&#x2F;bin&#x2F;master_ip_failover to Unix format ...</span><br><span class="line">[root@db03 ~]# chmod +x &#x2F;usr&#x2F;local&#x2F;bin&#x2F;master_ip_failover </span><br></pre></td></tr></table></figure><h3 id="主库上，手工生成第一个vip地址"><a href="#主库上，手工生成第一个vip地址" class="headerlink" title="主库上，手工生成第一个vip地址"></a>主库上，手工生成第一个vip地址</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">手工在主库上绑定vip，注意一定要和配置文件中的ethN一致，我的是eth0:1(1是key指定的值)</span><br><span class="line">ifconfig eth0:1 10.0.0.55&#x2F;24</span><br></pre></td></tr></table></figure><h3 id="重启mha"><a href="#重启mha" class="headerlink" title="重启mha"></a>重启mha</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">masterha_stop --conf&#x3D;&#x2F;etc&#x2F;mha&#x2F;app1.cnf</span><br><span class="line">nohup masterha_manager --conf&#x3D;&#x2F;etc&#x2F;mha&#x2F;app1.cnf --remove_dead_master_conf --ignore_last_failover &lt; &#x2F;dev&#x2F;null &gt; &#x2F;var&#x2F;log&#x2F;mha&#x2F;app1&#x2F;manager.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><h3 id="2-4-13-邮件提醒"><a href="#2-4-13-邮件提醒" class="headerlink" title="2.4.13 邮件提醒"></a>2.4.13 邮件提醒</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">1. 参数：</span><br><span class="line">report_script&#x3D;&#x2F;usr&#x2F;local&#x2F;bin&#x2F;send</span><br><span class="line">2. 准备邮件脚本</span><br><span class="line">send_report</span><br><span class="line">(1)准备发邮件的脚本(上传 email_2019-最新.zip中的脚本，到&#x2F;usr&#x2F;local&#x2F;bin&#x2F;中)</span><br><span class="line">(2)将准备好的脚本添加到mha配置文件中,让其调用</span><br><span class="line"></span><br><span class="line">3. 修改manager配置文件，调用邮件脚本</span><br><span class="line">vi &#x2F;etc&#x2F;mha&#x2F;app1.cnf</span><br><span class="line">report_script&#x3D;&#x2F;usr&#x2F;local&#x2F;bin&#x2F;send</span><br><span class="line"></span><br><span class="line">（3）停止MHA</span><br><span class="line">masterha_stop --conf&#x3D;&#x2F;etc&#x2F;mha&#x2F;app1.cnf</span><br><span class="line">（4）开启MHA    </span><br><span class="line">nohup masterha_manager --conf&#x3D;&#x2F;etc&#x2F;mha&#x2F;app1.cnf --remove_dead_master_conf --ignore_last_failover &lt; &#x2F;dev&#x2F;null &gt; &#x2F;var&#x2F;log&#x2F;mha&#x2F;app1&#x2F;manager.log 2&gt;&amp;1 &amp;</span><br><span class="line"></span><br><span class="line">(5) 关闭主库,看警告邮件  </span><br><span class="line">故障修复：</span><br><span class="line">1. 恢复故障节点</span><br><span class="line">（1）实例宕掉</span><br><span class="line">&#x2F;etc&#x2F;init.d&#x2F;mysqld start </span><br><span class="line">（2）主机损坏，有可能数据也损坏了</span><br><span class="line">备份并恢复故障节点。</span><br><span class="line">2.恢复主从环境</span><br><span class="line">看日志文件：</span><br><span class="line">CHANGE MASTER TO MASTER_HOST&#x3D;&#39;10.0.0.52&#39;, MASTER_PORT&#x3D;3306, MASTER_AUTO_POSITION&#x3D;1, MASTER_USER&#x3D;&#39;repl&#39;, MASTER_PASSWORD&#x3D;&#39;123&#39;;</span><br><span class="line">start slave ;</span><br><span class="line">3.恢复manager</span><br><span class="line">3.1 修好的故障节点配置信息，加入到配置文件</span><br></pre></td></tr></table></figure><p>[server1]</p><p>hostname=10.0.0.51 port=3306 3.2 启动manager nohup masterha_manager –conf=/etc/mha/app1.cnf –remove_dead_master_conf –ignore_last_failover &lt; /dev/null &gt; /var/log/mha/app1/manager.log 2&gt;&amp;1 &amp;</p><h3 id="2-4-14-binlog-server（db03）"><a href="#2-4-14-binlog-server（db03）" class="headerlink" title="2.4.14 binlog server（db03）"></a>2.4.14 binlog server（db03）</h3><h3 id="参数："><a href="#参数：" class="headerlink" title="参数："></a>参数：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">binlogserver配置：</span><br><span class="line">找一台额外的机器，必须要有5.6以上的版本，支持gtid并开启，我们直接用的第二个slave（db03）</span><br><span class="line">vim &#x2F;etc&#x2F;mha&#x2F;app1.cnf </span><br></pre></td></tr></table></figure><p>[binlog1]</p><p>no_master=1 hostname=10.0.0.53 master_binlog_dir=/data/mysql/binlog</p><h3 id="创建必要目录"><a href="#创建必要目录" class="headerlink" title="创建必要目录"></a>创建必要目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p &#x2F;data&#x2F;mysql&#x2F;binlog</span><br><span class="line">chown -R mysql.mysql &#x2F;data&#x2F;*</span><br><span class="line">修改完成后，将主库binlog拉过来（从000001开始拉，之后的binlog会自动按顺序过来）</span><br></pre></td></tr></table></figure><h3 id="拉取主库binlog日志"><a href="#拉取主库binlog日志" class="headerlink" title="拉取主库binlog日志"></a>拉取主库binlog日志</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;data&#x2F;mysql&#x2F;binlog     -----》必须进入到自己创建好的目录</span><br><span class="line">mysqlbinlog  -R --host&#x3D;10.0.0.52 --user&#x3D;mha --password&#x3D;mha --raw  --stop-never mysql-bin.000001 &amp;</span><br><span class="line">注意：</span><br><span class="line">拉取日志的起点,需要按照目前从库的已经获取到的二进制日志点为起点</span><br></pre></td></tr></table></figure><h3 id="重启MHA"><a href="#重启MHA" class="headerlink" title="重启MHA"></a>重启MHA</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">masterha_stop --conf&#x3D;&#x2F;etc&#x2F;mha&#x2F;app1.cnf</span><br><span class="line">nohup masterha_manager --conf&#x3D;&#x2F;etc&#x2F;mha&#x2F;app1.cnf --remove_dead_master_conf --ignore_last_failover &lt; &#x2F;dev&#x2F;null &gt; &#x2F;var&#x2F;log&#x2F;mha&#x2F;app1&#x2F;manager.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><h3 id="故障处理"><a href="#故障处理" class="headerlink" title="故障处理"></a>故障处理</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">主库宕机，binlogserver 自动停掉，manager 也会自动停止。</span><br><span class="line">处理思路：</span><br><span class="line">1、重新获取新主库的binlog到binlogserver中</span><br><span class="line">2、重新配置文件binlog server信息</span><br><span class="line">3、最后再启动MHA</span><br></pre></td></tr></table></figure><h1 id="3-管理员在高可用架构维护的职责"><a href="#3-管理员在高可用架构维护的职责" class="headerlink" title="3.管理员在高可用架构维护的职责"></a>3.管理员在高可用架构维护的职责</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. 搭建：MHA+VIP+SendReport+BinlogServer</span><br><span class="line">2. 监控及故障处理</span><br><span class="line">3.  高可用架构的优化</span><br><span class="line"> 核心是：尽可能降低主从的延时，让MHA花在数据补偿上的时间尽量减少。</span><br><span class="line">5.7 版本，开启GTID模式，开启从库SQL并发复制。 </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL进阶 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MySQL进阶之路初级DBA（九）</title>
      <link href="/posts/4010/"/>
      <url>/posts/4010/</url>
      
        <content type="html"><![CDATA[<p>http延时从</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">数据库故障?</span><br><span class="line">物理损坏</span><br><span class="line">主从复制非常擅长解决物理损坏.</span><br><span class="line">逻辑损坏</span><br><span class="line">普通主从复制没办法解决逻辑损坏</span><br></pre></td></tr></table></figure><h2 id="1-3-配置延时从库"><a href="#1-3-配置延时从库" class="headerlink" title="1.3 配置延时从库"></a>1.3 配置延时从库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">SQL线程延时:数据已经写入relaylog中了,SQL线程&quot;慢点&quot;运行</span><br><span class="line">一般企业建议3-6小时,具体看公司运维人员对于故障的反应时间</span><br><span class="line"></span><br><span class="line">mysql&gt;stop slave;</span><br><span class="line">mysql&gt;CHANGE MASTER TO MASTER_DELAY &#x3D; 300;</span><br><span class="line">mysql&gt;start slave;</span><br><span class="line">mysql&gt; show slave status \G</span><br><span class="line">SQL_Delay: 300</span><br><span class="line">SQL_Remaining_Delay: NULL</span><br></pre></td></tr></table></figure><h2 id="1-4-延时从库应用"><a href="#1-4-延时从库应用" class="headerlink" title="1.4 延时从库应用"></a>1.4 延时从库应用</h2><h3 id="1-4-1-故障恢复思路"><a href="#1-4-1-故障恢复思路" class="headerlink" title="1.4.1 故障恢复思路"></a>1.4.1 故障恢复思路</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1主1从,从库延时5分钟,主库误删除1个库</span><br><span class="line">1. 5分钟之内 侦测到误删除操作</span><br><span class="line">2. 停从库SQL线程</span><br><span class="line">3. 截取relaylog</span><br><span class="line">起点 :停止SQL线程时,relay最后应用位置</span><br><span class="line">终点:误删除之前的position(GTID)</span><br><span class="line">4. 恢复截取的日志到从库</span><br><span class="line">5. 从库身份解除,替代主库工作</span><br></pre></td></tr></table></figure><h3 id="1-4-2-故障模拟及恢复"><a href="#1-4-2-故障模拟及恢复" class="headerlink" title="1.4.2 故障模拟及恢复"></a>1.4.2 故障模拟及恢复</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.主库数据操作</span><br><span class="line">db01 [(none)]&gt;create database relay charset utf8;</span><br><span class="line">db01 [(none)]&gt;use relay</span><br><span class="line">db01 [relay]&gt;create table t1 (id int);</span><br><span class="line">db01 [relay]&gt;insert into t1 values(1);</span><br><span class="line">db01 [relay]&gt;drop database relay;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2. 停止从库SQL线程</span><br><span class="line">stop slave sql_thread;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">3. 找relaylog的截取起点和终点</span><br><span class="line">起点:</span><br><span class="line">Relay_Log_File: db01-relay-bin.000002</span><br><span class="line">Relay_Log_Pos: 482</span><br><span class="line">终点:</span><br><span class="line">show relaylog events in &#39;db01-relay-bin.000002&#39;</span><br><span class="line">| db01-relay-bin.000002 | 1046 | Xid            |         7 |        2489 | COMMIT &#x2F;* xid&#x3D;144 *&#x2F;                  |</span><br><span class="line">| db01-relay-bin.000002 | 1077 | Anonymous_Gtid |         7 |        2554 | SET @@SESSION.GTID_NEXT&#x3D; &#39;ANONYMOUS&#39;  |</span><br><span class="line">mysqlbinlog --start-position&#x3D;482 --stop-position&#x3D;1077  &#x2F;data&#x2F;3308&#x2F;data&#x2F;db01-relay-bin.000002&gt;&#x2F;tmp&#x2F;relay.sql</span><br></pre></td></tr></table></figure><ol><li>从库恢复relaylog</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source &#x2F;tmp&#x2F;relay.sql</span><br></pre></td></tr></table></figure><p>5.从库身份解除</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db01 [relay]&gt;stop slave;</span><br><span class="line">db01 [relay]&gt;reset slave all</span><br></pre></td></tr></table></figure><h1 id="2-半同步"><a href="#2-半同步" class="headerlink" title="2. 半同步 ***"></a>2. 半同步 ***</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">解决主从数据一致性问题</span><br></pre></td></tr></table></figure><h2 id="2-1-半同步复制工作原理的变化"><a href="#2-1-半同步复制工作原理的变化" class="headerlink" title="2.1 半同步复制工作原理的变化"></a>2.1 半同步复制工作原理的变化</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1. 主库执行新的事务,commit时,更新 show master  status\G ,触发一个信号给</span><br><span class="line">2. binlog dump 接收到主库的 show master status\G信息,通知从库日志更新了</span><br><span class="line">3. 从库IO线程请求新的二进制日志事件</span><br><span class="line">4. 主库会通过dump线程传送新的日志事件,给从库IO线程</span><br><span class="line">5. 从库IO线程接收到binlog日志,当日志写入到磁盘上的relaylog文件时,给主库ACK_receiver线程</span><br><span class="line">6. ACK_receiver线程触发一个事件,告诉主库commit可以成功了</span><br><span class="line">7. 如果ACK达到了我们预设值的超时时间,半同步复制会切换为原始的异步复制.</span><br></pre></td></tr></table></figure><h2 id="2-2-配置半同步复制"><a href="#2-2-配置半同步复制" class="headerlink" title="2.2 配置半同步复制"></a>2.2 配置半同步复制</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">加载插件</span><br><span class="line">主:</span><br><span class="line">INSTALL PLUGIN rpl_semi_sync_master SONAME &#39;semisync_master.so&#39;;</span><br><span class="line">从:</span><br><span class="line">INSTALL PLUGIN rpl_semi_sync_slave SONAME &#39;semisync_slave.so&#39;;</span><br><span class="line">查看是否加载成功:</span><br><span class="line">show plugins;</span><br><span class="line">启动:</span><br><span class="line">主:</span><br><span class="line">SET GLOBAL rpl_semi_sync_master_enabled &#x3D; 1;</span><br><span class="line">从:</span><br><span class="line">SET GLOBAL rpl_semi_sync_slave_enabled &#x3D; 1;</span><br><span class="line">重启从库上的IO线程</span><br><span class="line">STOP SLAVE IO_THREAD;</span><br><span class="line">START SLAVE IO_THREAD;</span><br><span class="line">查看是否在运行</span><br><span class="line">主:</span><br><span class="line">show status like &#39;Rpl_semi_sync_master_status&#39;;</span><br><span class="line">从:</span><br><span class="line">show status like &#39;Rpl_semi_sync_slave_status&#39;;</span><br></pre></td></tr></table></figure><h1 id="3-过滤复制"><a href="#3-过滤复制" class="headerlink" title="3 . 过滤复制"></a>3 . 过滤复制</h1><h2 id="3-1-说明"><a href="#3-1-说明" class="headerlink" title="3.1 说明"></a>3.1 说明</h2><p>主库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">show master status;</span><br><span class="line">Binlog_Do_DB</span><br><span class="line">Binlog_Ignore_DB </span><br></pre></td></tr></table></figure><p>从库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">show slave status\G</span><br><span class="line">Replicate_Do_DB: </span><br><span class="line">Replicate_Ignore_DB: </span><br></pre></td></tr></table></figure><p>3.2 实现过程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -S &#x2F;data&#x2F;3307&#x2F;mysql.sock -A --master-data&#x3D;2 --single-transaction  -R --triggers &gt;&#x2F;backup&#x2F;full.sql</span><br><span class="line"></span><br><span class="line">vim  &#x2F;backup&#x2F;full.sql</span><br><span class="line">-- CHANGE MASTER TO MASTER_LOG_FILE&#x3D;&#39;mysql-bin.000002&#39;, MASTER_LOG_POS&#x3D;154;</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# mysql -S &#x2F;data&#x2F;3309&#x2F;mysql.sock </span><br><span class="line">source &#x2F;backup&#x2F;full.sql</span><br><span class="line"></span><br><span class="line">CHANGE MASTER TO</span><br><span class="line">MASTER_HOST&#x3D;&#39;10.0.0.51&#39;,</span><br><span class="line">MASTER_USER&#x3D;&#39;repl&#39;,</span><br><span class="line">MASTER_PASSWORD&#x3D;&#39;123&#39;,</span><br><span class="line">MASTER_PORT&#x3D;3307,</span><br><span class="line">MASTER_LOG_FILE&#x3D;&#39;mysql-bin.000002&#39;,</span><br><span class="line">MASTER_LOG_POS&#x3D;154,</span><br><span class="line">MASTER_CONNECT_RETRY&#x3D;10;</span><br><span class="line">start  slave;</span><br><span class="line">[root@db01 ~]# vim &#x2F;data&#x2F;3309&#x2F;my.cnf </span><br><span class="line">replicate_do_db&#x3D;ppt</span><br><span class="line">replicate_do_db&#x3D;word</span><br><span class="line">[root@db01 ~]# systemctl restart mysqld3309</span><br><span class="line"></span><br><span class="line">主库：</span><br><span class="line">Master [(none)]&gt;create database word;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line">Master [(none)]&gt;create database ppt;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line">Master [(none)]&gt;create database excel;</span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br></pre></td></tr></table></figure><h1 id="4-GTID复制"><a href="#4-GTID复制" class="headerlink" title="4. GTID复制"></a>4. GTID复制</h1><h2 id="4-1-GTID引入"><a href="#4-1-GTID引入" class="headerlink" title="4.1 GTID引入"></a>4.1 GTID引入</h2><h2 id="4-2-GTID介绍"><a href="#4-2-GTID介绍" class="headerlink" title="4.2 GTID介绍"></a>4.2 GTID介绍</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">GTID(Global Transaction ID)是对于一个已提交事务的唯一编号，并且是一个全局(主从复制)唯一的编号。</span><br><span class="line">它的官方定义如下：</span><br><span class="line">GTID &#x3D; source_id ：transaction_id</span><br><span class="line">7E11FA47-31CA-19E1-9E56-C43AA21293967:29</span><br><span class="line">什么是sever_uuid，和Server-id 区别？</span><br><span class="line">核心特性: 全局唯一,具备幂等性</span><br></pre></td></tr></table></figure><h1 id="4-3-GTID核心参数"><a href="#4-3-GTID核心参数" class="headerlink" title="4.3 GTID核心参数"></a>4.3 GTID核心参数</h1><p>重要参数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">gtid-mode&#x3D;on</span><br><span class="line">enforce-gtid-consistency&#x3D;true</span><br><span class="line">log-slave-updates&#x3D;1</span><br><span class="line"></span><br><span class="line">gtid-mode&#x3D;on                        --启用gtid类型，否则就是普通的复制架构</span><br><span class="line">enforce-gtid-consistency&#x3D;true               --强制GTID的一致性</span><br><span class="line">log-slave-updates&#x3D;1                 --slave更新是否记入日志</span><br></pre></td></tr></table></figure><h2 id="4-4-GTID复制配置过程："><a href="#4-4-GTID复制配置过程：" class="headerlink" title="4.4 GTID复制配置过程："></a>4.4 GTID复制配置过程：</h2><h3 id="4-4-1-清理环境"><a href="#4-4-1-清理环境" class="headerlink" title="4.4.1 清理环境"></a>4.4.1 清理环境</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pkill mysqld</span><br><span class="line"> \rm -rf &#x2F;data&#x2F;mysql&#x2F;data&#x2F;*</span><br><span class="line"> \rm -rf &#x2F;data&#x2F;binlog&#x2F;*</span><br></pre></td></tr></table></figure><h3 id="4-4-2-准备配置文件"><a href="#4-4-2-准备配置文件" class="headerlink" title="4.4.2 准备配置文件"></a>4.4.2 准备配置文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">主库db01：</span><br><span class="line">cat &gt; &#x2F;etc&#x2F;my.cnf &lt;&lt;EOF</span><br></pre></td></tr></table></figure><p>[mysqld]</p><p>basedir=/data/mysql/ datadir=/data/mysql/data socket=/tmp/mysql.sock server_id=51 port=3306 secure-file-priv=/tmp autocommit=0 log_bin=/data/binlog/mysql-bin binlog_format=row gtid-mode=on enforce-gtid-consistency=true log-slave-updates=1</p><p>[mysql]</p><p>prompt=db01 [\\d]&gt; EOF slave1(db02)： cat &gt; /etc/my.cnf &lt;&lt;EOF</p><p>[mysqld]</p><p>basedir=/data/mysql datadir=/data/mysql/data socket=/tmp/mysql.sock server_id=52 port=3306 secure-file-priv=/tmp autocommit=0 log_bin=/data/binlog/mysql-bin binlog_format=row gtid-mode=on enforce-gtid-consistency=true log-slave-updates=1</p><p>[mysql]</p><p>prompt=db02 [\\d]&gt; EOF slave2(db03)： cat &gt; /etc/my.cnf &lt;&lt;EOF</p><p>[mysqld]</p><p>basedir=/data/mysql datadir=/data/mysql/data socket=/tmp/mysql.sock server_id=53 port=3306 secure-file-priv=/tmp autocommit=0 log_bin=/data/binlog/mysql-bin binlog_format=row gtid-mode=on enforce-gtid-consistency=true log-slave-updates=1</p><p>[mysql]</p><p>prompt=db03 [\\d]&gt; EOF</p><h3 id="4-4-3-初始化数据"><a href="#4-4-3-初始化数据" class="headerlink" title="4.4.3 初始化数据"></a>4.4.3 初始化数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --initialize-insecure --user&#x3D;mysql --basedir&#x3D;&#x2F;data&#x2F;mysql  --datadir&#x3D;&#x2F;data&#x2F;mysql&#x2F;data </span><br></pre></td></tr></table></figure><h3 id="4-4-4-启动数据库"><a href="#4-4-4-启动数据库" class="headerlink" title="4.4.4 启动数据库"></a>4.4.4 启动数据库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;etc&#x2F;init.d&#x2F;mysqld start</span><br></pre></td></tr></table></figure><h3 id="4-4-5-构建主从："><a href="#4-4-5-构建主从：" class="headerlink" title="4.4.5 构建主从："></a>4.4.5 构建主从：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">master:51</span><br><span class="line">slave:52,53</span><br><span class="line"></span><br><span class="line">51:</span><br><span class="line">grant replication slave  on *.* to repl@&#39;10.0.0.%&#39; identified by &#39;123&#39;;</span><br><span class="line"></span><br><span class="line">52\53:</span><br><span class="line">change master to </span><br><span class="line">master_host&#x3D;&#39;10.0.0.51&#39;,</span><br><span class="line">master_user&#x3D;&#39;repl&#39;,</span><br><span class="line">master_password&#x3D;&#39;123&#39; ,</span><br><span class="line">MASTER_AUTO_POSITION&#x3D;1;</span><br><span class="line"></span><br><span class="line">start slave;</span><br></pre></td></tr></table></figure><h2 id="4-5-GTID-从库误写入操作处理"><a href="#4-5-GTID-从库误写入操作处理" class="headerlink" title="4.5 GTID 从库误写入操作处理"></a>4.5 GTID 从库误写入操作处理</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">查看监控信息:</span><br><span class="line">Last_SQL_Error: Error &#39;Can&#39;t create database &#39;oldboy&#39;; database exists&#39; on query. Default database: &#39;oldboy&#39;. Query: &#39;create database oldboy&#39;</span><br><span class="line"></span><br><span class="line">Retrieved_Gtid_Set: 71bfa52e-4aae-11e9-ab8c-000c293b577e:1-3</span><br><span class="line">Executed_Gtid_Set:  71bfa52e-4aae-11e9-ab8c-000c293b577e:1-2,</span><br><span class="line">7ca4a2b7-4aae-11e9-859d-000c298720f6:1</span><br><span class="line"></span><br><span class="line">注入空事物的方法：</span><br><span class="line"></span><br><span class="line">stop slave;</span><br><span class="line">set gtid_next&#x3D;&#39;99279e1e-61b7-11e9-a9fc-000c2928f5dd:3&#39;;</span><br><span class="line">begin;commit;</span><br><span class="line">set gtid_next&#x3D;&#39;AUTOMATIC&#39;;</span><br><span class="line"></span><br><span class="line">这里的xxxxx:N 也就是你的slave sql thread报错的GTID，或者说是你想要跳过的GTID。</span><br><span class="line">最好的解决方案：重新构建主从环境</span><br></pre></td></tr></table></figure><h2 id="4-6-GTID-复制和普通复制的区别"><a href="#4-6-GTID-复制和普通复制的区别" class="headerlink" title="4.6 GTID 复制和普通复制的区别"></a>4.6 GTID 复制和普通复制的区别</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">CHANGE MASTER TO</span><br><span class="line">MASTER_HOST&#x3D;&#39;10.0.0.51&#39;,</span><br><span class="line">MASTER_USER&#x3D;&#39;repl&#39;,</span><br><span class="line">MASTER_PASSWORD&#x3D;&#39;123&#39;,</span><br><span class="line">MASTER_PORT&#x3D;3307,</span><br><span class="line">MASTER_LOG_FILE&#x3D;&#39;mysql-bin.000001&#39;,</span><br><span class="line">MASTER_LOG_POS&#x3D;444,</span><br><span class="line">MASTER_CONNECT_RETRY&#x3D;10;</span><br><span class="line"></span><br><span class="line">change master to </span><br><span class="line">master_host&#x3D;&#39;10.0.0.51&#39;,</span><br><span class="line">master_user&#x3D;&#39;repl&#39;,</span><br><span class="line">master_password&#x3D;&#39;123&#39; ,</span><br><span class="line">MASTER_AUTO_POSITION&#x3D;1;</span><br><span class="line">start slave;</span><br><span class="line"></span><br><span class="line">（0）在主从复制环境中，主库发生过的事务，在全局都是由唯一GTID记录的，更方便Failover</span><br><span class="line">（1）额外功能参数（3个）</span><br><span class="line">（2）change master to 的时候不再需要binlog 文件名和position号,MASTER_AUTO_POSITION&#x3D;1;</span><br><span class="line">（3）在复制过程中，从库不再依赖master.info文件，而是直接读取最后一个relaylog的 GTID号</span><br><span class="line">（4） mysqldump备份时，默认会将备份中包含的事务操作，以以下方式</span><br><span class="line">    SET @@GLOBAL.GTID_PURGED&#x3D;&#39;8c49d7ec-7e78-11e8-9638-000c29ca725d:1&#39;;</span><br><span class="line">    告诉从库，我的备份中已经有以上事务，你就不用运行了，直接从下一个GTID开始请求binlog就行。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL进阶 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MySQL进阶之路初级DBA（八）</title>
      <link href="/posts/21492/"/>
      <url>/posts/21492/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL-lesson08-主从复制基础"><a href="#MySQL-lesson08-主从复制基础" class="headerlink" title="MySQL-lesson08-主从复制基础"></a>MySQL-lesson08-主从复制基础</h1><h1 id="0-企业高可用性标准"><a href="#0-企业高可用性标准" class="headerlink" title="0.企业高可用性标准 ***"></a>0.企业高可用性标准 ***</h1><h2 id="0-1-全年无故障率-非计划内故障停机"><a href="#0-1-全年无故障率-非计划内故障停机" class="headerlink" title="0.1 全年无故障率(非计划内故障停机)"></a>0.1 全年无故障率(非计划内故障停机)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">99.9%                 ----&gt; 0.001*365*24*60&#x3D;525.6  min</span><br><span class="line">99.99%                ----&gt; 0.0001*365*24*60&#x3D;52.56 min</span><br><span class="line">99.999%               ----&gt; 0.0001*365*24*60&#x3D;5.256 min</span><br></pre></td></tr></table></figure><h2 id="0-2-高可用架构方案"><a href="#0-2-高可用架构方案" class="headerlink" title="0.2 高可用架构方案"></a>0.2 高可用架构方案</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">负载均衡:有一定的高可用性 </span><br><span class="line">LVS  Nginx</span><br><span class="line">主备系统:有高可用性,但是需要切换,是单活的架构</span><br><span class="line">KA ,   MHA, MMM</span><br><span class="line">真正高可用(多活系统): </span><br><span class="line">NDB Cluster  Oracle RAC  Sysbase cluster   , InnoDB Cluster（MGR）,PXC , MGC</span><br></pre></td></tr></table></figure><h1 id="1-主从复制简介"><a href="#1-主从复制简介" class="headerlink" title="1. 主从复制简介 **"></a>1. 主从复制简介 **</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.1. 基于二进制日志复制的</span><br><span class="line">1.2. 主库的修改操作会记录二进制日志</span><br><span class="line">1.3. 从库会请求新的二进制日志并回放,最终达到主从数据同步</span><br><span class="line">1.4. 主从复制核心功能:</span><br><span class="line">辅助备份,处理物理损坏                   </span><br><span class="line">扩展新型的架构:高可用,高性能,分布式架构等</span><br></pre></td></tr></table></figure><h1 id="2-主从复制前提-搭建主从的过程"><a href="#2-主从复制前提-搭建主从的过程" class="headerlink" title="2. 主从复制前提(搭建主从的过程) ***"></a>2. 主从复制前提(搭建主从的过程) ***</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">## 2.1 两台以上mysql实例 ,server_id,server_uuid不同</span><br><span class="line">## 2.2 主库开启二进制日志</span><br><span class="line">## 2.3 专用的复制用户</span><br><span class="line">## 2.4 保证主从开启之前的某个时间点,从库数据是和主库一致(补课)</span><br><span class="line">## 2.5 告知从库,复制user,passwd,IP port,以及复制起点(change master to)</span><br><span class="line">## 2.6 线程(三个):Dump thread  IO thread  SQL thread 开启(start slave)</span><br></pre></td></tr></table></figure><h1 id="3-主从复制搭建-Classic-replication"><a href="#3-主从复制搭建-Classic-replication" class="headerlink" title="3. 主从复制搭建(Classic replication) ***"></a>3. 主从复制搭建(Classic replication) ***</h1><h2 id="3-1-清理主库数据"><a href="#3-1-清理主库数据" class="headerlink" title="3.1 清理主库数据"></a>3.1 清理主库数据</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf &#x2F;data&#x2F;3307&#x2F;data&#x2F;*</span><br></pre></td></tr></table></figure><h2 id="3-2-重新初始化3307"><a href="#3-2-重新初始化3307" class="headerlink" title="3.2 重新初始化3307"></a>3.2 重新初始化3307</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --initialize-insecure --user&#x3D;mysql --basedir&#x3D;&#x2F;app&#x2F;mysql --datadir&#x3D;&#x2F;data&#x2F;3307&#x2F;data</span><br></pre></td></tr></table></figure><h2 id="3-3-修改my-cnf-开启二进制日志功能"><a href="#3-3-修改my-cnf-开启二进制日志功能" class="headerlink" title="3.3 修改my.cnf ,开启二进制日志功能"></a>3.3 修改my.cnf ,开启二进制日志功能</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 3307]# vim &#x2F;data&#x2F;3307&#x2F;my.cnf </span><br><span class="line">log_bin&#x3D;&#x2F;data&#x2F;3307&#x2F;data&#x2F;mysql-bin</span><br></pre></td></tr></table></figure><h2 id="3-4-启动所有节点"><a href="#3-4-启动所有节点" class="headerlink" title="3.4 启动所有节点"></a>3.4 启动所有节点</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 3307]# systemctl start mysqld3307</span><br><span class="line">[root@db01 3307]# systemctl start mysqld3308</span><br><span class="line">[root@db01 3307]# systemctl start mysqld3309</span><br><span class="line">[root@db01 3307]# ps -ef |grep mysqld</span><br><span class="line">mysql      3684      1  4 09:59 ?        00:00:00 &#x2F;app&#x2F;mysql&#x2F;bin&#x2F;mysqld --defaults-file&#x3D;&#x2F;data&#x2F;3307&#x2F;my.cnf</span><br><span class="line">mysql      3719      1  7 09:59 ?        00:00:00 &#x2F;app&#x2F;mysql&#x2F;bin&#x2F;mysqld --defaults-file&#x3D;&#x2F;data&#x2F;3308&#x2F;my.cnf</span><br><span class="line">mysql      3754      1  8 09:59 ?        00:00:00 &#x2F;app&#x2F;mysql&#x2F;bin&#x2F;mysqld --defaults-file&#x3D;&#x2F;data&#x2F;3309&#x2F;my.cnf</span><br><span class="line">[root@db01 3307]# mysql -S &#x2F;data&#x2F;3307&#x2F;mysql.sock -e &quot;select @@server_id&quot;</span><br><span class="line">[root@db01 3307]# mysql -S &#x2F;data&#x2F;3308&#x2F;mysql.sock -e &quot;select @@server_id&quot;</span><br><span class="line">[root@db01 3307]# mysql -S &#x2F;data&#x2F;3309&#x2F;mysql.sock -e &quot;select @@server_id&quot;</span><br></pre></td></tr></table></figure><h2 id="3-5-主库中创建复制用户"><a href="#3-5-主库中创建复制用户" class="headerlink" title="3.5 主库中创建复制用户"></a>3.5 主库中创建复制用户</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 3307]# mysql -S &#x2F;data&#x2F;3307&#x2F;mysql.sock </span><br><span class="line">db01 [(none)]&gt;grant replication slave on *.* to repl@&#39;10.0.0.%&#39; identified by &#39;123&#39;;</span><br><span class="line">db01 [(none)]&gt;select user,host from mysql.user;</span><br></pre></td></tr></table></figure><h2 id="3-6-备份主库并恢复到从库"><a href="#3-6-备份主库并恢复到从库" class="headerlink" title="3.6 备份主库并恢复到从库"></a>3.6 备份主库并恢复到从库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 3307]# mysqldump -S &#x2F;data&#x2F;3307&#x2F;mysql.sock -A --master-data&#x3D;2 --single-transaction  -R --triggers &gt;&#x2F;backup&#x2F;full.sql</span><br><span class="line">-- CHANGE MASTER TO MASTER_LOG_FILE&#x3D;&#39;mysql-bin.000001&#39;, MASTER_LOG_POS&#x3D;653;</span><br><span class="line">[root@db01 3307]# mysql -S &#x2F;data&#x2F;3308&#x2F;mysql.sock</span><br><span class="line">db01 [(none)]&gt;source &#x2F;backup&#x2F;full.sql</span><br></pre></td></tr></table></figure><h2 id="3-7-告知从库关键复制信息"><a href="#3-7-告知从库关键复制信息" class="headerlink" title="3.7 告知从库关键复制信息"></a>3.7 告知从库关键复制信息</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">ip port user  password  binlog position </span><br><span class="line">[root@db01 3307]# mysql -S &#x2F;data&#x2F;3308&#x2F;mysql.sock</span><br><span class="line">db01 [mysql]&gt;help change master to</span><br><span class="line"></span><br><span class="line">CHANGE MASTER TO</span><br><span class="line">  MASTER_HOST&#x3D;&#39;10.0.0.51&#39;,</span><br><span class="line">  MASTER_USER&#x3D;&#39;repl&#39;,</span><br><span class="line">  MASTER_PASSWORD&#x3D;&#39;123&#39;,</span><br><span class="line">  MASTER_PORT&#x3D;3307,</span><br><span class="line">  MASTER_LOG_FILE&#x3D;&#39;mysql-bin.000001&#39;,</span><br><span class="line">  MASTER_LOG_POS&#x3D;653,</span><br><span class="line">  MASTER_CONNECT_RETRY&#x3D;10;</span><br></pre></td></tr></table></figure><h2 id="3-8-开启主从专用线程"><a href="#3-8-开启主从专用线程" class="headerlink" title="3.8 开启主从专用线程"></a>3.8 开启主从专用线程</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">start slave ;</span><br></pre></td></tr></table></figure><h2 id="3-9-检查复制状态"><a href="#3-9-检查复制状态" class="headerlink" title="3.9 检查复制状态"></a>3.9 检查复制状态</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">db01 [mysql]&gt;show slave  status \G</span><br><span class="line">Slave_IO_Running: Yes</span><br><span class="line">Slave_SQL_Running: Yes</span><br></pre></td></tr></table></figure><h1 id="4-主从复制的原理-Classic-Replication"><a href="#4-主从复制的原理-Classic-Replication" class="headerlink" title="4. 主从复制的原理 (Classic Replication)*"></a>4. 主从复制的原理 (Classic Replication)<strong>*</strong></h1><h2 id="4-1-主从中设置到的文件和线程"><a href="#4-1-主从中设置到的文件和线程" class="headerlink" title="4.1 主从中设置到的文件和线程"></a>4.1 主从中设置到的文件和线程</h2><h3 id="4-1-1-线程"><a href="#4-1-1-线程" class="headerlink" title="4.1.1 线程"></a>4.1.1 线程</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">主:</span><br><span class="line">DUMP THREAD</span><br><span class="line">从:</span><br><span class="line">IO  THREAD</span><br><span class="line">SQL THREAD</span><br></pre></td></tr></table></figure><h3 id="4-1-2-文件"><a href="#4-1-2-文件" class="headerlink" title="4.1.2 文件"></a>4.1.2 文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">主:</span><br><span class="line">mysql-bin.000001</span><br><span class="line">从: </span><br><span class="line">db01-relay.000001     &#x3D;&#x3D;&#x3D;&gt;中继日志</span><br><span class="line">master.info                 &#x3D;&#x3D;&#x3D;》主库信息记录日志</span><br><span class="line">relay-log.info              &#x3D;&#x3D;&#x3D;&gt; 记录中继应用情况信息</span><br></pre></td></tr></table></figure><h1 id="4-2-主从复制原理"><a href="#4-2-主从复制原理" class="headerlink" title="4.2 主从复制原理"></a>4.2 主从复制原理</h1><p><img src="http://upload-images.jianshu.io/upload_images/16956686-72dd1f45d206d507.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/693/format/webp" alt="img"></p><p>image.png</p><p><img src="http://upload-images.jianshu.io/upload_images/16956686-a4273ecc8aa1c370.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/724/format/webp" alt="img"></p><p>image.png</p><p>主从复制原理描述：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">1.change master to 时，ip pot user password binlog position写入到master.info进行记录</span><br><span class="line">2. start slave 时，从库会启动IO线程和SQL线程</span><br><span class="line">3.IO_T，读取master.info信息，获取主库信息连接主库</span><br><span class="line">4. 主库会生成一个准备binlog DUMP线程，来响应从库</span><br><span class="line">5. IO_T根据master.info记录的binlog文件名和position号，请求主库DUMP最新日志</span><br><span class="line">6. DUMP线程检查主库的binlog日志，如果有新的，TP(传送)给从从库的IO_T</span><br><span class="line">7. IO_T将收到的日志存储到了TCP&#x2F;IP 缓存，立即返回ACK给主库 ，主库工作完成</span><br><span class="line">8.IO_T将缓存中的数据，存储到relay-log日志文件,更新master.info文件binlog 文件名和postion，IO_T工作完成</span><br><span class="line">9.SQL_T读取relay-log.info文件，获取到上次执行到的relay-log的位置，作为起点，回放relay-log</span><br><span class="line">10.SQL_T回放完成之后，会更新relay-log.info文件。</span><br><span class="line">11. relay-log会有自动清理的功能。</span><br><span class="line">细节：</span><br><span class="line">1.主库一旦有新的日志生成，会发送“信号”给binlog dump ，IO线程再请求</span><br></pre></td></tr></table></figure><h1 id="5-主从故障监控-分析-处理"><a href="#5-主从故障监控-分析-处理" class="headerlink" title="5. 主从故障监控\分析\处理 *"></a>5. 主从故障监控\分析\处理 <strong>*</strong></h1><h2 id="5-1-线程相关监控"><a href="#5-1-线程相关监控" class="headerlink" title="5.1 线程相关监控"></a>5.1 线程相关监控</h2><h2 id="主库"><a href="#主库" class="headerlink" title="主库:"></a>主库:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">show full processlist;</span><br><span class="line">每个从库都会有一行dump相关的信息</span><br><span class="line">HOSTS: </span><br><span class="line">db01:47176</span><br><span class="line">State:</span><br><span class="line">Master has sent all binlog to slave; waiting for more updates</span><br><span class="line">如果现实非以上信息,说明主从之间的关系出现了问题    </span><br></pre></td></tr></table></figure><h2 id="从库"><a href="#从库" class="headerlink" title="从库:"></a>从库:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db01 [(none)]&gt;show slave status \G</span><br><span class="line">*************************** 1. row ***************************</span><br></pre></td></tr></table></figure><h2 id="主库相关信息监控"><a href="#主库相关信息监控" class="headerlink" title="主库相关信息监控"></a>主库相关信息监控</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Master_Host: 10.0.0.51</span><br><span class="line">Master_User: repl</span><br><span class="line">Master_Port: 3307</span><br><span class="line">Master_Log_File: mysql-bin.000005</span><br><span class="line">Read_Master_Log_Pos: 444</span><br></pre></td></tr></table></figure><h2 id="从库中继日志的应用状态"><a href="#从库中继日志的应用状态" class="headerlink" title="从库中继日志的应用状态"></a>从库中继日志的应用状态</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Relay_Log_File: db01-relay-bin.000002</span><br><span class="line">Relay_Log_Pos: 485</span><br></pre></td></tr></table></figure><h2 id="从库复制线程有关的状态"><a href="#从库复制线程有关的状态" class="headerlink" title="从库复制线程有关的状态"></a>从库复制线程有关的状态</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Slave_IO_Running: Yes</span><br><span class="line">Slave_SQL_Running: Yes</span><br><span class="line">Last_IO_Errno: 0</span><br><span class="line">Last_IO_Error: </span><br><span class="line">Last_SQL_Errno: 0</span><br><span class="line">Last_SQL_Error: </span><br></pre></td></tr></table></figure><h2 id="过滤复制有关的状态"><a href="#过滤复制有关的状态" class="headerlink" title="过滤复制有关的状态"></a>过滤复制有关的状态</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Replicate_Do_DB: </span><br><span class="line">Replicate_Ignore_DB: </span><br><span class="line">Replicate_Do_Table: </span><br><span class="line">Replicate_Ignore_Table: </span><br><span class="line">Replicate_Wild_Do_Table: </span><br><span class="line">Replicate_Wild_Ignore_Table: </span><br></pre></td></tr></table></figure><h2 id="主从延时相关状态-非人为"><a href="#主从延时相关状态-非人为" class="headerlink" title="主从延时相关状态(非人为)"></a>主从延时相关状态(非人为)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Seconds_Behind_Master: 0</span><br></pre></td></tr></table></figure><h2 id="延时从库有关的状态-人为"><a href="#延时从库有关的状态-人为" class="headerlink" title="延时从库有关的状态(人为)"></a>延时从库有关的状态(人为)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SQL_Delay: 0</span><br><span class="line">SQL_Remaining_Delay: NULL</span><br></pre></td></tr></table></figure><h2 id="GTID-复制有关的状态"><a href="#GTID-复制有关的状态" class="headerlink" title="GTID 复制有关的状态"></a>GTID 复制有关的状态</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Retrieved_Gtid_Set: </span><br><span class="line">Executed_Gtid_Set: </span><br><span class="line">Auto_Position: 0</span><br></pre></td></tr></table></figure><h2 id="5-2-主从复制故障分析"><a href="#5-2-主从复制故障分析" class="headerlink" title="5.2 主从复制故障分析"></a>5.2 主从复制故障分析</h2><h3 id="5-2-1-IO"><a href="#5-2-1-IO" class="headerlink" title="5.2.1 IO"></a>5.2.1 IO</h3><h4 id="5-2-1-1-连接主库"><a href="#5-2-1-1-连接主库" class="headerlink" title="5.2.1.1 连接主库"></a>5.2.1.1 连接主库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">(1) 用户 密码  IP  port</span><br><span class="line">Last_IO_Error: error reconnecting to master &#39;repl@10.0.0.51:3307&#39; - retry-time: 10  retries: 7</span><br><span class="line">[root@db01 ~]# mysql -urepl  -p123333  -h 10.0.0.51 -P 3307</span><br><span class="line">ERROR 1045 (28000): Access denied for user &#39;repl&#39;@&#39;db01&#39; (using password: YES)</span><br><span class="line"></span><br><span class="line">原因:</span><br><span class="line">密码错误 </span><br><span class="line">用户错误 </span><br><span class="line">skip_name_resolve</span><br><span class="line">地址错误</span><br><span class="line">端口</span><br></pre></td></tr></table></figure><p><img src="http://upload-images.jianshu.io/upload_images/16956686-2d45278fb16e4d69.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/932/format/webp" alt="img"></p><p>image.png</p><p><img src="http://upload-images.jianshu.io/upload_images/16956686-0ed17c75c871d787.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/975/format/webp" alt="img"></p><p>image.png</p><h2 id="处理方法"><a href="#处理方法" class="headerlink" title="处理方法"></a>处理方法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">stop  slave  </span><br><span class="line">reset slave all </span><br><span class="line">change master to </span><br><span class="line">start slave</span><br></pre></td></tr></table></figure><h2 id="主库连接数上线-或者是主库太繁忙"><a href="#主库连接数上线-或者是主库太繁忙" class="headerlink" title="主库连接数上线,或者是主库太繁忙"></a>主库连接数上线,或者是主库太繁忙</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">show slave  staus \G </span><br><span class="line">Last_IO_Errno: 1040</span><br><span class="line">Last_IO_Error: error reconnecting to master &#39;repl@10.0.0.51:3307&#39; - retry-time: 10  retries: 7</span><br><span class="line">处理思路:</span><br><span class="line">拿复制用户,手工连接一下</span><br><span class="line"></span><br><span class="line">[root@db01 ~]# mysql -urepl -p123 -h 10.0.0.51 -P 3307 </span><br><span class="line">mysql: [Warning] Using a password on the command line interface can be insecure.</span><br><span class="line">ERROR 1040 (HY000): Too many connections</span><br><span class="line">处理方法:</span><br><span class="line">db01 [(none)]&gt;set global max_connections&#x3D;300;</span><br><span class="line"></span><br><span class="line">(3) 防火墙,网络不通</span><br></pre></td></tr></table></figure><h4 id="5-2-1-2-请求二进制日志"><a href="#5-2-1-2-请求二进制日志" class="headerlink" title="5.2.1.2 请求二进制日志"></a>5.2.1.2 请求二进制日志</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">主库缺失日志</span><br><span class="line">从库方面,二进制日志位置点不对</span><br><span class="line">Last_IO_Error: Got fatal error 1236 from master when reading data from binary log: &#39;could not find next log; the first event &#39;mysql-bin.000001&#39; at 154, the last event read from &#39;&#x2F;data&#x2F;3307&#x2F;data&#x2F;mysql-bin.000002&#39; at 154, the last byte read from &#39;&#x2F;data&#x2F;3307&#x2F;data&#x2F;mysql-bin.000002&#39; at 154.&#39;</span><br></pre></td></tr></table></figure><p><img src="http://upload-images.jianshu.io/upload_images/16956686-78c7eaaacd175fc0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p>image.png</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">注意: 在主从复制环境中,严令禁止主库中reset master; 可以选择expire 进行定期清理主库二进制日志</span><br><span class="line">解决方案:</span><br><span class="line">重新构建主从</span><br></pre></td></tr></table></figure><h3 id="5-2-2-SQL-线程故障"><a href="#5-2-2-SQL-线程故障" class="headerlink" title="5.2.2 SQL 线程故障"></a>5.2.2 SQL 线程故障</h3><h2 id="SQL线程功能："><a href="#SQL线程功能：" class="headerlink" title="SQL线程功能："></a>SQL线程功能：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(1)读写relay-log.info </span><br><span class="line">(2)relay-log损坏,断节,找不到</span><br><span class="line">(3)接收到的SQL无法执行</span><br></pre></td></tr></table></figure><h2 id="导致SQL线程故障原因分析："><a href="#导致SQL线程故障原因分析：" class="headerlink" title="导致SQL线程故障原因分析："></a>导致SQL线程故障原因分析：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. 版本差异，参数设定不同，比如：数据类型的差异，SQL_MODE影响</span><br><span class="line">2.要创建的数据库对象,已经存在</span><br><span class="line">3.要删除或修改的对象不存在  </span><br><span class="line">4.DML语句不符合表定义及约束时.  </span><br><span class="line">归根揭底的原因都是由于从库发生了写入操作.</span><br><span class="line">Last_SQL_Error: Error &#39;Can&#39;t create database &#39;db&#39;; database exists&#39; on query. Default database: &#39;db&#39;. Query: &#39;create database db&#39;</span><br></pre></td></tr></table></figure><h2 id="处理方法-以从库为核心的处理方案-："><a href="#处理方法-以从库为核心的处理方案-：" class="headerlink" title="处理方法(以从库为核心的处理方案)："></a>处理方法(以从库为核心的处理方案)：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">方法一：</span><br><span class="line">stop slave; </span><br><span class="line">set global sql_slave_skip_counter &#x3D; 1;</span><br><span class="line">#将同步指针向下移动一个，如果多次不同步，可以重复操作。</span><br><span class="line">start slave;</span><br><span class="line">方法二：</span><br><span class="line">&#x2F;etc&#x2F;my.cnf</span><br><span class="line">slave-skip-errors &#x3D; 1032,1062,1007</span><br><span class="line">常见错误代码:</span><br><span class="line">1007:对象已存在</span><br><span class="line">1032:无法执行DML</span><br><span class="line">1062:主键冲突,或约束冲突</span><br><span class="line"></span><br><span class="line">但是，以上操作有时是有风险的，最安全的做法就是重新构建主从。把握一个原则,一切以主库为主.</span><br></pre></td></tr></table></figure><h2 id="一劳永逸的方法"><a href="#一劳永逸的方法" class="headerlink" title="一劳永逸的方法:"></a>一劳永逸的方法:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(1) 可以设置从库只读.</span><br><span class="line">db01 [(none)]&gt;show variables like &#39;%read_only%&#39;;</span><br><span class="line">注意：</span><br><span class="line">只会影响到普通用户，对管理员用户无效。</span><br><span class="line">(2)加中间件</span><br><span class="line">读写分离。</span><br></pre></td></tr></table></figure><h1 id="6-主从延时监控及原因"><a href="#6-主从延时监控及原因" class="headerlink" title="6. 主从延时监控及原因 *"></a>6. 主从延时监控及原因 <strong>*</strong></h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">主库做了修改操作,从库比较长时间才能追上.</span><br></pre></td></tr></table></figure><h2 id="6-1-外在因素"><a href="#6-1-外在因素" class="headerlink" title="6.1 外在因素"></a>6.1 外在因素</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">网络 </span><br><span class="line">主从硬件差异较大</span><br><span class="line">版本差异</span><br><span class="line">参数因素</span><br></pre></td></tr></table></figure><h2 id="6-2-主库"><a href="#6-2-主库" class="headerlink" title="6.2 主库"></a>6.2 主库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">(1) 二进制日志写入不及时</span><br><span class="line">[rep]&gt;select @@sync_binlog;</span><br><span class="line">(2) CR的主从复制中,binlog_dump线程,事件为单元,串行传送二进制日志(5.6 5.5)</span><br><span class="line"></span><br><span class="line">1. 主库并发事务量大,主库可以并行,传送时是串行</span><br><span class="line">2. 主库发生了大事务,由于是串行传送,会产生阻塞后续的事务.</span><br><span class="line"></span><br><span class="line">解决方案:</span><br><span class="line">1. 5.6 开始,开启GTID,实现了GC(group commit)机制,可以并行传输日志给从库IO</span><br><span class="line">2. 5.7 开始,不开启GTID,会自动维护匿名的GTID,也能实现GC,我们建议还是认为开启GTID</span><br><span class="line">3. 大事务拆成多个小事务,可以有效的减少主从延时.</span><br></pre></td></tr></table></figure><h2 id="6-3-从库"><a href="#6-3-从库" class="headerlink" title="6.3 从库"></a>6.3 从库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">SQL线程导致的主从延时</span><br><span class="line">在CR复制情况下: 从库默认情况下只有一个SQL,只能串行回放事务SQL</span><br><span class="line">1. 主库如果并发事务量较大,从库只能串行回放</span><br><span class="line">2. 主库发生了大事务,会阻塞后续的所有的事务的运行</span><br><span class="line"></span><br><span class="line">解决方案:</span><br><span class="line">1. 5.6 版本开启GTID之后,加入了SQL多线程的特性,但是只能针对不同库(database)下的事务进行并发回放.</span><br><span class="line">2. 5.7 版本开始GTID之后,在SQL方面,提供了基于逻辑时钟(logical_clock),binlog加入了seq_no机制,</span><br><span class="line">真正实现了基于事务级别的并发回放,这种技术我们把它称之为MTS(enhanced multi-threaded slave).</span><br><span class="line">3. 大事务拆成多个小事务,可以有效的减少主从延时.</span><br><span class="line">[http:&#x2F;&#x2F;dev.mysql.com&#x2F;worklog&#x2F;task&#x2F;?id&#x3D;6314]</span><br></pre></td></tr></table></figure><h1 id="7-小结"><a href="#7-小结" class="headerlink" title="7. 小结"></a>7. 小结</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 主从复制原理</span><br><span class="line">2. 主从复制故障</span><br><span class="line">3. 主从延时：group commit    MTS   </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL进阶 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MySQL进阶之路初级DBA（七）</title>
      <link href="/posts/59281/"/>
      <url>/posts/59281/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL-lesson07-备份恢复"><a href="#MySQL-lesson07-备份恢复" class="headerlink" title="MySQL-lesson07-备份恢复"></a>MySQL-lesson07-备份恢复</h1><h1 id="1-运维在数据库备份恢复方面的职责"><a href="#1-运维在数据库备份恢复方面的职责" class="headerlink" title="1. 运维在数据库备份恢复方面的职责"></a>1. 运维在数据库备份恢复方面的职责</h1><h2 id="1-1-设计备份策略"><a href="#1-1-设计备份策略" class="headerlink" title="1.1 设计备份策略"></a>1.1 设计备份策略</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">全备  、增量、时间、自动</span><br></pre></td></tr></table></figure><h2 id="1-2-日常备份检查"><a href="#1-2-日常备份检查" class="headerlink" title="1.2 日常备份检查"></a>1.2 日常备份检查</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">备份存在性</span><br><span class="line">备份空间够用否</span><br></pre></td></tr></table></figure><h2 id="1-3-定期恢复演练-测试库"><a href="#1-3-定期恢复演练-测试库" class="headerlink" title="1.3 定期恢复演练(测试库)"></a>1.3 定期恢复演练(测试库)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">一季度 或者 半年</span><br></pre></td></tr></table></figure><h2 id="1-4-故障恢复"><a href="#1-4-故障恢复" class="headerlink" title="1.4 故障恢复"></a>1.4 故障恢复</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">通过现有备份,能够将数据库恢复到故障之前的时间点.       </span><br></pre></td></tr></table></figure><h2 id="1-5-迁移"><a href="#1-5-迁移" class="headerlink" title="1.5 迁移"></a>1.5 迁移</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. 停机时间</span><br><span class="line">2. 回退方案</span><br></pre></td></tr></table></figure><h1 id="2-备份类型"><a href="#2-备份类型" class="headerlink" title="2. 备份类型"></a>2. 备份类型</h1><h2 id="2-1-热备"><a href="#2-1-热备" class="headerlink" title="2.1 热备"></a>2.1 热备</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在数据库正常业务时,备份数据,并且能够一致性恢复（只能是innodb）</span><br><span class="line">对业务影响非常小</span><br></pre></td></tr></table></figure><h2 id="2-2-温备"><a href="#2-2-温备" class="headerlink" title="2.2 温备"></a>2.2 温备</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">锁表备份,只能查询不能修改（myisam）</span><br><span class="line">影响到写入操作</span><br></pre></td></tr></table></figure><h2 id="2-3-冷备"><a href="#2-3-冷备" class="headerlink" title="2.3 冷备"></a>2.3 冷备</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">关闭数据库业务,数据库没有任何变更的情况下,进行备份数据.</span><br><span class="line">业务停止</span><br></pre></td></tr></table></figure><h1 id="3-备份方式及工具介绍"><a href="#3-备份方式及工具介绍" class="headerlink" title="3. 备份方式及工具介绍"></a>3. 备份方式及工具介绍</h1><h2 id="3-1-逻辑备份工具"><a href="#3-1-逻辑备份工具" class="headerlink" title="3.1 逻辑备份工具"></a>3.1 逻辑备份工具</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">基于SQL语句进行备份</span><br><span class="line">mysqldump       *****</span><br><span class="line">mysqlbinlog     *****</span><br></pre></td></tr></table></figure><h2 id="3-2-物理备份工具"><a href="#3-2-物理备份工具" class="headerlink" title="3.2 物理备份工具"></a>3.2 物理备份工具</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">基于磁盘数据文件备份</span><br><span class="line">xtrabackup(XBK) ：percona 第三方   *****</span><br><span class="line">MySQL Enterprise Backup（MEB）</span><br></pre></td></tr></table></figure><h1 id="4-逻辑备份和物理备份的比较"><a href="#4-逻辑备份和物理备份的比较" class="headerlink" title="4. 逻辑备份和物理备份的比较"></a>4. 逻辑备份和物理备份的比较</h1><h2 id="4-1-mysqldump-MDP"><a href="#4-1-mysqldump-MDP" class="headerlink" title="4.1 mysqldump (MDP)"></a>4.1 mysqldump (MDP)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">优点：</span><br><span class="line">1.不需要下载安装</span><br><span class="line">2.备份出来的是SQL，文本格式，可读性高,便于备份处理</span><br><span class="line">3.压缩比较高，节省备份的磁盘空间</span><br><span class="line"></span><br><span class="line">缺点：</span><br><span class="line">4.依赖于数据库引擎，需要从磁盘把数据读出</span><br><span class="line">然后转换成SQL进行转储，比较耗费资源，数据量大的话效率较低</span><br><span class="line">建议：</span><br><span class="line">100G以内的数据量级，可以使用mysqldump</span><br><span class="line">超过TB以上，我们也可能选择的是mysqldump，配合分布式的系统</span><br><span class="line">1EB  &#x3D;1024 PB &#x3D;1000000 TB</span><br></pre></td></tr></table></figure><h2 id="4-2-xtrabackup-XBK"><a href="#4-2-xtrabackup-XBK" class="headerlink" title="4.2 xtrabackup(XBK)"></a>4.2 xtrabackup(XBK)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">优点：</span><br><span class="line">1.类似于直接cp数据文件，不需要管逻辑结构，相对来说性能较高</span><br><span class="line">缺点：</span><br><span class="line">2.可读性差</span><br><span class="line">3.压缩比低，需要更多磁盘空间</span><br><span class="line">建议：</span><br><span class="line">&gt;100G&lt;TB</span><br></pre></td></tr></table></figure><h1 id="5-备份策略"><a href="#5-备份策略" class="headerlink" title="5.备份策略"></a>5.备份策略</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">备份方式：</span><br><span class="line">全备:全库备份，备份所有数据</span><br><span class="line">增量:备份变化的数据</span><br><span class="line">逻辑备份&#x3D;mysqldump+mysqlbinlog</span><br><span class="line">物理备份&#x3D;xtrabackup_full+xtrabackup_incr+binlog或者xtrabackup_full+binlog</span><br><span class="line">备份周期:</span><br><span class="line">根据数据量设计备份周期</span><br><span class="line">比如：周日全备，周1-周6增量</span><br></pre></td></tr></table></figure><h1 id="6-备份工具使用-mysqldump"><a href="#6-备份工具使用-mysqldump" class="headerlink" title="6.备份工具使用-mysqldump"></a>6.备份工具使用-mysqldump</h1><h2 id="6-1-mysqldump-逻辑备份的客户端工具"><a href="#6-1-mysqldump-逻辑备份的客户端工具" class="headerlink" title="6.1 mysqldump (逻辑备份的客户端工具)"></a>6.1 mysqldump (逻辑备份的客户端工具)</h2><h3 id="6-1-1-客户端通用参数"><a href="#6-1-1-客户端通用参数" class="headerlink" title="6.1.1 客户端通用参数"></a>6.1.1 客户端通用参数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-u  -p   -S   -h  -P    </span><br><span class="line">本地备份:</span><br><span class="line">mysqldump -uroot -p  -S &#x2F;tmp&#x2F;mysql.sock</span><br><span class="line">远程备份:</span><br><span class="line">mysqldump -uroot -p  -h 10.0.0.51 -P3306</span><br></pre></td></tr></table></figure><h3 id="6-1-2-备份专用基本参数"><a href="#6-1-2-备份专用基本参数" class="headerlink" title="6.1.2 备份专用基本参数"></a>6.1.2 备份专用基本参数</h3><h4 id="A-全备参数"><a href="#A-全备参数" class="headerlink" title="-A 全备参数"></a>-A 全备参数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">例子1:</span><br><span class="line">[root@db01 ~]# mkdir -p &#x2F;data&#x2F;backup</span><br><span class="line">mysqldump -uroot -p -A &gt;&#x2F;data&#x2F;backup&#x2F;full.sql</span><br><span class="line">Enter password: </span><br><span class="line"></span><br><span class="line">mysqldump: [Warning] Using a password on the command line interface can be insecure.</span><br><span class="line">Warning: A partial dump from a server that has GTIDs will by default include the GTIDs of all transactions, even those that changed suppressed parts of the database. If you don&#39;t want to restore GTIDs, pass --set-gtid-purged&#x3D;OFF. To make a complete dump, pass --all-databases --triggers --routines --events. </span><br><span class="line"></span><br><span class="line"># 补充:</span><br><span class="line"># 1.常规备份是要加 --set-gtid-purged&#x3D;OFF,解决备份时的警告</span><br><span class="line"># [root@db01 ~]# mysqldump -uroot -p123 -A  --set-gtid-purged&#x3D;OFF  &gt;&#x2F;backup&#x2F;full.sql</span><br><span class="line"># 2.构建主从时,做的备份,不需要加这个参数</span><br><span class="line"># [root@db01 ~]# mysqldump -uroot -p123 -A    --set-gtid-purged&#x3D;ON &gt;&#x2F;backup&#x2F;full.sql</span><br></pre></td></tr></table></figure><h4 id="B-db1-db2-db3-备份多个单库"><a href="#B-db1-db2-db3-备份多个单库" class="headerlink" title="-B db1 db2 db3 备份多个单库"></a>-B db1 db2 db3 备份多个单库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">说明：生产中需要备份，生产相关的库和MySQL库</span><br><span class="line">例子2 :</span><br><span class="line">mysqldump -B mysql gtid --set-gtid-purged&#x3D;OFF &gt;&#x2F;data&#x2F;backup&#x2F;b.sql </span><br></pre></td></tr></table></figure><h4 id="备份单个或多个表"><a href="#备份单个或多个表" class="headerlink" title="备份单个或多个表"></a>备份单个或多个表</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">例子3 world数据库下的city,country表</span><br><span class="line">mysqldump -uroot -p world city country &gt;&#x2F;backup&#x2F;bak1.sql</span><br><span class="line">以上备份恢复时:必须库事先存在,并且ues才能source恢复</span><br></pre></td></tr></table></figure><h3 id="6-1-3-高级参数应用"><a href="#6-1-3-高级参数应用" class="headerlink" title="6.1.3 高级参数应用"></a>6.1.3 高级参数应用</h3><h4 id="特殊参数1使用（必须要加）"><a href="#特殊参数1使用（必须要加）" class="headerlink" title="特殊参数1使用（必须要加）"></a>特殊参数1使用（必须要加）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-R            备份存储过程及函数</span><br><span class="line">--triggers  备份触发器</span><br><span class="line">-E             备份事件</span><br><span class="line"></span><br><span class="line">例子4:</span><br><span class="line">[root@db01 backup]# mysqldump -uroot -p -A -R -E --triggers &gt;&#x2F;data&#x2F;backup&#x2F;full.sql</span><br><span class="line">(5) 特殊参数2使用</span><br></pre></td></tr></table></figure><h4 id="F-在备份开始时-刷新一个新binlog日志"><a href="#F-在备份开始时-刷新一个新binlog日志" class="headerlink" title="-F 在备份开始时,刷新一个新binlog日志"></a>-F 在备份开始时,刷新一个新binlog日志</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">例子5:</span><br><span class="line">mysqldump -uroot -p  -A  -R --triggers -F &gt;&#x2F;bak&#x2F;full.sql</span><br></pre></td></tr></table></figure><h4 id="master-data-2"><a href="#master-data-2" class="headerlink" title="--master-data=2"></a>--master-data=2</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">以注释的形式,保存备份开始时间点的binlog的状态信息</span><br><span class="line"></span><br><span class="line">mysqldump -uroot -p  -A  -R --triggers --master-data&#x3D;2   &gt;&#x2F;back&#x2F;world.sql</span><br><span class="line">[root@db01 ~]# grep &#39;CHANGE&#39; &#x2F;backup&#x2F;world.sql </span><br><span class="line">-- CHANGE MASTER TO MASTER_LOG_FILE&#x3D;&#39;mysql-bin.000035&#39;, MASTER_LOG_POS&#x3D;194;</span><br><span class="line"></span><br><span class="line">功能：</span><br><span class="line">（1）在备份时，会自动记录，二进制日志文件名和位置号</span><br><span class="line">0 默认值</span><br><span class="line">1  以change master to命令形式，可以用作主从复制</span><br><span class="line">2  以注释的形式记录，备份时刻的文件名+postion号</span><br><span class="line">（2） 自动锁表</span><br><span class="line">（3）如果配合--single-transaction，只对非InnoDB表进行锁表备份，InnoDB表进行“热“”备，实际上是实现快照备份。</span><br></pre></td></tr></table></figure><h4 id="single-transaction"><a href="#single-transaction" class="headerlink" title="--single-transaction"></a>--single-transaction</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">innodb 存储引擎开启热备(快照备份)功能       </span><br><span class="line">master-data可以自动加锁</span><br><span class="line">（1）在不加--single-transaction ，启动所有表的温备份，所有表都锁定</span><br><span class="line">（1）加上--single-transaction ,对innodb进行快照备份,对非innodb表可以实现自动锁表功能</span><br><span class="line">例子6: 备份必加参数</span><br><span class="line">mysqldump -uroot -p -A -R -E --triggers --master-data&#x3D;2  --single-transaction --set-gtid-purged&#x3D;OFF &gt;&#x2F;data&#x2F;backup&#x2F;full.sql</span><br></pre></td></tr></table></figure><h4 id="set-gtid-purged-auto"><a href="#set-gtid-purged-auto" class="headerlink" title="--set-gtid-purged=auto"></a>--set-gtid-purged=auto</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">auto , on</span><br><span class="line">off </span><br><span class="line">使用场景:</span><br><span class="line">1. --set-gtid-purged&#x3D;OFF,可以使用在日常备份参数中.</span><br><span class="line">mysqldump -uroot -p -A -R -E --triggers --master-data&#x3D;2  --single-transaction --set-gtid-purged&#x3D;OFF &gt;&#x2F;data&#x2F;backup&#x2F;full.sql</span><br><span class="line">2. auto , on:在构建主从复制环境时需要的参数配置</span><br><span class="line">mysqldump -uroot -p -A -R -E --triggers --master-data&#x3D;2  --single-transaction --set-gtid-purged&#x3D;ON &gt;&#x2F;data&#x2F;backup&#x2F;full.sql</span><br></pre></td></tr></table></figure><h4 id="max-allowed-packet"><a href="#max-allowed-packet" class="headerlink" title="--max-allowed-packet="></a>--max-allowed-packet=</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -uroot -p -A -R -E --triggers --master-data&#x3D;2  --single-transaction --set-gtid-purged&#x3D;OFF --max-allowed-packet&#x3D;256M &gt;&#x2F;data&#x2F;backup&#x2F;full.sql</span><br><span class="line"></span><br><span class="line"> --max-allowed-packet&#x3D;# </span><br><span class="line">The maximum packet length to send to or receive from server.</span><br></pre></td></tr></table></figure><h4 id="6-2-小练习："><a href="#6-2-小练习：" class="headerlink" title="6.2 小练习："></a>6.2 小练习：</h4><p>6.2.1. 实现所有表的单独备份</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">提示：</span><br><span class="line">information_schema.tables</span><br><span class="line">mysqldump -uroot -p123 world city &gt;&#x2F;backup&#x2F;world_city.sql</span><br><span class="line"></span><br><span class="line">select concat(&quot;mysqldump -uroot -p123 &quot;,table_schema,&quot; &quot;,table_name,&quot; --master-data&#x3D;2 --single-transaction --set-gtid-purged&#x3D;0  -R -E --triggers&gt;&#x2F;backup&#x2F;&quot;,table_schema,&quot;_&quot;,table_name,&quot;.sql&quot;) from information_schema.tables where table_schema not in (&#39;sys&#39;,&#39;information_schema&#39;,&#39;performance_schema&#39;);</span><br></pre></td></tr></table></figure><h4 id="6-2-2-模拟故障案例并恢复"><a href="#6-2-2-模拟故障案例并恢复" class="headerlink" title="6.2.2.模拟故障案例并恢复"></a>6.2.2.模拟故障案例并恢复</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">（1）每天全备</span><br><span class="line">（2）binlog日志是完整</span><br><span class="line">（3）模拟白天的数据变化</span><br><span class="line">（4）模拟下午两点误删除数据库</span><br><span class="line"></span><br><span class="line">需求： 利用全备+binlog回复数据库误删除之前。</span><br><span class="line">故障模拟及恢复：</span><br><span class="line">1. 模拟周一23:00的全备</span><br><span class="line">mysqldump -uroot -p -A -R -E --triggers --master-data&#x3D;2  --single-transaction --set-gtid-purged&#x3D;OFF &gt;&#x2F;data&#x2F;backup&#x2F;full.sql</span><br><span class="line">2. 模拟白天的数据变化</span><br><span class="line">Master [(none)]&gt;create database day1 charset utf8;</span><br><span class="line">Master [(none)]&gt;use day1</span><br><span class="line">Master [day1]&gt;create table t1(id int);</span><br><span class="line">Master [day1]&gt;insert into t1 values(1),(2),(3);</span><br><span class="line">Master [day1]&gt;commit;</span><br><span class="line">Master [world]&gt;update city set countrycode&#x3D;&#39;CHN&#39;;</span><br><span class="line">Master [world]&gt;commit;</span><br><span class="line">模拟磁盘损坏：</span><br><span class="line">[root@db01 data]# \rm -rf &#x2F;data&#x2F;mysql&#x2F;data&#x2F;*</span><br><span class="line">3. 恢复故障</span><br><span class="line">[root@db01 data]# pkill mysqld</span><br><span class="line">[root@db01 data]# \rm -rf &#x2F;data&#x2F;mysql&#x2F;data&#x2F;*</span><br><span class="line">4. 恢复思路</span><br><span class="line">1.检查备份可用性</span><br><span class="line">2.从备份中获取二进制日志位置</span><br><span class="line">3.根据日志位置截取需要的二进制日志</span><br><span class="line">4.初始化数据库,并启动</span><br><span class="line">5.恢复全备</span><br><span class="line">6.恢复二进制日志</span><br></pre></td></tr></table></figure><h2 id="6-3-压缩备份并添加时间戳"><a href="#6-3-压缩备份并添加时间戳" class="headerlink" title="6.3. 压缩备份并添加时间戳"></a>6.3. 压缩备份并添加时间戳</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">例子：</span><br><span class="line">mysqldump -uroot -p123 -A  -R  --triggers --master-data&#x3D;2  --single-transaction|gzip &gt; &#x2F;backup&#x2F;full_$(date +%F).sql.gz</span><br><span class="line">mysqldump -uroot -p123 -A  -R  --triggers --master-data&#x3D;2  --single-transaction|gzip &gt; &#x2F;backup&#x2F;full_$(date +%F-%T).sql.gz</span><br><span class="line"></span><br><span class="line">mysqldump备份的恢复方式（在生产中恢复要谨慎，恢复会删除重复的表）</span><br><span class="line">set sql_log_bin&#x3D;0;</span><br><span class="line">source &#x2F;backup&#x2F;full_2018-06-28.sql</span><br><span class="line"></span><br><span class="line">注意：</span><br><span class="line">1、mysqldump在备份和恢复时都需要mysql实例启动为前提。</span><br><span class="line">2、一般数据量级100G以内，大约15-45分钟可以恢复，数据量级很大很大的时候（PB、EB）</span><br><span class="line">3、mysqldump是覆盖形式恢复的方法。</span><br><span class="line"></span><br><span class="line">一般我们认为，在同数据量级，物理备份要比逻辑备份速度快.</span><br><span class="line">逻辑备份的优势:</span><br><span class="line">1、可读性强</span><br><span class="line">2、压缩比很高</span><br></pre></td></tr></table></figure><h1 id="7、企业故障恢复案例"><a href="#7、企业故障恢复案例" class="headerlink" title="7、企业故障恢复案例"></a>7、企业故障恢复案例</h1><h2 id="7-1-背景环境："><a href="#7-1-背景环境：" class="headerlink" title="7.1 背景环境："></a>7.1 背景环境：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">正在运行的网站系统，mysql-5.7.20 数据库，数据量50G，日业务增量1-5M。</span><br></pre></td></tr></table></figure><h2 id="7-2-备份策略："><a href="#7-2-备份策略：" class="headerlink" title="7.2 备份策略："></a>7.2 备份策略：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">每天23:00点，计划任务调用mysqldump执行全备脚本</span><br></pre></td></tr></table></figure><h2 id="7-3-故障时间点："><a href="#7-3-故障时间点：" class="headerlink" title="7.3 故障时间点："></a>7.3 故障时间点：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">年底故障演练:模拟周三上午10点误删除数据库，并进行恢复.</span><br></pre></td></tr></table></figure><h2 id="7-4-思路："><a href="#7-4-思路：" class="headerlink" title="7.4 思路："></a>7.4 思路：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1、停业务，避免数据的二次伤害</span><br><span class="line">2、找一个临时库，恢复周三23：00全备</span><br><span class="line">3、截取周二23：00  --- 周三10点误删除之间的binlog，恢复到临时库</span><br><span class="line">4、测试可用性和完整性</span><br><span class="line">5、 </span><br><span class="line">    5.1 方法一：直接使用临时库顶替原生产库，前端应用割接到新库</span><br><span class="line">    5.2 方法二：将误删除的表导出，导入到原生产库</span><br><span class="line">6、开启业务</span><br><span class="line">处理结果：经过20分钟的处理，最终业务恢复正常</span><br></pre></td></tr></table></figure><h2 id="7-5-故障模拟演练"><a href="#7-5-故障模拟演练" class="headerlink" title="7.5 故障模拟演练"></a>7.5 故障模拟演练</h2><h3 id="7-5-1-准备数据"><a href="#7-5-1-准备数据" class="headerlink" title="7.5.1 准备数据"></a>7.5.1 准备数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">create database backup;</span><br><span class="line">use backup</span><br><span class="line">create table t1 (id int);</span><br><span class="line">insert into t1 values(1),(2),(3);</span><br><span class="line">commit;</span><br><span class="line">rm -rf &#x2F;backup&#x2F;*</span><br></pre></td></tr></table></figure><h3 id="7-5-2-周二-23：00全备"><a href="#7-5-2-周二-23：00全备" class="headerlink" title="7.5.2 周二 23：00全备"></a>7.5.2 周二 23：00全备</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -uroot -p123 -A  -R  --triggers --set-gtid-purged&#x3D;OFF --master-data&#x3D;2  --single-transaction|gzip &gt; &#x2F;backup&#x2F;full_$(date +%F).sql.gz</span><br></pre></td></tr></table></figure><h3 id="7-5-3-模拟周二-23：00到周三-10点之间数据变化"><a href="#7-5-3-模拟周二-23：00到周三-10点之间数据变化" class="headerlink" title="7.5.3 模拟周二 23：00到周三 10点之间数据变化"></a>7.5.3 模拟周二 23：00到周三 10点之间数据变化</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">use backup</span><br><span class="line">insert into t1 values(11),(22),(33);</span><br><span class="line">commit;</span><br><span class="line">create table t2 (id int);</span><br><span class="line">insert into t2 values(11),(22),(33);</span><br></pre></td></tr></table></figure><h3 id="7-5-4-模拟故障-删除表-只是模拟，不代表生产操作"><a href="#7-5-4-模拟故障-删除表-只是模拟，不代表生产操作" class="headerlink" title="7.5.4 模拟故障,删除表(只是模拟，不代表生产操作)"></a>7.5.4 模拟故障,删除表(只是模拟，不代表生产操作)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop database backup;</span><br></pre></td></tr></table></figure><h2 id="7-6-恢复过程"><a href="#7-6-恢复过程" class="headerlink" title="7.6 恢复过程"></a>7.6 恢复过程</h2><h3 id="7-6-1-准备临时数据库（多实例3307）"><a href="#7-6-1-准备临时数据库（多实例3307）" class="headerlink" title="7.6.1 准备临时数据库（多实例3307）"></a>7.6.1 准备临时数据库（多实例3307）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mysqld3307</span><br></pre></td></tr></table></figure><h3 id="7-6-2-准备备份"><a href="#7-6-2-准备备份" class="headerlink" title="7.6.2 准备备份"></a>7.6.2 准备备份</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">（1）准备全备：</span><br><span class="line">cd &#x2F;backup</span><br><span class="line">gunzip full_2018-10-17.sql.gz </span><br><span class="line">（2）截取二进制日志</span><br><span class="line">-- CHANGE MASTER TO MASTER_LOG_FILE&#x3D;&#39;mysql-bin.000036&#39;, MASTER_LOG_POS&#x3D;793;</span><br><span class="line">mysqlbinlog --skip-gtids --include-gtids&#x3D;&#39;3ca79ab5-3e4d-11e9-a709-000c293b577e:6-7&#39; &#x2F;data&#x2F;binlog&#x2F;mysql-bin.000036 &gt;&#x2F;backup&#x2F;bin.sql</span><br></pre></td></tr></table></figure><h3 id="7-6-3-恢复备份到临时库"><a href="#7-6-3-恢复备份到临时库" class="headerlink" title="7.6.3 恢复备份到临时库"></a>7.6.3 恢复备份到临时库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql -S &#x2F;data&#x2F;3307&#x2F;mysql.sock</span><br><span class="line">set sql_log_bin&#x3D;0;</span><br><span class="line">source &#x2F;backup&#x2F;full_2018-10-17.sql</span><br><span class="line">source &#x2F;backup&#x2F;bin.sql</span><br></pre></td></tr></table></figure><h3 id="7-6-4-将故障表导出并恢复到生产"><a href="#7-6-4-将故障表导出并恢复到生产" class="headerlink" title="7.6.4 将故障表导出并恢复到生产"></a>7.6.4 将故障表导出并恢复到生产</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysqldump   -S &#x2F;data&#x2F;3307&#x2F;mysql.sock backup t1 &gt;&#x2F;backup&#x2F;t1.sql</span><br><span class="line">mysql -uroot -p123 </span><br><span class="line">set sql_log_bin&#x3D;0</span><br><span class="line">use backup </span><br><span class="line">source &#x2F;backup&#x2F;t1.sql;</span><br></pre></td></tr></table></figure><h1 id="8-课下作业："><a href="#8-课下作业：" class="headerlink" title="8. 课下作业："></a>8. 课下作业：</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">练习：</span><br><span class="line">1、创建一个数据库 oldboy</span><br><span class="line">2、在oldboy下创建一张表t1</span><br><span class="line">3、插入5行任意数据</span><br><span class="line">4、全备</span><br><span class="line">5、插入两行数据，任意修改3行数据，删除1行数据</span><br><span class="line">6、删除所有数据</span><br><span class="line">7、再t1中又插入5行新数据，修改3行数据</span><br><span class="line">需求，跳过第六步恢复表数据</span><br><span class="line">写备份脚本和策略</span><br></pre></td></tr></table></figure><h1 id="9-备份时优化参数"><a href="#9-备份时优化参数" class="headerlink" title="9. 备份时优化参数:"></a>9. 备份时优化参数:</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(1) max_allowed_packet   最大的数据包大小</span><br><span class="line"></span><br><span class="line">mysqldump -uroot -p123 -A  -R  --triggers --set-gtid-purged&#x3D;OFF --master-data&#x3D;2 max_allowed_packet&#x3D;128M  --single-transaction|gzip &gt; &#x2F;backup&#x2F;full_$(date +%F).sql.gz</span><br><span class="line"></span><br><span class="line">(2) 增加key_buffer_size    (临时表有关)</span><br><span class="line">(3) 分库分表并发备份       (作业)</span><br><span class="line">(4) 架构分离,分别备份      (架构拆分,分布式备份)</span><br></pre></td></tr></table></figure><h1 id="10-MySQL物理备份工具-xtrabackup-XBK、Xbackup"><a href="#10-MySQL物理备份工具-xtrabackup-XBK、Xbackup" class="headerlink" title="10. MySQL物理备份工具-xtrabackup(XBK、Xbackup)"></a>10. MySQL物理备份工具-xtrabackup(XBK、Xbackup)</h1><h2 id="10-1安装"><a href="#10-1安装" class="headerlink" title="10.1安装"></a>10.1安装</h2><h3 id="10-1-1-安装依赖包："><a href="#10-1-1-安装依赖包：" class="headerlink" title="10.1.1 安装依赖包："></a>10.1.1 安装依赖包：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget -O &#x2F;etc&#x2F;yum.repos.d&#x2F;epel.repo http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;repo&#x2F;epel-7.repo</span><br><span class="line">yum -y install perl perl-devel libaio libaio-devel perl-Time-HiRes perl-DBD-MySQL libev</span><br></pre></td></tr></table></figure><h3 id="10-1-2-下载软件并安装"><a href="#10-1-2-下载软件并安装" class="headerlink" title="10.1.2 下载软件并安装"></a>10.1.2 下载软件并安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget http:&#x2F;&#x2F;www.percona.com&#x2F;downloads&#x2F;XtraBackup&#x2F;Percona-XtraBackup-2.4.12&#x2F;binary&#x2F;redhat&#x2F;7&#x2F;x86_64&#x2F;percona-xtrabackup-24-2.4.12-1.el7.x86_64.rpm</span><br><span class="line"></span><br><span class="line">http:&#x2F;&#x2F;www.percona.com&#x2F;downloads&#x2F;XtraBackup&#x2F;Percona-XtraBackup-2.4.4&#x2F;binary&#x2F;redhat&#x2F;6&#x2F;x86_64&#x2F;percona-xtrabackup-24-2.4.4-1.el6.x86_64.rpm</span><br><span class="line"></span><br><span class="line">yum -y install percona-xtrabackup-24-2.4.4-1.el7.x86_64.rpm</span><br></pre></td></tr></table></figure><h2 id="10-2、备份命令介绍"><a href="#10-2、备份命令介绍" class="headerlink" title="10.2、备份命令介绍:"></a>10.2、备份命令介绍:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xtrabackup</span><br><span class="line">innobackupex    ******</span><br></pre></td></tr></table></figure><h2 id="10-3-备份方式——物理备份"><a href="#10-3-备份方式——物理备份" class="headerlink" title="10.3 备份方式——物理备份"></a>10.3 备份方式——物理备份</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">（1）对于非Innodb表（比如 myisam）是，锁表cp数据文件，属于一种温备份。</span><br><span class="line">（2）对于Innodb的表（支持事务的），不锁表，拷贝数据页，最终以数据文件的方式保存下来，把一部分redo和undo一并备走，属于热备方式。</span><br></pre></td></tr></table></figure><h2 id="面试题：-xbk-在innodb表备份恢复的流程"><a href="#面试题：-xbk-在innodb表备份恢复的流程" class="headerlink" title="面试题： xbk 在innodb表备份恢复的流程"></a>面试题： xbk 在innodb表备份恢复的流程</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">0、xbk备份执行的瞬间,立即触发ckpt,已提交的数据脏页,从内存刷写到磁盘,并记录此时的LSN号</span><br><span class="line">1、备份时，拷贝磁盘数据页，并且记录备份过程中产生的redo和undo一起拷贝走,也就是checkpoint LSN之后的日志</span><br><span class="line">2、在恢复之前，模拟Innodb“自动故障恢复”的过程，将redo（前滚）与undo（回滚）进行应用</span><br><span class="line">3、恢复过程是cp 备份到原来数据目录下</span><br></pre></td></tr></table></figure><h2 id="10-4、innobackupex使用"><a href="#10-4、innobackupex使用" class="headerlink" title="10.4、innobackupex使用"></a>10.4、innobackupex使用</h2><h3 id="10-4-1-全备"><a href="#10-4-1-全备" class="headerlink" title="10.4.1 全备"></a>10.4.1 全备</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 backup]# innobackupex --user&#x3D;root --password&#x3D;123  &#x2F;data&#x2F;backup</span><br></pre></td></tr></table></figure><h3 id="自主定制备份路径名"><a href="#自主定制备份路径名" class="headerlink" title="自主定制备份路径名"></a>自主定制备份路径名</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 backup]# innobackupex --user&#x3D;root --password&#x3D;123 --no-timestamp &#x2F;data&#x2F;backup&#x2F;full</span><br></pre></td></tr></table></figure><h3 id="备份集中多出来的文件："><a href="#备份集中多出来的文件：" class="headerlink" title="备份集中多出来的文件："></a>备份集中多出来的文件：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">-rw-r----- 1 root root       24 Jun 29 09:59 xtrabackup_binlog_info</span><br><span class="line">-rw-r----- 1 root root      119 Jun 29 09:59 xtrabackup_checkpoints</span><br><span class="line">-rw-r----- 1 root root      489 Jun 29 09:59 xtrabackup_info</span><br><span class="line">-rw-r----- 1 root root     2560 Jun 29 09:59 xtrabackup_logfile</span><br><span class="line"></span><br><span class="line">xtrabackup_binlog_info ：（备份时刻的binlog位置）</span><br><span class="line">[root@db01 full]# cat xtrabackup_binlog_info </span><br><span class="line">mysql-bin.000003    536749</span><br><span class="line">79de40d3-5ff3-11e9-804a-000c2928f5dd:1-7</span><br><span class="line">记录的是备份时刻，binlog的文件名字和当时的结束的position，可以用来作为截取binlog时的起点。</span><br><span class="line"></span><br><span class="line">xtrabackup_checkpoints ：</span><br><span class="line">backup_type &#x3D; full-backuped</span><br><span class="line">from_lsn &#x3D; 0            上次所到达的LSN号(对于全备就是从0开始,对于增量有别的显示方法)</span><br><span class="line">to_lsn &#x3D; 160683027      备份开始时间(ckpt)点数据页的LSN    </span><br><span class="line">last_lsn &#x3D; 160683036    备份结束后，redo日志最终的LSN</span><br><span class="line">compact &#x3D; 0</span><br><span class="line">recover_binlog_info &#x3D; 0</span><br><span class="line">（1）备份时刻，立即将已经commit过的，内存中的数据页刷新到磁盘(CKPT).开始备份数据，数据文件的LSN会停留在to_lsn位置。</span><br><span class="line">（2）备份时刻有可能会有其他的数据写入，已备走的数据文件就不会再发生变化了。</span><br><span class="line">（3）在备份过程中，备份软件会一直监控着redo的undo，如果一旦有变化会将日志也一并备走，并记录LSN到last_lsn。</span><br><span class="line">从to_lsn  ----》last_lsn 就是，备份过程中产生的数据变化.</span><br></pre></td></tr></table></figure><h3 id="10-4-2-全备的恢复"><a href="#10-4-2-全备的恢复" class="headerlink" title="10.4.2 全备的恢复"></a>10.4.2 全备的恢复</h3><h4 id="准备备份（Prepared）"><a href="#准备备份（Prepared）" class="headerlink" title="准备备份（Prepared）"></a>准备备份（Prepared）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">将redo进行重做，已提交的写到数据文件，未提交的使用undo回滚掉。模拟了CSR的过程</span><br><span class="line">[root@db01 ~]# innobackupex --apply-log  &#x2F;backup&#x2F;full</span><br></pre></td></tr></table></figure><h4 id="恢复备份"><a href="#恢复备份" class="headerlink" title="恢复备份"></a>恢复备份</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">前提：</span><br><span class="line">1、被恢复的目录是空</span><br><span class="line">2、被恢复的数据库的实例是关闭</span><br><span class="line">systemctl stop mysqld</span><br></pre></td></tr></table></figure><p>创建新目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 backup]# mkdir &#x2F;data&#x2F;mysql1</span><br></pre></td></tr></table></figure><h4 id="数据授权"><a href="#数据授权" class="headerlink" title="数据授权"></a>数据授权</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R mysql.mysql &#x2F;data&#x2F;mysql1</span><br></pre></td></tr></table></figure><h4 id="恢复备份-1"><a href="#恢复备份-1" class="headerlink" title="恢复备份"></a>恢复备份</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 full]# cp -a &#x2F;backup&#x2F;full&#x2F;* &#x2F;data&#x2F;mysql1&#x2F;</span><br></pre></td></tr></table></figure><h4 id="启动数据库"><a href="#启动数据库" class="headerlink" title="启动数据库"></a>启动数据库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;my.cnf</span><br><span class="line">datadir&#x3D;&#x2F;data&#x2F;mysql1</span><br><span class="line">[root@db01 mysql1]# chown -R mysql.mysql &#x2F;data&#x2F;mysql1</span><br><span class="line">systemctl start mysqld</span><br></pre></td></tr></table></figure><h2 id="10-4-3-innobackupex-增量备份-incremental"><a href="#10-4-3-innobackupex-增量备份-incremental" class="headerlink" title="10.4.3 innobackupex 增量备份(incremental)"></a>10.4.3 innobackupex 增量备份(incremental)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">（1）增量备份的方式，是基于上一次备份进行增量。</span><br><span class="line">（2）增量备份无法单独恢复。必须基于全备进行恢复。</span><br><span class="line">（3）所有增量必须要按顺序合并到全备中。</span><br></pre></td></tr></table></figure><h4 id="增量备份命令"><a href="#增量备份命令" class="headerlink" title="增量备份命令"></a>增量备份命令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">（1）删掉原来备份</span><br><span class="line">略.</span><br><span class="line">（2）全备（周日）</span><br><span class="line">[root@db01 backup]# innobackupex --user&#x3D;root --password --no-timestamp &#x2F;backup&#x2F;full &gt;&amp;&#x2F;tmp&#x2F;xbk_full.log</span><br><span class="line">（3）模拟周一数据变化</span><br><span class="line">db01 [(none)]&gt;create database cs charset utf8;</span><br><span class="line">db01 [(none)]&gt;use cs</span><br><span class="line">db01 [cs]&gt;create table t1 (id int);</span><br><span class="line">db01 [cs]&gt;insert into t1 values(1),(2),(3);</span><br><span class="line">db01 [cs]&gt;commit;</span><br><span class="line"></span><br><span class="line">（4）第一次增量备份（周一）</span><br><span class="line">innobackupex --user&#x3D;root --password&#x3D;123 --no-timestamp --incremental --incremental-basedir&#x3D;&#x2F;backup&#x2F;full  &#x2F;backup&#x2F;inc1 &amp;&gt;&#x2F;tmp&#x2F;inc1.log</span><br><span class="line">（5）模拟周二数据</span><br><span class="line">db01 [cs]&gt;create table t2 (id int);</span><br><span class="line">db01 [cs]&gt;insert into t2 values(1),(2),(3);</span><br><span class="line">db01 [cs]&gt;commit;</span><br><span class="line">（6）周二增量</span><br><span class="line"> innobackupex --user&#x3D;root --password&#x3D;123 --no-timestamp --incremental --incremental-basedir&#x3D;&#x2F;backup&#x2F;inc1  &#x2F;backup&#x2F;inc2  &amp;&gt;&#x2F;tmp&#x2F;inc2.log</span><br><span class="line">（7）模拟周三数据变化</span><br><span class="line">db01 [cs]&gt;create table t3 (id int);</span><br><span class="line">db01 [cs]&gt;insert into t3 values(1),(2),(3);</span><br><span class="line">db01 [cs]&gt;commit;</span><br><span class="line">db01 [cs]&gt;drop database cs;</span><br></pre></td></tr></table></figure><h4 id="恢复到周三误drop之前的数据状态"><a href="#恢复到周三误drop之前的数据状态" class="headerlink" title="恢复到周三误drop之前的数据状态"></a>恢复到周三误drop之前的数据状态</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">恢复思路：</span><br><span class="line">1.  挂出维护页，停止当天的自动备份脚本</span><br><span class="line">2.  检查备份：周日full+周一inc1+周二inc2，周三的完整二进制日志</span><br><span class="line">3. 进行备份整理（细节），截取关键的二进制日志（从备份——误删除之前）</span><br><span class="line">4. 测试库进行备份恢复及日志恢复</span><br><span class="line">5. 应用进行测试无误，开启业务</span><br><span class="line">6. 此次工作的总结</span><br></pre></td></tr></table></figure><h4 id="恢复过程"><a href="#恢复过程" class="headerlink" title="恢复过程"></a>恢复过程</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">1. 检查备份</span><br><span class="line">1afe8136-601d-11e9-9022-000c2928f5dd:7-9</span><br><span class="line">2. 备份整理（apply-log）+合并备份（full+inc1+inc2）</span><br><span class="line">(1) 全备的整理</span><br><span class="line">[root@db01 one]# innobackupex --apply-log --redo-only &#x2F;data&#x2F;backup&#x2F;full</span><br><span class="line">(2) 合并inc1到full中</span><br><span class="line">[root@db01 one]# innobackupex --apply-log --redo-only --incremental-dir&#x3D;&#x2F;data&#x2F;backup&#x2F;inc1 &#x2F;data&#x2F;backup&#x2F;full</span><br><span class="line">(3) 合并inc2到full中</span><br><span class="line">[root@db01 one]# innobackupex --apply-log  --incremental-dir&#x3D;&#x2F;data&#x2F;backup&#x2F;inc2 &#x2F;data&#x2F;backup&#x2F;full</span><br><span class="line">(4) 最后一次整理全备</span><br><span class="line">[root@db01 backup]#  innobackupex --apply-log  &#x2F;data&#x2F;backup&#x2F;full</span><br><span class="line">3. 截取周二 23:00 到drop 之前的 binlog </span><br><span class="line">[root@db01 inc2]# mysqlbinlog --skip-gtids --include-gtids&#x3D;&#39;1afe8136-601d-11e9-9022-000c2928f5dd:7-9&#39; &#x2F;data&#x2F;binlog&#x2F;mysql-bin.000009 &gt;&#x2F;data&#x2F;backup&#x2F;binlog.sql</span><br><span class="line">4. 进行恢复</span><br><span class="line">[root@db01 backup]# mkdir &#x2F;data&#x2F;mysql&#x2F;data2 -p</span><br><span class="line">[root@db01 full]# cp -a * &#x2F;data&#x2F;mysql&#x2F;data2</span><br><span class="line">[root@db01 backup]# chown -R mysql.  &#x2F;data&#x2F;*</span><br><span class="line">[root@db01 backup]# systemctl stop mysqld</span><br><span class="line">vim &#x2F;etc&#x2F;my.cnf</span><br><span class="line">datadir&#x3D;&#x2F;data&#x2F;mysql&#x2F;data2</span><br><span class="line">systemctl start mysqld</span><br><span class="line">Master [(none)]&gt;set sql_log_bin&#x3D;0;</span><br><span class="line">Master [(none)]&gt;source &#x2F;data&#x2F;backup&#x2F;binlog.sql</span><br></pre></td></tr></table></figure><h3 id="作业1"><a href="#作业1" class="headerlink" title="作业1"></a>作业1</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> Xtrabackup企业级增量恢复实战</span><br><span class="line">背景：</span><br><span class="line">某大型网站，mysql数据库，数据量500G，每日更新量20M-30M</span><br><span class="line">备份策略：</span><br><span class="line">xtrabackup，每周日0:00进行全备，周一到周六00:00进行增量备份。</span><br><span class="line">故障场景：</span><br><span class="line">周三下午2点出现数据库意外删除表操作。</span><br><span class="line">如何恢复？</span><br></pre></td></tr></table></figure><h3 id="作业2"><a href="#作业2" class="headerlink" title="作业2"></a>作业2</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">练习：mysqldump备份恢复例子</span><br><span class="line">1、创建一个数据库 oldboy</span><br><span class="line">2、在oldboy下创建一张表t1</span><br><span class="line">3、插入5行任意数据</span><br><span class="line">4、全备</span><br><span class="line">5、插入两行数据，任意修改3行数据，删除1行数据</span><br><span class="line">6、删除所有数据</span><br><span class="line">7、再t1中又插入5行新数据，修改3行数据</span><br><span class="line">需求，跳过第六步恢复表数据</span><br></pre></td></tr></table></figure><h3 id="作业3"><a href="#作业3" class="headerlink" title="作业3"></a>作业3</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">分别写备份脚本和策略</span><br></pre></td></tr></table></figure><h3 id="作业4：备份集中单独恢复表"><a href="#作业4：备份集中单独恢复表" class="headerlink" title="作业4：备份集中单独恢复表"></a>作业4：备份集中单独恢复表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">思考:在之前的项目案例中,如果误删除的表只有10M,而备份有500G,该如何快速恢复误删除表?</span><br><span class="line">提示：</span><br><span class="line">drop table city;</span><br><span class="line">create table city like city_bak;</span><br><span class="line">alter table city discard tablespace;</span><br><span class="line">cp &#x2F;backup&#x2F;full&#x2F;world&#x2F;city.ibd  &#x2F;application&#x2F;mysql&#x2F;data&#x2F;world&#x2F;</span><br><span class="line">chown -R mysql.mysql  &#x2F;application&#x2F;mysql&#x2F;data&#x2F;world&#x2F;city.ibd </span><br><span class="line">alter table city import  tablespace;</span><br></pre></td></tr></table></figure><h3 id="作业5：-从mysqldump-全备中获取库和表的备份"><a href="#作业5：-从mysqldump-全备中获取库和表的备份" class="headerlink" title="作业5： 从mysqldump 全备中获取库和表的备份"></a>作业5： 从mysqldump 全备中获取库和表的备份</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1、获得表结构</span><br><span class="line"># sed -e&#39;&#x2F;.&#x2F;&#123;H;$!d;&#125;&#39; -e &#39;x;&#x2F;CREATE TABLE &#96;city&#96;&#x2F;!d;q&#39;  full.sql&gt;createtable.sql</span><br><span class="line"></span><br><span class="line">2、获得INSERT INTO 语句，用于数据的恢复</span><br><span class="line"></span><br><span class="line"># grep -i &#39;INSERT INTO &#96;city&#96;&#39;  full.sqll &gt;data.sql &amp;</span><br><span class="line"></span><br><span class="line">3.获取单库的备份</span><br><span class="line"></span><br><span class="line"># sed -n &#39;&#x2F;^-- Current Database: &#96;world&#96;&#x2F;,&#x2F;^-- Current Database: &#96;&#x2F;p&#39; all.sql &gt;world.sql</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL进阶 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MySQL进阶之路初级DBA（六）</title>
      <link href="/posts/56308/"/>
      <url>/posts/56308/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL-lesson06-日志管理"><a href="#MySQL-lesson06-日志管理" class="headerlink" title="MySQL-lesson06-日志管理"></a>MySQL-lesson06-日志管理</h1><p><img src="http://upload-images.jianshu.io/upload_images/16956686-062f0a6b2bc97bb2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/605/format/webp" alt="img"></p><p>image.png</p><h1 id="1-错误日志-log-error"><a href="#1-错误日志-log-error" class="headerlink" title="1.错误日志(log_error)"></a>1.错误日志(log_error)</h1><h2 id="1-1-作用"><a href="#1-1-作用" class="headerlink" title="1.1 作用"></a>1.1 作用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">记录启动\关闭\日常运行过程中,状态信息,警告,错误</span><br></pre></td></tr></table></figure><h2 id="1-2-错误日志配置"><a href="#1-2-错误日志配置" class="headerlink" title="1.2 错误日志配置"></a>1.2 错误日志配置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">默认就是开启的:  &#x2F;数据路径下&#x2F;hostname.err</span><br><span class="line">手工设定:</span><br><span class="line">Master [(none)]&gt;select @@log_error;</span><br><span class="line">vim &#x2F;etc&#x2F;my.cnf</span><br><span class="line">log_error&#x3D;&#x2F;var&#x2F;log&#x2F;mysql.log</span><br><span class="line">log_timestamps&#x3D;system</span><br><span class="line">重启生效</span><br><span class="line">show variables like &#39;log_error&#39;;</span><br></pre></td></tr></table></figure><h2 id="1-3-日志内容查看"><a href="#1-3-日志内容查看" class="headerlink" title="1.3 日志内容查看"></a>1.3 日志内容查看</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">主要关注[ERROR],看上下文</span><br></pre></td></tr></table></figure><h1 id="2-binlog-binary-logs-二进制日志"><a href="#2-binlog-binary-logs-二进制日志" class="headerlink" title="2. binlog(binary logs):二进制日志 *"></a>2. binlog(binary logs):二进制日志 <strong>*</strong></h1><h2 id="2-1-作用"><a href="#2-1-作用" class="headerlink" title="2.1 作用"></a>2.1 作用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(1)备份恢复必须依赖二进制日志</span><br><span class="line">(2)主从环境必须依赖二进制日志</span><br></pre></td></tr></table></figure><h2 id="2-2-binlog配置-5-7必须加server-id"><a href="#2-2-binlog配置-5-7必须加server-id" class="headerlink" title="2.2 binlog配置 (5.7必须加server_id)"></a>2.2 binlog配置 (5.7必须加server_id)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">注意：MySQL默认是没有开启二进制日志的。</span><br><span class="line">基础参数查看:</span><br><span class="line">开关:</span><br><span class="line">[(none)]&gt;select @@log_bin;</span><br><span class="line">日志路径及名字</span><br><span class="line">[(none)]&gt;select @@log_bin_basename;</span><br><span class="line">服务ID号:</span><br><span class="line">[(none)]&gt;select @@server_id;</span><br><span class="line">二进制日志格式:</span><br><span class="line">[(none)]&gt;select @@binlog_format;</span><br><span class="line">双一标准之二:</span><br><span class="line">[(none)]&gt;select @@sync_binlog;</span><br></pre></td></tr></table></figure><h3 id="2-2-1-创建日志目录"><a href="#2-2-1-创建日志目录" class="headerlink" title="2.2.1 创建日志目录"></a>2.2.1 创建日志目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir &#x2F;data&#x2F;binlog</span><br><span class="line">chown -R mysql.mysql &#x2F;data&#x2F;binlog</span><br></pre></td></tr></table></figure><h3 id="2-2-2-修改配置文件"><a href="#2-2-2-修改配置文件" class="headerlink" title="2.2.2 修改配置文件"></a>2.2.2 修改配置文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;my.cnf</span><br><span class="line">server_id&#x3D;6                                    -----&gt;5.6中，单机可以不需要此参数              </span><br><span class="line">log_bin&#x3D;&#x2F;data&#x2F;binlog&#x2F;mysql-bin</span><br><span class="line">binlog_format&#x3D;row</span><br></pre></td></tr></table></figure><h3 id="2-2-3-重启数据库生效"><a href="#2-2-3-重启数据库生效" class="headerlink" title="2.2.3 重启数据库生效"></a>2.2.3 重启数据库生效</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 mysql]# &#x2F;etc&#x2F;init.d&#x2F;mysqld restart</span><br></pre></td></tr></table></figure><h3 id="2-2-4-参数说明"><a href="#2-2-4-参数说明" class="headerlink" title="2.2.4 参数说明"></a>2.2.4 参数说明</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">server_id&#x3D;3306 </span><br><span class="line">主要是在主从复制过程中必须要加的,但是在5.7版本中,要用以下参数(log_bin),开启binlog日志,即使是单机也是必加的</span><br><span class="line">log_bin&#x3D;&#x2F;data&#x2F;binlog&#x2F;mysql-bin</span><br><span class="line">(1)开启二进制日志功能</span><br><span class="line">(2)设置二进制日志目录及名称前缀</span><br><span class="line">binlog_format&#x3D;row</span><br><span class="line">binlog的记录格式??</span><br></pre></td></tr></table></figure><h2 id="2-3-binlog记录了什么"><a href="#2-3-binlog记录了什么" class="headerlink" title="2.3 binlog记录了什么?"></a>2.3 binlog记录了什么?</h2><h3 id="2-3-0-引入"><a href="#2-3-0-引入" class="headerlink" title="2.3.0 引入"></a>2.3.0 引入</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">binlog是SQL层的功能。记录的是变更SQL语句，不记录查询语句。</span><br></pre></td></tr></table></figure><h3 id="2-3-1-记录SQL语句种类"><a href="#2-3-1-记录SQL语句种类" class="headerlink" title="2.3.1 记录SQL语句种类"></a>2.3.1 记录SQL语句种类</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">DDL ：原封不动的记录当前DDL(statement语句方式)。</span><br><span class="line">DCL ：原封不动的记录当前DCL(statement语句方式)。</span><br><span class="line">DML ：只记录已经提交的事务DML</span><br></pre></td></tr></table></figure><h3 id="2-3-2-DML三种记录方式"><a href="#2-3-2-DML三种记录方式" class="headerlink" title="2.3.2 DML三种记录方式"></a>2.3.2 DML三种记录方式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">binlog_format（binlog的记录格式）参数影响</span><br><span class="line">（1）statement（5.6默认）SBR(statement based replication) ：语句模式原封不动的记录当前DML。</span><br><span class="line">（2）ROW(5.7 默认值) RBR(ROW based replication) ：记录数据行的变化(用户看不懂，需要工具分析)</span><br><span class="line">（3）mixed（混合）MBR(mixed based replication)模式  ：以上两种模式的混合</span><br></pre></td></tr></table></figure><h3 id="2-3-3-面试题"><a href="#2-3-3-面试题" class="headerlink" title="2.3.3 面试题"></a>2.3.3 面试题</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">SBR与RBR模式的对比</span><br><span class="line">STATEMENT：可读性较高，日志量少，但是不够严谨</span><br><span class="line">ROW      ：可读性很低，日志量大，足够严谨</span><br><span class="line">update t1 set xxx&#x3D;xxx where id&gt;1000   ? --&gt;一共500w行，row模式怎么记录的日志</span><br><span class="line">为什么row模式严谨？</span><br><span class="line">id  name    intime</span><br><span class="line">insert into t1 values(1,&#39;zs&#39;,now())</span><br><span class="line">我们建议使用：row记录模式</span><br></pre></td></tr></table></figure><h2 id="2-4-event（事件）是什么"><a href="#2-4-event（事件）是什么" class="headerlink" title="2.4 event（事件）是什么?"></a>2.4 event（事件）是什么?</h2><h3 id="2-4-1-事件的简介"><a href="#2-4-1-事件的简介" class="headerlink" title="2.4.1 事件的简介"></a>2.4.1 事件的简介</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">二进制日志的最小记录单元</span><br><span class="line">对于DDL,DCL,一个语句就是一个event</span><br><span class="line">对于DML语句来讲:只记录已提交的事务。</span><br><span class="line">例如以下列子,就被分为了4个event</span><br><span class="line">begin;      120  - 340</span><br><span class="line">DML1        340  - 460</span><br><span class="line">DML2        460  - 550</span><br><span class="line">commit;     550  - 760</span><br></pre></td></tr></table></figure><h3 id="2-4-2-event的组成"><a href="#2-4-2-event的组成" class="headerlink" title="2.4.2 event的组成"></a>2.4.2 event的组成</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">三部分构成:</span><br><span class="line">(1) 事件的开始标识</span><br><span class="line">(2) 事件内容</span><br><span class="line">(3) 事件的结束标识</span><br><span class="line">Position:</span><br><span class="line">开始标识: at 194</span><br><span class="line">结束标识: end_log_pos 254</span><br><span class="line">194? 254?</span><br><span class="line">某个事件在binlog中的相对位置号</span><br><span class="line">位置号的作用是什么？</span><br><span class="line">为了方便我们截取事件</span><br></pre></td></tr></table></figure><h2 id="2-5-日志文件查看"><a href="#2-5-日志文件查看" class="headerlink" title="2.5 日志文件查看"></a>2.5 日志文件查看</h2><h3 id="2-5-1-查看日志的开启情况"><a href="#2-5-1-查看日志的开启情况" class="headerlink" title="2.5.1 查看日志的开启情况"></a>2.5.1 查看日志的开启情况</h3><p>log_bin参数设置的路径,可以找到二进制日志</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Master [(none)]&gt;show variables like &#39;%log_bin%&#39;;</span><br><span class="line">+---------------------------------+------------------------------+</span><br><span class="line">| Variable_name                   | Value                        |</span><br><span class="line">+---------------------------------+------------------------------+</span><br><span class="line">| log_bin                         | ON                           |</span><br><span class="line">| log_bin_basename                | &#x2F;data&#x2F;binlog&#x2F;mysql-bin       |</span><br><span class="line">| log_bin_index                   | &#x2F;data&#x2F;binlog&#x2F;mysql-bin.index |</span><br><span class="line">| log_bin_trust_function_creators | OFF                          |</span><br><span class="line">| log_bin_use_v1_row_events       | OFF                          |</span><br><span class="line">| sql_log_bin                     | ON                           |</span><br><span class="line">+---------------------------------+------------------------------+</span><br><span class="line">6 rows in set (0.01 sec)</span><br></pre></td></tr></table></figure><h3 id="2-5-2-查看一共多少个binlog"><a href="#2-5-2-查看一共多少个binlog" class="headerlink" title="2.5.2 查看一共多少个binlog"></a>2.5.2 查看一共多少个binlog</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">Master [(none)]&gt;show binary logs;</span><br><span class="line">+------------------+-----------+</span><br><span class="line">| Log_name         | File_size |</span><br><span class="line">+------------------+-----------+</span><br><span class="line">| mysql-bin.000001 |       154 |</span><br><span class="line">+------------------+-----------+</span><br><span class="line">1 row in set (0.01 sec)</span><br><span class="line"></span><br><span class="line">Master [(none)]&gt;flush logs;</span><br><span class="line">Query OK, 0 rows affected (0.03 sec)</span><br><span class="line"></span><br><span class="line">Master [(none)]&gt;flush logs;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">Master [(none)]&gt;show binary logs;</span><br><span class="line">+------------------+-----------+</span><br><span class="line">| Log_name         | File_size |</span><br><span class="line">+------------------+-----------+</span><br><span class="line">| mysql-bin.000001 |       201 |</span><br><span class="line">| mysql-bin.000002 |       201 |</span><br><span class="line">| mysql-bin.000003 |       154 |</span><br><span class="line">+------------------+-----------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">Master [(none)]&gt;</span><br></pre></td></tr></table></figure><h3 id="2-5-3-查看mysql正在使用的日志文件"><a href="#2-5-3-查看mysql正在使用的日志文件" class="headerlink" title="2.5.3 查看mysql正在使用的日志文件"></a>2.5.3 查看mysql正在使用的日志文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Master [(none)]&gt;show master status;</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| mysql-bin.000003 |      154 |              |                  |                   |</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">Master [(none)]&gt;</span><br></pre></td></tr></table></figure><p>file：当前MySQL正在使用的文件名<br>Position：最后一个事件的结束位置号</p><h2 id="2-6-日志内容查看"><a href="#2-6-日志内容查看" class="headerlink" title="2.6 日志内容查看"></a>2.6 日志内容查看</h2><h3 id="2-6-1-event查看"><a href="#2-6-1-event查看" class="headerlink" title="2.6.1 event查看"></a>2.6.1 event查看</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">Master [binlog]&gt;show binlog events in &#39;mysql-bin.000003&#39;;</span><br><span class="line">+------------------+-----+----------------+-----------+-------------+----------------------------------------+</span><br><span class="line">| Log_name         | Pos | Event_type     | Server_id | End_log_pos | Info                                   |</span><br><span class="line">+------------------+-----+----------------+-----------+-------------+----------------------------------------+</span><br><span class="line">| mysql-bin.000003 |   4 | Format_desc    |         6 |         123 | Server ver: 5.7.20-log, Binlog ver: 4  |</span><br><span class="line">| mysql-bin.000003 | 123 | Previous_gtids |         6 |         154 |                                        |</span><br><span class="line">| mysql-bin.000003 | 154 | Anonymous_Gtid |         6 |         219 | SET @@SESSION.GTID_NEXT&#x3D; &#39;ANONYMOUS&#39;   |</span><br><span class="line">| mysql-bin.000003 | 219 | Query          |         6 |         319 | create database binlog                 |</span><br><span class="line">| mysql-bin.000003 | 319 | Anonymous_Gtid |         6 |         384 | SET @@SESSION.GTID_NEXT&#x3D; &#39;ANONYMOUS&#39;   |</span><br><span class="line">| mysql-bin.000003 | 384 | Query          |         6 |         486 | use &#96;binlog&#96;; create table t1 (id int) |</span><br><span class="line">+------------------+-----+----------------+-----------+-------------+----------------------------------------+</span><br><span class="line"></span><br><span class="line">Log_name：binlog文件名</span><br><span class="line">Pos：开始的position    *****</span><br><span class="line">Event_type：事件类型</span><br><span class="line">Format_desc：格式描述，每一个日志文件的第一个事件，多用户没有意义，MySQL识别binlog必要信息</span><br><span class="line">Server_id：mysql服务号标识</span><br><span class="line">End_log_pos：事件的结束位置号 *****</span><br><span class="line">Info：事件内容*****</span><br><span class="line">补充:</span><br><span class="line">SHOW BINLOG EVENTS</span><br><span class="line">   [IN &#39;log_name&#39;]</span><br><span class="line">   [FROM pos]</span><br><span class="line">   [LIMIT [offset,] row_count]</span><br><span class="line">[root@db01 binlog]# mysql -e &quot;show binlog events in &#39;mysql-bin.000004&#39;&quot; |grep drop</span><br></pre></td></tr></table></figure><h3 id="2-6-2-binlog文件内容详细查看"><a href="#2-6-2-binlog文件内容详细查看" class="headerlink" title="2.6.2 binlog文件内容详细查看"></a>2.6.2 binlog文件内容详细查看</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysqlbinlog &#x2F;data&#x2F;mysql&#x2F;mysql-bin.000006</span><br><span class="line">mysqlbinlog --base64-output&#x3D;decode-rows -vvv &#x2F;data&#x2F;binlog&#x2F;mysql-bin.000003</span><br><span class="line">mysqlbinlog  -d binlog &#x2F;data&#x2F;binlog&#x2F;mysql-bin.000003</span><br><span class="line">[root@db01 binlog]# mysqlbinlog --start-datetime&#x3D;&#39;2019-05-06 17:00:00&#39; --stop-datetime&#x3D;&#39;2019-05-06 17:01:00&#39;  &#x2F;data&#x2F;binlog&#x2F;mysql-bin.000004 </span><br></pre></td></tr></table></figure><h2 id="2-7-基于Position号进行日志截取"><a href="#2-7-基于Position号进行日志截取" class="headerlink" title="2.7 基于Position号进行日志截取"></a>2.7 基于Position号进行日志截取</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">核心就是找截取的起点和终点</span><br><span class="line">--start-position&#x3D;321</span><br><span class="line">--stop-position&#x3D;513</span><br><span class="line"> mysqlbinlog --start-position&#x3D;219 --stop-position&#x3D;1347 &#x2F;data&#x2F;binlog&#x2F;mysql-bin.000003 &gt;&#x2F;tmp&#x2F;bin.sql</span><br><span class="line"></span><br><span class="line">案例: 使用binlog日志进行数据恢复</span><br><span class="line">模拟:</span><br><span class="line">1. </span><br><span class="line">[(none)]&gt;create database binlog charset utf8;</span><br><span class="line">2. </span><br><span class="line">[(none)]&gt;use binlog;</span><br><span class="line">[binlog]&gt;create table t1(id int);</span><br><span class="line">3. </span><br><span class="line">[binlog]&gt;insert into t1 values(1);</span><br><span class="line">[binlog]&gt;commit;</span><br><span class="line">[binlog]&gt;insert into t1 values(2);</span><br><span class="line">[binlog]&gt;commit;</span><br><span class="line">[binlog]&gt;insert into t1 values(3);</span><br><span class="line">[binlog]&gt;commit;</span><br><span class="line">4. </span><br><span class="line">[binlog]&gt;drop database binlog;</span><br><span class="line">恢复:</span><br><span class="line">[(none)]&gt;show master status ;</span><br><span class="line">[(none)]&gt;show binlog events in &#39;mysql-bin.000004&#39;;</span><br><span class="line">[root@db01 binlog]# mysqlbinlog --start-position&#x3D;1227 --stop-position&#x3D;2342 &#x2F;data&#x2F;binlog&#x2F;mysql-bin.000004 &gt;&#x2F;tmp&#x2F;bin.sql</span><br><span class="line">[(none)]&gt;set sql_Log_bin&#x3D;0;</span><br><span class="line">[(none)]&gt;source &#x2F;tmp&#x2F;bin.sql</span><br><span class="line"></span><br><span class="line">面试案例:</span><br><span class="line">1. 备份策略每天全备,有全量的二进制日志</span><br><span class="line">2.业务中一共10个库,其中一个被误drop了</span><br><span class="line">3. 需要在其他9个库正常工作过程中进行数据恢复</span><br></pre></td></tr></table></figure><h2 id="2-8-binlog日志的GTID新特性"><a href="#2-8-binlog日志的GTID新特性" class="headerlink" title="2.8 binlog日志的GTID新特性"></a>2.8 binlog日志的GTID新特性</h2><h3 id="2-8-1-GTID-介绍"><a href="#2-8-1-GTID-介绍" class="headerlink" title="2.8.1 GTID 介绍"></a>2.8.1 GTID 介绍</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">5.6 版本新加的特性,5.7中做了加强</span><br><span class="line">5.6 中不开启,没有这个功能.</span><br><span class="line">5.7 中的GTID,即使不开也会有自动生成</span><br><span class="line">SET @@SESSION.GTID_NEXT&#x3D; &#39;ANONYMOUS&#39;</span><br></pre></td></tr></table></figure><h3 id="2-8-2-GTID-Global-Transaction-ID"><a href="#2-8-2-GTID-Global-Transaction-ID" class="headerlink" title="2.8.2. GTID(Global Transaction ID)"></a>2.8.2. GTID(Global Transaction ID)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">是对于一个已提交事务的编号，并且是一个全局唯一的编号。</span><br><span class="line">它的官方定义如下：</span><br><span class="line"></span><br><span class="line">GTID &#x3D; source_id ：transaction_id</span><br><span class="line">7E11FA47-31CA-19E1-9E56-C43AA21293967:29</span><br></pre></td></tr></table></figure><p>重要参数介绍：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;my.cnf</span><br><span class="line">gtid-mode&#x3D;on</span><br><span class="line">enforce-gtid-consistency&#x3D;true</span><br><span class="line">systemctl restart mysqld</span><br><span class="line"></span><br><span class="line">Master [(none)]&gt;create database gtid charset utf8;</span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">Master [(none)]&gt;show master status ;</span><br><span class="line">+------------------+----------+--------------+------------------+----------------------------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set                      |</span><br><span class="line">+------------------+----------+--------------+------------------+----------------------------------------+</span><br><span class="line">| mysql-bin.000004 |      326 |              |                  | dff98809-55c3-11e9-a58b-000c2928f5dd:1 |</span><br><span class="line">+------------------+----------+--------------+------------------+----------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">Master [(none)]&gt;use gtid</span><br><span class="line">Database changed</span><br><span class="line">Master [gtid]&gt;create table t1 (id int);</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">Master [gtid]&gt;show master status ;</span><br><span class="line">+------------------+----------+--------------+------------------+------------------------------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set                        |</span><br><span class="line">+------------------+----------+--------------+------------------+------------------------------------------+</span><br><span class="line">| mysql-bin.000004 |      489 |              |                  | dff98809-55c3-11e9-a58b-000c2928f5dd:1-2 |</span><br><span class="line">+------------------+----------+--------------+------------------+------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">Master [gtid]&gt;create table t2 (id int);</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">Master [gtid]&gt;create table t3 (id int);</span><br><span class="line">Query OK, 0 rows affected (0.02 sec)</span><br><span class="line"></span><br><span class="line">Master [gtid]&gt;show master status ;</span><br><span class="line">+------------------+----------+--------------+------------------+------------------------------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set                        |</span><br><span class="line">+------------------+----------+--------------+------------------+------------------------------------------+</span><br><span class="line">| mysql-bin.000004 |      815 |              |                  | dff98809-55c3-11e9-a58b-000c2928f5dd:1-4 |</span><br><span class="line">+------------------+----------+--------------+------------------+------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">Master [gtid]&gt;begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">Master [gtid]&gt;insert into t1 values(1);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">Master [gtid]&gt;commit;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">Master [gtid]&gt;show master status ;</span><br><span class="line">+------------------+----------+--------------+------------------+------------------------------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set                        |</span><br><span class="line">+------------------+----------+--------------+------------------+------------------------------------------+</span><br><span class="line">| mysql-bin.000004 |     1068 |              |                  | dff98809-55c3-11e9-a58b-000c2928f5dd:1-5 |</span><br><span class="line">+------------------+----------+--------------+------------------+------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">Master [gtid]&gt;begin;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">Master [gtid]&gt;insert into t2 values(1);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">Master [gtid]&gt;commit;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">Master [gtid]&gt;show master status ;</span><br><span class="line">+------------------+----------+--------------+------------------+------------------------------------------+</span><br><span class="line">| File             | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set                        |</span><br><span class="line">+------------------+----------+--------------+------------------+------------------------------------------+</span><br><span class="line">| mysql-bin.000004 |     1321 |              |                  | dff98809-55c3-11e9-a58b-000c2928f5dd:1-6 |</span><br><span class="line">+------------------+----------+--------------+------------------+------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><h3 id="2-8-3-基于GTID进行查看binlog"><a href="#2-8-3-基于GTID进行查看binlog" class="headerlink" title="2.8.3. 基于GTID进行查看binlog"></a>2.8.3. 基于GTID进行查看binlog</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">具备GTID后,截取查看某些事务日志:</span><br><span class="line">--include-gtids</span><br><span class="line">--exclude-gtids</span><br><span class="line">mysqlbinlog --include-gtids&#x3D;&#39;dff98809-55c3-11e9-a58b-000c2928f5dd:1-6&#39; --exclude-gtids&#x3D;&#39;dff98809-55c3-11e9-a58b-000c2928f5dd:4&#39;  &#x2F;data&#x2F;binlog&#x2F;mysql-bin.000004</span><br></pre></td></tr></table></figure><h3 id="2-8-4-GTID的幂等性"><a href="#2-8-4-GTID的幂等性" class="headerlink" title="2.8.4 GTID的幂等性"></a>2.8.4 GTID的幂等性</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">开启GTID后,MySQL恢复Binlog时,重复GTID的事务不会再执行了</span><br><span class="line">就想恢复?怎么办?</span><br><span class="line">--skip-gtids</span><br><span class="line">mysqlbinlog --include-gtids&#x3D;&#39;3ca79ab5-3e4d-11e9-a709-000c293b577e:4&#39; &#x2F;data&#x2F;binlog&#x2F;mysql-bin.000004 &#x2F;data&#x2F;binlog&#x2F;mysql-bin.000004</span><br><span class="line">set sql_log_bin&#x3D;0;</span><br><span class="line">source &#x2F;tmp&#x2F;binlog.sql</span><br><span class="line">set sql_log_bin&#x3D;1;</span><br></pre></td></tr></table></figure><h2 id="2-9-使用二进制日志恢复数据案例"><a href="#2-9-使用二进制日志恢复数据案例" class="headerlink" title="2.9 使用二进制日志恢复数据案例"></a>2.9 使用二进制日志恢复数据案例</h2><h3 id="2-9-1-故障环境介绍"><a href="#2-9-1-故障环境介绍" class="headerlink" title="2.9.1 故障环境介绍"></a>2.9.1 故障环境介绍</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">创建了一个库  db, 导入了表t1 ,t1表中录入了很多数据</span><br><span class="line">一个开发人员,drop database db;</span><br><span class="line">没有备份,日志都在.怎么恢复?</span><br><span class="line">思路:找到建库语句到删库之前所有的日志,进行恢复.(开启了GTID模式)</span><br><span class="line">故障案例模拟:</span><br><span class="line">(0) drop database if exists db ;</span><br><span class="line">(1) create database db charset utf8;     </span><br><span class="line">(2) use db;</span><br><span class="line">(3) create table t1 (id int);</span><br><span class="line">(4) insert into t1 values(1),(2),(3);</span><br><span class="line">(5) insert into t1 values(4),(5),(6);</span><br><span class="line">(6) commit</span><br><span class="line">(7) update t1 set id&#x3D;30 where id&#x3D;3;</span><br><span class="line">(8) commit;</span><br><span class="line">(9) delete from t1 where id&#x3D;4;</span><br><span class="line">(10)commit;</span><br><span class="line">(11)insert into t1 values(7),(8),(9);</span><br><span class="line">(12)commit;</span><br><span class="line">(13)drop database db;</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">drop database if exists db ;</span><br><span class="line">create database db charset utf8; </span><br><span class="line">use db;</span><br><span class="line">create table t1 (id int);</span><br><span class="line">insert into t1 values(1),(2),(3);</span><br><span class="line">insert into t1 values(4),(5),(6);</span><br><span class="line">commit;</span><br><span class="line">update t1 set id&#x3D;30 where id&#x3D;3;</span><br><span class="line">commit;</span><br><span class="line">delete from t1 where id&#x3D;4;</span><br><span class="line">commit;</span><br><span class="line">insert into t1 values(7),(8),(9);</span><br><span class="line">commit;</span><br><span class="line">drop database db;</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">运行以上语句，模拟故障场景</span><br><span class="line">需求：将数据库恢复到以下状态（提示第9步和第13步是误操作，其他都是正常操作）</span><br></pre></td></tr></table></figure><h3 id="2-9-2-恢复过程-无GTID时的恢复"><a href="#2-9-2-恢复过程-无GTID时的恢复" class="headerlink" title="2.9.2 恢复过程(无GTID时的恢复)"></a>2.9.2 恢复过程(无GTID时的恢复)</h3><ol><li>查看当前使用的 binlog文件</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">oldguo [db]&gt;show master status ;</span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line"></span><br><span class="line">| File            | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br><span class="line"></span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line"></span><br><span class="line">| mysql-bin.000006 |    1873 |              |                  |                  |</span><br><span class="line"></span><br><span class="line">+------------------+----------+--------------+------------------+-------------------+</span><br><span class="line"></span><br><span class="line">2.查看事件：</span><br><span class="line"></span><br><span class="line">第一段：</span><br><span class="line">| mysql-bin.000006 |  813 | Query      |        1 |        907 | use &#96;db&#96;; create table t1 (id int)                  |</span><br><span class="line"></span><br><span class="line">| mysql-bin.000006 |  907 | Query      |        1 |        977 | BEGIN                                              |</span><br><span class="line"></span><br><span class="line">| mysql-bin.000006 |  977 | Table_map  |        1 |        1020 | table_id: 77 (db.t1)                                |</span><br><span class="line"></span><br><span class="line">| mysql-bin.000006 | 1020 | Write_rows  |        1 |        1070 | table_id: 77 flags: STMT_END_F                      |</span><br><span class="line"></span><br><span class="line">| mysql-bin.000006 | 1070 | Table_map  |        1 |        1113 | table_id: 77 (db.t1)                                |</span><br><span class="line"></span><br><span class="line">| mysql-bin.000006 | 1113 | Write_rows  |        1 |        1163 | table_id: 77 flags: STMT_END_F                      |</span><br><span class="line"></span><br><span class="line">| mysql-bin.000006 | 1163 | Xid        |        1 |        1194 | COMMIT &#x2F;* xid&#x3D;74 *&#x2F;                                |</span><br><span class="line"></span><br><span class="line">| mysql-bin.000006 | 1194 | Query      |        1 |        1264 | BEGIN                                              |</span><br><span class="line"></span><br><span class="line">| mysql-bin.000006 | 1264 | Table_map  |        1 |        1307 | table_id: 77 (db.t1)                                |</span><br><span class="line"></span><br><span class="line">| mysql-bin.000006 | 1307 | Update_rows |        1 |        1353 | table_id: 77 flags: STMT_END_F                      |</span><br><span class="line"></span><br><span class="line">| mysql-bin.000006 | 1353 | Xid        |        1 |        1384 | COMMIT &#x2F;* xid&#x3D;77 *&#x2F;   </span><br><span class="line"></span><br><span class="line">mysqlbinlog --start-position&#x3D;813 --stop-position&#x3D;1384 &#x2F;data&#x2F;mysql&#x2F;mysql-bin.000006 &gt;&#x2F;tmp&#x2F;bin1.sql </span><br></pre></td></tr></table></figure><p>第二段：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">| mysql-bin.000006 | 1568 | Query      |        1 |        1638 | BEGIN                                              |</span><br><span class="line"></span><br><span class="line">| mysql-bin.000006 | 1638 | Table_map  |        1 |        1681 | table_id: 77 (db.t1)                                |</span><br><span class="line"></span><br><span class="line">| mysql-bin.000006 | 1681 | Write_rows  |        1 |        1731 | table_id: 77 flags: STMT_END_F                      |</span><br><span class="line"></span><br><span class="line">| mysql-bin.000006 | 1731 | Xid        |        1 |        1762 | COMMIT &#x2F;* xid&#x3D;81 *&#x2F; </span><br><span class="line"></span><br><span class="line">mysqlbinlog --start-position&#x3D;1568 --stop-position&#x3D;1762 &#x2F;data&#x2F;mysql&#x2F;mysql-bin.000006 &gt;&#x2F;tmp&#x2F;bin2.sql</span><br></pre></td></tr></table></figure><p>3.恢复</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">set sql_log_bin&#x3D;0;</span><br><span class="line">source &#x2F;tmp&#x2F;bin1.sql</span><br><span class="line">source &#x2F;tmp&#x2F;bin2.sql</span><br><span class="line">set sql_log_bin&#x3D;1;</span><br><span class="line">oldguo [db]&gt;select * from t1;</span><br><span class="line"></span><br><span class="line">+------+</span><br><span class="line"></span><br><span class="line">| id  |</span><br><span class="line"></span><br><span class="line">+------+</span><br><span class="line"></span><br><span class="line">|    1 |</span><br><span class="line"></span><br><span class="line">|    2 |</span><br><span class="line"></span><br><span class="line">|  30 |</span><br><span class="line"></span><br><span class="line">|    4 |</span><br><span class="line"></span><br><span class="line">|    5 |</span><br><span class="line"></span><br><span class="line">|    6 |</span><br><span class="line"></span><br><span class="line">|    7 |</span><br><span class="line"></span><br><span class="line">|    8 |</span><br><span class="line"></span><br><span class="line">|    9 |</span><br></pre></td></tr></table></figure><h3 id="2-9-3-有GTID的恢复"><a href="#2-9-3-有GTID的恢复" class="headerlink" title="2.9.3 有GTID的恢复:"></a>2.9.3 有GTID的恢复:</h3><p>(1)截取</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqlbinlog --skip-gtids --include-gtids&#x3D;&#39;3ca79ab5-3e4d-11e9-a709-000c293b577e:7-12&#39; mysql-bin.000004&gt; &#x2F;tmp&#x2F;bin.sql</span><br></pre></td></tr></table></figure><p>(2)恢复</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set sql_log_bin&#x3D;0;</span><br><span class="line">source &#x2F;tmp&#x2F;bin.sql</span><br></pre></td></tr></table></figure><h2 id="2-10二进制日志其他操作"><a href="#2-10二进制日志其他操作" class="headerlink" title="2.10二进制日志其他操作"></a>2.10二进制日志其他操作</h2><h3 id="2-10-1-自动清理日志"><a href="#2-10-1-自动清理日志" class="headerlink" title="2.10.1 自动清理日志"></a>2.10.1 自动清理日志</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">show variables like &#39;%expire%&#39;;</span><br><span class="line">expire_logs_days  0   </span><br><span class="line">自动清理时间,是要按照全备周期+1</span><br><span class="line">set global expire_logs_days&#x3D;8;</span><br><span class="line">永久生效:</span><br><span class="line">my.cnf</span><br><span class="line">expire_logs_days&#x3D;15;</span><br><span class="line">企业建议,至少保留两个全备周期+1的binlog</span><br></pre></td></tr></table></figure><h3 id="2-10-2-手工清理"><a href="#2-10-2-手工清理" class="headerlink" title="2.10.2 手工清理"></a>2.10.2 手工清理</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PURGE BINARY LOGS BEFORE now() - INTERVAL 3 day;</span><br><span class="line">PURGE BINARY LOGS TO &#39;mysql-bin.000010&#39;;</span><br><span class="line">注意:不要手工 rm binlog文件</span><br><span class="line">1. my.cnf binlog关闭掉,启动数据库</span><br><span class="line">2.把数据库关闭,开启binlog,启动数据库</span><br><span class="line">删除所有binlog,并从000001开始重新记录日志</span><br></pre></td></tr></table></figure><p><strong>*reset master; 主从关系中，主库执行此操作，主从环境必崩</strong></p><h3 id="2-10-3-日志是怎么滚动"><a href="#2-10-3-日志是怎么滚动" class="headerlink" title="2.10.3 日志是怎么滚动"></a>2.10.3 日志是怎么滚动</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">flush logs; </span><br><span class="line">重启mysql也会自动滚动一个新的</span><br><span class="line">日志文件达到1G大小(max_binlog_size)</span><br><span class="line">| max_binlog_size                          | 1073741824     </span><br><span class="line">备份时,加入参数也可以自动滚动</span><br></pre></td></tr></table></figure><h1 id="3-slow-log-慢日志"><a href="#3-slow-log-慢日志" class="headerlink" title="3.slow_log 慢日志"></a>3.slow_log 慢日志</h1><h2 id="3-1-作用"><a href="#3-1-作用" class="headerlink" title="3.1 作用:"></a>3.1 作用:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">记录慢SQL语句的日志,定位低效SQL语句的工具日志</span><br></pre></td></tr></table></figure><h2 id="3-2-开启慢日志-默认没开启"><a href="#3-2-开启慢日志-默认没开启" class="headerlink" title="3.2 开启慢日志(默认没开启)"></a>3.2 开启慢日志(默认没开启)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">开关:</span><br><span class="line">slow_query_log&#x3D;1 </span><br><span class="line">文件位置及名字 </span><br><span class="line">slow_query_log_file&#x3D;&#x2F;data&#x2F;mysql&#x2F;slow.log</span><br><span class="line">设定慢查询时间:</span><br><span class="line">long_query_time&#x3D;0.1</span><br><span class="line">没走索引的语句也记录:</span><br><span class="line">log_queries_not_using_indexes</span><br><span class="line">vim &#x2F;etc&#x2F;my.cnf</span><br><span class="line">slow_query_log&#x3D;1 </span><br><span class="line">slow_query_log_file&#x3D;&#x2F;data&#x2F;mysql&#x2F;slow.log</span><br><span class="line">long_query_time&#x3D;0.1</span><br><span class="line">log_queries_not_using_indexes</span><br><span class="line">systemctl restart mysqld</span><br></pre></td></tr></table></figure><h2 id="3-3-mysqldumpslow-分析慢日志"><a href="#3-3-mysqldumpslow-分析慢日志" class="headerlink" title="3.3 mysqldumpslow 分析慢日志"></a>3.3 mysqldumpslow 分析慢日志</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysqldumpslow -s c -t 10 &#x2F;data&#x2F;mysql&#x2F;slow.log</span><br><span class="line"></span><br><span class="line"># 第三方工具(自己扩展)</span><br><span class="line">http:&#x2F;&#x2F;www.percona.com&#x2F;downloads&#x2F;percona-toolkit&#x2F;LATEST&#x2F;</span><br><span class="line">yum install perl-DBI perl-DBD-MySQL perl-Time-HiRes perl-IO-Socket-SSL perl-Digest-MD5</span><br><span class="line">toolkit工具包中的命令:</span><br><span class="line">.&#x2F;pt-query-diagest  &#x2F;data&#x2F;mysql&#x2F;slow.log</span><br><span class="line">Anemometer基于pt-query-digest将MySQL慢查询可视化</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL进阶 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MySQL进阶之路初级DBA（五）</title>
      <link href="/posts/37869/"/>
      <url>/posts/37869/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL-lesson05-存储引擎"><a href="#MySQL-lesson05-存储引擎" class="headerlink" title="MySQL-lesson05-存储引擎"></a>MySQL-lesson05-存储引擎</h1><h1 id="1、简介"><a href="#1、简介" class="headerlink" title="1、简介"></a>1、简介</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">相当于Linux文件系统，只不过比文件系统强大</span><br></pre></td></tr></table></figure><h1 id="2、功能了解"><a href="#2、功能了解" class="headerlink" title="2、功能了解"></a>2、功能了解</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">数据读写</span><br><span class="line">数据安全和一致性</span><br><span class="line">提高性能</span><br><span class="line">热备份</span><br><span class="line">自动故障恢复</span><br><span class="line">高可用方面支持</span><br><span class="line">等.</span><br></pre></td></tr></table></figure><h1 id="3、存储引擎种类（笔试）"><a href="#3、存储引擎种类（笔试）" class="headerlink" title="3、存储引擎种类（笔试）"></a>3、存储引擎种类（笔试）</h1><h2 id="3-1-介绍-Oracle-MySQL"><a href="#3-1-介绍-Oracle-MySQL" class="headerlink" title="3.1 介绍(Oracle MySQL)"></a>3.1 介绍(Oracle MySQL)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">InnoDB</span><br><span class="line">MyISAM</span><br><span class="line">MEMORY</span><br><span class="line">ARCHIVE</span><br><span class="line">FEDERATED</span><br><span class="line">EXAMPLE</span><br><span class="line">BLACKHOLE</span><br><span class="line">MERGE</span><br><span class="line">NDBCLUSTER</span><br><span class="line">CSV</span><br></pre></td></tr></table></figure><h2 id="3-2-引擎种类查看"><a href="#3-2-引擎种类查看" class="headerlink" title="3.2 引擎种类查看"></a>3.2 引擎种类查看</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">show engines;</span><br><span class="line">存储引擎是作用在表上的，也就意味着，不同的表可以有不同的存储引擎类型。</span><br><span class="line">PerconaDB:默认是XtraDB</span><br><span class="line">MariaDB:默认是InnoDB</span><br><span class="line">其他的存储引擎支持:</span><br><span class="line">TokuDB    </span><br><span class="line">RocksDB</span><br><span class="line">MyRocks</span><br><span class="line">以上三种存储引擎的共同点:压缩比较高,数据插入性能极高</span><br><span class="line">现在很多的NewSQL,使用比较多的功能特性.</span><br></pre></td></tr></table></figure><h2 id="3-3-简历案例—zabbix监控系统架构整改"><a href="#3-3-简历案例—zabbix监控系统架构整改" class="headerlink" title="3.3 简历案例—zabbix监控系统架构整改"></a>3.3 简历案例—zabbix监控系统架构整改</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">环境: zabbix 3.2    mariaDB 5.5  centos 7.3</span><br><span class="line">现象 : zabbix卡的要死 ,  每隔3-4个月,都要重新搭建一遍zabbix,存储空间经常爆满.</span><br><span class="line">问题 :</span><br><span class="line">1. zabbix 版本 </span><br><span class="line">2. 数据库版本</span><br><span class="line">3. zabbix数据库500G,存在一个文件里</span><br><span class="line">优化建议:</span><br><span class="line">1.数据库版本升级到5.7版本,zabbix升级更高版本</span><br><span class="line">2.存储引擎改为tokudb</span><br><span class="line">3.监控数据按月份进行切割(二次开发:zabbix 数据保留机制功能重写,数据库分表)</span><br><span class="line">4.关闭binlog和双1</span><br><span class="line">5.参数调整....</span><br><span class="line">优化结果:</span><br><span class="line">监控状态良好</span><br><span class="line"></span><br><span class="line">为什么?</span><br><span class="line">1. 原生态支持TokuDB,另外经过测试环境,5.7要比5.5 版本性能 高  2-3倍</span><br><span class="line">2. TokuDB:insert数据比Innodb快的多，数据压缩比要Innodb高</span><br><span class="line">3.监控数据按月份进行切割,为了能够truncate每个分区表,立即释放空间</span><br><span class="line">4.关闭binlog -----&gt;减少无关日志的记录.</span><br><span class="line">5.参数调整...-----&gt;安全性参数关闭,提高性能.</span><br></pre></td></tr></table></figure><h2 id="3-4-InnoDB个MyISAM存储引擎的替换"><a href="#3-4-InnoDB个MyISAM存储引擎的替换" class="headerlink" title="3.4 InnoDB个MyISAM存储引擎的替换"></a>3.4 InnoDB个MyISAM存储引擎的替换</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">环境: centos 5.8 ,MySQL 5.0版本,MyISAM存储引擎,网站业务(LNMP),数据量50G左右</span><br><span class="line">现象问题: 业务压力大的时候,非常卡;经历过宕机,会有部分数据丢失.</span><br><span class="line">问题分析:</span><br><span class="line">1.MyISAM存储引擎表级锁,在高并发时,会有很高锁等待</span><br><span class="line">2.MyISAM存储引擎不支持事务,在断电时,会有可能丢失数据</span><br><span class="line">职责</span><br><span class="line">1.监控锁的情况:有很多的表锁等待</span><br><span class="line">2.存储引擎查看:所有表默认是MyISAM</span><br><span class="line">解决方案:</span><br><span class="line">1.升级MySQL 5.6.10版本</span><br><span class="line">2. 迁移所有表到新环境</span><br><span class="line">3. 开启双1安全参数</span><br></pre></td></tr></table></figure><h1 id="4、InnoDB存储引擎介绍"><a href="#4、InnoDB存储引擎介绍" class="headerlink" title="4、InnoDB存储引擎介绍"></a>4、InnoDB存储引擎介绍</h1><p><img src="http://upload-images.jianshu.io/upload_images/16956686-a2c9c97b5ccd84ff.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/919/format/webp" alt="img"></p><p>image.png</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在MySQL5.5版本之后，默认的存储引擎，提供高可靠性和高性能。</span><br></pre></td></tr></table></figure><h2 id="4-1-优点"><a href="#4-1-优点" class="headerlink" title="4.1 优点"></a>4.1 优点</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1、事务（Transaction）</span><br><span class="line">2、MVCC（Multi-Version Concurrency Control多版本并发控制）</span><br><span class="line">3、行级锁(Row-level Lock)</span><br><span class="line">4、ACSR（Auto Crash Safey Recovery）自动的故障安全恢复</span><br><span class="line">5、支持热备份(Hot Backup)</span><br><span class="line">6、Replication: Group Commit , GTID (Global Transaction ID) ,多线程(Multi-Threads-SQL ) </span><br></pre></td></tr></table></figure><h2 id="4-2-笔试题"><a href="#4-2-笔试题" class="headerlink" title="4.2 笔试题"></a>4.2 笔试题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">请你列举MySQL InnoDB存储优点？</span><br><span class="line">请你列举 InooDB和MyIsam的区别？</span><br></pre></td></tr></table></figure><h1 id="5-存储引擎查看"><a href="#5-存储引擎查看" class="headerlink" title="5. 存储引擎查看"></a>5. 存储引擎查看</h1><h2 id="5-1-使用-SELECT-确认会话存储引擎"><a href="#5-1-使用-SELECT-确认会话存储引擎" class="headerlink" title="5.1 使用 SELECT 确认会话存储引擎"></a>5.1 使用 SELECT 确认会话存储引擎</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">SELECT @@default_storage_engine;</span><br><span class="line">## 5.2 存储引擎(不代表生产操作)</span><br><span class="line">会话级别:</span><br><span class="line">set default_storage_engine&#x3D;myisam;</span><br><span class="line">全局级别(仅影响新会话):</span><br><span class="line">set global default_storage_engine&#x3D;myisam;</span><br><span class="line">重启之后,所有参数均失效.</span><br><span class="line">如果要永久生效:</span><br><span class="line">写入配置文件</span><br><span class="line">vim &#x2F;etc&#x2F;my.cnf</span><br></pre></td></tr></table></figure><p>[mysqld]</p><p>default_storage_engine=myisam 存储引擎是表级别的,每个表创建时可以指定不同的存储引擎,但是我们建议统一为innodb.</p><h2 id="5-3-SHOW-确认每个表的存储引擎："><a href="#5-3-SHOW-确认每个表的存储引擎：" class="headerlink" title="5.3 SHOW 确认每个表的存储引擎："></a>5.3 SHOW 确认每个表的存储引擎：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SHOW CREATE TABLE City\G;</span><br><span class="line">SHOW TABLE STATUS LIKE &#39;CountryLanguage&#39;\G</span><br></pre></td></tr></table></figure><h2 id="5-4-INFORMATION-SCHEMA-确认每个表的存储引擎"><a href="#5-4-INFORMATION-SCHEMA-确认每个表的存储引擎" class="headerlink" title="5.4 INFORMATION_SCHEMA 确认每个表的存储引擎"></a>5.4 INFORMATION_SCHEMA 确认每个表的存储引擎</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[world]&gt;select table_schema,table_name ,engine from information_schema.tables where table_schema not in (&#39;sys&#39;,&#39;mysql&#39;,&#39;information_schema&#39;,&#39;performance_schema&#39;);</span><br><span class="line">Master [world]&gt;show table status;</span><br><span class="line">Master [world]&gt;show create table city;</span><br></pre></td></tr></table></figure><h2 id="5-5-修改一个表的存储引擎"><a href="#5-5-修改一个表的存储引擎" class="headerlink" title="5.5 修改一个表的存储引擎"></a>5.5 修改一个表的存储引擎</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db01 [oldboy]&gt;alter table t1 engine innodb;</span><br><span class="line">注意：此命令我们经常使用他，进行innodb表的碎片整理</span><br></pre></td></tr></table></figure><h2 id="5-6-平常处理过的MySQL问题–碎片处理"><a href="#5-6-平常处理过的MySQL问题–碎片处理" class="headerlink" title="5.6 平常处理过的MySQL问题–碎片处理"></a>5.6 平常处理过的MySQL问题–碎片处理</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">环境:centos7.4,MySQL 5.7.20,InnoDB存储引擎</span><br><span class="line">业务特点:数据量级较大,经常需要按月删除历史数据.</span><br><span class="line">问题:磁盘空间占用很大,不释放</span><br><span class="line">处理方法:</span><br><span class="line">以前:将数据逻辑导出,手工drop表,然后导入进去</span><br><span class="line">现在:</span><br><span class="line">对表进行按月进行分表(partition,中间件)</span><br><span class="line">业务替换为truncate方式</span><br></pre></td></tr></table></figure><h2 id="5-6-扩展-如何批量修改"><a href="#5-6-扩展-如何批量修改" class="headerlink" title="5.6 扩展:如何批量修改"></a>5.6 扩展:如何批量修改</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">需求:将zabbix库中的所有表,innodb替换为tokudb</span><br><span class="line">select concat(&quot;alter table zabbix.&quot;,table_name,&quot; engine tokudb;&quot;) from</span><br><span class="line">information_schema.tables where table_schema&#x3D;&#39;zabbix&#39; into outfile &#39;&#x2F;tmp&#x2F;tokudb.sql&#39;;</span><br></pre></td></tr></table></figure><h1 id="6、InnoDB存储引擎物理存储结构"><a href="#6、InnoDB存储引擎物理存储结构" class="headerlink" title="6、InnoDB存储引擎物理存储结构"></a>6、InnoDB存储引擎物理存储结构</h1><h2 id="6-0-最直观的存储方式-data-mysql-data"><a href="#6-0-最直观的存储方式-data-mysql-data" class="headerlink" title="6.0 最直观的存储方式(/data/mysql/data)"></a>6.0 最直观的存储方式(/data/mysql/data)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ibdata1：系统数据字典信息(统计信息)，UNDO表空间等数据</span><br><span class="line">ib_logfile0 ~ ib_logfile1: REDO日志文件，事务日志文件。</span><br><span class="line">ibtmp1： 临时表空间磁盘位置，存储临时表</span><br><span class="line">frm：存储表的列信息</span><br><span class="line">ibd：表的数据行和索引</span><br></pre></td></tr></table></figure><h2 id="6-1-表空间-Tablespace"><a href="#6-1-表空间-Tablespace" class="headerlink" title="6.1 表空间(Tablespace)"></a>6.1 表空间(Tablespace)</h2><h3 id="6-1-1、共享表空间"><a href="#6-1-1、共享表空间" class="headerlink" title="6.1.1、共享表空间"></a>6.1.1、共享表空间</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">需要将所有数据存储到同一个表空间中 ，管理比较混乱</span><br><span class="line">5.5版本出现的管理模式，也是默认的管理模式。</span><br><span class="line">5.6版本以，共享表空间保留，只用来存储:数据字典信息,undo,临时表。</span><br><span class="line">5.7 版本,临时表被独立出来了</span><br><span class="line">8.0版本,undo也被独立出去了</span><br></pre></td></tr></table></figure><p>具体变化参考官方文档:<br><a href="http://links.jianshu.com/go?to=http://dev.mysql.com/doc/refman/5.6/en/innodb-architecture.html">http://dev.mysql.com/doc/refman/5.6/en/innodb-architecture.html</a><br><a href="http://links.jianshu.com/go?to=http://dev.mysql.com/doc/refman/5.7/en/innodb-architecture.html">http://dev.mysql.com/doc/refman/5.7/en/innodb-architecture.html</a><br><a href="http://links.jianshu.com/go?to=http://dev.mysql.com/doc/refman/5.8/en/innodb-architecture.html">http://dev.mysql.com/doc/refman/5.8/en/innodb-architecture.html</a></p><h3 id="6-1-2-共享表空间设置"><a href="#6-1-2-共享表空间设置" class="headerlink" title="6.1.2 共享表空间设置"></a>6.1.2 共享表空间设置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">共享表空间设置(在搭建MySQL时，初始化数据之前设置到参数文件中)</span><br><span class="line">[(none)]&gt;select @@innodb_data_file_path;</span><br><span class="line">[(none)]&gt;show variables like &#39;%extend%&#39;;</span><br><span class="line">innodb_data_file_path&#x3D;ibdata1:512M:ibdata2:512M:autoextend</span><br><span class="line">innodb_autoextend_increment&#x3D;64</span><br></pre></td></tr></table></figure><h3 id="6-1-3-独立表空间"><a href="#6-1-3-独立表空间" class="headerlink" title="6.1.3 独立表空间"></a>6.1.3 独立表空间</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">从5.6，默认表空间不再使用共享表空间，替换为独立表空间。</span><br><span class="line">主要存储的是用户数据</span><br><span class="line">存储特点为：一个表一个ibd文件，存储数据行和索引信息</span><br><span class="line">基本表结构元数据存储：</span><br><span class="line">xxx.frm</span><br><span class="line">最终结论：</span><br><span class="line">      元数据            数据行+索引</span><br><span class="line">mysql表数据    &#x3D;（ibdataX+frm）+ibd(段、区、页)</span><br><span class="line">        DDL             DML+DQL</span><br><span class="line"></span><br><span class="line">MySQL的存储引擎日志：</span><br><span class="line">Redo Log: ib_logfile0  ib_logfile1，重做日志</span><br><span class="line">Undo Log: ibdata1 ibdata2(存储在共享表空间中)，回滚日志</span><br><span class="line">临时表:ibtmp1，在做join union操作产生临时数据，用完就自动</span><br></pre></td></tr></table></figure><h3 id="6-1-4-独立表空间设置问题"><a href="#6-1-4-独立表空间设置问题" class="headerlink" title="6.1.4 独立表空间设置问题"></a>6.1.4 独立表空间设置问题</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">db01 [(none)]&gt;select @@innodb_file_per_table;</span><br><span class="line">+-------------------------+</span><br><span class="line">| @@innodb_file_per_table |</span><br><span class="line">+-------------------------+</span><br><span class="line">|                      1 |</span><br><span class="line">+-------------------------+</span><br><span class="line">alter table city dicard tablespace;</span><br><span class="line">alter table city import tablespace;</span><br></pre></td></tr></table></figure><h3 id="6-1-5-真实的学生案例"><a href="#6-1-5-真实的学生案例" class="headerlink" title="6.1.5 真实的学生案例"></a>6.1.5 真实的学生案例</h3><p>案例背景:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">硬件及软件环境:</span><br><span class="line">联想服务器（IBM） </span><br><span class="line">磁盘500G 没有raid</span><br><span class="line">centos 6.8</span><br><span class="line">mysql 5.6.33  innodb引擎  独立表空间</span><br><span class="line">备份没有，日志也没开</span><br><span class="line"></span><br><span class="line">开发用户专用库:</span><br><span class="line">jira(bug追踪) 、 confluence(内部知识库)    ------&gt;LNMT</span><br></pre></td></tr></table></figure><p>故障描述:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">断电了，启动完成后“&#x2F;” 只读</span><br><span class="line">fsck  重启,系统成功启动,mysql启动不了。</span><br><span class="line">结果：confulence库在  ， jira库不见了</span><br></pre></td></tr></table></figure><p>学员求助内容:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">求助：</span><br><span class="line">这种情况怎么恢复？</span><br><span class="line">我问：</span><br><span class="line">有备份没</span><br><span class="line">求助：</span><br><span class="line">连二进制日志都没有，没有备份，没有主从</span><br><span class="line">我说：</span><br><span class="line">没招了，jira需要硬盘恢复了。</span><br><span class="line">求助：</span><br><span class="line">1、jira问题拉倒中关村了</span><br><span class="line">2、能不能暂时把confulence库先打开用着</span><br><span class="line">将生产库confulence，拷贝到1:1虚拟机上&#x2F;var&#x2F;lib&#x2F;mysql,直接访问时访问不了的</span><br><span class="line"></span><br><span class="line">问：有没有工具能直接读取ibd</span><br><span class="line">我说：我查查，最后发现没有</span><br></pre></td></tr></table></figure><p>我想出一个办法来：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">表空间迁移:</span><br><span class="line">create table xxx</span><br><span class="line">alter table  confulence.t1 discard tablespace;</span><br><span class="line">alter table confulence.t1 import tablespace;</span><br><span class="line">虚拟机测试可行。</span><br></pre></td></tr></table></figure><p>处理问题思路:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">confulence库中一共有107张表。</span><br><span class="line">1、创建107和和原来一模一样的表。</span><br><span class="line">他有2016年的历史库，我让他去他同时电脑上 mysqldump备份confulence库</span><br><span class="line">mysqldump -uroot -ppassw0rd -B  confulence --no-data &gt;test.sql</span><br><span class="line">拿到你的测试库，进行恢复</span><br><span class="line">到这步为止，表结构有了。</span><br><span class="line">2、表空间删除。</span><br><span class="line">select concat(&#39;alter table &#39;,table_schema,&#39;.&#39;table_name,&#39; discard tablespace;&#39;) from information_schema.tables where table_schema&#x3D;&#39;confluence&#39; into outfile &#39;&#x2F;tmp&#x2F;discad.sql&#39;;</span><br><span class="line">source &#x2F;tmp&#x2F;discard.sql</span><br><span class="line">执行过程中发现，有20-30个表无法成功。主外键关系</span><br><span class="line">很绝望，一个表一个表分析表结构，很痛苦。</span><br><span class="line">set foreign_key_checks&#x3D;0 跳过外键检查。</span><br><span class="line">把有问题的表表空间也删掉了。</span><br><span class="line">3、拷贝生产中confulence库下的所有表的ibd文件拷贝到准备好的环境中</span><br><span class="line">select concat(&#39;alter table &#39;,table_schema,&#39;.&#39;table_name,&#39; import tablespace;&#39;) from information_schema.tables where table_schema&#x3D;&#39;confluence&#39; into outfile &#39;&#x2F;tmp&#x2F;discad.sql&#39;;</span><br><span class="line">4、验证数据</span><br><span class="line">表都可以访问了，数据挽回到了出现问题时刻的状态（2-8）</span><br></pre></td></tr></table></figure><h1 id="8、事务的ACID特性"><a href="#8、事务的ACID特性" class="headerlink" title="8、事务的ACID特性"></a>8、事务的ACID特性</h1><p><strong>Atomic（原子性）</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">所有语句作为一个单元全部成功执行或全部取消。不能出现中间状态。</span><br></pre></td></tr></table></figure><p><strong>Consistent（一致性）</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如果数据库在事务开始时处于一致状态，则在执行该事务期间将保留一致状态。</span><br></pre></td></tr></table></figure><p><strong>Isolated（隔离性）</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">事务之间不相互影响。</span><br></pre></td></tr></table></figure><p><strong>Durable（持久性）</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">事务成功完成后，所做的所有更改都会准确地记录在数据库中。所做的更改不会丢失。</span><br></pre></td></tr></table></figure><h1 id="9、事务的生命周期（事务控制语句）"><a href="#9、事务的生命周期（事务控制语句）" class="headerlink" title="9、事务的生命周期（事务控制语句）"></a>9、事务的生命周期（事务控制语句）</h1><h2 id="9-1-事务的开始"><a href="#9-1-事务的开始" class="headerlink" title="9.1 事务的开始"></a>9.1 事务的开始</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">begin</span><br><span class="line">说明:在5.5 以上的版本，不需要手工begin，只要你执行的是一个DML，会自动在前面加一个begin命令。</span><br></pre></td></tr></table></figure><h2 id="9-2-事务的结束"><a href="#9-2-事务的结束" class="headerlink" title="9.2 事务的结束"></a>9.2 事务的结束</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">commit：提交事务</span><br><span class="line">完成一个事务，一旦事务提交成功 ，就说明具备ACID特性了。</span><br><span class="line">rollback ：回滚事务</span><br><span class="line">将内存中，已执行过的操作，回滚回去</span><br></pre></td></tr></table></figure><h2 id="9-3-自动提交策略（autocommit）"><a href="#9-3-自动提交策略（autocommit）" class="headerlink" title="9.3 自动提交策略（autocommit）"></a>9.3 自动提交策略（autocommit）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">db01 [(none)]&gt;select @@autocommit;</span><br><span class="line">db01 [(none)]&gt;set autocommit&#x3D;0;</span><br><span class="line">db01 [(none)]&gt;set global autocommit&#x3D;0;</span><br><span class="line">注：</span><br><span class="line">自动提交是否打开，一般在有事务需求的MySQL中，将其关闭</span><br><span class="line">不管有没有事务需求，我们一般也都建议设置为0，可以很大程度上提高数据库性能</span><br><span class="line">(1)</span><br><span class="line">set autocommit&#x3D;0;   </span><br><span class="line">set global autocommit&#x3D;0;</span><br><span class="line">(2)</span><br><span class="line">vim &#x2F;etc&#x2F;my.cnf</span><br><span class="line">autocommit&#x3D;0     </span><br></pre></td></tr></table></figure><h2 id="9-4-隐式提交语句"><a href="#9-4-隐式提交语句" class="headerlink" title="9.4 隐式提交语句"></a>9.4 隐式提交语句</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">用于隐式提交的 SQL 语句：</span><br><span class="line">begin </span><br><span class="line">a</span><br><span class="line">b</span><br><span class="line">begin</span><br><span class="line"></span><br><span class="line">SET AUTOCOMMIT &#x3D; 1</span><br><span class="line"></span><br><span class="line">导致提交的非事务语句：</span><br><span class="line">DDL语句： （ALTER、CREATE 和 DROP）</span><br><span class="line">DCL语句： （GRANT、REVOKE 和 SET PASSWORD）</span><br><span class="line">锁定语句：（LOCK TABLES 和 UNLOCK TABLES）</span><br><span class="line">导致隐式提交的语句示例：</span><br><span class="line">TRUNCATE TABLE</span><br><span class="line">LOAD DATA INFILE</span><br><span class="line">SELECT FOR UPDATE</span><br></pre></td></tr></table></figure><h2 id="9-5-开始事务流程："><a href="#9-5-开始事务流程：" class="headerlink" title="9.5 开始事务流程："></a>9.5 开始事务流程：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">1、检查autocommit是否为关闭状态</span><br><span class="line">select @@autocommit;</span><br><span class="line">或者：</span><br><span class="line">show variables like &#39;autocommit&#39;;</span><br><span class="line">2、开启事务,并结束事务</span><br><span class="line">begin</span><br><span class="line">delete from student where name&#x3D;&#39;alexsb&#39;;</span><br><span class="line">update student set name&#x3D;&#39;alexsb&#39; where name&#x3D;&#39;alex&#39;;</span><br><span class="line">rollback;</span><br><span class="line"></span><br><span class="line">begin</span><br><span class="line">delete from student where name&#x3D;&#39;alexsb&#39;;</span><br><span class="line">update student set name&#x3D;&#39;alexsb&#39; where name&#x3D;&#39;alex&#39;;</span><br><span class="line">commit;</span><br></pre></td></tr></table></figure><h1 id="10-InnoDB-事务的ACID如何保证"><a href="#10-InnoDB-事务的ACID如何保证" class="headerlink" title="10. InnoDB 事务的ACID如何保证?"></a>10. InnoDB 事务的ACID如何保证?</h1><h2 id="10-0-一些概念"><a href="#10-0-一些概念" class="headerlink" title="10.0 一些概念"></a>10.0 一些概念</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">redo log ---&gt; 重做日志 ib_logfile0~1   50M   , 轮询使用</span><br><span class="line">redo log buffer ---&gt; redo内存区域</span><br><span class="line">ibd     ----&gt; 存储 数据行和索引 </span><br><span class="line">buffer pool ---&gt;缓冲区池,数据和索引的缓冲</span><br><span class="line">LSN : 日志序列号 </span><br><span class="line">磁盘数据页,redo文件,buffer pool,redo buffer</span><br><span class="line">MySQL 每次数据库启动,都会比较磁盘数据页和redolog的LSN,必须要求两者LSN一致数据库才能正常启动</span><br><span class="line">WAL : write ahead log 日志优先写的方式实现持久化</span><br><span class="line">脏页: 内存脏页,内存中发生了修改,没写入到磁盘之前,我们把内存页称之为脏页.</span><br><span class="line">CKPT:Checkpoint,检查点,就是将脏页刷写到磁盘的动作</span><br><span class="line">TXID: 事务号,InnoDB会为每一个事务生成一个事务号,伴随着整个事务.</span><br></pre></td></tr></table></figure><p><img src="http://upload-images.jianshu.io/upload_images/16956686-babda887346b7427.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/767/format/webp" alt="img"></p><p>image</p><h2 id="10-1-redo-log"><a href="#10-1-redo-log" class="headerlink" title="10.1 redo log"></a>10.1 redo log</h2><h3 id="10-1-1-Redo是什么？"><a href="#10-1-1-Redo是什么？" class="headerlink" title="10.1.1 Redo是什么？"></a>10.1.1 Redo是什么？</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redo,顾名思义“重做日志”，是事务日志的一种。</span><br></pre></td></tr></table></figure><h3 id="10-1-2-作用是什么？"><a href="#10-1-2-作用是什么？" class="headerlink" title="10.1.2 作用是什么？"></a>10.1.2 作用是什么？</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在事务ACID过程中，实现的是“D”持久化的作用。对于AC也有相应的作用</span><br></pre></td></tr></table></figure><h3 id="10-1-3-redo日志位置"><a href="#10-1-3-redo日志位置" class="headerlink" title="10.1.3 redo日志位置"></a>10.1.3 redo日志位置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redo的日志文件：iblogfile0 iblogfile1</span><br></pre></td></tr></table></figure><h3 id="10-1-4-redo-buffer"><a href="#10-1-4-redo-buffer" class="headerlink" title="10.1.4 redo buffer"></a>10.1.4 redo buffer</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redo的buffer:数据页的变化信息+数据页当时的LSN号</span><br><span class="line">LSN：日志序列号  磁盘数据页、内存数据页、redo buffer、redolog</span><br></pre></td></tr></table></figure><h3 id="10-1-5-redo的刷新策略"><a href="#10-1-5-redo的刷新策略" class="headerlink" title="10.1.5 redo的刷新策略"></a>10.1.5 redo的刷新策略</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">commit;</span><br><span class="line">刷新当前事务的redo buffer到磁盘</span><br><span class="line">还会顺便将一部分redo buffer中没有提交的事务日志也刷新到磁盘</span><br></pre></td></tr></table></figure><h3 id="10-1-6-MySQL-CSR——前滚"><a href="#10-1-6-MySQL-CSR——前滚" class="headerlink" title="10.1.6 MySQL CSR——前滚"></a>10.1.6 MySQL CSR——前滚</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">MySQL : 在启动时,必须保证redo日志文件和数据文件LSN必须一致, 如果不一致就会触发CSR,最终保证一致</span><br><span class="line">情况一:</span><br><span class="line">我们做了一个事务,begin;update;commit.</span><br><span class="line">1.在begin ,会立即分配一个TXID&#x3D;tx_01.</span><br><span class="line">2.update时,会将需要修改的数据页(dp_01,LSN&#x3D;101),加载到data buffer中</span><br><span class="line">3.DBWR线程,会进行dp_01数据页修改更新,并更新LSN&#x3D;102</span><br><span class="line">4.LOGBWR日志写线程,会将dp_01数据页的变化+LSN+TXID存储到redobuffer</span><br><span class="line">5. 执行commit时,LGWR日志写线程会将redobuffer信息写入redolog日志文件中,基于WAL原则,</span><br><span class="line">在日志完全写入磁盘后,commit命令才执行成功,(会将此日志打上commit标记)</span><br><span class="line">6.假如此时宕机,内存脏页没有来得及写入磁盘,内存数据全部丢失</span><br><span class="line">7.MySQL再次重启时,必须要redolog和磁盘数据页的LSN是一致的.但是,此时dp_01,TXID&#x3D;tx_01磁盘是LSN&#x3D;101,dp_01,TXID&#x3D;tx_01,redolog中LSN&#x3D;102</span><br><span class="line">MySQL此时无法正常启动,MySQL触发CSR.在内存追平LSN号,触发ckpt,将内存数据页更新到磁盘,从而保证磁盘数据页和redolog LSN一值.这时MySQL正长启动</span><br><span class="line">以上的工作过程,我们把它称之为基于REDO的&quot;前滚操作&quot;</span><br></pre></td></tr></table></figure><h2 id="11-2-undo-回滚日志"><a href="#11-2-undo-回滚日志" class="headerlink" title="11.2 undo 回滚日志"></a>11.2 undo 回滚日志</h2><h3 id="11-2-1-undo是什么？"><a href="#11-2-1-undo是什么？" class="headerlink" title="11.2.1 undo是什么？"></a>11.2.1 undo是什么？</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">undo,顾名思义“回滚日志”</span><br></pre></td></tr></table></figure><h3 id="11-2-2-作用是什么？"><a href="#11-2-2-作用是什么？" class="headerlink" title="11.2.2 作用是什么？"></a>11.2.2 作用是什么？</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">在事务ACID过程中，实现的是“A” 原子性的作用</span><br><span class="line">另外CI也依赖于Undo</span><br><span class="line">在rolback时,将数据恢复到修改之前的状态</span><br><span class="line">在CSR实现的是,将redo当中记录的未提交的时候进行回滚.</span><br><span class="line">undo提供快照技术,保存事务修改之前的数据状态.保证了MVCC,隔离性,mysqldump的热备</span><br></pre></td></tr></table></figure><h2 id="11-3-概念性的东西"><a href="#11-3-概念性的东西" class="headerlink" title="11.3 概念性的东西:"></a>11.3 概念性的东西:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">redo怎么应用的</span><br><span class="line">undo怎么应用的</span><br><span class="line">CSR(自动故障恢复)过程</span><br><span class="line">LSN :日志序列号</span><br><span class="line">TXID:事务ID</span><br><span class="line">CKPT(Checkpoint)</span><br></pre></td></tr></table></figure><h2 id="11-4-锁"><a href="#11-4-锁" class="headerlink" title="11.4 锁"></a>11.4 锁</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">“锁”顾名思义就是锁定的意思。</span><br><span class="line">“锁”的作用是什么？</span><br><span class="line">在事务ACID过程中，“锁”和“隔离级别”一起来实现“I”隔离性和&quot;C&quot; 一致性 (redo也有参与).</span><br><span class="line">悲观锁:行级锁定(行锁)</span><br><span class="line">谁先操作某个数据行,就会持有&lt;这行&gt;的(X)锁.</span><br><span class="line">乐观锁: 没有锁</span><br></pre></td></tr></table></figure><h2 id="11-5-隔离级别"><a href="#11-5-隔离级别" class="headerlink" title="11.5 隔离级别"></a>11.5 隔离级别</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">影响到数据的读取,默认的级别是 RR模式.</span><br><span class="line">transaction_isolation   隔离级别(参数)</span><br><span class="line">负责的是,MVCC,读一致性问题</span><br><span class="line">RU  : 读未提交,可脏读,一般部议叙出现</span><br><span class="line">RC  : 读已提交,可能出现幻读,可以防止脏读.</span><br><span class="line">RR  : 可重复读,功能是防止&quot;幻读&quot;现象 ,利用的是undo的快照技术+GAP(间隙锁)+NextLock(下键锁)</span><br><span class="line">SR   : 可串行化,可以防止死锁,但是并发事务性能较差</span><br><span class="line">补充: 在RC级别下,可以减轻GAP+NextLock锁的问题,但是会出现幻读现象,一般在为了读一致性会在正常select后添加for update语句.但是,请记住执行完一定要commit 否则容易出现所等待比较严重.</span><br><span class="line">例如:</span><br><span class="line">[world]&gt;select * from city where id&#x3D;999 for update;</span><br><span class="line">[world]&gt;commit;</span><br></pre></td></tr></table></figure><h2 id="11-6-架构改造项目"><a href="#11-6-架构改造项目" class="headerlink" title="11.6 架构改造项目"></a>11.6 架构改造项目</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">项目背景:</span><br><span class="line">2台  IBM X3650   32G  ,原来主从关系,2年多没有主从了,&quot;小问题&quot;不断(锁,宕机后的安全)</span><br><span class="line">MySQL 5.1.77   默认存储引擎 MyISAM  </span><br><span class="line">数据量: 60G左右 ,每周全备,没有开二进制日志</span><br><span class="line">架构方案:</span><br><span class="line">    1. 升级数据库版本到5.7.20 </span><br><span class="line">    2. 更新所有业务表的存储引擎为InnoDB</span><br><span class="line">    3. 重新设计备份策略为热备份,每天全备,并备份日志</span><br><span class="line">    4. 重新构建主从</span><br><span class="line">结果:</span><br><span class="line">    1.性能</span><br><span class="line">    2.安全方面</span><br><span class="line">    3.快速故障处理</span><br></pre></td></tr></table></figure><h1 id="12-InnoDB存储引擎核心特性-参数补充"><a href="#12-InnoDB存储引擎核心特性-参数补充" class="headerlink" title="12 InnoDB存储引擎核心特性-参数补充"></a>12 InnoDB存储引擎核心特性-参数补充</h1><h2 id="12-1-存储引擎相关"><a href="#12-1-存储引擎相关" class="headerlink" title="12.1 存储引擎相关"></a>12.1 存储引擎相关</h2><h3 id="12-1-1-查看"><a href="#12-1-1-查看" class="headerlink" title="12.1.1 查看"></a>12.1.1 查看</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">show engines;</span><br><span class="line">show variables like &#39;default_storage_engine&#39;;</span><br><span class="line">select @@default_storage_engine;</span><br></pre></td></tr></table></figure><h3 id="12-1-2-如何指定和修改存储引擎"><a href="#12-1-2-如何指定和修改存储引擎" class="headerlink" title="12.1.2 如何指定和修改存储引擎"></a>12.1.2 如何指定和修改存储引擎</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(1) 通过参数设置默认引擎</span><br><span class="line">(2) 建表的时候进行设置</span><br><span class="line">(3) alter table t1 engine&#x3D;innodb;</span><br></pre></td></tr></table></figure><h2 id="12-2-表空间"><a href="#12-2-表空间" class="headerlink" title="12.2. 表空间"></a>12.2. 表空间</h2><h3 id="12-2-1-共享表空间"><a href="#12-2-1-共享表空间" class="headerlink" title="12.2.1 共享表空间"></a>12.2.1 共享表空间</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">innodb_data_file_path</span><br><span class="line">一般是在初始化数据之前就设置好</span><br><span class="line">例子:</span><br><span class="line">innodb_data_file_path&#x3D;ibdata1:512M:ibdata2:512M:autoextend</span><br></pre></td></tr></table></figure><h3 id="12-2-2-独立表空间"><a href="#12-2-2-独立表空间" class="headerlink" title="12.2.2 独立表空间"></a>12.2.2 独立表空间</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show variables like &#39;innodb_file_per_table&#39;;</span><br></pre></td></tr></table></figure><h2 id="12-3-缓冲区池"><a href="#12-3-缓冲区池" class="headerlink" title="12.3. 缓冲区池"></a>12.3. 缓冲区池</h2><h3 id="12-3-1-查询"><a href="#12-3-1-查询" class="headerlink" title="12.3.1 查询"></a>12.3.1 查询</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select @@innodb_buffer_pool_size;</span><br><span class="line">show engine innodb status\G</span><br><span class="line">innodb_buffer_pool_size </span><br><span class="line">一般建议最多是物理内存的 75-80%</span><br></pre></td></tr></table></figure><h2 id="12-4-innodb-flush-log-at-trx-commit-双一标准之一"><a href="#12-4-innodb-flush-log-at-trx-commit-双一标准之一" class="headerlink" title="12.4. innodb_flush_log_at_trx_commit (双一标准之一)"></a>12.4. innodb_flush_log_at_trx_commit (双一标准之一)</h2><h3 id="12-4-1-作用"><a href="#12-4-1-作用" class="headerlink" title="12.4.1 作用"></a>12.4.1 作用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">主要控制了innodb将log buffer中的数据写入日志文件并flush磁盘的时间点，取值分别为0、1、2三个。</span><br></pre></td></tr></table></figure><h3 id="12-4-2-查询"><a href="#12-4-2-查询" class="headerlink" title="12.4.2 查询"></a>12.4.2 查询</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select @@innodb_flush_log_at_trx_commit;</span><br></pre></td></tr></table></figure><h3 id="12-4-3-参数说明"><a href="#12-4-3-参数说明" class="headerlink" title="12.4.3 参数说明:"></a>12.4.3 参数说明:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1，每次事物的提交都会引起日志文件写入、flush磁盘的操作，确保了事务的ACID；flush  到操作系统的文件系统缓存  fsync到物理磁盘.</span><br><span class="line">0，表示当事务提交时，不做日志写入操作，而是每秒钟将log buffer中的数据写入文件系统缓存并且秒fsync磁盘一次；</span><br><span class="line">2，每次事务提交引起写入文件系统缓存,但每秒钟完成一次fsync磁盘操作。</span><br><span class="line">--------</span><br><span class="line">The default setting of 1 is required for full ACID compliance. Logs are written and flushed to disk at each transaction commit.</span><br><span class="line">With a setting of 0, logs are written and flushed to disk once per second. Transactions for which logs have not been flushed can be lost in a crash.</span><br><span class="line">With a setting of 2, logs are written after each transaction commit and flushed to disk once per second. Transactions for which logs have not been flushed can be lost in a crash.</span><br><span class="line">-------</span><br></pre></td></tr></table></figure><h2 id="12-5-Innodb-flush-method-O-DIRECT-fdatasync"><a href="#12-5-Innodb-flush-method-O-DIRECT-fdatasync" class="headerlink" title="12.5. Innodb_flush_method=(O_DIRECT, fdatasync)"></a>12.5. Innodb_flush_method=(O_DIRECT, fdatasync)</h2><p><img src="http://upload-images.jianshu.io/upload_images/16956686-b557f16a20a5dad2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/679/format/webp" alt="img"></p><p>image</p><p><a href="http://dev.mysql.com/doc/refman/5.7/en/innodb-parameters.html#sysvar\_innodb\_flush\_method">http://dev.mysql.com/doc/refman/5.7/en/innodb-parameters.html#sysvar\_innodb\_flush\_method</a></p><h3 id="12-5-1-作用"><a href="#12-5-1-作用" class="headerlink" title="12.5.1 作用"></a>12.5.1 作用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">控制的是,log buffer 和data buffer,刷写磁盘的时候是否经过文件系统缓存</span><br></pre></td></tr></table></figure><h3 id="12-5-2-查看"><a href="#12-5-2-查看" class="headerlink" title="12.5.2 查看"></a>12.5.2 查看</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show variables like &#39;%innodb_flush%&#39;;</span><br></pre></td></tr></table></figure><h3 id="12-5-3-参数值说明"><a href="#12-5-3-参数值说明" class="headerlink" title="12.5.3 参数值说明"></a>12.5.3 参数值说明</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">O_DIRECT  :数据缓冲区写磁盘,不走OS buffer</span><br><span class="line">fsync :日志和数据缓冲区写磁盘,都走OS buffer</span><br><span class="line">O_DSYNC  :日志缓冲区写磁盘,不走 OS buffer</span><br></pre></td></tr></table></figure><h3 id="12-5-4-使用建议"><a href="#12-5-4-使用建议" class="headerlink" title="12.5.4 使用建议"></a>12.5.4 使用建议</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">最高安全模式</span><br><span class="line">innodb_flush_log_at_trx_commit&#x3D;1</span><br><span class="line">Innodb_flush_method&#x3D;O_DIRECT</span><br><span class="line">最高性能:</span><br><span class="line">innodb_flush_log_at_trx_commit&#x3D;0</span><br><span class="line">Innodb_flush_method&#x3D;fsync</span><br></pre></td></tr></table></figure><h2 id="12-6-redo日志有关的参数"><a href="#12-6-redo日志有关的参数" class="headerlink" title="12.6. redo日志有关的参数"></a>12.6. redo日志有关的参数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">innodb_log_buffer_size&#x3D;16777216</span><br><span class="line">innodb_log_file_size&#x3D;50331648</span><br><span class="line">innodb_log_files_in_group &#x3D; 3</span><br></pre></td></tr></table></figure><h1 id="13-扩展-自己扩展，建议是官方文档。"><a href="#13-扩展-自己扩展，建议是官方文档。" class="headerlink" title="13.扩展(自己扩展，建议是官方文档。)"></a>13.扩展(自己扩展，建议是官方文档。)</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">RR模式(对索引进行删除时):</span><br><span class="line">GAP:          间隙锁</span><br><span class="line">next-lock:    下一键锁定</span><br><span class="line"></span><br><span class="line">例子:</span><br><span class="line">id（有索引）</span><br><span class="line">1 2 3 4 5 6 </span><br><span class="line">GAP：</span><br><span class="line">在对3这个值做变更时，会产生两种锁，一种是本行的行级锁，另一种会在2和4索引键上进行枷锁</span><br><span class="line">next-lock：</span><br><span class="line">对第六行变更时，一种是本行的行级锁，在索引末尾键进行加锁，6以后的值在这时是不能被插入的。</span><br><span class="line">总之：</span><br><span class="line">GAP、next lock都是为了保证RR模式下，不会出现幻读，降低隔离级别或取消索引，这两种锁都不会产生。</span><br><span class="line">IX IS X S是什么?</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL进阶 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MySQL进阶之路初级DBA（四）</title>
      <link href="/posts/20819/"/>
      <url>/posts/20819/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL-索引及执行计划"><a href="#MySQL-索引及执行计划" class="headerlink" title="MySQL-索引及执行计划"></a>MySQL-索引及执行计划</h1><h1 id="1-索引作用"><a href="#1-索引作用" class="headerlink" title="1. 索引作用"></a>1. 索引作用</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">提供了类似于书中目录的作用,目的是为了优化查询</span><br></pre></td></tr></table></figure><h1 id="2-索引的种类-算法"><a href="#2-索引的种类-算法" class="headerlink" title="2. 索引的种类(算法)"></a>2. 索引的种类(算法)</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">B树索引</span><br><span class="line">Hash索引</span><br><span class="line">R树</span><br><span class="line">Full text</span><br><span class="line">GIS </span><br></pre></td></tr></table></figure><h1 id="3-B树-基于不同的查找算法分类介绍"><a href="#3-B树-基于不同的查找算法分类介绍" class="headerlink" title="3. B树 基于不同的查找算法分类介绍"></a>3. B树 基于不同的查找算法分类介绍</h1><p><img src="http://upload-images.jianshu.io/upload_images/16956686-0408e2dc5dbd0a54.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">B-tree</span><br><span class="line">B+Tree 在范围查询方面提供了更好的性能(&gt; &lt; &gt;&#x3D; &lt;&#x3D; like)</span><br><span class="line">B*Tree</span><br></pre></td></tr></table></figure><h1 id="4-在功能上的分类"><a href="#4-在功能上的分类" class="headerlink" title="4. 在功能上的分类"></a>4. 在功能上的分类</h1><h2 id="4-1-辅助索引-S-怎么构建B树结构的"><a href="#4-1-辅助索引-S-怎么构建B树结构的" class="headerlink" title="4.1 辅助索引(S)怎么构建B树结构的?"></a>4.1 辅助索引(S)怎么构建B树结构的?</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(1). 索引是基于表中,列(索引键)的值生成的B树结构</span><br><span class="line">(2). 首先提取此列所有的值,进行自动排序</span><br><span class="line">(3). 将排好序的值,均匀的分布到索引树的叶子节点中(16K)</span><br><span class="line">(4). 然后生成此索引键值所对应得后端数据页的指针</span><br><span class="line">(5). 生成枝节点和根节点,根据数据量级和索引键长度,生成合适的索引树高度</span><br><span class="line">id  name  age  gender</span><br><span class="line">select  *  from  t1 where id&#x3D;10;</span><br><span class="line">问题: 基于索引键做where查询,对于id列是顺序IO,但是对于其他列的查询,可能是随机IO.</span><br></pre></td></tr></table></figure><h2 id="4-2-聚集索引-C"><a href="#4-2-聚集索引-C" class="headerlink" title="4.2 聚集索引(C)"></a>4.2 聚集索引(C)</h2><h3 id="4-2-1-前提"><a href="#4-2-1-前提" class="headerlink" title="4.2.1 前提"></a>4.2.1 前提</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(1)表中设置了主键,主键列就会自动被作为聚集索引.</span><br><span class="line">(2)如果没有主键,会选择唯一键作为聚集索引.</span><br><span class="line">(3)聚集索引必须在建表时才有意义,一般是表的无关列(ID)</span><br></pre></td></tr></table></figure><h3 id="4-2-2-辅助索引-S-怎么构建B树结构的"><a href="#4-2-2-辅助索引-S-怎么构建B树结构的" class="headerlink" title="4.2.2 辅助索引(S)怎么构建B树结构的?"></a>4.2.2 辅助索引(S)怎么构建B树结构的?</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(1) 在建表时,设置了主键列(ID)</span><br><span class="line">(2) 在将来录入数据时,就会按照ID列的顺序存储到磁盘上.(我们又称之为聚集索引组织表)</span><br><span class="line">(3) 将排好序的整行数据,生成叶子节点.可以理解为,磁盘的数据页就是叶子节点</span><br></pre></td></tr></table></figure><h3 id="4-2-3-聚集索引和辅助索引构成区别"><a href="#4-2-3-聚集索引和辅助索引构成区别" class="headerlink" title="4.2.3 聚集索引和辅助索引构成区别"></a>4.2.3 聚集索引和辅助索引构成区别</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">聚集索引只能有一个,非空唯一,一般时主键</span><br><span class="line">辅助索引,可以有多个,时配合聚集索引使用的</span><br><span class="line">聚集索引叶子节点,就是磁盘的数据行存储的数据页</span><br><span class="line">MySQL是根据聚集索引,组织存储数据,数据存储时就是按照聚集索引的顺序进行存储数据</span><br><span class="line">辅助索引,只会提取索引键值,进行自动排序生成B树结构</span><br></pre></td></tr></table></figure><p><img src="http://upload-images.jianshu.io/upload_images/16956686-e9678b5133528566.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1085/format/webp" alt="img"></p><h1 id="5-辅助索引细分"><a href="#5-辅助索引细分" class="headerlink" title="5.辅助索引细分"></a>5.辅助索引细分</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.普通的单列辅助索引</span><br><span class="line">2.联合索引</span><br><span class="line">多个列作为索引条件,生成索引树,理论上设计的好的,可以减少大量的回表</span><br><span class="line">查询</span><br><span class="line">3.唯一索引</span><br><span class="line">索引列的值都是唯一的.</span><br></pre></td></tr></table></figure><h1 id="6-关于索引树的高度受什么影响"><a href="#6-关于索引树的高度受什么影响" class="headerlink" title="6. 关于索引树的高度受什么影响"></a>6. 关于索引树的高度受什么影响</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. 数据量级, 解决方法:分表,分库,分布式</span><br><span class="line">2. 索引列值过长 , 解决方法:前缀索引</span><br><span class="line">3. 数据类型:</span><br><span class="line">变长长度字符串,使用了char,解决方案:变长字符串使用varchar</span><br><span class="line">enum类型的使用enum (&#39;山东&#39;,&#39;河北&#39;,&#39;黑龙江&#39;,&#39;吉林&#39;,&#39;辽宁&#39;,&#39;陕西&#39;......)</span><br><span class="line">                                         1      2      3</span><br></pre></td></tr></table></figure><h1 id="7-索引的基本管理"><a href="#7-索引的基本管理" class="headerlink" title="7. 索引的基本管理"></a>7. 索引的基本管理</h1><h2 id="7-1-索引建立前"><a href="#7-1-索引建立前" class="headerlink" title="7.1 索引建立前"></a>7.1 索引建立前</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">db01 [world]&gt;desc city;</span><br><span class="line">+-------------+----------+------+-----+---------+----------------+</span><br><span class="line">| Field      | Type    | Null | Key | Default | Extra          |</span><br><span class="line">+-------------+----------+------+-----+---------+----------------+</span><br><span class="line">| ID          | int(11)  | NO  | PRI | NULL    | auto_increment |</span><br><span class="line">| Name        | char(35) | NO  |    |        |                |</span><br><span class="line">| CountryCode | char(3)  | NO  | MUL |        |                |</span><br><span class="line">| District    | char(20) | NO  |    |        |                |</span><br><span class="line">| Population  | int(11)  | NO  |    | 0      |                |</span><br><span class="line">+-------------+----------+------+-----+---------+----------------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">Field :列名字</span><br><span class="line">key  :有没有索引,索引类型</span><br><span class="line">PRI: 主键索引</span><br><span class="line">UNI: 唯一索引</span><br><span class="line">MUL: 辅助索引(单列,联和,前缀)</span><br></pre></td></tr></table></figure><h2 id="7-1-单列普通辅助索引"><a href="#7-1-单列普通辅助索引" class="headerlink" title="7.1 单列普通辅助索引"></a>7.1 单列普通辅助索引</h2><h3 id="7-1-1-创建索引"><a href="#7-1-1-创建索引" class="headerlink" title="7.1.1 创建索引"></a>7.1.1 创建索引</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">db01 [world]&gt;alter table city add index idx_name(name);</span><br><span class="line">                                       表                    索引名（列名）</span><br><span class="line">db01 [world]&gt;create index idx_name1 on city(name);</span><br><span class="line">db01 [world]&gt;show index from city;</span><br><span class="line">![image](http:&#x2F;&#x2F;upload-images.jianshu.io&#x2F;upload_images&#x2F;16956686-8c8421524dca6291.png?imageMogr2&#x2F;auto-orient&#x2F;strip%7CimageView2&#x2F;2&#x2F;w&#x2F;1240)</span><br><span class="line">注意:</span><br><span class="line">以上操作不代表生产操作,我们不建议在一个列上建多个索引</span><br><span class="line">同一个表中，索引名不能同名。</span><br><span class="line">### 7.1.2 删除索引:</span><br><span class="line">db01 [world]&gt;alter table city drop index idx_name1;</span><br><span class="line">                                        表名                 索引名</span><br></pre></td></tr></table></figure><h3 id="7-2-覆盖索引-联合索引"><a href="#7-2-覆盖索引-联合索引" class="headerlink" title="7.2 覆盖索引(联合索引)"></a>7.2 覆盖索引(联合索引)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Master [world]&gt;alter table city add index idx_co_po(countrycode,population);</span><br></pre></td></tr></table></figure><h3 id="7-3-前缀索引"><a href="#7-3-前缀索引" class="headerlink" title="7.3 前缀索引"></a>7.3 前缀索引</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db01 [world]&gt;alter table city add index idx_di(district(5));</span><br><span class="line">注意：数字列不能用作前缀索引。</span><br></pre></td></tr></table></figure><h3 id="7-4-唯一索引"><a href="#7-4-唯一索引" class="headerlink" title="7.4 唯一索引"></a>7.4 唯一索引</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db01 [world]&gt;alter table city add unique index idx_uni1(name);</span><br><span class="line">ERROR 1062 (23000): Duplicate entry &#39;San Jose&#39; for key &#39;idx_uni1&#39;</span><br></pre></td></tr></table></figure><p>统计city表中，以省的名字为分组，统计组的个数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select district,count(id) from city group by district;</span><br><span class="line">需求: 找到world下,city表中 name列有重复值的行,最后删掉重复的行</span><br><span class="line">db01 [world]&gt;select name,count(id) as cid from city group by name  having cid&gt;1 order by cid desc;</span><br><span class="line">db01 [world]&gt;select * from city where name&#x3D;&#39;suzhou&#39;;</span><br></pre></td></tr></table></figure><p>===============================================</p><h1 id="8-执行计划获取及分析"><a href="#8-执行计划获取及分析" class="headerlink" title="8. 执行计划获取及分析"></a>8. 执行计划获取及分析</h1><h2 id="8-0-介绍"><a href="#8-0-介绍" class="headerlink" title="8.0 介绍"></a>8.0 介绍</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(1)</span><br><span class="line">获取到的是优化器选择完成的,他认为代价最小的执行计划.</span><br><span class="line">作用: 语句执行前,先看执行计划信息,可以有效的防止性能较差的语句带来的性能问题.</span><br><span class="line">如果业务中出现了慢语句，我们也需要借助此命令进行语句的评估，分析优化方案。</span><br><span class="line">(2) select 获取数据的方法</span><br><span class="line">1. 全表扫描(应当尽量避免,因为性能低)</span><br><span class="line">2. 索引扫描</span><br><span class="line">3. 获取不到数据</span><br></pre></td></tr></table></figure><h2 id="8-1-执行计划获取"><a href="#8-1-执行计划获取" class="headerlink" title="8.1 执行计划获取"></a>8.1 执行计划获取</h2><p>获取优化器选择后的执行计划</p><p><img src="http://upload-images.jianshu.io/upload_images/16956686-54b2b99aaf0b2783.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/873/format/webp" alt="img"></p><p>image</p><p><img src="http://upload-images.jianshu.io/upload_images/16956686-03030eb1a5dc92de.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p>image</p><h2 id="8-2-执行计划分析"><a href="#8-2-执行计划分析" class="headerlink" title="8.2 执行计划分析"></a>8.2 执行计划分析</h2><h3 id="8-2-0-重点关注的信息"><a href="#8-2-0-重点关注的信息" class="headerlink" title="8.2.0 重点关注的信息"></a>8.2.0 重点关注的信息</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">table: city                              ----&gt;查询操作的表    **</span><br><span class="line">possible_keys: CountryCode,idx_co_po      ----&gt;可能会走的索引  **</span><br><span class="line">key: CountryCode   ----&gt;真正走的索引    ***</span><br><span class="line">type: ref   ----&gt;索引类型        *****</span><br><span class="line">Extra: Using index condition              ----&gt;额外信息        *****</span><br></pre></td></tr></table></figure><h3 id="8-2-1-type详解"><a href="#8-2-1-type详解" class="headerlink" title="8.2.1 type详解"></a>8.2.1 type详解</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">从左到右性能依次变好.</span><br><span class="line">ALL  :  </span><br><span class="line">全表扫描,不走索引</span><br><span class="line">例子:</span><br><span class="line">1. 查询条件列,没有索引</span><br><span class="line">SELECT * FROM t_100w WHERE k2&#x3D;&#39;780P&#39;;  </span><br><span class="line">2. 查询条件出现以下语句(辅助索引列)</span><br><span class="line">USE world </span><br><span class="line">DESC city;</span><br><span class="line">DESC SELECT * FROM city WHERE countrycode &lt;&gt; &#39;CHN&#39;;</span><br><span class="line">DESC SELECT * FROM city WHERE countrycode NOT IN (&#39;CHN&#39;,&#39;USA&#39;);</span><br><span class="line">DESC SELECT * FROM city WHERE countrycode LIKE &#39;%CH%&#39;;</span><br><span class="line">注意:对于聚集索引列,使用以上语句,依然会走索引</span><br><span class="line">DESC SELECT * FROM city WHERE id &lt;&gt; 10;</span><br><span class="line"></span><br><span class="line">INDEX  :</span><br><span class="line">全索引扫描</span><br><span class="line">1. 查询需要获取整个索引树种的值时:</span><br><span class="line">DESC  SELECT countrycode  FROM city;</span><br><span class="line"></span><br><span class="line">2. 联合索引中,任何一个非最左列作为查询条件时:</span><br><span class="line">idx_a_b_c(a,b,c)  ---&gt; a  ab  abc</span><br><span class="line"></span><br><span class="line">SELECT * FROM t1 WHERE b </span><br><span class="line">SELECT * FROM t1 WHERE c    </span><br><span class="line"></span><br><span class="line">RANGE :</span><br><span class="line">索引范围扫描 </span><br><span class="line">辅助索引&gt; &lt; &gt;&#x3D; &lt;&#x3D; LIKE IN OR </span><br><span class="line">主键 &lt;&gt;  NOT IN</span><br><span class="line"></span><br><span class="line">例子:</span><br><span class="line">1. </span><br><span class="line">DESC SELECT * FROM city WHERE id&lt;5;</span><br><span class="line">2. </span><br><span class="line">DESC SELECT * FROM city WHERE countrycode LIKE &#39;CH%&#39;;</span><br><span class="line">3. </span><br><span class="line">DESC SELECT * FROM city WHERE countrycode IN (&#39;CHN&#39;,&#39;USA&#39;);</span><br><span class="line"></span><br><span class="line">注意: </span><br><span class="line">1和2例子中,可以享受到B+树的优势,但是3例子中是不能享受的.</span><br><span class="line">所以,我们可以将3号列子改写:</span><br><span class="line"></span><br><span class="line">DESC SELECT * FROM city WHERE countrycode&#x3D;&#39;CHN&#39;</span><br><span class="line">UNION ALL </span><br><span class="line">SELECT * FROM city WHERE countrycode&#x3D;&#39;USA&#39;;</span><br><span class="line">ref: </span><br><span class="line">非唯一性索引,等值查询</span><br><span class="line">DESC SELECT * FROM city WHERE countrycode&#x3D;&#39;CHN&#39;;</span><br><span class="line">eq_ref: </span><br><span class="line">在多表连接时,连接条件使用了唯一索引(uk  pK)</span><br><span class="line"></span><br><span class="line">DESC SELECT b.name,a.name FROM city AS a </span><br><span class="line">JOIN country AS b </span><br><span class="line">ON a.countrycode&#x3D;b.code </span><br><span class="line">WHERE a.population &lt;100;</span><br><span class="line">DESC country</span><br><span class="line">system,const :</span><br><span class="line">唯一索引的等值查询</span><br><span class="line">DESC SELECT * FROM city WHERE id&#x3D;10;</span><br></pre></td></tr></table></figure><h3 id="8-2-2-其他字段解释"><a href="#8-2-2-其他字段解释" class="headerlink" title="8.2.2 其他字段解释"></a>8.2.2 其他字段解释</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">extra: </span><br><span class="line">filesort ,文件排序.</span><br><span class="line">SHOW INDEX FROM city;</span><br><span class="line">ALTER TABLE city ADD INDEX CountryCode(CountryCode);</span><br><span class="line">ALTER TABLE city DROP INDEX idx_c_p;</span><br><span class="line"></span><br><span class="line">DESC SELECT * FROM city WHERE countrycode&#x3D;&#39;CHN&#39;  ORDER BY population </span><br><span class="line"></span><br><span class="line">ALTER TABLE city ADD INDEX idx_(population);</span><br><span class="line">DESC SELECT * FROM city WHERE countrycode&#x3D;&#39;CHN&#39;  ORDER BY population </span><br><span class="line">ALTER TABLE city ADD INDEX idx_c_p(countrycode,population);</span><br><span class="line">ALTER TABLE city DROP INDEX idx_;</span><br><span class="line">ALTER TABLE city DROP INDEX CountryCode;</span><br><span class="line">DESC SELECT * FROM city WHERE countrycode&#x3D;&#39;CHN&#39;  ORDER BY population </span><br><span class="line"></span><br><span class="line">结论: </span><br><span class="line">1.当我们看到执行计划extra位置出现filesort,说明由文件排序出现</span><br><span class="line">2.观察需要排序(ORDER BY,GROUP BY ,DISTINCT )的条件,有没有索引</span><br><span class="line">3. 根据子句的执行顺序,去创建联合索引</span><br><span class="line"></span><br><span class="line">索引优化效果测试:</span><br><span class="line">优化前:</span><br><span class="line">[root@db01 ~]# mysqlslap --defaults-file&#x3D;&#x2F;etc&#x2F;my.cnf \</span><br><span class="line">&gt; --concurrency&#x3D;100 --iterations&#x3D;1 --create-schema&#x3D;&#39;oldboy&#39; \</span><br><span class="line">&gt; --query&#x3D;&quot;select * from oldboy.t_100w where k2&#x3D;&#39;780P&#39;&quot; engine&#x3D;innodb \</span><br><span class="line">&gt; --number-of-queries&#x3D;2000 -uroot -p123 -verbose</span><br><span class="line">mysqlslap: [Warning] Using a password on the command line interface can be insecure.</span><br><span class="line">Benchmark</span><br><span class="line">    Running for engine rbose</span><br><span class="line">    Average number of seconds to run all queries: 701.743 seconds</span><br><span class="line">    Minimum number of seconds to run all queries: 701.743 seconds</span><br><span class="line">    Maximum number of seconds to run all queries: 701.743 seconds</span><br><span class="line">    Number of clients running queries: 100</span><br><span class="line">    Average number of queries per client: 20</span><br><span class="line"></span><br><span class="line">优化后:</span><br><span class="line">[root@db01 ~]# mysqlslap --defaults-file&#x3D;&#x2F;etc&#x2F;my.cnf --concurrency&#x3D;100 --iterations&#x3D;1 --create-schema&#x3D;&#39;oldboy&#39; --query&#x3D;&quot;select * from oldboy.t_100w where k2&#x3D;&#39;780P&#39;&quot; engine&#x3D;innodb --number-of-queries&#x3D;2000 -uroot -p123 -verbose</span><br><span class="line">mysqlslap: [Warning] Using a password on the command line interface can be insecure.</span><br><span class="line">Benchmark</span><br><span class="line">    Running for engine rbose</span><br><span class="line">    Average number of seconds to run all queries: 0.190 seconds</span><br><span class="line">    Minimum number of seconds to run all queries: 0.190 seconds</span><br><span class="line">    Maximum number of seconds to run all queries: 0.190 seconds</span><br><span class="line">    Number of clients running queries: 100</span><br><span class="line">    Average number of queries per client: 20</span><br><span class="line"></span><br><span class="line">联合索引:</span><br><span class="line">1. SELECT * FROM t1  WHERE a&#x3D;    b&#x3D;   </span><br><span class="line">我们建立联合索引时:</span><br><span class="line">ALTER TABLE t1 ADD INDEX idx_a_b(a,b);  </span><br><span class="line">ALTER TABLE t1 ADD INDEX idx_b_a(b,a);  </span><br><span class="line">以上的查询不考虑索引的顺序,优化器会自动调整where的条件顺序</span><br><span class="line">注意: 索引,我们在这种情况下建索引时,需要考虑哪个列的唯一值更多,哪个放在索引左边.</span><br><span class="line"></span><br><span class="line">2.  如果出现where 条件中出现不等值查询条件</span><br><span class="line">DESC  SELECT * FROM t_100w WHERE num &lt;1000 AND k2&#x3D;&#39;DEEF&#39;;</span><br><span class="line">我们建索引时:</span><br><span class="line">ALTER TABLE t_100w ADD INDEX idx_2_n(k2,num);</span><br><span class="line">语句书写时</span><br><span class="line">DESC  SELECT * FROM t_100w WHERE  k2&#x3D;&#39;DEEF&#39;  AND  num &lt;1000 ;</span><br><span class="line">3. 如果查询中出现多子句</span><br><span class="line">我们要按照子句的执行顺序进行建立索引.</span><br></pre></td></tr></table></figure><h3 id="8-2-3-explain-desc-使用场景（面试题）"><a href="#8-2-3-explain-desc-使用场景（面试题）" class="headerlink" title="8.2.3 explain(desc)使用场景（面试题）"></a>8.2.3 explain(desc)使用场景（面试题）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">题目意思:  我们公司业务慢,请你从数据库的角度分析原因</span><br><span class="line">1.mysql出现性能问题,我总结有两种情况:</span><br><span class="line">（1）应急性的慢：突然夯住</span><br><span class="line">应急情况:数据库hang(卡了,资源耗尽)</span><br><span class="line">处理过程:</span><br><span class="line">1.show processlist;  获取到导致数据库hang的语句</span><br><span class="line">2. explain 分析SQL的执行计划,有没有走索引,索引的类型情况</span><br><span class="line">3. 建索引,改语句</span><br><span class="line">（2）一段时间慢(持续性的):</span><br><span class="line">(1)记录慢日志slowlog,分析slowlog</span><br><span class="line">(2)explain 分析SQL的执行计划,有没有走索引,索引的类型情况</span><br><span class="line">(3)建索引,改语句</span><br></pre></td></tr></table></figure><h1 id="9-索引应用规范"><a href="#9-索引应用规范" class="headerlink" title="9. 索引应用规范"></a>9. 索引应用规范</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">业务</span><br><span class="line">1.产品的功能</span><br><span class="line">2.用户的行为</span><br><span class="line">&quot;热&quot;查询语句 ---&gt;较慢---&gt;slowlog</span><br><span class="line">&quot;热&quot;数据</span><br></pre></td></tr></table></figure><h2 id="9-1-建立索引的原则（DBA运维规范）"><a href="#9-1-建立索引的原则（DBA运维规范）" class="headerlink" title="9.1 建立索引的原则（DBA运维规范）"></a>9.1 建立索引的原则（DBA运维规范）</h2><h3 id="9-1-0-说明"><a href="#9-1-0-说明" class="headerlink" title="9.1.0 说明"></a>9.1.0 说明</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">为了使索引的使用效率更高，在创建索引时，必须考虑在哪些字段上创建索引和创建什么类型的索引。那么索引设计原则又是怎样的?</span><br></pre></td></tr></table></figure><h3 id="9-1-1-必须的-建表时一定要有主键-一般是个无关列"><a href="#9-1-1-必须的-建表时一定要有主键-一般是个无关列" class="headerlink" title="9.1.1 (必须的) 建表时一定要有主键,一般是个无关列"></a>9.1.1 (必须的) 建表时一定要有主键,一般是个无关列</h3><p>略.回顾一下,聚集索引结构.</p><h3 id="9-1-2-选择唯一性索引"><a href="#9-1-2-选择唯一性索引" class="headerlink" title="9.1.2 选择唯一性索引"></a>9.1.2 选择唯一性索引</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">唯一性索引的值是唯一的，可以更快速的通过该索引来确定某条记录。</span><br><span class="line">例如，学生表中学号是具有唯一性的字段。为该字段建立唯一性索引可以很快的确定某个学生的信息。</span><br><span class="line">如果使用姓名的话，可能存在同名现象，从而降低查询速度。</span><br><span class="line"></span><br><span class="line">优化方案:</span><br><span class="line">(1) 如果非得使用重复值较多的列作为查询条件(例如:男女),可以将表逻辑拆分</span><br><span class="line">(2) 可以将此列和其他的查询类,做联和索引</span><br><span class="line">select count(*) from world.city;</span><br><span class="line">select count(distinct countrycode) from world.city;</span><br><span class="line">select count(distinct countrycode,population ) from world.city;</span><br></pre></td></tr></table></figure><h3 id="9-1-3-必须的-为经常需要where-、ORDER-BY、GROUP-BY-join-on等操作的字段，"><a href="#9-1-3-必须的-为经常需要where-、ORDER-BY、GROUP-BY-join-on等操作的字段，" class="headerlink" title="9.1.3(必须的) 为经常需要where 、ORDER BY、GROUP BY,join on等操作的字段，"></a>9.1.3(必须的) 为经常需要where 、ORDER BY、GROUP BY,join on等操作的字段，</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">排序操作会浪费很多时间。</span><br><span class="line">where  A B C      ----》 A  B  C</span><br><span class="line">in </span><br><span class="line">where A   group by B  order by C</span><br><span class="line">A,B，C</span><br><span class="line"></span><br><span class="line">如果为其建立索引，优化查询</span><br><span class="line">注：如果经常作为条件的列，重复值特别多，可以建立联合索引。</span><br></pre></td></tr></table></figure><h3 id="9-1-4-尽量使用前缀来索引"><a href="#9-1-4-尽量使用前缀来索引" class="headerlink" title="9.1.4 尽量使用前缀来索引"></a>9.1.4 尽量使用前缀来索引</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如果索引字段的值很长，最好使用值的前缀来索引。</span><br></pre></td></tr></table></figure><h3 id="9-1-5-限制索引的数目"><a href="#9-1-5-限制索引的数目" class="headerlink" title="9.1.5 限制索引的数目"></a>9.1.5 限制索引的数目</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">索引的数目不是越多越好。</span><br><span class="line">可能会产生的问题:</span><br><span class="line">(1) 每个索引都需要占用磁盘空间，索引越多，需要的磁盘空间就越大。</span><br><span class="line">(2) 修改表时，对索引的重构和更新很麻烦。越多的索引，会使更新表变得很浪费时间。</span><br><span class="line">(3) 优化器的负担会很重,有可能会影响到优化器的选择.</span><br><span class="line">percona-toolkit中有个工具,专门分析索引是否有用</span><br></pre></td></tr></table></figure><h3 id="9-1-6-删除不再使用或者很少使用的索引-percona-toolkit"><a href="#9-1-6-删除不再使用或者很少使用的索引-percona-toolkit" class="headerlink" title="9.1.6 删除不再使用或者很少使用的索引(percona toolkit)"></a>9.1.6 删除不再使用或者很少使用的索引(percona toolkit)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pt-duplicate-key-checker</span><br><span class="line"></span><br><span class="line">表中的数据被大量更新，或者数据的使用方式被改变后，原有的一些索引可能不再需要。数据库管理</span><br><span class="line">员应当定期找出这些索引，将它们删除，从而减少索引对更新操作的影响。</span><br></pre></td></tr></table></figure><h3 id="9-1-7-大表加索引-要在业务不繁忙期间操作"><a href="#9-1-7-大表加索引-要在业务不繁忙期间操作" class="headerlink" title="9.1.7 大表加索引,要在业务不繁忙期间操作"></a>9.1.7 大表加索引,要在业务不繁忙期间操作</h3><h3 id="9-1-8-尽量少在经常更新值的列上建索引"><a href="#9-1-8-尽量少在经常更新值的列上建索引" class="headerlink" title="9.1.8 尽量少在经常更新值的列上建索引"></a>9.1.8 尽量少在经常更新值的列上建索引</h3><h3 id="9-1-9-建索引原则"><a href="#9-1-9-建索引原则" class="headerlink" title="9.1.9 建索引原则"></a>9.1.9 建索引原则</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">(1) 必须要有主键,如果没有可以做为主键条件的列,创建无关列</span><br><span class="line">(2) 经常做为where条件列  order by  group by  join on, distinct 的条件(业务:产品功能+用户行为)</span><br><span class="line">(3) 最好使用唯一值多的列作为索引,如果索引列重复值较多,可以考虑使用联合索引</span><br><span class="line">(4) 列值长度较长的索引列,我们建议使用前缀索引.</span><br><span class="line">(5) 降低索引条目,一方面不要创建没用索引,不常使用的索引清理,percona toolkit(xxxxx)</span><br><span class="line">(6) 索引维护要避开业务繁忙期</span><br></pre></td></tr></table></figure><h2 id="9-2-不走索引的情况（开发规范）"><a href="#9-2-不走索引的情况（开发规范）" class="headerlink" title="9.2 不走索引的情况（开发规范）"></a>9.2 不走索引的情况（开发规范）</h2><h3 id="9-2-1-没有查询条件，或者查询条件没有建立索引"><a href="#9-2-1-没有查询条件，或者查询条件没有建立索引" class="headerlink" title="9.2.1 没有查询条件，或者查询条件没有建立索引"></a>9.2.1 没有查询条件，或者查询条件没有建立索引</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">select * from tab;       全表扫描。</span><br><span class="line">select  * from tab where 1&#x3D;1;</span><br><span class="line">在业务数据库中，特别是数据量比较大的表。</span><br><span class="line">是没有全表扫描这种需求。</span><br><span class="line">1、对用户查看是非常痛苦的。</span><br><span class="line">2、对服务器来讲毁灭性的。</span><br><span class="line">（1）</span><br><span class="line">select * from tab;</span><br><span class="line">SQL改写成以下语句：</span><br><span class="line">select  * from  tab  order by  price  limit 10 ;    需要在price列上建立索引</span><br><span class="line">（2）</span><br><span class="line">select  * from  tab where name&#x3D;&#39;zhangsan&#39;          name列没有索引</span><br><span class="line">改：</span><br><span class="line">1、换成有索引的列作为查询条件</span><br><span class="line">2、将name列建立索引</span><br></pre></td></tr></table></figure><h3 id="9-2-2-查询结果集是原表中的大部分数据，应该是25％以上。"><a href="#9-2-2-查询结果集是原表中的大部分数据，应该是25％以上。" class="headerlink" title="9.2.2 查询结果集是原表中的大部分数据，应该是25％以上。"></a>9.2.2 查询结果集是原表中的大部分数据，应该是25％以上。</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">查询的结果集，超过了总数行数25%，优化器觉得就没有必要走索引了。</span><br><span class="line"></span><br><span class="line">假如：tab表 id，name    id:1-100w  ，id列有(辅助)索引</span><br><span class="line">select * from tab  where id&gt;500000;</span><br><span class="line">如果业务允许，可以使用limit控制。</span><br><span class="line">怎么改写 ？</span><br><span class="line">结合业务判断，有没有更好的方式。如果没有更好的改写方案</span><br><span class="line">尽量不要在mysql存放这个数据了。放到redis里面。</span><br></pre></td></tr></table></figure><h3 id="9-2-3-索引本身失效，统计数据不真实"><a href="#9-2-3-索引本身失效，统计数据不真实" class="headerlink" title="9.2.3 索引本身失效，统计数据不真实"></a>9.2.3 索引本身失效，统计数据不真实</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">索引有自我维护的能力。</span><br><span class="line">对于表内容变化比较频繁的情况下，有可能会出现索引失效。</span><br><span class="line">一般是删除重建</span><br><span class="line"></span><br><span class="line">现象:</span><br><span class="line">有一条select语句平常查询时很快,突然有一天很慢,会是什么原因</span><br><span class="line">select?  ---&gt;索引失效,，统计数据不真实</span><br><span class="line">DML ?   ---&gt;锁冲突</span><br></pre></td></tr></table></figure><h3 id="9-2-4-查询条件使用函数在索引列上，或者对索引列进行运算，运算包括-，-，-，-，-等"><a href="#9-2-4-查询条件使用函数在索引列上，或者对索引列进行运算，运算包括-，-，-，-，-等" class="headerlink" title="9.2.4 查询条件使用函数在索引列上，或者对索引列进行运算，运算包括(+，-，*，/，! 等)"></a>9.2.4 查询条件使用函数在索引列上，或者对索引列进行运算，运算包括(+，-，*，/，! 等)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">例子：</span><br><span class="line">错误的例子：select * from test where id-1&#x3D;9;</span><br><span class="line">正确的例子：select * from test where id&#x3D;10;</span><br><span class="line">算术运算</span><br><span class="line">函数运算</span><br><span class="line">子查询</span><br></pre></td></tr></table></figure><h3 id="9-2-5-隐式转换导致索引失效-这一点应当引起重视-也是开发中经常会犯的错误"><a href="#9-2-5-隐式转换导致索引失效-这一点应当引起重视-也是开发中经常会犯的错误" class="headerlink" title="9.2.5 隐式转换导致索引失效.这一点应当引起重视.也是开发中经常会犯的错误."></a>9.2.5 隐式转换导致索引失效.这一点应当引起重视.也是开发中经常会犯的错误.</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">这样会导致索引失效. 错误的例子：</span><br><span class="line">mysql&gt; alter table tab add index inx_tel(telnum);</span><br><span class="line">Query OK, 0 rows affected (0.03 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br><span class="line">mysql&gt;</span><br><span class="line">mysql&gt; desc tab;</span><br><span class="line">+--------+-------------+------+-----+---------+-------+</span><br><span class="line">| Field  | Type        | Null | Key | Default | Extra |</span><br><span class="line">+--------+-------------+------+-----+---------+-------+</span><br><span class="line">| id    | int(11)    | YES  |    | NULL    |      |</span><br><span class="line">| name  | varchar(20) | YES  |    | NULL    |      |</span><br><span class="line">| telnum | varchar(20) | YES  | MUL | NULL    |      |</span><br><span class="line">+--------+-------------+------+-----+---------+-------+</span><br><span class="line">3 rows in set (0.01 sec)</span><br><span class="line">mysql&gt; select * from tab where telnum&#x3D;&#39;1333333&#39;;</span><br><span class="line">+------+------+---------+</span><br><span class="line">| id  | name | telnum  |</span><br><span class="line">+------+------+---------+</span><br><span class="line">|    1 | a    | 1333333 |</span><br><span class="line">+------+------+---------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">mysql&gt; select * from tab where telnum&#x3D;1333333;</span><br><span class="line">+------+------+---------+</span><br><span class="line">| id  | name | telnum  |</span><br><span class="line">+------+------+---------+</span><br><span class="line">|    1 | a    | 1333333 |</span><br><span class="line">+------+------+---------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">mysql&gt; explain  select * from tab where telnum&#x3D;&#39;1333333&#39;;</span><br><span class="line">+----+-------------+-------+------+---------------+---------+---------+-------+------+-----------------------+</span><br><span class="line">| id | select_type | table | type | possible_keys | key    | key_len | ref  | rows | Extra                |</span><br><span class="line">+----+-------------+-------+------+---------------+---------+---------+-------+------+-----------------------+</span><br><span class="line"></span><br><span class="line">|  1 | SIMPLE      | tab  | ref  | inx_tel      | inx_tel | 63      | const |    1 | Using index condition |</span><br><span class="line">+----+-------------+-------+------+---------------+---------+---------+-------+------+-----------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">mysql&gt; explain  select * from tab where telnum&#x3D;1333333;</span><br><span class="line">+----+-------------+-------+------+---------------+------+---------+------+------+-------------+</span><br><span class="line">| id | select_type | table | type | possible_keys | key  | key_len | ref  | rows | Extra      |</span><br><span class="line">+----+-------------+-------+------+---------------+------+---------+------+------+-------------+</span><br><span class="line">|  1 | SIMPLE      | tab  | ALL  | inx_tel      | NULL | NULL    | NULL |    2 | Using where |</span><br><span class="line">+----+-------------+-------+------+---------------+------+---------+------+------+-------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">mysql&gt; explain  select * from tab where telnum&#x3D;1555555;</span><br><span class="line">+----+-------------+-------+------+---------------+------+---------+------+------+-------------+</span><br><span class="line">| id | select_type | table | type | possible_keys | key  | key_len | ref  | rows | Extra      |</span><br><span class="line">+----+-------------+-------+------+---------------+------+---------+------+------+-------------+</span><br><span class="line">|  1 | SIMPLE      | tab  | ALL  | inx_tel      | NULL | NULL    | NULL |    2 | Using where |</span><br><span class="line">+----+-------------+-------+------+---------------+------+---------+------+------+-------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">mysql&gt; explain  select * from tab where telnum&#x3D;&#39;1555555&#39;;</span><br><span class="line">+----+-------------+-------+------+---------------+---------+---------+-------+------+-----------------------+</span><br><span class="line">| id | select_type | table | type | possible_keys | key    | key_len | ref  | rows | Extra                |</span><br><span class="line">+----+-------------+-------+------+---------------+---------+---------+-------+------+-----------------------+</span><br><span class="line">|  1 | SIMPLE      | tab  | ref  | inx_tel      | inx_tel | 63      | const |    1 | Using index condition |</span><br><span class="line">+----+-------------+-------+------+---------------+---------+---------+-------+------+-----------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure><h3 id="9-2-6-lt-gt-，not-in-不走索引（辅助索引）"><a href="#9-2-6-lt-gt-，not-in-不走索引（辅助索引）" class="headerlink" title="9.2.6 &lt;&gt; ，not in 不走索引（辅助索引）"></a>9.2.6 &lt;&gt; ，not in 不走索引（辅助索引）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">EXPLAIN  SELECT * FROM teltab WHERE telnum  &lt;&gt; &#39;110&#39;;</span><br><span class="line">EXPLAIN  SELECT * FROM teltab WHERE telnum  NOT IN (&#39;110&#39;,&#39;119&#39;);</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from tab where telnum &lt;&gt; &#39;1555555&#39;;</span><br><span class="line">+------+------+---------+</span><br><span class="line">| id  | name | telnum  |</span><br><span class="line">+------+------+---------+</span><br><span class="line">|    1 | a    | 1333333 |</span><br><span class="line">+------+------+---------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">mysql&gt; explain select * from tab where telnum &lt;&gt; &#39;1555555&#39;;</span><br><span class="line"></span><br><span class="line">单独的&gt;,&lt;,in 有可能走，也有可能不走，和结果集有关，尽量结合业务添加limit</span><br><span class="line">or或in  尽量改成union</span><br><span class="line">EXPLAIN  SELECT * FROM teltab WHERE telnum  IN (&#39;110&#39;,&#39;119&#39;);</span><br><span class="line">改写成：</span><br><span class="line">EXPLAIN SELECT * FROM teltab WHERE telnum&#x3D;&#39;110&#39;</span><br><span class="line">UNION ALL</span><br><span class="line">SELECT * FROM teltab WHERE telnum&#x3D;&#39;119&#39;</span><br></pre></td></tr></table></figure><h3 id="9-2-7-like-“-“-百分号在最前面不走"><a href="#9-2-7-like-“-“-百分号在最前面不走" class="headerlink" title="9.2.7 like “%_“ 百分号在最前面不走"></a>9.2.7 like “%_“ 百分号在最前面不走</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">EXPLAIN SELECT * FROM teltab WHERE telnum LIKE &#39;31%&#39;  走range索引扫描</span><br><span class="line">EXPLAIN SELECT * FROM teltab WHERE telnum LIKE &#39;%110&#39;  不走索引</span><br><span class="line">%linux%类的搜索需求，可以使用elasticsearch+mongodb 专门做搜索服务的数据库产品</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL进阶 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MySQL进阶之路初级DBA（三）</title>
      <link href="/posts/16274/"/>
      <url>/posts/16274/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL-SQL基础应用"><a href="#MySQL-SQL基础应用" class="headerlink" title="MySQL-SQL基础应用"></a>MySQL-SQL基础应用</h1><h1 id="1、SQL介绍"><a href="#1、SQL介绍" class="headerlink" title="1、SQL介绍"></a>1、SQL介绍</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">结构化查询语言</span><br><span class="line">5.7 以后符合SQL92严格模式</span><br><span class="line">通过sql_mode参数来控制</span><br></pre></td></tr></table></figure><h1 id="2、常用SQL分类"><a href="#2、常用SQL分类" class="headerlink" title="2、常用SQL分类"></a>2、常用SQL分类</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">DDL：数据定义语言</span><br><span class="line">DCL：数据控制语言</span><br><span class="line">DML：数据操作语言</span><br><span class="line">DQL：数据的查询语言</span><br></pre></td></tr></table></figure><h1 id="3、数据类型、表属性、字符集"><a href="#3、数据类型、表属性、字符集" class="headerlink" title="3、数据类型、表属性、字符集"></a>3、数据类型、表属性、字符集</h1><h2 id="3-1-数据类型"><a href="#3-1-数据类型" class="headerlink" title="3.1 数据类型"></a>3.1 数据类型</h2><h3 id="3-1-1-作用"><a href="#3-1-1-作用" class="headerlink" title="3.1.1 作用"></a>3.1.1 作用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">保证数据的准确性和标准性。</span><br></pre></td></tr></table></figure><h3 id="3-1-2-种类"><a href="#3-1-2-种类" class="headerlink" title="3.1.2 种类"></a>3.1.2 种类</h3><p><strong>数值类型</strong></p><p><img src="http://upload-images.jianshu.io/upload_images/16956686-6cb8cf2c0c681252.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/639/format/webp" alt="img"></p><p>image</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tinyint  ： -128~127</span><br><span class="line">int       ：-2^31~2^31-1</span><br><span class="line">说明：手机号是无法存储到int的。一般是使用char类型来存储收集号</span><br></pre></td></tr></table></figure><p><strong>字符类型</strong></p><p><img src="http://upload-images.jianshu.io/upload_images/16956686-599be7ba0c7040a9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/609/format/webp" alt="img"></p><p>image</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">char(11) ：</span><br><span class="line">定长 的字符串类型,在存储字符串时，最大字符长度11个，立即分配11个字符长度的存储空间，如果存不满，空格填充。</span><br><span class="line">varchar(11):</span><br><span class="line">变长的字符串类型看，最大字符长度11个。在存储字符串时，自动判断字符长度，按需分配存储空间。</span><br><span class="line">enum(&#39;bj&#39;,&#39;tj&#39;,&#39;sh&#39;)：</span><br><span class="line">枚举类型，比较适合于将来此列的值是固定范围内的特点，可以使用enum,可以很大程度的优化我们的索引结构。</span><br></pre></td></tr></table></figure><p><strong>时间类型</strong></p><p><img src="http://upload-images.jianshu.io/upload_images/16956686-7abec7820bfb10cd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/645/format/webp" alt="img"></p><p>image</p><p>列值不能为空，也是表设计的规范，尽可能将所有的列设置为非空。可以设置默认值为0<br><strong>unique key</strong> ：唯一键<br>列值不能重复<br><strong>unsigned</strong> ：无符号<br>针对数字列，非负数。</p><p>其他属性:<br><strong>key</strong> :索引<br>可以在某列上建立索引，来优化查询</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">DATETIME </span><br><span class="line">范围为从 1000-01-01 00:00:00.000000 至 9999-12-31 23:59:59.999999。</span><br><span class="line">TIMESTAMP </span><br><span class="line">1970-01-01 00:00:00.000000 至 2038-01-19 03:14:07.999999。</span><br><span class="line">timestamp会受到时区的影响</span><br></pre></td></tr></table></figure><p><strong>二进制类型</strong></p><p><img src="http://upload-images.jianshu.io/upload_images/16956686-f69aa8a185589451.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/637/format/webp" alt="img"></p><p>image</p><h2 id="3-2-表属性"><a href="#3-2-表属性" class="headerlink" title="3.2 表属性"></a>3.2 表属性</h2><h3 id="3-2-1-列属性"><a href="#3-2-1-列属性" class="headerlink" title="3.2.1 列属性"></a>3.2.1 列属性</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">约束(一般建表时添加):</span><br><span class="line">**primary key** ：主键约束</span><br><span class="line">设置为主键的列，此列的值必须非空且唯一，主键在一个表中只能有一个，但是可以有多个列一起构成。</span><br><span class="line">**not null**      ：非空约束</span><br><span class="line">列值不能为空，也是表设计的规范，尽可能将所有的列设置为非空。可以设置默认值为0</span><br><span class="line">**unique key** ：唯一键</span><br><span class="line">列值不能重复</span><br><span class="line">**unsigned** ：无符号</span><br><span class="line">针对数字列，非负数。</span><br><span class="line"></span><br><span class="line">其他属性:</span><br><span class="line">**key** :索引</span><br><span class="line">可以在某列上建立索引，来优化查询,一般是根据需要后添加</span><br><span class="line">**default**           :默认值</span><br><span class="line">列中，没有录入值时，会自动使用default的值填充</span><br><span class="line">**auto_increment**:自增长</span><br><span class="line">针对数字列，顺序的自动填充数据（默认是从1开始，将来可以设定起始点和偏移量）</span><br><span class="line">**comment ** : 注释</span><br></pre></td></tr></table></figure><h3 id="3-2-2-表的属性"><a href="#3-2-2-表的属性" class="headerlink" title="3.2.2 表的属性"></a>3.2.2 表的属性</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">存储引擎:</span><br><span class="line">InnoDB（默认的）</span><br><span class="line">字符集和排序规则:</span><br><span class="line">utf8       </span><br><span class="line">utf8mb4</span><br></pre></td></tr></table></figure><h2 id="3-3-字符集和校对规则"><a href="#3-3-字符集和校对规则" class="headerlink" title="3.3 字符集和校对规则"></a>3.3 字符集和校对规则</h2><h3 id="3-3-1-字符集"><a href="#3-3-1-字符集" class="headerlink" title="3.3.1 字符集"></a>3.3.1 字符集</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">utf8       </span><br><span class="line">utf8mb4</span><br></pre></td></tr></table></figure><h3 id="3-3-2-校对规则（排序规则）"><a href="#3-3-2-校对规则（排序规则）" class="headerlink" title="3.3.2 校对规则（排序规则）"></a>3.3.2 校对规则（排序规则）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">大小写是否敏感</span><br></pre></td></tr></table></figure><h1 id="4、DDL应用"><a href="#4、DDL应用" class="headerlink" title="4、DDL应用"></a>4、DDL应用</h1><h2 id="4-1-数据定义语言"><a href="#4-1-数据定义语言" class="headerlink" title="4.1 数据定义语言"></a>4.1 数据定义语言</h2><h2 id="4-2-库定义"><a href="#4-2-库定义" class="headerlink" title="4.2 库定义"></a>4.2 库定义</h2><h3 id="4-2-1-创建"><a href="#4-2-1-创建" class="headerlink" title="4.2.1 创建"></a>4.2.1 创建</h3><h3 id="4-2-1-创建数据库"><a href="#4-2-1-创建数据库" class="headerlink" title="4.2.1 创建数据库"></a>4.2.1 创建数据库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">create database school;</span><br><span class="line">create schema sch;</span><br><span class="line">show charset;</span><br><span class="line">show collation;</span><br><span class="line">CREATE DATABASE test CHARSET utf8;</span><br><span class="line">create database xyz charset utf8mb4 collate utf8mb4_bin;</span><br><span class="line"></span><br><span class="line">建库规范：</span><br><span class="line">1.库名不能有大写字母   </span><br><span class="line">2.建库要加字符集         </span><br><span class="line">3.库名不能有数字开头</span><br><span class="line">4. 库名要和业务相关</span><br></pre></td></tr></table></figure><p>建库标准语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; create database db charset utf8mb4;</span><br><span class="line">mysql&gt; show create database xuexiao;</span><br></pre></td></tr></table></figure><h3 id="4-2-2-删除-生产中禁止使用"><a href="#4-2-2-删除-生产中禁止使用" class="headerlink" title="4.2.2 删除(生产中禁止使用)"></a>4.2.2 删除(生产中禁止使用)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; drop database oldboy;</span><br></pre></td></tr></table></figure><h3 id="4-2-3-修改"><a href="#4-2-3-修改" class="headerlink" title="4.2.3 修改"></a>4.2.3 修改</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SHOW CREATE DATABASE school;</span><br><span class="line">ALTER DATABASE school  CHARSET utf8;</span><br><span class="line">注意：修改字符集，修改后的字符集一定是原字符集的严格超集</span><br></pre></td></tr></table></figure><h3 id="4-2-4-查询库相关信息（DQL）"><a href="#4-2-4-查询库相关信息（DQL）" class="headerlink" title="4.2.4 查询库相关信息（DQL）"></a>4.2.4 查询库相关信息（DQL）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">show databases；</span><br><span class="line">show create database oldboy；</span><br></pre></td></tr></table></figure><h2 id="4-3-表定义"><a href="#4-3-表定义" class="headerlink" title="4.3 表定义"></a>4.3 表定义</h2><h3 id="4-3-1-创建"><a href="#4-3-1-创建" class="headerlink" title="4.3.1 创建"></a>4.3.1 创建</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create table stu(</span><br><span class="line">列1  属性（数据类型、约束、其他属性） ，</span><br><span class="line">列2  属性，</span><br><span class="line">列3  属性</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="4-3-2-建表"><a href="#4-3-2-建表" class="headerlink" title="4.3.2 建表"></a>4.3.2 建表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">USE school;</span><br><span class="line">CREATE TABLE stu(</span><br><span class="line">id      INT NOT NULL PRIMARY KEY AUTO_INCREMENT COMMENT &#39;学号&#39;,</span><br><span class="line">sname   VARCHAR(255) NOT NULL COMMENT &#39;姓名&#39;,</span><br><span class="line">sage    TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT &#39;年龄&#39;,</span><br><span class="line">sgender ENUM(&#39;m&#39;,&#39;f&#39;,&#39;n&#39;) NOT NULL DEFAULT &#39;n&#39; COMMENT &#39;性别&#39; ,</span><br><span class="line">sfz     CHAR(18) NOT NULL UNIQUE  COMMENT &#39;身份证&#39;,</span><br><span class="line">intime  TIMESTAMP NOT NULL DEFAULT NOW() COMMENT &#39;入学时间&#39;</span><br><span class="line">) ENGINE&#x3D;INNODB CHARSET&#x3D;utf8 COMMENT &#39;学生表&#39;;</span><br></pre></td></tr></table></figure><p>建表规范：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1. 表名小写</span><br><span class="line">2. 不能是数字开头</span><br><span class="line">3. 注意字符集和存储引擎</span><br><span class="line">4. 表名和业务有关</span><br><span class="line">5. 选择合适的数据类型</span><br><span class="line">6. 每个列都要有注释</span><br><span class="line">7. 每个列设置为非空，无法保证非空，用0来填充。</span><br></pre></td></tr></table></figure><h3 id="4-3-2-删除-生产中禁用命令"><a href="#4-3-2-删除-生产中禁用命令" class="headerlink" title="4.3.2 删除(生产中禁用命令)"></a>4.3.2 删除(生产中禁用命令)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop table t1;</span><br></pre></td></tr></table></figure><h3 id="4-3-3-修改"><a href="#4-3-3-修改" class="headerlink" title="4.3.3 修改"></a>4.3.3 修改</h3><ol><li>在stu表中添加qq列</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DESC stu;</span><br><span class="line">ALTER TABLE stu ADD qq VARCHAR(20) NOT NULL UNIQUE COMMENT &#39;qq号&#39;;</span><br></pre></td></tr></table></figure><ol><li>在sname后加微信列</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE stu ADD wechat VARCHAR(64) NOT NULL UNIQUE  COMMENT &#39;微信号&#39; AFTER sname ;</span><br></pre></td></tr></table></figure><ol><li>在id列前加一个新列num</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE stu ADD num INT NOT NULL COMMENT &#39;数字&#39; FIRST;</span><br><span class="line">DESC stu;</span><br></pre></td></tr></table></figure><ol><li>把刚才添加的列都删掉(危险)</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE stu DROP num;</span><br><span class="line">ALTER TABLE stu DROP qq;</span><br><span class="line">ALTER TABLE stu DROP wechat;</span><br></pre></td></tr></table></figure><ol><li>修改sname数据类型的属性</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE stu MODIFY sname VARCHAR(128)  NOT NULL ;</span><br></pre></td></tr></table></figure><ol><li>将sgender 改为 sg 数据类型改为 CHAR 类型</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE stu CHANGE sgender sg CHAR(1) NOT NULL DEFAULT &#39;n&#39; ;</span><br><span class="line">DESC stu;</span><br></pre></td></tr></table></figure><h3 id="4-3-4-表属性查询（DQL）"><a href="#4-3-4-表属性查询（DQL）" class="headerlink" title="4.3.4 表属性查询（DQL）"></a>4.3.4 表属性查询（DQL）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">use school</span><br><span class="line">show tables；</span><br><span class="line">desc stu;</span><br><span class="line">show create table stu；</span><br><span class="line">CREATE TABLE ceshi LIKE stu;</span><br></pre></td></tr></table></figure><h1 id="5-DCL应用"><a href="#5-DCL应用" class="headerlink" title="5. DCL应用 ****"></a>5. DCL应用 ****</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grant </span><br><span class="line">revoke</span><br></pre></td></tr></table></figure><h1 id="6-DML应用"><a href="#6-DML应用" class="headerlink" title="6. DML应用"></a>6. DML应用</h1><h2 id="6-1-作用"><a href="#6-1-作用" class="headerlink" title="6.1 作用"></a>6.1 作用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">对表中的数据行进行增、删、改</span><br></pre></td></tr></table></figure><h2 id="6-2-insert"><a href="#6-2-insert" class="headerlink" title="6.2 insert"></a>6.2 insert</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">--- 最标准的insert语句</span><br><span class="line">INSERT INTO stu(id,sname,sage,sg,sfz,intime) </span><br><span class="line">VALUES</span><br><span class="line">(1,&#39;zs&#39;,18,&#39;m&#39;,&#39;123456&#39;,NOW());</span><br><span class="line">SELECT * FROM stu;</span><br><span class="line">--- 省事的写法</span><br><span class="line">INSERT INTO stu </span><br><span class="line">VALUES</span><br><span class="line">(2,&#39;ls&#39;,18,&#39;m&#39;,&#39;1234567&#39;,NOW());</span><br><span class="line">--- 针对性的录入数据</span><br><span class="line">INSERT INTO stu(sname,sfz)</span><br><span class="line">VALUES (&#39;w5&#39;,&#39;34445788&#39;);</span><br><span class="line">--- 同时录入多行数据</span><br><span class="line">INSERT INTO stu(sname,sfz)</span><br><span class="line">VALUES </span><br><span class="line">(&#39;w55&#39;,&#39;3444578d8&#39;),</span><br><span class="line">(&#39;m6&#39;,&#39;1212313&#39;),</span><br><span class="line">(&#39;aa&#39;,&#39;123213123123&#39;);</span><br><span class="line">SELECT * FROM stu;</span><br></pre></td></tr></table></figure><h2 id="6-3-update"><a href="#6-3-update" class="headerlink" title="6.3 update"></a>6.3 update</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">DESC stu;</span><br><span class="line">SELECT * FROM stu;</span><br><span class="line">UPDATE stu SET sname&#x3D;&#39;zhao4&#39; WHERE id&#x3D;2;</span><br><span class="line">注意：update语句必须要加where。</span><br></pre></td></tr></table></figure><h2 id="6-4-delete（危险！！）"><a href="#6-4-delete（危险！！）" class="headerlink" title="6.4 delete（危险！！）"></a>6.4 delete（危险！！）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DELETE FROM stu  WHERE id&#x3D;3;</span><br></pre></td></tr></table></figure><p>全表删除:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">DELETE FROM stu</span><br><span class="line">truncate table stu;</span><br><span class="line">区别:</span><br><span class="line">delete: DML操作, 是逻辑性质删除,逐行进行删除,速度慢.</span><br><span class="line">truncate: DDL操作,对与表段中的数据页进行清空,速度快.</span><br></pre></td></tr></table></figure><p>伪删除：用update来替代delete，最终保证业务中查不到（select）即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1.添加状态列</span><br><span class="line">ALTER TABLE stu ADD state TINYINT NOT NULL DEFAULT 1 ;</span><br><span class="line">SELECT * FROM stu;</span><br><span class="line">2. UPDATE 替代 DELETE</span><br><span class="line">UPDATE stu SET state&#x3D;0 WHERE id&#x3D;6;</span><br><span class="line">3. 业务语句查询</span><br><span class="line">SELECT * FROM stu WHERE state&#x3D;1;</span><br></pre></td></tr></table></figure><h1 id="7-DQL应用-select"><a href="#7-DQL应用-select" class="headerlink" title="7. DQL应用(select )"></a>7. DQL应用(select )</h1><h2 id="7-1-单独使用"><a href="#7-1-单独使用" class="headerlink" title="7.1 单独使用"></a>7.1 单独使用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-- select @@xxx 查看系统参数</span><br><span class="line">SELECT @@port;</span><br><span class="line">SELECT @@basedir;</span><br><span class="line">SELECT @@datadir;</span><br><span class="line">SELECT @@socket;</span><br><span class="line">SELECT @@server_id;</span><br></pre></td></tr></table></figure><p>-- select 函数();</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SELECT NOW();</span><br><span class="line">SELECT DATABASE();</span><br><span class="line">SELECT USER();</span><br><span class="line">SELECT CONCAT(&quot;hello world&quot;);</span><br><span class="line">SELECT CONCAT(USER,&quot;@&quot;,HOST) FROM mysql.user;</span><br><span class="line">SELECT GROUP_CONCAT(USER,&quot;@&quot;,HOST) FROM mysql.user;</span><br><span class="line">http:&#x2F;&#x2F;dev.mysql.com&#x2F;doc&#x2F;refman&#x2F;5.7&#x2F;en&#x2F;func-op-summary-ref.html?tdsourcetag&#x3D;s_pcqq_aiomsg</span><br></pre></td></tr></table></figure><h2 id="7-2-单表子句-from"><a href="#7-2-单表子句-from" class="headerlink" title="7.2 单表子句-from"></a>7.2 单表子句-from</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT 列1,列2 FROM 表</span><br><span class="line">SELECT  *  FROM 表</span><br></pre></td></tr></table></figure><p>例子:<br>-- 查询stu中所有的数据(不要对大表进行操作)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM stu ;</span><br></pre></td></tr></table></figure><p>-- 查询stu表中,学生姓名和入学时间</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT sname , intime FROM stu;</span><br></pre></td></tr></table></figure><p>=====================<br>oldguo带大家学单词：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">world            &#x3D;&#x3D;&#x3D;&gt;世界</span><br><span class="line">city             &#x3D;&#x3D;&#x3D;&gt;城市</span><br><span class="line">country          &#x3D;&#x3D;&#x3D;&gt;国家</span><br><span class="line">countrylanguage  &#x3D;&#x3D;&#x3D;&gt;国家语言</span><br><span class="line"></span><br><span class="line">city:城市表</span><br><span class="line">DESC city;</span><br><span class="line">ID :         城市ID</span><br><span class="line">NAME :       城市名</span><br><span class="line">CountryCode: 国家代码，比如中国CHN 美国USA</span><br><span class="line">District :   区域</span><br><span class="line">Population : 人口</span><br><span class="line"></span><br><span class="line">SHOW CREATE TABLE city;</span><br><span class="line">SELECT * FROM city WHERE id&lt;10;</span><br></pre></td></tr></table></figure><p>======================</p><h2 id="7-3-单表子句-where"><a href="#7-3-单表子句-where" class="headerlink" title="7.3 单表子句-where"></a>7.3 单表子句-where</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT col1,col2 FROM TABLE WHERE colN 条件;</span><br></pre></td></tr></table></figure><h3 id="7-3-1-where配合等值查询"><a href="#7-3-1-where配合等值查询" class="headerlink" title="7.3.1 where配合等值查询"></a>7.3.1 where配合等值查询</h3><p>例子:<br>-- 查询中国(CHN)所有城市信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM city WHERE countrycode&#x3D;&#39;CHN&#39;;</span><br></pre></td></tr></table></figure><p>-- 查询北京市的信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM city WHERE NAME&#x3D;&#39;peking&#39;;</span><br></pre></td></tr></table></figure><p>-- 查询甘肃省所有城市信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM city WHERE district&#x3D;&#39;gansu&#39;;</span><br></pre></td></tr></table></figure><h3 id="7-3-2-where配合比较操作符-gt-lt-gt-lt-lt-gt"><a href="#7-3-2-where配合比较操作符-gt-lt-gt-lt-lt-gt" class="headerlink" title="7.3.2 where配合比较操作符(&gt; &lt; &gt;= &lt;= &lt;&gt;)"></a>7.3.2 where配合比较操作符(&gt; &lt; &gt;= &lt;= &lt;&gt;)</h3><p>例子:<br>-- 查询世界上少于100人的城市</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM city WHERE population&lt;100;</span><br></pre></td></tr></table></figure><h3 id="7-3-3-where配合逻辑运算符-and-or"><a href="#7-3-3-where配合逻辑运算符-and-or" class="headerlink" title="7.3.3 where配合逻辑运算符(and or )"></a>7.3.3 where配合逻辑运算符(and or )</h3><p>例子:<br>-- 中国人口数量大于500w</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM city WHERE countrycode&#x3D;&#39;CHN&#39; AND population&gt;5000000;</span><br></pre></td></tr></table></figure><p>-- 中国或美国城市信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM city WHERE countrycode&#x3D;&#39;CHN&#39; OR countrycode&#x3D;&#39;USA&#39;;</span><br></pre></td></tr></table></figure><h3 id="7-3-4-where配合模糊查询"><a href="#7-3-4-where配合模糊查询" class="headerlink" title="7.3.4 where配合模糊查询"></a>7.3.4 where配合模糊查询</h3><p>例子:<br>-- 查询省的名字前面带guang开头的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM city WHERE district LIKE &#39;guang%&#39;;    </span><br><span class="line">注意:%不能放在前面,因为不走索引.</span><br></pre></td></tr></table></figure><h3 id="7-3-5-where配合in语句"><a href="#7-3-5-where配合in语句" class="headerlink" title="7.3.5 where配合in语句"></a>7.3.5 where配合in语句</h3><p>-- 中国或美国城市信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM city WHERE countrycode IN (&#39;CHN&#39; ,&#39;USA&#39;);</span><br></pre></td></tr></table></figure><h3 id="7-3-6-where配合between-and"><a href="#7-3-6-where配合between-and" class="headerlink" title="7.3.6 where配合between and"></a>7.3.6 where配合between and</h3><p>例子:<br>-- 查询世界上人口数量大于100w小于200w的城市信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM city  WHERE population &gt;1000000 AND population &lt;2000000;</span><br><span class="line">SELECT * FROM city  WHERE population BETWEEN 1000000 AND 2000000;</span><br></pre></td></tr></table></figure><h2 id="7-4-group-by-常用聚合函数"><a href="#7-4-group-by-常用聚合函数" class="headerlink" title="7.4 group by + 常用聚合函数"></a>7.4 group by + 常用聚合函数</h2><h3 id="7-4-1-作用"><a href="#7-4-1-作用" class="headerlink" title="7.4.1 作用"></a>7.4.1 作用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">根据 by后面的条件进行分组，方便统计，by后面跟一个列或多个列</span><br></pre></td></tr></table></figure><h3 id="7-4-2-常用聚合函数"><a href="#7-4-2-常用聚合函数" class="headerlink" title="7.4.2 常用聚合函数"></a>7.4.2 常用聚合函数</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">**max()**      ：最大值</span><br><span class="line">**min()**      ：最小值</span><br><span class="line">**avg()**      ：平均值</span><br><span class="line">**sum()**      ：总和</span><br><span class="line">**count()**    ：个数</span><br><span class="line">group_concat() : 列转行</span><br></pre></td></tr></table></figure><h3 id="7-4-3-例子："><a href="#7-4-3-例子：" class="headerlink" title="7.4.3 例子："></a>7.4.3 例子：</h3><p>例子1：统计世界上每个国家的总人口数.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">USE world</span><br><span class="line">SELECT countrycode ,SUM(population)    FROM  city  GROUP BY countrycode;</span><br></pre></td></tr></table></figure><p>例子2： 统计中国各个省的总人口数量(练习)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT district,SUM(Population) FROM city  WHERE countrycode&#x3D;&#39;chn&#39; GROUP BY district;</span><br></pre></td></tr></table></figure><p>例子3：统计世界上每个国家的城市数量(练习)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT countrycode,COUNT(id)  FROM city GROUP BY countrycode;</span><br></pre></td></tr></table></figure><h2 id="7-5-having"><a href="#7-5-having" class="headerlink" title="7.5 having"></a>7.5 having</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">where|group|having</span><br></pre></td></tr></table></figure><p>例子4：统计中国每个省的总人口数，只打印总人口数小于100</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT district,SUM(Population)</span><br><span class="line">FROM city</span><br><span class="line">WHERE countrycode&#x3D;&#39;chn&#39;</span><br><span class="line">GROUP BY district</span><br><span class="line">HAVING SUM(Population) &lt; 1000000 ;</span><br></pre></td></tr></table></figure><h2 id="7-6-order-by-limit"><a href="#7-6-order-by-limit" class="headerlink" title="7.6 order by + limit"></a>7.6 order by + limit</h2><h3 id="7-6-1-作用"><a href="#7-6-1-作用" class="headerlink" title="7.6.1 作用"></a>7.6.1 作用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">实现先排序，by后添加条件列</span><br></pre></td></tr></table></figure><h3 id="7-6-2-应用案例"><a href="#7-6-2-应用案例" class="headerlink" title="7.6.2 应用案例"></a>7.6.2 应用案例</h3><ol><li>查看中国所有的城市，并按人口数进行排序(从大到小)</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM city WHERE countrycode&#x3D;&#39;CHN&#39; ORDER BY population DESC;</span><br></pre></td></tr></table></figure><ol><li>统计中国各个省的总人口数量，按照总人口从大到小排序</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT district AS 省 ,SUM(Population) AS 总人口</span><br><span class="line">FROM city</span><br><span class="line">WHERE countrycode&#x3D;&#39;chn&#39;</span><br><span class="line">GROUP BY district</span><br><span class="line">ORDER BY 总人口 DESC ;</span><br></pre></td></tr></table></figure><ol><li>统计中国,每个省的总人口,找出总人口大于500w的,并按总人口从大到小排序,只显示前三名</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">SELECT  district, SUM(population)  FROM  city </span><br><span class="line">WHERE countrycode&#x3D;&#39;CHN&#39;</span><br><span class="line">GROUP BY district </span><br><span class="line">HAVING SUM(population)&gt;5000000</span><br><span class="line">ORDER BY SUM(population) DESC</span><br><span class="line">LIMIT 3 ;</span><br><span class="line"></span><br><span class="line">LIMIT N ,M ---&gt;跳过N,显示一共M行</span><br><span class="line">LIMIT 5,5</span><br><span class="line"></span><br><span class="line">SELECT  district, SUM(population)  FROM  city </span><br><span class="line">WHERE countrycode&#x3D;&#39;CHN&#39;</span><br><span class="line">GROUP BY district </span><br><span class="line">HAVING SUM(population)&gt;5000000</span><br><span class="line">ORDER BY SUM(population) DESC</span><br><span class="line">LIMIT 5,5;</span><br></pre></td></tr></table></figure><h2 id="7-7-distinct：去重复"><a href="#7-7-distinct：去重复" class="headerlink" title="7.7 distinct：去重复"></a>7.7 distinct：去重复</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT countrycode FROM city ;</span><br><span class="line">SELECT DISTINCT(countrycode) FROM city  ;</span><br></pre></td></tr></table></figure><h2 id="7-8-联合查询-union-all"><a href="#7-8-联合查询-union-all" class="headerlink" title="7.8 联合查询- union all"></a>7.8 联合查询- union all</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">-- 中国或美国城市信息</span><br><span class="line"></span><br><span class="line">SELECT * FROM city </span><br><span class="line">WHERE countrycode IN (&#39;CHN&#39; ,&#39;USA&#39;);</span><br><span class="line"></span><br><span class="line">SELECT * FROM city WHERE countrycode&#x3D;&#39;CHN&#39;</span><br><span class="line">UNION ALL</span><br><span class="line">SELECT * FROM city WHERE countrycode&#x3D;&#39;USA&#39;</span><br><span class="line"></span><br><span class="line">说明:一般情况下,我们会将 IN 或者 OR 语句 改写成 UNION ALL,来提高性能</span><br><span class="line">UNION     去重复</span><br><span class="line">UNION ALL 不去重复</span><br></pre></td></tr></table></figure><h2 id="7-9-join-多表连接查询"><a href="#7-9-join-多表连接查询" class="headerlink" title="7.9 join 多表连接查询"></a>7.9 join 多表连接查询</h2><h3 id="7-9-0-案例准备"><a href="#7-9-0-案例准备" class="headerlink" title="7.9.0 案例准备"></a>7.9.0 案例准备</h3><p>按需求创建一下表结构:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line">use school</span><br><span class="line">student ：学生表</span><br><span class="line">sno：    学号</span><br><span class="line">sname：学生姓名</span><br><span class="line">sage： 学生年龄</span><br><span class="line">ssex： 学生性别</span><br><span class="line"></span><br><span class="line">teacher ：教师表</span><br><span class="line">tno：     教师编号</span><br><span class="line">tname：教师名字</span><br><span class="line"></span><br><span class="line">course ：课程表</span><br><span class="line">cno：  课程编号</span><br><span class="line">cname：课程名字</span><br><span class="line">tno：  教师编号</span><br><span class="line"></span><br><span class="line">score  ：成绩表</span><br><span class="line">sno：  学号</span><br><span class="line">cno：  课程编号</span><br><span class="line">score：成绩</span><br><span class="line"></span><br><span class="line">-- 项目构建</span><br><span class="line">drop database school;</span><br><span class="line">CREATE DATABASE school CHARSET utf8;</span><br><span class="line">USE school</span><br><span class="line"></span><br><span class="line">CREATE TABLE student(</span><br><span class="line">sno INT NOT NULL PRIMARY KEY AUTO_INCREMENT COMMENT &#39;学号&#39;,</span><br><span class="line">sname VARCHAR(20) NOT NULL COMMENT &#39;姓名&#39;,</span><br><span class="line">sage TINYINT UNSIGNED  NOT NULL COMMENT &#39;年龄&#39;,</span><br><span class="line">ssex  ENUM(&#39;f&#39;,&#39;m&#39;) NOT NULL DEFAULT &#39;m&#39; COMMENT &#39;性别&#39;</span><br><span class="line">)ENGINE&#x3D;INNODB CHARSET&#x3D;utf8;</span><br><span class="line"></span><br><span class="line">CREATE TABLE course(</span><br><span class="line">cno INT NOT NULL PRIMARY KEY COMMENT &#39;课程编号&#39;,</span><br><span class="line">cname VARCHAR(20) NOT NULL COMMENT &#39;课程名字&#39;,</span><br><span class="line">tno INT NOT NULL  COMMENT &#39;教师编号&#39;</span><br><span class="line">)ENGINE&#x3D;INNODB CHARSET utf8;</span><br><span class="line"></span><br><span class="line">CREATE TABLE sc (</span><br><span class="line">sno INT NOT NULL COMMENT &#39;学号&#39;,</span><br><span class="line">cno INT NOT NULL COMMENT &#39;课程编号&#39;,</span><br><span class="line">score INT  NOT NULL DEFAULT 0 COMMENT &#39;成绩&#39;</span><br><span class="line">)ENGINE&#x3D;INNODB CHARSET&#x3D;utf8;</span><br><span class="line"></span><br><span class="line">CREATE TABLE teacher(</span><br><span class="line">tno INT NOT NULL PRIMARY KEY COMMENT &#39;教师编号&#39;,</span><br><span class="line">tname VARCHAR(20) NOT NULL COMMENT &#39;教师名字&#39;</span><br><span class="line">)ENGINE&#x3D;INNODB CHARSET utf8;</span><br><span class="line"></span><br><span class="line">INSERT INTO student(sno,sname,sage,ssex)</span><br><span class="line">VALUES (1,&#39;zhang3&#39;,18,&#39;m&#39;);</span><br><span class="line"></span><br><span class="line">INSERT INTO student(sno,sname,sage,ssex)</span><br><span class="line">VALUES</span><br><span class="line">(2,&#39;zhang4&#39;,18,&#39;m&#39;),</span><br><span class="line">(3,&#39;li4&#39;,18,&#39;m&#39;),</span><br><span class="line">(4,&#39;wang5&#39;,19,&#39;f&#39;);</span><br><span class="line"></span><br><span class="line">INSERT INTO student</span><br><span class="line">VALUES</span><br><span class="line">(5,&#39;zh4&#39;,18,&#39;m&#39;),</span><br><span class="line">(6,&#39;zhao4&#39;,18,&#39;m&#39;),</span><br><span class="line">(7,&#39;ma6&#39;,19,&#39;f&#39;);</span><br><span class="line"></span><br><span class="line">INSERT INTO student(sname,sage,ssex)</span><br><span class="line">VALUES</span><br><span class="line">(&#39;oldboy&#39;,20,&#39;m&#39;),</span><br><span class="line">(&#39;oldgirl&#39;,20,&#39;f&#39;),</span><br><span class="line">(&#39;oldp&#39;,25,&#39;m&#39;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">INSERT INTO teacher(tno,tname) VALUES</span><br><span class="line">(101,&#39;oldboy&#39;),</span><br><span class="line">(102,&#39;hesw&#39;),</span><br><span class="line">(103,&#39;oldguo&#39;);</span><br><span class="line"></span><br><span class="line">DESC course;</span><br><span class="line">INSERT INTO course(cno,cname,tno)</span><br><span class="line">VALUES</span><br><span class="line">(1001,&#39;linux&#39;,101),</span><br><span class="line">(1002,&#39;python&#39;,102),</span><br><span class="line">(1003,&#39;mysql&#39;,103);</span><br><span class="line"></span><br><span class="line">DESC sc;</span><br><span class="line">INSERT INTO sc(sno,cno,score)</span><br><span class="line">VALUES</span><br><span class="line">(1,1001,80),</span><br><span class="line">(1,1002,59),</span><br><span class="line">(2,1002,90),</span><br><span class="line">(2,1003,100),</span><br><span class="line">(3,1001,99),</span><br><span class="line">(3,1003,40),</span><br><span class="line">(4,1001,79),</span><br><span class="line">(4,1002,61),</span><br><span class="line">(4,1003,99),</span><br><span class="line">(5,1003,40),</span><br><span class="line">(6,1001,89),</span><br><span class="line">(6,1003,77),</span><br><span class="line">(7,1001,67),</span><br><span class="line">(7,1003,82),</span><br><span class="line">(8,1001,70),</span><br><span class="line">(9,1003,80),</span><br><span class="line">(10,1003,96);</span><br><span class="line"></span><br><span class="line">SELECT * FROM student;</span><br><span class="line">SELECT * FROM teacher;</span><br><span class="line">SELECT * FROM course;</span><br><span class="line">SELECT * FROM sc;</span><br></pre></td></tr></table></figure><h3 id="7-9-1-语法"><a href="#7-9-1-语法" class="headerlink" title="7.9.1 语法"></a>7.9.1 语法</h3><p><img src="http://upload-images.jianshu.io/upload_images/16956686-764e2f0b3601f6ea.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/760/format/webp" alt="img"></p><p>image</p><p>查询张三的家庭住址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT A.name,B.address FROM</span><br><span class="line">A JOIN  B</span><br><span class="line">ON A.id&#x3D;B.id</span><br><span class="line">WHERE A.name&#x3D;&#39;zhangsan&#39;</span><br></pre></td></tr></table></figure><h3 id="7-9-2-例子："><a href="#7-9-2-例子：" class="headerlink" title="7.9.2 例子："></a>7.9.2 例子：</h3><ol><li>查询一下世界上人口数量小于100人的城市名和国家名</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SELECT b.name ,a.name ,a.population</span><br><span class="line">FROM  city  AS a</span><br><span class="line">JOIN  country AS b</span><br><span class="line">ON    b.code&#x3D;a.countrycode</span><br><span class="line">WHERE  a.Population&lt;100</span><br></pre></td></tr></table></figure><ol><li>查询城市shenyang，城市人口，所在国家名（name）及国土面积（SurfaceArea）</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT a.name,a.population,b.name ,b.SurfaceArea</span><br><span class="line">FROM city  AS a JOIN country AS b</span><br><span class="line">ON a.countrycode&#x3D;b.code</span><br><span class="line">WHERE a.name&#x3D;&#39;shenyang&#39;;</span><br></pre></td></tr></table></figure><h3 id="7-9-3-别名"><a href="#7-9-3-别名" class="headerlink" title="7.9.3 别名"></a>7.9.3 别名</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">列别名,表别名</span><br><span class="line">SELECT </span><br><span class="line">a.Name AS an ,</span><br><span class="line">b.name AS bn ,</span><br><span class="line">b.SurfaceArea AS bs,</span><br><span class="line">a.Population AS bp</span><br><span class="line">FROM city AS a  JOIN country AS b</span><br><span class="line">ON a.CountryCode&#x3D;b.Code</span><br><span class="line">WHERE a.name &#x3D;&#39;shenyang&#39;;</span><br></pre></td></tr></table></figure><h3 id="7-9-4-多表SQL练习题"><a href="#7-9-4-多表SQL练习题" class="headerlink" title="7.9.4 多表SQL练习题"></a>7.9.4 多表SQL练习题</h3><ol><li>统计zhang3,学习了几门课</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SELECT st.sname , COUNT(sc.cno)</span><br><span class="line">FROM student AS st</span><br><span class="line">JOIN</span><br><span class="line">sc</span><br><span class="line">ON st.sno&#x3D;sc.sno</span><br><span class="line">WHERE st.sname&#x3D;&#39;zhang3&#39;</span><br></pre></td></tr></table></figure><ol><li>查询zhang3,学习的课程名称有哪些?</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SELECT st.sname , GROUP_CONCAT(co.cname)</span><br><span class="line">FROM student AS st</span><br><span class="line">JOIN sc</span><br><span class="line">ON st.sno&#x3D;sc.sno</span><br><span class="line">JOIN course AS co</span><br><span class="line">ON sc.cno&#x3D;co.cno</span><br><span class="line">WHERE st.sname&#x3D;&#39;zhang3&#39;</span><br></pre></td></tr></table></figure><ol><li>查询oldguo老师教的学生名.</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">SELECT te.tname ,GROUP_CONCAT(st.sname)</span><br><span class="line">FROM student AS st</span><br><span class="line">JOIN sc</span><br><span class="line">ON st.sno&#x3D;sc.sno</span><br><span class="line">JOIN course AS co</span><br><span class="line">ON sc.cno&#x3D;co.cno</span><br><span class="line">JOIN teacher AS te</span><br><span class="line">ON co.tno&#x3D;te.tno</span><br><span class="line">WHERE te.tname&#x3D;&#39;oldguo&#39;;</span><br></pre></td></tr></table></figure><ol><li>查询oldguo所教课程的平均分数</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SELECT te.tname,AVG(sc.score)</span><br><span class="line">FROM teacher AS te</span><br><span class="line">JOIN course AS co</span><br><span class="line">ON te.tno&#x3D;co.tno</span><br><span class="line">JOIN sc</span><br><span class="line">ON co.cno&#x3D;sc.cno</span><br><span class="line">WHERE te.tname&#x3D;&#39;oldguo&#39;</span><br></pre></td></tr></table></figure><p>4.1 每位老师所教课程的平均分,并按平均分排序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">SELECT te.tname,AVG(sc.score)</span><br><span class="line">FROM teacher AS te</span><br><span class="line">JOIN course AS co</span><br><span class="line">ON te.tno&#x3D;co.tno</span><br><span class="line">JOIN sc</span><br><span class="line">ON co.cno&#x3D;sc.cno</span><br><span class="line">GROUP BY te.tname</span><br><span class="line">ORDER BY AVG(sc.score) DESC ;</span><br></pre></td></tr></table></figure><ol><li>查询oldguo所教的不及格的学生姓名</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">SELECT te.tname,st.sname,sc.score</span><br><span class="line">FROM teacher AS te</span><br><span class="line">JOIN course  AS co</span><br><span class="line">ON te.tno&#x3D;co.tno</span><br><span class="line">JOIN sc</span><br><span class="line">ON co.cno&#x3D;sc.cno</span><br><span class="line">JOIN student AS st</span><br><span class="line">ON sc.sno&#x3D;st.sno</span><br><span class="line">WHERE te.tname&#x3D;&#39;oldguo&#39; AND sc.score&lt;60;</span><br></pre></td></tr></table></figure><p>5.1 查询所有老师所教学生不及格的信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">SELECT te.tname,st.sname,sc.score</span><br><span class="line">FROM teacher AS te</span><br><span class="line">JOIN course  AS co</span><br><span class="line">ON te.tno&#x3D;co.tno</span><br><span class="line">JOIN sc</span><br><span class="line">ON co.cno&#x3D;sc.cno</span><br><span class="line">JOIN student AS st</span><br><span class="line">ON sc.sno&#x3D;st.sno</span><br><span class="line">WHERE sc.score&lt;60;</span><br></pre></td></tr></table></figure><h3 id="7-9-5-综合练习"><a href="#7-9-5-综合练习" class="headerlink" title="7.9.5 综合练习"></a>7.9.5 综合练习</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1. 查询平均成绩大于60分的同学的学号和平均成绩；</span><br><span class="line">2. 查询所有同学的学号、姓名、选课数、总成绩；</span><br><span class="line">3. 查询各科成绩最高和最低的分：以如下形式显示：课程ID，最高分，最低分 </span><br><span class="line">4. 统计各位老师,所教课程的及格率</span><br><span class="line">5. 查询每门课程被选修的学生数</span><br><span class="line">6. 查询出只选修了一门课程的全部学生的学号和姓名</span><br><span class="line">7. 查询选修课程门数超过1门的学生信息</span><br><span class="line">8. 统计每门课程:优秀(85分以上),良好(70-85),一般(60-70),不及格(小于60)的学生列表</span><br><span class="line">9. 查询平均成绩大于85的所有学生的学号、姓名和平均成绩 </span><br></pre></td></tr></table></figure><h1 id="8-information-schema-tables视图"><a href="#8-information-schema-tables视图" class="headerlink" title="8.information_schema.tables视图"></a>8.information_schema.tables视图</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">DESC information_schema.TABLES</span><br><span class="line">TABLE_SCHEMA    ----&gt;库名</span><br><span class="line">TABLE_NAME      ----&gt;表名</span><br><span class="line">ENGINE          ----&gt;引擎</span><br><span class="line">TABLE_ROWS      ----&gt;表的行数</span><br><span class="line">AVG_ROW_LENGTH  ----&gt;表中行的平均行（字节）</span><br><span class="line">INDEX_LENGTH    ----&gt;索引的占用空间大小（字节）</span><br></pre></td></tr></table></figure><ol><li>查询整个数据库中所有库和所对应的表信息</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT table_schema,GROUP_CONCAT(table_name)</span><br><span class="line">FROM  information_schema.tables</span><br><span class="line">GROUP BY table_schema;</span><br></pre></td></tr></table></figure><ol><li>统计所有库下的表个数</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT table_schema,COUNT(table_name)</span><br><span class="line">FROM information_schema.TABLES</span><br><span class="line">GROUP BY table_schema</span><br></pre></td></tr></table></figure><ol><li>查询所有innodb引擎的表及所在的库</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT table_schema,table_name,ENGINE FROM information_schema.&#96;TABLES&#96;</span><br><span class="line">WHERE ENGINE&#x3D;&#39;innodb&#39;;</span><br></pre></td></tr></table></figure><ol><li>统计world数据库下每张表的磁盘空间占用</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT table_name,CONCAT((TABLE_ROWS*AVG_ROW_LENGTH+INDEX_LENGTH)&#x2F;1024,&quot; KB&quot;)  AS size_KB</span><br><span class="line">FROM information_schema.tables WHERE TABLE_SCHEMA&#x3D;&#39;world&#39;;</span><br></pre></td></tr></table></figure><ol><li>统计所有数据库的总的磁盘空间占用</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">TABLE_SCHEMA,</span><br><span class="line">CONCAT(SUM(TABLE_ROWS*AVG_ROW_LENGTH+INDEX_LENGTH)&#x2F;1024,&quot; KB&quot;) AS Total_KB</span><br><span class="line">FROM information_schema.tables</span><br><span class="line">GROUP BY table_schema;</span><br><span class="line">mysql -uroot -p123 -e &quot;SELECT TABLE_SCHEMA,CONCAT(SUM(TABLE_ROWS*AVG_ROW_LENGTH+INDEX_LENGTH)&#x2F;1024,&#39; KB&#39;) AS Total_KB FROM information_schema.tables GROUP BY table_schema;&quot;</span><br></pre></td></tr></table></figure><ol><li>生成整个数据库下的所有表的单独备份语句</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">模板语句：</span><br><span class="line">mysqldump -uroot -p123 world city &gt;&#x2F;tmp&#x2F;world_city.sql</span><br><span class="line">SELECT CONCAT(&quot;mysqldump -uroot -p123 &quot;,table_schema,&quot; &quot;,table_name,&quot; &gt;&#x2F;tmp&#x2F;&quot;,table_schema,&quot;_&quot;,table_name,&quot;.sql&quot; )</span><br><span class="line">FROM information_schema.tables</span><br><span class="line">WHERE table_schema NOT IN(&#39;information_schema&#39;,&#39;performance_schema&#39;,&#39;sys&#39;)</span><br><span class="line">INTO OUTFILE &#39;&#x2F;tmp&#x2F;bak.sh&#39; ;</span><br><span class="line"></span><br><span class="line">CONCAT(&quot;mysqldump -uroot -p123 &quot;,table_schema,&quot; &quot;,table_name,&quot; &gt;&#x2F;tmp&#x2F;&quot;,table_schema,&quot;_&quot;,table_name,&quot;.sql&quot; )</span><br></pre></td></tr></table></figure><ol><li>107张表，都需要执行以下2条语句</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ALTER TABLE world.city DISCARD TABLESPACE;</span><br><span class="line">ALTER TABLE world.city IMPORT TABLESPACE;</span><br><span class="line">SELECT CONCAT(&quot;alter table &quot;,table_schema,&quot;.&quot;,table_name,&quot; discard tablespace&quot;)</span><br><span class="line">FROM information_schema.tables</span><br><span class="line">WHERE table_schema&#x3D;&#39;world&#39;</span><br><span class="line">INTO OUTFILE &#39;&#x2F;tmp&#x2F;dis.sql&#39;;</span><br></pre></td></tr></table></figure><h1 id="9-show-命令"><a href="#9-show-命令" class="headerlink" title="9. show 命令"></a>9. show 命令</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">show  databases;                          #查看所有数据库</span><br><span class="line">show tables;                                          #查看当前库的所有表</span><br><span class="line">SHOW TABLES FROM                        #查看某个指定库下的表</span><br><span class="line">show create database world                #查看建库语句</span><br><span class="line">show create table world.city                #查看建表语句</span><br><span class="line">show  grants for  root@&#39;localhost&#39;       #查看用户的权限信息</span><br><span class="line">show  charset；                                   #查看字符集</span><br><span class="line">show collation                                      #查看校对规则</span><br><span class="line">show processlist;                                  #查看数据库连接情况</span><br><span class="line">show index from                                 #表的索引情况</span><br><span class="line">show status                                         #数据库状态查看</span><br><span class="line">SHOW STATUS LIKE &#39;%lock%&#39;;         #模糊查询数据库某些状态</span><br><span class="line">SHOW VARIABLES                             #查看所有配置信息</span><br><span class="line">SHOW variables LIKE &#39;%lock%&#39;;          #查看部分配置信息</span><br><span class="line">show engines                                       #查看支持的所有的存储引擎</span><br><span class="line">show engine innodb status\G               #查看InnoDB引擎相关的状态信息</span><br><span class="line">show binary logs                                    #列举所有的二进制日志</span><br><span class="line">show master status                                 #查看数据库的日志位置信息</span><br><span class="line">show binlog evnets in                             #查看二进制日志事件</span><br><span class="line">show slave status \G                             #查看从库状态</span><br><span class="line">SHOW RELAYLOG EVENTS               #查看从库relaylog事件信息</span><br><span class="line">desc  (show colums from city)               #查看表的列定义信息</span><br><span class="line">http:&#x2F;&#x2F;dev.mysql.com&#x2F;doc&#x2F;refman&#x2F;5.7&#x2F;en&#x2F;show.html</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL进阶 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MySQL 进阶之路初级 DBA（二）</title>
      <link href="/posts/38154/"/>
      <url>/posts/38154/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL体系结构与管理"><a href="#MySQL体系结构与管理" class="headerlink" title="MySQL体系结构与管理"></a>MySQL体系结构与管理</h1><h1 id="1-体系结构"><a href="#1-体系结构" class="headerlink" title="1. 体系结构"></a>1. 体系结构</h1><h2 id="1-1-C-S-客户端-服务端-模型介绍"><a href="#1-1-C-S-客户端-服务端-模型介绍" class="headerlink" title="1.1 C/S(客户端/服务端)模型介绍"></a>1.1 C/S(客户端/服务端)模型介绍</h2><p><img src="http://upload-images.jianshu.io/upload_images/16956686-301b140a033d0dd2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/712/format/webp" alt="img"></p><p>TCP/IP方式（远程、本地）：<br>mysql -uroot -poldboy123 -h 10.0.0.51 -P3306<br>Socket方式(仅本地)：<br>mysql -uroot -poldboy123 -S /tmp/mysql.sock</p><h2 id="1-2-实例介绍"><a href="#1-2-实例介绍" class="headerlink" title="1.2 实例介绍"></a>1.2 实例介绍</h2><p>实例=mysqld后台守护进程+Master Thread +干活的Thread+预分配的内存<br>公司=老板+经理+员工+办公室</p><h2 id="1-3-mysqld程序运行原理"><a href="#1-3-mysqld程序运行原理" class="headerlink" title="1.3 mysqld程序运行原理"></a>1.3 mysqld程序运行原理</h2><h3 id="1-3-1-mysqld程序结构"><a href="#1-3-1-mysqld程序结构" class="headerlink" title="1.3.1 mysqld程序结构"></a>1.3.1 mysqld程序结构</h3><p><img src="http://upload-images.jianshu.io/upload_images/16956686-7824255ca53f23e5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/645/format/webp" alt="img"></p><h3 id="1-3-2-一条SQL语句的执行过程"><a href="#1-3-2-一条SQL语句的执行过程" class="headerlink" title="1.3.2 一条SQL语句的执行过程"></a>1.3.2 一条SQL语句的执行过程</h3><p>1.3.2.1 连接层<br>（1）提供连接协议：TCP/IP 、SOCKET<br>（2）提供验证：用户、密码，IP，SOCKET<br>（3）提供专用连接线程：接收用户SQL，返回结果<br>通过以下语句可以查看到连接线程基本情况<br>mysql&gt; show processlist;</p><p>1.3.2.2 SQL层 （重点）</p><p>（1）接收上层传送的SQL语句<br>（2）语法验证模块：验证语句语法,是否满足SQL_MODE<br>（3）语义检查：判断SQL语句的类型<br>DDL ：数据定义语言<br>DCL ：数据控制语言<br>DML ：数据操作语言<br>DQL： 数据查询语言<br>…<br>（4）权限检查：用户对库表有没有权限<br>（5）解析器：对语句执行前,进行预处理，生成解析树(执行计划),说白了就是生成多种执行方案.<br>（6）优化器：根据解析器得出的多种执行计划，进行判断，选择最优的执行计划<br>        代价模型：资源（CPU IO MEM）的耗损评估性能好坏<br>（7）执行器：根据最优执行计划，执行SQL语句，产生执行结果<br>执行结果：在磁盘的xxxx位置上<br>（8）提供查询缓存（默认是没开启的），会使用redis tair替代查询缓存功能<br>（9）提供日志记录（日志管理章节）：binlog，默认是没开启的。</p><p>1.3.2.3 存储引擎层（类似于Linux中的文件系统）</p><p>负责根据SQL层执行的结果，从磁盘上拿数据。<br>将16进制的磁盘数据，交由SQL结构化化成表，<br>连接层的专用线程返回给用户。</p><h2 id="1-4-逻辑结构"><a href="#1-4-逻辑结构" class="headerlink" title="1.4 逻辑结构"></a>1.4 逻辑结构</h2><p><img src="http://upload-images.jianshu.io/upload_images/16956686-127fff46fdb7fea9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/505/format/webp" alt="img"></p><p>image.png</p><p><strong>以上图片由五行哥提供</strong></p><h3 id="1-4-1-库："><a href="#1-4-1-库：" class="headerlink" title="1.4.1 库："></a>1.4.1 库：</h3><p>库名，库属性</p><h3 id="1-4-2-表"><a href="#1-4-2-表" class="headerlink" title="1.4.2 表"></a>1.4.2 表</h3><p>表名<br>属性<br>列:列名(字段),列属性(数据类型,约束等)<br>数据行(记录)</p><h2 id="1-5-物理存储结构引入"><a href="#1-5-物理存储结构引入" class="headerlink" title="1.5 物理存储结构引入"></a>1.5 物理存储结构引入</h2><p><img src="http://upload-images.jianshu.io/upload_images/16956686-bfd40838aef7971b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/973/format/webp" alt="img"></p><p>image.png</p><p><strong>以上图片由五行哥提供</strong></p><h3 id="1-5-1-库的物理存储结构"><a href="#1-5-1-库的物理存储结构" class="headerlink" title="1.5.1 库的物理存储结构"></a>1.5.1 库的物理存储结构</h3><p>用文件系统的目录来存储</p><h3 id="1-5-2-表的物理存储结构"><a href="#1-5-2-表的物理存储结构" class="headerlink" title="1.5.2 表的物理存储结构"></a>1.5.2 表的物理存储结构</h3><p>MyISAM（一种引擎）的表：<br>-rw-r—– 1 mysql mysql   10816 Apr 18 11:37 user.frm<br>-rw-r—– 1 mysql mysql     396 Apr 18 12:20  user.MYD<br>-rw-r—– 1 mysql mysql    4096 Apr 18 14:48 user.MYI<br>​<br>InnoDB(默认的存储引擎)的表：<br>-rw-r—– 1 mysql mysql    8636 Apr 18 11:37 time_zone.frm<br>-rw-r—– 1 mysql mysql   98304 Apr 18 11:37 time_zone.ibd<br>time_zone.frm：存储列相关信息<br>time_zone.ibd：数据行+索引</p><h3 id="1-5-3-表的段、区、页（16k）（了解）"><a href="#1-5-3-表的段、区、页（16k）（了解）" class="headerlink" title="1.5.3 表的段、区、页（16k）（了解）"></a>1.5.3 表的段、区、页（16k）（了解）</h3><p>页：最小的存储单元，默认16k<br>区：64个连续的页，共1M<br>段：一个表就是一个段，包含一个或多个区</p><h1 id="2-基础管理"><a href="#2-基础管理" class="headerlink" title="2. 基础管理"></a>2. 基础管理</h1><h2 id="2-1-用户、权限管理"><a href="#2-1-用户、权限管理" class="headerlink" title="2.1 用户、权限管理"></a>2.1 用户、权限管理</h2><h3 id="2-1-1-用户"><a href="#2-1-1-用户" class="headerlink" title="2.1.1 用户"></a>2.1.1 用户</h3><p>作用：</p><p>登录，管理数据库逻辑对象</p><p>定义：</p><p>用户名@’白名单’<br>白名单支持的方式？<br>wordpress@’10.0.0.%’<br>wordpress@’%’<br>wordpress@’10.0.0.200’<br>wordpress@’localhost’<br>wordpress@’db02’<br>wordpress@’10.0.0.5%’<br>wordpress@’10.0.0.0/255.255.254.0’</p><p>管理操作：</p><p>增：<br>mysql&gt; create user oldboy@’10.0.0.%’ identified by ‘123’;<br>查：<br>mysql&gt; desc mysql.user;    —-&gt;  authentication_string<br>mysql&gt; select user ,host ,authentication_string from mysql.user<br>改:<br>mysql&gt; alter user oldboy@’10.0.0.%’ identified by ‘456’;<br>删：<br>mysql&gt; drop user oldboy@’10.0.0.%’;</p><h3 id="2-1-2-权限"><a href="#2-1-2-权限" class="headerlink" title="2.1.2 权限"></a>2.1.2 权限</h3><p>权限管理操作：</p><p>mysql&gt; grant all on wordpress.* to wordpress@’10.0.0.%’ identified  by ‘123’;</p><p>常用权限介绍:</p><p>ALL:<br>SELECT,INSERT, UPDATE, DELETE, CREATE, DROP, RELOAD, SHUTDOWN, PROCESS, FILE, REFERENCES, INDEX, ALTER, SHOW DATABASES, SUPER, CREATE TEMPORARY TABLES, LOCK TABLES, EXECUTE, REPLICATION SLAVE, REPLICATION CLIENT, CREATE VIEW, SHOW VIEW, CREATE ROUTINE, ALTER ROUTINE, CREATE USER, EVENT, TRIGGER, CREATE TABLESPACE<br>ALL : 以上所有权限，一般是普通管理员拥有的<br>with grant option：超级管理员才具备的，给别的用户授权的功能</p><p>权限作用范围:</p><p>*.*                  —-&gt;管理员用户<br>wordpress.*          —-&gt;开发和应用用户<br>wordpress.t1</p><p>需求1：windows机器的navicat登录到linux中的MySQL，管理员用户。</p><p>mysql&gt; grant all on *.* to root@’10.0.0.%’ identified by ‘123’;</p><p>需求2：创建一个应用用户app用户，能从windows上登录mysql，并能操作app库</p><p>mysql&gt; grant select ,update,insert,delete on app.* to app@’10.0.0.%’ identified by ‘123’;</p><h3 id="2-1-3-开发人员用户授权流程"><a href="#2-1-3-开发人员用户授权流程" class="headerlink" title="2.1.3 开发人员用户授权流程"></a>2.1.3 开发人员用户授权流程</h3><p>1.权限<br>2.对谁操作<br>3.你从哪来<br>4.密码要求</p><h3 id="2-1-4-提示：8-0在grant命令添加新特性"><a href="#2-1-4-提示：8-0在grant命令添加新特性" class="headerlink" title="2.1.4 提示：8.0在grant命令添加新特性"></a>2.1.4 提示：8.0在grant命令添加新特性</h3><p>建用户和授权分开了<br>grant 不再支持自动创建用户了，不支持改密码<br>授权之前，必须要提前创建用户。</p><h3 id="2-1-5-查看授权"><a href="#2-1-5-查看授权" class="headerlink" title="2.1.5 查看授权"></a>2.1.5 查看授权</h3><p>mysql&gt; show grants for app@’10.0.0.%’;</p><h3 id="2-1-6-回收权限"><a href="#2-1-6-回收权限" class="headerlink" title="2.1.6 回收权限"></a>2.1.6 回收权限</h3><p>revoke  delete on app.*  from app@’10.0.0.%’；</p><h3 id="2-1-7-本地管理员用户密码忘记"><a href="#2-1-7-本地管理员用户密码忘记" class="headerlink" title="2.1.7 本地管理员用户密码忘记."></a>2.1.7 本地管理员用户密码忘记.</h3><p>[root@db01 ~]# mysqld_safe –skip-grant-tables –skip-networking &amp;<br>mysql&gt; flush privileges;<br>mysql&gt;  alter user root@’localhost’ identified by ‘123456’;<br>[root@db01 ~]# pkill mysqld<br>[root@db01 ~]# systemctl start  mysqld</p><h2 id="2-2-连接管理"><a href="#2-2-连接管理" class="headerlink" title="2.2 连接管理"></a>2.2 连接管理</h2><h3 id="2-2-1-自带客户端命令"><a href="#2-2-1-自带客户端命令" class="headerlink" title="2.2.1 自带客户端命令"></a>2.2.1 自带客户端命令</h3><p>mysql 常用参数：</p><p>-u                   用户<br>-p                   密码<br>-h                   IP<br>-P                   端口<br>-S                   socket文件<br>-e                   免交互执行命令<br>&lt;                    导入SQL脚本<br>​<br>[root@db01 ~]# mysql -uroot -p -h 10.0.0.51 -P3306<br>Enter password:<br>mysql&gt; select @@socket;<br>+—————–+<br>| @@socket        |<br>+—————–+<br>| /tmp/mysql.sock |<br>[root@db01 ~]# mysql -uroot -p -S /tmp/mysql.sock<br>Enter password:<br>[root@db01 ~]# mysql -uroot -p -e “select user,host from mysql.user;”<br>Enter password:<br>+—————+———–+<br>| user          | host      |<br>+—————+———–+<br>| abc          | 10.0.0.%  |<br>| app          | 10.0.0.%  |<br>| root          | 10.0.0.%  |<br>| mysql.session | localhost |<br>| mysql.sys    | localhost |<br>| root          | localhost |<br>+—————+———–+<br>[root@db01 ~]#<br>[root@db01 ~]# mysql -uroot -p &lt;world.sql<br>Enter password:<br>[root@db01 ~]#</p><h2 id="2-3-多种启动方式介绍"><a href="#2-3-多种启动方式介绍" class="headerlink" title="2.3 多种启动方式介绍"></a>2.3 多种启动方式介绍</h2><p><img src="http://upload-images.jianshu.io/upload_images/16956686-54becae60bf4ca48.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/860/format/webp" alt="img"></p><p>image</p><p>提示：</p><p>以上多种方式，都可以单独启动MySQL服务<br>mysqld_safe和mysqld一般是在临时维护时使用。<br>另外，从Centos 7系统开始，支持systemd直接调用mysqld的方式进行启动数据库</p><h2 id="2-4-初始化配置"><a href="#2-4-初始化配置" class="headerlink" title="2.4 初始化配置"></a>2.4 初始化配置</h2><h3 id="2-4-0-作用"><a href="#2-4-0-作用" class="headerlink" title="2.4.0 作用"></a>2.4.0 作用</h3><p>控制MySQL的启动<br>影响到客户端的连接</p><h3 id="2-4-1-初始化配置的方法"><a href="#2-4-1-初始化配置的方法" class="headerlink" title="2.4.1 初始化配置的方法"></a>2.4.1 初始化配置的方法</h3><p>预编译<br>**配置文件(所有启动方式)**<br>命令行参数 (仅限于 mysqld_safe mysqld)</p><h3 id="2-4-2-初始配置文件"><a href="#2-4-2-初始配置文件" class="headerlink" title="2.4.2 初始配置文件"></a>2.4.2 初始配置文件</h3><p>初始化配置文件的默认读取路径</p><p>[root@db01 ~]# mysqld –help –verbose |grep my.cnf<br>/etc/my.cnf /etc/mysql/my.cnf /usr/local/mysql/etc/my.cnf ~/.my.cnf<br>注:<br>默认情况下，MySQL启动时，会依次读取以上配置文件，如果有重复选项，会以最后一个文件设置的为准。<br>但是，如果启动时加入了–defaults-file=xxxx时，以上的所有文件都不会读取.</p><p>配置文件的书写方式:</p><p>[标签]<br>配置项=xxxx<br>​<br>标签类型：服务端、客户端<br>服务器端标签：<br>[mysqld]<br>[mysqld_safe]<br>[server]<br>​<br>客户端标签：<br>[mysql]<br>[mysqldump]<br>[client]<br>​<br>配置文件的示例展示：<br>[root@db01 ~]# cat /etc/my.cnf<br>[mysqld]<br>user=mysql<br>basedir=/app/mysql<br>datadir=/data/mysql<br>socket=/tmp/mysql.sock<br>server_id=6<br>port=3306<br>log_error=/data/mysql/mysql.log<br>[mysql]<br>socket=/tmp/mysql.sock<br>prompt=Master [\\d]&gt;</p><h2 id="2-5-多实例的应用"><a href="#2-5-多实例的应用" class="headerlink" title="2.5 多实例的应用"></a>2.5 多实例的应用</h2><h3 id="2-5-1-准备多个目录"><a href="#2-5-1-准备多个目录" class="headerlink" title="2.5.1 准备多个目录"></a>2.5.1 准备多个目录</h3><p>mkdir -p /data/330{7,8,9}/data</p><h3 id="2-5-2-准备配置文件"><a href="#2-5-2-准备配置文件" class="headerlink" title="2.5.2 准备配置文件"></a>2.5.2 准备配置文件</h3><p>cat &gt; /data/3307/my.cnf &lt;&lt;EOF<br>[mysqld]<br>basedir=/app/mysql<br>datadir=/data/3307/data<br>socket=/data/3307/mysql.sock<br>log_error=/data/3307/mysql.log<br>port=3307<br>server_id=7<br>log_bin=/data/3307/mysql-bin<br>EOF<br>​<br>cat &gt; /data/3308/my.cnf &lt;&lt;EOF<br>[mysqld]<br>basedir=/app/mysql<br>datadir=/data/3308/data<br>socket=/data/3308/mysql.sock<br>log_error=/data/3308/mysql.log<br>port=3308<br>server_id=8<br>log_bin=/data/3308/mysql-bin<br>EOF<br>​<br>cat &gt; /data/3309/my.cnf &lt;&lt;EOF<br>[mysqld]<br>basedir=/app/mysql<br>datadir=/data/3309/data<br>socket=/data/3309/mysql.sock<br>log_error=/data/3309/mysql.log<br>port=3309<br>server_id=9<br>log_bin=/data/3309/mysql-bin<br>EOF</p><h3 id="2-5-3-初始化三套数据"><a href="#2-5-3-初始化三套数据" class="headerlink" title="2.5.3 初始化三套数据"></a>2.5.3 初始化三套数据</h3><p>mv /etc/my.cnf /etc/my.cnf.bak<br>mysqld –initialize-insecure  –user=mysql –datadir=/data/3307/data –basedir=/app/mysql<br>mysqld –initialize-insecure  –user=mysql –datadir=/data/3308/data –basedir=/app/mysql<br>mysqld –initialize-insecure  –user=mysql –datadir=/data/3309/data –basedir=/app/mysql</p><h3 id="2-5-4-systemd管理多实例"><a href="#2-5-4-systemd管理多实例" class="headerlink" title="2.5.4 systemd管理多实例"></a>2.5.4 systemd管理多实例</h3><p>cd /etc/systemd/system<br>cp mysqld.service mysqld3307.service<br>cp mysqld.service mysqld3308.service<br>cp mysqld.service mysqld3309.service<br>​<br>vim mysqld3307.service<br>ExecStart=/app/mysql/bin/mysqld  –defaults-file=/data/3307/my.cnf<br>vim mysqld3308.service<br>ExecStart=/app/mysql/bin/mysqld  –defaults-file=/data/3308/my.cnf<br>vim mysqld3309.service<br>ExecStart=/app/mysql/bin/mysqld  –defaults-file=/data/3309/my.cnf</p><h3 id="2-5-5-授权"><a href="#2-5-5-授权" class="headerlink" title="2.5.5 授权"></a>2.5.5 授权</h3><p>chown -R mysql.mysql /data/*</p><h3 id="2-5-6-启动"><a href="#2-5-6-启动" class="headerlink" title="2.5.6 启动"></a>2.5.6 启动</h3><p>systemctl start mysqld3307.service<br>systemctl start mysqld3308.service<br>systemctl start mysqld3309.service</p><h3 id="2-5-7-验证多实例"><a href="#2-5-7-验证多实例" class="headerlink" title="2.5.7 验证多实例"></a>2.5.7 验证多实例</h3><p>netstat -lnp|grep 330<br>mysql -S /data/3307/mysql.sock -e “select @@server_id”<br>mysql -S /data/3308/mysql.sock -e “select @@server_id”<br>mysql -S /data/3309/mysql.sock -e “select @@server_id”</p>]]></content>
      
      
      <categories>
          
          <category> MySQL进阶 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL进阶之路初级DBA（一）</title>
      <link href="/posts/41873/"/>
      <url>/posts/41873/</url>
      
        <content type="html"><![CDATA[<h1 id="第一章-MySQL-大纲介绍"><a href="#第一章-MySQL-大纲介绍" class="headerlink" title="第一章 MySQL 大纲介绍"></a>第一章 MySQL 大纲介绍</h1><h2 id="1、官方定义的MySQL-DBA工作内容"><a href="#1、官方定义的MySQL-DBA工作内容" class="headerlink" title="1、官方定义的MySQL DBA工作内容"></a>1、官方定义的MySQL DBA工作内容</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">（1）运维DBA</span><br><span class="line">初级：各版本、各平台安装搭建、升级</span><br><span class="line">中级：体系结构原理、基础管理（启动关闭、初始化配置文件管理、多实例管理、用户权限管理、基本SQL（增删改查））、</span><br><span class="line">     日志管理、备份与恢复、主从复制（构建、状态监控） </span><br><span class="line">高级：高可用（MGR、InnoDB Cluster）、高性能（优化）</span><br><span class="line">（2）开发DBA</span><br><span class="line">懂至少一门开发语言 ：JAVA、Python</span><br><span class="line">基本SQL语句深入学习（增删改查）、数据库结构设计（建模）</span><br><span class="line">高级SQL：存储过程、函数、触发器、视图、事件</span><br></pre></td></tr></table></figure><h2 id="2、老男孩MySQL课程-2019-03月-中级DBA要求（80-以上）"><a href="#2、老男孩MySQL课程-2019-03月-中级DBA要求（80-以上）" class="headerlink" title="2、老男孩MySQL课程-2019-03月-中级DBA要求（80%以上）"></a>2、老男孩MySQL课程-2019-03月-中级DBA要求（80%以上）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">（1）MySQL 5.7 安装部署（二进制）*****</span><br><span class="line">    编译自己扩展</span><br><span class="line">（2）MySQL升级步骤扩展 ***</span><br><span class="line">（3）MySQL5.7 体系结构原理 *****</span><br><span class="line">（4）MySQL基础管理  *****</span><br><span class="line">（5）基础SQL语句使用 *****</span><br><span class="line">（6）SQL高级应用  ***</span><br><span class="line">（7）Information_schema获取元数据 ***</span><br><span class="line">（8）索引、执行计划管理（基础优化）*****</span><br><span class="line">（9）存储引擎  *****</span><br><span class="line">（10）日志管理 *****</span><br><span class="line">（11）备份与恢复 ******</span><br><span class="line">（12）主从复制及架构演变 ******</span><br><span class="line">（13）传统的高可用及读写分离（MHA&amp;Atlas）****</span><br><span class="line">（14）传统分布式架构设计与实现-扩展（Mycat---&gt;DBLE,DRDS）**</span><br><span class="line">（15）MySQL 5.7 高可用及分布式架构-扩展（MGR,InnoDB Cluster）***</span><br><span class="line">（16）MySQL优化（安全、性能） ****</span><br><span class="line">（17）MySQL 监控（zabbix、Open-falcon）    ****</span><br><span class="line"> (18) RDS(阿里云课程)    *****</span><br><span class="line"></span><br><span class="line">额外要会的：</span><br><span class="line">    Redis</span><br><span class="line">    mongodb     </span><br><span class="line">了解: </span><br><span class="line">    PG</span><br><span class="line">    Oracle  </span><br></pre></td></tr></table></figure><h2 id="3、DBA职业素养"><a href="#3、DBA职业素养" class="headerlink" title="3、DBA职业素养"></a>3、DBA职业素养</h2><hr><h3 id="3-1、人品"><a href="#3-1、人品" class="headerlink" title="3.1、人品"></a>3.1、人品</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">责任-----权利</span><br></pre></td></tr></table></figure><h3 id="3-2"><a href="#3-2" class="headerlink" title="3.2"></a>3.2</h3><h4 id="3-2-1、严谨"><a href="#3-2-1、严谨" class="headerlink" title="3.2.1、严谨"></a>3.2.1、严谨</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">磁带库-----&gt;备份软件-----17楼</span><br><span class="line">数据库修改\删除类的命令时 再三考虑，而且要有理论或者实践的支撑</span><br></pre></td></tr></table></figure><h4 id="3-2-2-请收起你的好奇心！！！！！"><a href="#3-2-2-请收起你的好奇心！！！！！" class="headerlink" title="3.2.2 请收起你的好奇心！！！！！"></a>3.2.2 请收起你的好奇心！！！！！</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">注意规范:</span><br><span class="line">脱库？ 华住网（ip root 密码），“脱敏”!!!!!。</span><br><span class="line">学会保护自己!!!</span><br></pre></td></tr></table></figure><h3 id="3-3、细心"><a href="#3-3、细心" class="headerlink" title="3.3、细心"></a>3.3、细心</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">把最简单的事情做的最漂亮，最专业。</span><br><span class="line">不要怕成功的门很拥挤,因为很多人在半路就已经放弃了.</span><br><span class="line">                                           ----oldguo                     </span><br></pre></td></tr></table></figure><h3 id="3-4、心态"><a href="#3-4、心态" class="headerlink" title="3.4、心态"></a>3.4、心态</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">别惹事，出事别怕事</span><br></pre></td></tr></table></figure><h3 id="3-5、熟悉操作系统（精通）"><a href="#3-5、熟悉操作系统（精通）" class="headerlink" title="3.5、熟悉操作系统（精通）"></a>3.5、熟悉操作系统（精通）</h3><h3 id="3-6、熟悉公司业务"><a href="#3-6、熟悉公司业务" class="headerlink" title="3.6、熟悉公司业务"></a>3.6、熟悉公司业务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">业务？</span><br><span class="line">    产品的功能</span><br><span class="line">    用户的行为(热功能,热数据)      </span><br></pre></td></tr></table></figure><h3 id="3-7、熟悉行业"><a href="#3-7、熟悉行业" class="headerlink" title="3.7、熟悉行业"></a>3.7、熟悉行业</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">熟悉行业发展趋势</span><br><span class="line">版本</span><br><span class="line">数据库产品类型</span><br><span class="line">https:&#x2F;&#x2F;db-engines.com&#x2F;en&#x2F;ranking</span><br></pre></td></tr></table></figure><h3 id="3-8、喜欢数据库"><a href="#3-8、喜欢数据库" class="headerlink" title="3.8、喜欢数据库"></a>3.8、喜欢数据库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">体验很重要</span><br></pre></td></tr></table></figure><h1 id="第二章-MySQL-介绍和安装"><a href="#第二章-MySQL-介绍和安装" class="headerlink" title="第二章: MySQL 介绍和安装"></a>第二章: MySQL 介绍和安装</h1><h2 id="1、什么是数据？"><a href="#1、什么是数据？" class="headerlink" title="1、什么是数据？"></a>1、什么是数据？</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">数据：文字、图片、视频。。。人类认知的数据表现方式</span><br><span class="line">计算机：二进制、16进制的机器语言</span><br><span class="line">基于数据的重要性和复杂性的不同，我们可能有不同的管理方式。</span><br><span class="line"></span><br><span class="line">哪些数据是适合存储到数据库的呢？</span><br><span class="line">重要性比较高的</span><br><span class="line">关系较复杂的数据</span><br></pre></td></tr></table></figure><h2 id="2、什么是数据库管理系统（DBMS）？"><a href="#2、什么是数据库管理系统（DBMS）？" class="headerlink" title="2、什么是数据库管理系统（DBMS）？"></a>2、什么是数据库管理系统（DBMS）？</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">RDBMS: 关系型数据库管理系统</span><br><span class="line">比较适合于,安全级别要求高的数据以及关系较复杂的数据</span><br><span class="line"></span><br><span class="line">NoSQL:非关系型数据库管理系统</span><br><span class="line">适合于高性能存取数据,一般是配合RDBMS进行使用的</span><br><span class="line">针对大数据处理分析,分布式架构更加擅长</span><br></pre></td></tr></table></figure><h2 id="3、数据库管理系统种类"><a href="#3、数据库管理系统种类" class="headerlink" title="3、数据库管理系统种类"></a>3、数据库管理系统种类</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">RDBMS  ：</span><br><span class="line">MySQL 、Oracle、MSSQL（SQL Server）、PG</span><br><span class="line"></span><br><span class="line">NoSQL：Not Only SQL</span><br><span class="line">键-值（key-value）：Redis, memcached</span><br><span class="line">文档（document）：Mongodb</span><br></pre></td></tr></table></figure><h2 id="4、MySQL简介及产品线"><a href="#4、MySQL简介及产品线" class="headerlink" title="4、MySQL简介及产品线"></a>4、MySQL简介及产品线</h2><h3 id="4-1-MySQL行业主流版本："><a href="#4-1-MySQL行业主流版本：" class="headerlink" title="4.1 MySQL行业主流版本："></a>4.1 MySQL行业主流版本：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">5.6  </span><br><span class="line">5.7    </span><br><span class="line">8.0(现在开始研究新特性)</span><br></pre></td></tr></table></figure><h3 id="4-2-企业版本选择-MySQL分支版本-笔试题"><a href="#4-2-企业版本选择-MySQL分支版本-笔试题" class="headerlink" title="4.2 企业版本选择(MySQL分支版本),笔试题"></a>4.2 企业版本选择(MySQL分支版本),笔试题</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Oracle:</span><br><span class="line">      MySQL官方版</span><br><span class="line">红帽  :</span><br><span class="line">      MariaDB</span><br><span class="line">Percona:</span><br><span class="line">      PerconaDB</span><br></pre></td></tr></table></figure><h3 id="4-3-版本选择建议要上新环境"><a href="#4-3-版本选择建议要上新环境" class="headerlink" title="4.3 版本选择建议要上新环境"></a>4.3 版本选择建议要上新环境</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.一般选择官方主流版本:5.6,5.7 </span><br><span class="line">2.GA（稳定发布版）</span><br><span class="line">3.6-12月的产品版本</span><br></pre></td></tr></table></figure><h3 id="4-4-课程版本："><a href="#4-4-课程版本：" class="headerlink" title="4.4 课程版本："></a>4.4 课程版本：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5.7.20  二进制安装，其他安装方式自己扩展</span><br></pre></td></tr></table></figure><h3 id="4-5-如何获取MySQL软件"><a href="#4-5-如何获取MySQL软件" class="headerlink" title="4.5 如何获取MySQL软件"></a>4.5 如何获取MySQL软件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">企业版：Enterprise  , 互联网行业一般不选择.</span><br><span class="line">社区版本：选择</span><br><span class="line">源码包：source code    .tar.gz   </span><br><span class="line">通用二进制   </span><br><span class="line">面试题:</span><br><span class="line">你们公司用什么版本数据库? 具体什么小版本号?</span><br><span class="line">5.6.20 5.6.34 5.6.36  5.6.38  5.6.40    </span><br><span class="line">5.7.18  5.7.20  5.7.22</span><br></pre></td></tr></table></figure><h2 id="5、MySQL二进制安装"><a href="#5、MySQL二进制安装" class="headerlink" title="5、MySQL二进制安装"></a>5、MySQL二进制安装</h2><h3 id="5-1-创建软件目录"><a href="#5-1-创建软件目录" class="headerlink" title="5.1.创建软件目录:"></a>5.1.创建软件目录:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]# mkdir -p &#x2F;app&#x2F;</span><br><span class="line">上传软件到此目录</span><br></pre></td></tr></table></figure><h3 id="5-2-解压并改名为mysql"><a href="#5-2-解压并改名为mysql" class="headerlink" title="5.2. 解压并改名为mysql"></a>5.2. 解压并改名为mysql</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 app]# mv mysql-5.7.20-linux-glibc2.12-x86_64 mysql</span><br><span class="line">[root@db01 app]# ls -l &#x2F;app&#x2F;mysql&#x2F;</span><br><span class="line">total 36</span><br><span class="line">drwxr-xr-x  2 root root   4096 Mar  4 14:55 bin</span><br><span class="line">-rw-r--r--  1 7161 31415 17987 Sep 13  2017 COPYING</span><br><span class="line">drwxr-xr-x  2 root root     55 Mar  4 14:55 docs</span><br><span class="line">drwxr-xr-x  3 root root   4096 Mar  4 14:55 include</span><br><span class="line">drwxr-xr-x  5 root root    229 Mar  4 14:55 lib</span><br><span class="line">drwxr-xr-x  4 root root     30 Mar  4 14:55 man</span><br><span class="line">-rw-r--r--  1 7161 31415  2478 Sep 13  2017 README</span><br><span class="line">drwxr-xr-x 28 root root   4096 Mar  4 14:55 share</span><br><span class="line">drwxr-xr-x  2 root root     90 Mar  4 14:55 support-files</span><br></pre></td></tr></table></figure><p>修改环境变量:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;profile</span><br><span class="line">export PATH&#x3D;&#x2F;app&#x2F;mysql&#x2F;bin:$PATH</span><br><span class="line">[root@db01 bin]# source &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure><h3 id="5-3-建立mysql用户和组-如果已有可忽略"><a href="#5-3-建立mysql用户和组-如果已有可忽略" class="headerlink" title="5.3. 建立mysql用户和组(如果已有可忽略)"></a>5.3. 建立mysql用户和组(如果已有可忽略)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd mysql </span><br></pre></td></tr></table></figure><h3 id="5-4-创建相关目录并修改权限"><a href="#5-4-创建相关目录并修改权限" class="headerlink" title="5.4. 创建相关目录并修改权限"></a>5.4. 创建相关目录并修改权限</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir &#x2F;data&#x2F;mysql -p </span><br><span class="line">chown -R mysql.mysql &#x2F;app&#x2F;*</span><br><span class="line">chown -R mysql.mysql &#x2F;data&#x2F;*</span><br></pre></td></tr></table></figure><h3 id="5-5-初始化数据（建库）"><a href="#5-5-初始化数据（建库）" class="headerlink" title="5.5 初始化数据（建库）"></a>5.5 初始化数据（建库）</h3><p>方法一:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">初始化数据，初始化管理员的临时密码</span><br><span class="line">mysqld --initialize  --user&#x3D;mysql --basedir&#x3D;&#x2F;app&#x2F;mysql --datadir&#x3D;&#x2F;data&#x2F;mysql</span><br><span class="line"></span><br><span class="line">2019-04-18T03:21:53.381108Z 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details).</span><br><span class="line">2019-04-18T03:21:54.583415Z 0 [Warning] InnoDB: New log files created, LSN&#x3D;45790</span><br><span class="line">2019-04-18T03:21:54.697859Z 0 [Warning] InnoDB: Creating foreign key constraint system tables.</span><br><span class="line">2019-04-18T03:21:54.760821Z 0 [Warning] No existing UUID has been found, so we assume that this is the first time that this server has been started. Generating a new UUID: 1daa0c57-6189-11e9-bc80-000c294234c8.</span><br><span class="line">2019-04-18T03:21:54.770856Z 0 [Warning] Gtid table is not ready to be used. Table &#39;mysql.gtid_executed&#39; cannot be opened.</span><br><span class="line">2019-04-18T03:21:54.772016Z 1 [Note] A temporary password is generated for root@localhost: 9LN.fh_Ea#uU</span><br></pre></td></tr></table></figure><p><a href="https://blog.kococ.cn/wp-content/uploads/2020/01/2020080109354680.png"><img src="https://blog.kococ.cn/wp-content/uploads/2020/01/2020080109354680-1024x97.png"></a></p><p>image.png</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">报错原因: Linux系统中缺少libaio-devel 软件包</span><br><span class="line">解决:</span><br><span class="line">yum install -y libaio-devel</span><br></pre></td></tr></table></figure><p><a href="https://blog.kococ.cn/wp-content/uploads/2020/01/2020080109360484.png"><img src="https://blog.kococ.cn/wp-content/uploads/2020/01/2020080109360484.png"></a></p><p>image.png</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">报错原因:</span><br><span class="line">在&#x2F;data&#x2F;mysql 存在文件</span><br><span class="line">解决:</span><br><span class="line">\rm -rf &#x2F;data&#x2F;mysql&#x2F;*</span><br></pre></td></tr></table></figure><p><strong>新特性重要说明:</strong><br><strong>5.7开始,MySQL加入了全新的 密码的安全机制:</strong><br><strong>1.初始化完成后,会生成临时密码(显示到屏幕上,并且会往日志中记一份)</strong><br><strong>2.密码复杂度:长度:超过12位? 复杂度:字符混乱组合</strong><br><strong>3.密码过期时间180天</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">方法二 :</span><br><span class="line">初始化数据，初始化管理员的密码为空</span><br><span class="line"></span><br><span class="line">\rm -rf  &#x2F;data&#x2F;mysql&#x2F;*</span><br><span class="line">[root@db01 ~]# mysqld --initialize-insecure  --user&#x3D;mysql --basedir&#x3D;&#x2F;app&#x2F;mysql --datadir&#x3D;&#x2F;data&#x2F;mysql</span><br><span class="line"></span><br><span class="line">2019-04-18T03:37:43.146018Z 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details).</span><br><span class="line">2019-04-18T03:37:43.892132Z 0 [Warning] InnoDB: New log files created, LSN&#x3D;45790</span><br><span class="line">2019-04-18T03:37:43.970412Z 0 [Warning] InnoDB: Creating foreign key constraint system tables.</span><br><span class="line">2019-04-18T03:37:44.029490Z 0 [Warning] No existing UUID has been found, so we assume that this is the first time that this server has been started. Generating a new UUID: 5378f3b3-618b-11e9-9164-000c294234c8.</span><br><span class="line">2019-04-18T03:37:44.041469Z 0 [Warning] Gtid table is not ready to be used. Table &#39;mysql.gtid_executed&#39; cannot be opened.</span><br><span class="line">2019-04-18T03:37:44.042348Z 1 [Warning] root@localhost is created with an empty password ! Please consider switching off the --initialize-insecure option.</span><br><span class="line">[root@db01 ~]# </span><br><span class="line"></span><br><span class="line">[root@db01 ~]# cd &#x2F;data&#x2F;mysql&#x2F;</span><br><span class="line">[root@db01 mysql]# ll</span><br><span class="line">total 110628</span><br><span class="line">-rw-r----- 1 mysql mysql       56 Apr 18 11:37 auto.cnf</span><br><span class="line">-rw-r----- 1 mysql mysql      419 Apr 18 11:37 ib_buffer_pool</span><br><span class="line">-rw-r----- 1 mysql mysql 12582912 Apr 18 11:37 ibdata1</span><br><span class="line">-rw-r----- 1 mysql mysql 50331648 Apr 18 11:37 ib_logfile0</span><br><span class="line">-rw-r----- 1 mysql mysql 50331648 Apr 18 11:37 ib_logfile1</span><br><span class="line">drwxr-x--- 2 mysql mysql     4096 Apr 18 11:37 mysql</span><br><span class="line">drwxr-x--- 2 mysql mysql     8192 Apr 18 11:37 performance_schema</span><br><span class="line">drwxr-x--- 2 mysql mysql     8192 Apr 18 11:37 sys</span><br><span class="line">[root@db01 mysql]# </span><br></pre></td></tr></table></figure><p><strong>注释：5.6初始化的区别</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;application&#x2F;mysql&#x2F;scripts&#x2F;mysql_install_db  --user&#x3D;mysql --datadir&#x3D;&#x2F;application&#x2F;mysql&#x2F;data --basedir&#x3D;&#x2F;application&#x2F;mysql</span><br></pre></td></tr></table></figure><h3 id="5-6-书写默认配置文件"><a href="#5-6-书写默认配置文件" class="headerlink" title="5.6 书写默认配置文件"></a>5.6 书写默认配置文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;my.cnf</span><br></pre></td></tr></table></figure><p>[mysqld]</p><p>user=mysql basedir=/app/mysql datadir=/data/mysql server_id=6 port=3306 socket=/tmp/mysql.sock</p><p>[mysql]</p><p>socket=/tmp/mysql.sock prompt=3306 [\\d]&gt;</p><h3 id="5-7-配置启动脚本"><a href="#5-7-配置启动脚本" class="headerlink" title="5.7 配置启动脚本:"></a>5.7 配置启动脚本:</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 mysql]# cd &#x2F;app&#x2F;mysql&#x2F;support-files</span><br><span class="line">[root@db01 support-files]# .&#x2F;mysql.server start</span><br><span class="line">Starting MySQL.Logging to &#39;&#x2F;data&#x2F;mysql&#x2F;db01.err&#39;.</span><br><span class="line"> SUCCESS! </span><br><span class="line">cp mysql.server    &#x2F;etc&#x2F;init.d&#x2F;mysqld</span><br></pre></td></tr></table></figure><h3 id="5-8-使用systemd管理mysql"><a href="#5-8-使用systemd管理mysql" class="headerlink" title="5.8 使用systemd管理mysql"></a>5.8 使用systemd管理mysql</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;mysqld.service </span><br><span class="line">[Unit]</span><br><span class="line">Description&#x3D;MySQL Server</span><br><span class="line">Documentation&#x3D;man:mysqld(8)</span><br><span class="line">Documentation&#x3D;http:&#x2F;&#x2F;dev.mysql.com&#x2F;doc&#x2F;refman&#x2F;en&#x2F;using-systemd.html</span><br><span class="line">After&#x3D;network.target</span><br><span class="line">After&#x3D;syslog.target</span><br><span class="line">[Install]</span><br><span class="line">WantedBy&#x3D;multi-user.target</span><br><span class="line">[Service]</span><br><span class="line">User&#x3D;mysql</span><br><span class="line">Group&#x3D;mysql</span><br><span class="line">ExecStart&#x3D;&#x2F;app&#x2F;mysql&#x2F;bin&#x2F;mysqld --defaults-file&#x3D;&#x2F;etc&#x2F;my.cnf</span><br><span class="line">LimitNOFILE &#x3D; 5000</span><br></pre></td></tr></table></figure><p>注意：将原来模式启动mysqld先关闭，然后再用systemd管理。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl  start&#x2F;stop&#x2F;restart&#x2F;status   mysqld</span><br></pre></td></tr></table></figure><h2 id="6-安装后的简单管理"><a href="#6-安装后的简单管理" class="headerlink" title="6. 安装后的简单管理"></a>6. 安装后的简单管理</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]# mysqladmin -uroot -p password 123</span><br><span class="line">Enter password: </span><br><span class="line">mysqladmin: [Warning] Using a password on the command line interface can be insecure.</span><br><span class="line">Warning: Since password will be sent to server in plain text, use ssl connection to ensure password safety.</span><br><span class="line"></span><br><span class="line">5.6版本:</span><br><span class="line">select user,password,host from mysql.user;</span><br><span class="line">5.7 中用户基本信息</span><br><span class="line">select user,authentication_string,host from mysql.user;</span><br><span class="line">desc  mysql.user;</span><br></pre></td></tr></table></figure><p>小结:<br>1.版本 (主流版本的GA时间了解一下)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">5.6 5.7 </span><br><span class="line">5.6.38   5.7.20 </span><br><span class="line">20170913 </span><br><span class="line">(1) 初始化方式变了</span><br><span class="line">mysql_install_db   </span><br><span class="line">mysqld  --initialize-insecure</span><br><span class="line">(2) 用户安全</span><br><span class="line">12位</span><br><span class="line">180</span><br><span class="line">4种复杂度</span><br><span class="line"></span><br><span class="line">(3)密码字段</span><br><span class="line">authentication_strings</span><br></pre></td></tr></table></figure><p>2.安装方法:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">二进制</span><br><span class="line">源码</span><br><span class="line">yum </span><br></pre></td></tr></table></figure><p>3.建库(初始化数据库)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld --intialize-insecure --user&#x3D;mysql --basedir&#x3D;&#x2F;app&#x2F;mysql --datadir&#x3D;&#x2F;data&#x2F;mysql </span><br></pre></td></tr></table></figure><p>4.简易的配制文件/etc/my.cnf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">user </span><br><span class="line">basedir</span><br><span class="line">datadir </span><br><span class="line">server_id</span><br><span class="line">port</span><br><span class="line">socket </span><br></pre></td></tr></table></figure><ol><li>管理员密码</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqladmin -uroot -p password xx</span><br></pre></td></tr></table></figure><hr><hr><p>转自老郭MySQL笔记总结，原文链接：<a href="https://www.jianshu.com/p/dd7137c4efa5">https://www.jianshu.com/p/dd7137c4efa5</a></p>]]></content>
      
      
      <categories>
          
          <category> MySQL进阶 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker 的引入</title>
      <link href="/posts/6579/"/>
      <url>/posts/6579/</url>
      
        <content type="html"><![CDATA[<h1 id="第-1-章-Docker-容器介绍展开目录"><a href="#第-1-章-Docker-容器介绍展开目录" class="headerlink" title="第 1 章 Docker 容器介绍展开目录"></a>第 1 章 Docker 容器介绍展开目录</h1><h2 id="1-1-docker-是什么展开目录"><a href="#1-1-docker-是什么展开目录" class="headerlink" title="1.1 docker 是什么展开目录"></a>1.1 docker 是什么展开目录</h2><p>Docker 是 Docker.Inc 公司开源的一个基于 LXC 技术之上构建的 Container 容器引擎， 源代码托管在 GitHub 上，基于 Go 语言并遵从 Apache2.0 协议开源。<br>Docker 是通过内核虚拟化技术（namespaces 及 cgroups 等）来提供容器的资源隔离与安全保障等。由于 Docker 通过操作系统层的虚拟化实现隔离，所以 Docker 容器在运行时，不需要类似虚拟机（VM）额外的操作系统开销，提高资源利用率。</p><h2 id="1-2-容器与虚拟机对比展开目录"><a href="#1-2-容器与虚拟机对比展开目录" class="headerlink" title="1.2 容器与虚拟机对比展开目录"></a>1.2 容器与虚拟机对比展开目录</h2><p><img src="https://cdn.jsdelivr.net/gh/kococ/IMAGE/usr/uploads/2020/07/1147648620.png" alt="Docker对比图" title="Docker对比图"></p><p><img src="https://cdn.jsdelivr.net/gh/kococ/IMAGE/usr/uploads/2020/07/2783417689.png" alt="启动速度对比" title="启动速度对比"></p><h2 id="1-3-docker-的三个重要概念展开目录"><a href="#1-3-docker-的三个重要概念展开目录" class="headerlink" title="1.3 docker 的三个重要概念展开目录"></a>1.3 docker 的三个重要概念展开目录</h2><p>Image (镜像):<br>那么镜像到底是什么呢？Docker 镜像可以看作是一个特殊的文件系统，除了提供容器运行时所需的程序、库、资源、配置等文件外，还包含了一些为运行时准备的一些配置参数（如匿名卷、环境变量、用户等）。<br>Container (容器)<br>容器 (Container) 的定义和镜像 (Image) 几乎一模一样，也是一堆层的统一视角，唯一区别在于容器的最上面那一层是可读可写的。<br>Repository (仓库)<br>镜像仓库是 Docker 用来集中存放镜像文件的地方，类似于我们之前常用的代码仓库。<br>通常，一个仓库会包含同一个软件不同版本的镜像，而标签就常用于对应该软件的各个版本 。<br>我们可以通过 &lt;仓库名&gt;:&lt; 标签 &gt; 的格式来指定具体是这个软件哪个版本的镜像。如果不给出标签，将以 Latest 作为默认标签。</p><p><img src="https://cdn.jsdelivr.net/gh/kococ/IMAGE/usr/uploads/2020/07/497164864.png" alt="构成图" title="构成图"></p><h2 id="1-4-docker-的组成部分展开目录"><a href="#1-4-docker-的组成部分展开目录" class="headerlink" title="1.4 docker 的组成部分展开目录"></a>1.4 docker 的组成部分展开目录</h2><p>docker 是传统的 CS 架构分为 docker client 和 docker server<br>Docker 客户端是 Docker 用户与 Docker 交互的主要方式。当您使用 Docker 命令行运行命令时，Docker 客户端将这些命令发送给服务器端，服务端将执行这些命令。<br>Docker 命令使用 Docker API 。Docker 客户端可以与多个服务端进行通信。</p><p><img src="https://cdn.jsdelivr.net/gh/kococ/IMAGE/usr/uploads/2020/07/3695901469.png" alt="请输入图片描述" title="请输入图片描述"></p><h1 id="第-2-章-Docker-安装部署展开目录"><a href="#第-2-章-Docker-安装部署展开目录" class="headerlink" title="第 2 章 Docker 安装部署展开目录"></a>第 2 章 Docker 安装部署展开目录</h1><h2 id="2-1-国内源安装-docker-ce展开目录"><a href="#2-1-国内源安装-docker-ce展开目录" class="headerlink" title="2.1 国内源安装 docker-ce展开目录"></a>2.1 国内源安装 docker-ce展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"># step 1: 安装必要的一些系统工具</span><br><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"># Step 2: 添加软件源信息</span><br><span class="line">sudo yum-config-manager --add-repo https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-ce&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo</span><br><span class="line"># Step 3: 更新并安装Docker-CE</span><br><span class="line">sudo yum makecache fast</span><br><span class="line">sudo yum -y install docker-ce</span><br><span class="line"># Step 4: 开启Docker服务</span><br><span class="line">sudo service docker start</span><br><span class="line"></span><br><span class="line"># 注意：</span><br><span class="line"># 官方软件源默认启用了最新的软件，您可以通过编辑软件源的方式获取各个版本的软件包。例如官方并没有将测试版本的软件源置为可用，您可以通过以下方式开启。同理可以开启各种测试版本等。</span><br><span class="line"># vim &#x2F;etc&#x2F;yum.repos.d&#x2F;docker-ee.repo</span><br><span class="line">#   将[docker-ce-test]下方的enabled&#x3D;0修改为enabled&#x3D;1</span><br><span class="line">#</span><br><span class="line"># 安装指定版本的Docker-CE:</span><br><span class="line"># Step 1: 查找Docker-CE的版本:</span><br><span class="line"># yum list docker-ce.x86_64 --showduplicates | sort -r</span><br><span class="line">#   Loading mirror speeds from cached hostfile</span><br><span class="line">#   Loaded plugins: branch, fastestmirror, langpacks</span><br><span class="line">#   docker-ce.x86_64            17.03.1.ce-1.el7.centos            docker-ce-stable</span><br><span class="line">#   docker-ce.x86_64            17.03.1.ce-1.el7.centos            @docker-ce-stable</span><br><span class="line">#   docker-ce.x86_64            17.03.0.ce-1.el7.centos            docker-ce-stable</span><br><span class="line">#   Available Packages</span><br><span class="line"># Step2: 安装指定版本的Docker-CE: (VERSION例如上面的17.03.0.ce.1-1.el7.centos)</span><br><span class="line"># sudo yum -y install docker-ce-[VERSION]</span><br></pre></td></tr></table></figure><p>安装校验</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">root@iZbp12adskpuoxodbkqzjfZ:$ docker version</span><br><span class="line">Client:</span><br><span class="line"> Version:      17.03.0-ce</span><br><span class="line"> API version:  1.26</span><br><span class="line"> Go version:   go1.7.5</span><br><span class="line"> Git commit:   3a232c8</span><br><span class="line"> Built:        Tue Feb 28 07:52:04 2017</span><br><span class="line"> OS&#x2F;Arch:      linux&#x2F;amd64</span><br><span class="line"></span><br><span class="line">Server:</span><br><span class="line"> Version:      17.03.0-ce</span><br><span class="line"> API version:  1.26 (minimum version 1.12)</span><br><span class="line"> Go version:   go1.7.5</span><br><span class="line"> Git commit:   3a232c8</span><br><span class="line"> Built:        Tue Feb 28 07:52:04 2017</span><br><span class="line"> OS&#x2F;Arch:      linux&#x2F;amd64</span><br><span class="line"> Experimental: false</span><br></pre></td></tr></table></figure><h2 id="2-2-（国内远镜像加速）等配置展开目录"><a href="#2-2-（国内远镜像加速）等配置展开目录" class="headerlink" title="2.2 （国内远镜像加速）等配置展开目录"></a>2.2 （国内远镜像加速）等配置展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@docker01 ~]# cat &#x2F;etc&#x2F;docker&#x2F;daemon.json </span><br><span class="line">&#123;</span><br><span class="line">    &quot;graph&quot;: &quot;&#x2F;data&#x2F;docker&quot;,</span><br><span class="line">    &quot;storage-driver&quot;: &quot;overlay2&quot;,</span><br><span class="line">    &quot;insecure-registries&quot;: [&quot;registry.access.redhat.com&quot;,&quot;quay.io&quot;],</span><br><span class="line">    &quot;registry-mirrors&quot;: [&quot;https:&#x2F;&#x2F;q2gr04ke.mirror.aliyuncs.com&quot;],</span><br><span class="line">    &quot;bip&quot;: &quot;192.168.1.1&#x2F;24&quot;,</span><br><span class="line">    &quot;exec-opts&quot;: [&quot;native.cgroupdriver&#x3D;systemd&quot;],</span><br><span class="line">    &quot;live-restore&quot;: true</span><br><span class="line">&#125;</span><br><span class="line">[root@docker01 ~]# systemctl restart docker</span><br></pre></td></tr></table></figure><h2 id="2-3-快速安装展开目录"><a href="#2-3-快速安装展开目录" class="headerlink" title="2.3 快速安装展开目录"></a>2.3 快速安装展开目录</h2><p>思路：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.开启yum缓存</span><br><span class="line">2.全新环境安装docker</span><br><span class="line">3.将缓存的包全部打包出来</span><br><span class="line">4.安装的时候使用rpm -ivh *.rpm方式安装</span><br></pre></td></tr></table></figure><h2 id="2-4-运行第一个容器展开目录"><a href="#2-4-运行第一个容器展开目录" class="headerlink" title="2.4 运行第一个容器展开目录"></a>2.4 运行第一个容器展开目录</h2><p>运行一个 Hello world</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run alpine &#x2F;bin&#x2F;echo &quot;Hello world&quot;</span><br></pre></td></tr></table></figure><h1 id="第-3-章-Docker-镜像和容器管理展开目录"><a href="#第-3-章-Docker-镜像和容器管理展开目录" class="headerlink" title="第 3 章 Docker 镜像和容器管理展开目录"></a>第 3 章 Docker 镜像和容器管理展开目录</h1><h2 id="3-1-镜像相关命令展开目录"><a href="#3-1-镜像相关命令展开目录" class="headerlink" title="3.1 镜像相关命令展开目录"></a>3.1 镜像相关命令展开目录</h2><h2 id="3-1-1-搜索镜像展开目录"><a href="#3-1-1-搜索镜像展开目录" class="headerlink" title="3.1.1 搜索镜像展开目录"></a>3.1.1 搜索镜像展开目录</h2><p>选择镜像建议：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.优先选择官方的</span><br><span class="line">2.选择星星多的</span><br><span class="line"></span><br><span class="line">docker search centos</span><br></pre></td></tr></table></figure><h2 id="3-1-2-获取镜像展开目录"><a href="#3-1-2-获取镜像展开目录" class="headerlink" title="3.1.2 获取镜像展开目录"></a>3.1.2 获取镜像展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker pull centos</span><br><span class="line">docker pull busybox</span><br><span class="line">docker pull busybox:1.29</span><br></pre></td></tr></table></figure><h2 id="3-1-3-查看镜像展开目录"><a href="#3-1-3-查看镜像展开目录" class="headerlink" title="3.1.3 查看镜像展开目录"></a>3.1.3 查看镜像展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><h2 id="3-1-4-删除镜像展开目录"><a href="#3-1-4-删除镜像展开目录" class="headerlink" title="3.1.4 删除镜像展开目录"></a>3.1.4 删除镜像展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi centos</span><br></pre></td></tr></table></figure><h2 id="3-1-5-导出镜像展开目录"><a href="#3-1-5-导出镜像展开目录" class="headerlink" title="3.1.5 导出镜像展开目录"></a>3.1.5 导出镜像展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker save -o centos.tar centos:latest</span><br></pre></td></tr></table></figure><h2 id="3-1-6-导入镜像展开目录"><a href="#3-1-6-导入镜像展开目录" class="headerlink" title="3.1.6 导入镜像展开目录"></a>3.1.6 导入镜像展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker load  &lt; centos.tar</span><br></pre></td></tr></table></figure><h2 id="3-2-容器相关命令展开目录"><a href="#3-2-容器相关命令展开目录" class="headerlink" title="3.2 容器相关命令展开目录"></a>3.2 容器相关命令展开目录</h2><h2 id="3-2-1-启动容器展开目录"><a href="#3-2-1-启动容器展开目录" class="headerlink" title="3.2.1 启动容器展开目录"></a>3.2.1 启动容器展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 80:80 nginx </span><br><span class="line">docker run --name mydocker -t -i centos &#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure><p><strong>报错：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WARNING: IPv4 forwarding is disabled. Networking will not work.</span><br></pre></td></tr></table></figure><p><strong>解决方法：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;usr&#x2F;lib&#x2F;sysctl.d&#x2F;00-system.conf</span><br><span class="line">net.ipv4.ip_forward&#x3D;1</span><br><span class="line"></span><br><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure><p>3.2.2 停止容器</p><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop </span><br></pre></td></tr></table></figure><h2 id="3-2-3-查看容器展开目录"><a href="#3-2-3-查看容器展开目录" class="headerlink" title="3.2.3 查看容器展开目录"></a>3.2.3 查看容器展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker ps </span><br><span class="line">docker ps -a </span><br><span class="line">docker ps -q</span><br><span class="line">docker ps -aq</span><br></pre></td></tr></table></figure><h2 id="3-2-4-进入容器展开目录"><a href="#3-2-4-进入容器展开目录" class="headerlink" title="3.2.4 进入容器展开目录"></a>3.2.4 进入容器展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker exec会分配一个新的终端tty</span><br><span class="line">docker exec -it 容器ID  &#x2F;bin&#x2F;bash </span><br><span class="line">docker attach会使用同一个终端</span><br><span class="line">docker attach 容器ID</span><br></pre></td></tr></table></figure><h2 id="3-2-5-删除容器展开目录"><a href="#3-2-5-删除容器展开目录" class="headerlink" title="3.2.5 删除容器展开目录"></a>3.2.5 删除容器展开目录</h2><p>删除单个容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm 容器ID</span><br></pre></td></tr></table></figure><p>批量删除容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker stop $(docker ps -q)</span><br><span class="line">docker rm $(docker ps -aq)</span><br></pre></td></tr></table></figure><h1 id="容器内部修改软件源（Nginx-举例）展开目录"><a href="#容器内部修改软件源（Nginx-举例）展开目录" class="headerlink" title="容器内部修改软件源（Nginx 举例）展开目录"></a>容器内部修改软件源（Nginx 举例）展开目录</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tee &#x2F;etc&#x2F;apt&#x2F;sources.list &lt;&lt;EOF </span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.163.com&#x2F;debian&#x2F; jessie main non-free contrib   </span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.163.com&#x2F;debian&#x2F; jessie-updates main non-free contrib</span><br><span class="line">EOF</span><br><span class="line">apt-get update </span><br><span class="line">apt-get -y install curl</span><br></pre></td></tr></table></figure><h1 id="第-4-章-Docker-网络管理展开目录"><a href="#第-4-章-Docker-网络管理展开目录" class="headerlink" title="第 4 章 Docker 网络管理展开目录"></a>第 4 章 Docker 网络管理展开目录</h1><h2 id="4-1-随机映射端口展开目录"><a href="#4-1-随机映射端口展开目录" class="headerlink" title="4.1 随机映射端口展开目录"></a>4.1 随机映射端口展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -P </span><br></pre></td></tr></table></figure><h2 id="4-2-指定映射端口展开目录"><a href="#4-2-指定映射端口展开目录" class="headerlink" title="4.2 指定映射端口展开目录"></a>4.2 指定映射端口展开目录</h2><p>p 宿主机端口：容器端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-p 80:80 -p 443:443</span><br></pre></td></tr></table></figure><p>-p 宿主机 IP: 宿主机端口：容器端口<br>如果想多个容器使用 8080 端口，可以通过添加多个 IP 地址实现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ifconfig eth0:1 10.0.1.13 up</span><br><span class="line">docker run -d -p 10.0.1.11:8080:80 nginx:latest</span><br><span class="line">docker run -d -p 10.0.1.13:8080:80 nginx:latest</span><br></pre></td></tr></table></figure><p>进入容器里修改站点目录，然后访问测试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it bdb2a4e7e24d &#x2F;bin&#x2F;bash</span><br><span class="line">echo &quot;web01&quot; &gt; &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F;index.html</span><br><span class="line">docker exec -it 31c1de138dda &#x2F;bin&#x2F;bash</span><br><span class="line">echo &quot;web02&quot; &gt; &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F;index.html</span><br></pre></td></tr></table></figure><p>访问测试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@docker01 ~]# curl 10.0.1.11:8080</span><br><span class="line">web02</span><br><span class="line">[root@docker01 ~]# curl 10.0.1.13:8080</span><br><span class="line">web01</span><br></pre></td></tr></table></figure><h1 id="第-5-章-Docker-数据卷管理展开目录"><a href="#第-5-章-Docker-数据卷管理展开目录" class="headerlink" title="第 5 章 Docker 数据卷管理展开目录"></a>第 5 章 Docker 数据卷管理展开目录</h1><h2 id="5-1-持久化数据卷展开目录"><a href="#5-1-持久化数据卷展开目录" class="headerlink" title="5.1 持久化数据卷展开目录"></a>5.1 持久化数据卷展开目录</h2><p>v 宿主机目录：容器内目录<br>下面我们来创建一个 html5 小游戏</p><h2 id="5-1-1-创建游戏代码目录展开目录"><a href="#5-1-1-创建游戏代码目录展开目录" class="headerlink" title="5.1.1 创建游戏代码目录展开目录"></a>5.1.1 创建游戏代码目录展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir &#x2F;data&#x2F;xiaoniao -p</span><br><span class="line">cd &#x2F;data&#x2F;</span><br><span class="line">unzip xiaoniaofeifei.zip  -d xiaoniao &#x2F;</span><br></pre></td></tr></table></figure><h2 id="5-1-2-创建容器并映射数据卷展开目录"><a href="#5-1-2-创建容器并映射数据卷展开目录" class="headerlink" title="5.1.2 创建容器并映射数据卷展开目录"></a>5.1.2 创建容器并映射数据卷展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -d  -p 80:80 -v &#x2F;data&#x2F;xiaoniao:&#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html nginx:latest</span><br><span class="line">docker ps</span><br></pre></td></tr></table></figure><h2 id="5-1-3-访问游戏页面展开目录"><a href="#5-1-3-访问游戏页面展开目录" class="headerlink" title="5.1.3 访问游戏页面展开目录"></a>5.1.3 访问游戏页面展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10.0.1.11</span><br></pre></td></tr></table></figure><h2 id="5-2-持久化数据卷容器展开目录"><a href="#5-2-持久化数据卷容器展开目录" class="headerlink" title="5.2 持久化数据卷容器展开目录"></a>5.2 持久化数据卷容器展开目录</h2><p><code>volumes-from</code> (跟某一个已经存在的容器挂载相同的卷)<br>查看当前容器有哪些卷</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker volume ls</span><br></pre></td></tr></table></figure><p>下面我们利用容器卷创建一个小游戏</p><h2 id="5-2-1-创建一个容器卷展开目录"><a href="#5-2-1-创建一个容器卷展开目录" class="headerlink" title="5.2.1 创建一个容器卷展开目录"></a>5.2.1 创建一个容器卷展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -d  -p 8080:80 --volume xiaoniao:&#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html nginx:latest</span><br><span class="line">docker volume ls</span><br></pre></td></tr></table></figure><h2 id="5-2-2-查看卷的目录展开目录"><a href="#5-2-2-查看卷的目录展开目录" class="headerlink" title="5.2.2 查看卷的目录展开目录"></a>5.2.2 查看卷的目录展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker volume inspect xiaoniao</span><br></pre></td></tr></table></figure><h2 id="5-2-3-复制代码目录到容器卷目录展开目录"><a href="#5-2-3-复制代码目录到容器卷目录展开目录" class="headerlink" title="5.2.3 复制代码目录到容器卷目录展开目录"></a>5.2.3 复制代码目录到容器卷目录展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\cp -a &#x2F;data&#x2F;xiaoniao&#x2F;* &#x2F;var&#x2F;lib&#x2F;docker&#x2F;volumes&#x2F;xiaoniao&#x2F;_data&#x2F;</span><br></pre></td></tr></table></figure><h2 id="5-2-4-使用容器卷创建新容器展开目录"><a href="#5-2-4-使用容器卷创建新容器展开目录" class="headerlink" title="5.2.4 使用容器卷创建新容器展开目录"></a>5.2.4 使用容器卷创建新容器展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d  -p 8090:80 --volume xiaoniao:&#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html nginx:latest</span><br></pre></td></tr></table></figure><h2 id="5-3-实验-访问不同端口展示不同页面展开目录"><a href="#5-3-实验-访问不同端口展示不同页面展开目录" class="headerlink" title="5.3 实验 - 访问不同端口展示不同页面展开目录"></a>5.3 实验 - 访问不同端口展示不同页面展开目录</h2><p><code>需求：</code><br>访问 8080 端口，展示 xiaoniao 首页<br>访问 8090 端口，展示游戏集合页面</p><h2 id="5-3-1-准备-nginx-配置文件展开目录"><a href="#5-3-1-准备-nginx-配置文件展开目录" class="headerlink" title="5.3.1 准备 nginx 配置文件展开目录"></a>5.3.1 准备 nginx 配置文件展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@docker01 ~]# cat &#x2F;data&#x2F;game.conf </span><br><span class="line">server &#123;</span><br><span class="line">    listen       8080;</span><br><span class="line">    server_name  localhost;</span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line">        root   &#x2F;opt&#x2F;game&#x2F;;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen       8090;</span><br><span class="line">    server_name  localhost;</span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line">        root   &#x2F;opt&#x2F;xiaoniao&#x2F;;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-3-2-上传代码目录展开目录"><a href="#5-3-2-上传代码目录展开目录" class="headerlink" title="5.3.2 上传代码目录展开目录"></a>5.3.2 上传代码目录展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@docker01 &#x2F;data]# ll </span><br><span class="line">总用量 18896</span><br><span class="line">drwxr-xr-x 5 root root       73 9月   7 23:03 game</span><br><span class="line">-rw-r--r-- 1 root root      309 9月   7 22:57 game.conf</span><br><span class="line">-rw-r--r-- 1 root root 19248295 8月  28 09:48 html5.zip</span><br><span class="line">drwxr-xr-x 3 root root       92 9月   7 22:15 xiaoniao</span><br><span class="line">-rw-r--r-- 1 root root    91014 9月   7 22:11 xiaoniaofeifei.zip</span><br></pre></td></tr></table></figure><h2 id="5-3-3-创建容器并挂载展开目录"><a href="#5-3-3-创建容器并挂载展开目录" class="headerlink" title="5.3.3 创建容器并挂载展开目录"></a>5.3.3 创建容器并挂载展开目录</h2><p>需要挂载的内容：<br>1.nginx 配置文件<br>2. 游戏目录<br>创建容器命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 8080:8080 -p 8090:8090 -v &#x2F;data&#x2F;game.conf:&#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;game.conf -v &#x2F;data&#x2F;game:&#x2F;opt&#x2F;game -v &#x2F;data&#x2F;xiaoniao:&#x2F;opt&#x2F;xiaoniao nginx:latest   </span><br><span class="line">5.3.4 访问测试</span><br><span class="line">10.0.1.11:8080</span><br><span class="line">10.0.1.11:8090</span><br></pre></td></tr></table></figure><h1 id="第-6-章-Docker-镜像手动构建展开目录"><a href="#第-6-章-Docker-镜像手动构建展开目录" class="headerlink" title="第 6 章 Docker 镜像手动构建展开目录"></a>第 6 章 Docker 镜像手动构建展开目录</h1><h2 id="6-1-手动制作游戏镜像展开目录"><a href="#6-1-手动制作游戏镜像展开目录" class="headerlink" title="6.1 手动制作游戏镜像展开目录"></a>6.1 手动制作游戏镜像展开目录</h2><p>下面我们基于 centos 容器制作一个新镜像，并安装 nginx 服务</p><h2 id="6-1-1-启动一个容器并安装-nginx展开目录"><a href="#6-1-1-启动一个容器并安装-nginx展开目录" class="headerlink" title="6.1.1 启动一个容器并安装 nginx展开目录"></a>6.1.1 启动一个容器并安装 nginx展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@docker01 ~]# docker run -it centos &#x2F;bin&#x2F;bash</span><br><span class="line">[root@0ede2760ba65 &#x2F;]# yum install wget install openssh-clients -y </span><br><span class="line">[root@0ede2760ba65 &#x2F;]# wget -O &#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-Base.repo http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;repo&#x2F;Centos-7.repo</span><br><span class="line">[root@0ede2760ba65 &#x2F;]# wget -O &#x2F;etc&#x2F;yum.repos.d&#x2F;epel.repo http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;repo&#x2F;epel-7.repo</span><br><span class="line">[root@0ede2760ba65 &#x2F;]# sed -i -e &#39;&#x2F;mirrors.cloud.aliyuncs.com&#x2F;d&#39; -e &#39;&#x2F;mirrors.aliyuncs.com&#x2F;d&#39; &#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-Base.repo</span><br><span class="line">[root@0ede2760ba65 &#x2F;]# cat &#x2F;etc&#x2F;yum.repos.d&#x2F;nginx.repo  </span><br><span class="line">[nginx-stable]</span><br><span class="line">name&#x3D;nginx stable repo</span><br><span class="line">baseurl&#x3D;http:&#x2F;&#x2F;nginx.org&#x2F;packages&#x2F;centos&#x2F;$releasever&#x2F;$basearch&#x2F;</span><br><span class="line">gpgcheck&#x3D;1</span><br><span class="line">enabled&#x3D;1</span><br><span class="line">gpgkey&#x3D;https:&#x2F;&#x2F;nginx.org&#x2F;keys&#x2F;nginx_signing.key</span><br><span class="line">[nginx-mainline]</span><br><span class="line">name&#x3D;nginx mainline repo</span><br><span class="line">baseurl&#x3D;http:&#x2F;&#x2F;nginx.org&#x2F;packages&#x2F;mainline&#x2F;centos&#x2F;$releasever&#x2F;$basearch&#x2F;</span><br><span class="line">gpgcheck&#x3D;1</span><br><span class="line">enabled&#x3D;0</span><br><span class="line">gpgkey&#x3D;https:&#x2F;&#x2F;nginx.org&#x2F;keys&#x2F;nginx_signing.key</span><br><span class="line">[root@0ede2760ba65 &#x2F;]# yum makecache fast</span><br><span class="line">[root@0ede2760ba65 &#x2F;]# yum install nginx -y</span><br></pre></td></tr></table></figure><h2 id="6-1-2-上传代码目录并配置-nginx-配置文件展开目录"><a href="#6-1-2-上传代码目录并配置-nginx-配置文件展开目录" class="headerlink" title="6.1.2 上传代码目录并配置 nginx 配置文件展开目录"></a>6.1.2 上传代码目录并配置 nginx 配置文件展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@0ede2760ba65 &#x2F;]# scp -r 10.0.1.11:&#x2F;data&#x2F;* &#x2F;opt&#x2F;</span><br><span class="line">[root@0ede2760ba65 &#x2F;]# ll &#x2F;opt&#x2F;</span><br><span class="line">total 18896</span><br><span class="line">drwxr-xr-x 5 root root       73 Sep  7 16:02 game</span><br><span class="line">-rw-r--r-- 1 root root      303 Sep  7 16:02 game.conf</span><br><span class="line">-rw-r--r-- 1 root root 19248295 Sep  7 16:02 html5.zip</span><br><span class="line">drwxr-xr-x 3 root root       92 Sep  7 16:02 xiaoniao</span><br><span class="line">-rw-r--r-- 1 root root    91014 Sep  7 16:02 xiaoniaofeifei.zip</span><br><span class="line">[root@0ede2760ba65 &#x2F;]# cp &#x2F;opt&#x2F;game.conf &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;</span><br></pre></td></tr></table></figure><h2 id="6-1-3-将容器提交为新的镜像展开目录"><a href="#6-1-3-将容器提交为新的镜像展开目录" class="headerlink" title="6.1.3 将容器提交为新的镜像展开目录"></a>6.1.3 将容器提交为新的镜像展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@docker01 ~]# docker ps -aq</span><br><span class="line">0ede2760ba65</span><br><span class="line">[root@docker01 ~]# docker commit 0ede2760ba65 game:v1</span><br><span class="line">sha256:a61d28fbfe27ebe36d4b73825b55e5f94097083273ab56dccce0453ce2bd6d38</span><br></pre></td></tr></table></figure><h2 id="6-1-4-测试镜像功能是否可用展开目录"><a href="#6-1-4-测试镜像功能是否可用展开目录" class="headerlink" title="6.1.4 测试镜像功能是否可用展开目录"></a>6.1.4 测试镜像功能是否可用展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@docker01 ~]# docker run -d -p 8080:8080 -p 8090:8090 game:v1  nginx -g &#39;daemon off;&#39;</span><br><span class="line">f58f209d4761c4bdd9bb164c0050a94a3273b1ee0e57eafe29e48b1517c72950</span><br></pre></td></tr></table></figure><h2 id="6-1-5-将新镜像导出展开目录"><a href="#6-1-5-将新镜像导出展开目录" class="headerlink" title="6.1.5 将新镜像导出展开目录"></a>6.1.5 将新镜像导出展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker save -o game_v1.tar game:v1</span><br></pre></td></tr></table></figure><h2 id="6-2-手动制作云盘镜像展开目录"><a href="#6-2-手动制作云盘镜像展开目录" class="headerlink" title="6.2 手动制作云盘镜像展开目录"></a>6.2 手动制作云盘镜像展开目录</h2><h2 id="6-2-1-创建容器展开目录"><a href="#6-2-1-创建容器展开目录" class="headerlink" title="6.2.1 创建容器展开目录"></a>6.2.1 创建容器展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 80:80 --name clould game:v1  nginx -g &#39;daemon off;&#39;</span><br></pre></td></tr></table></figure><h2 id="6-2-2-进入容器安装-php-并求改运行用户展开目录"><a href="#6-2-2-进入容器安装-php-并求改运行用户展开目录" class="headerlink" title="6.2.2 进入容器安装 php 并求改运行用户展开目录"></a>6.2.2 进入容器安装 php 并求改运行用户展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@d0c987bcefa2 &#x2F;]# yum install php-fpm -y</span><br><span class="line">[root@d0c987bcefa2 &#x2F;]# php-fpm -v</span><br><span class="line">PHP 5.4.16 (fpm-fcgi) (built: Oct 30 2018 19:32:20)</span><br><span class="line">Copyright (c) 1997-2013 The PHP Group</span><br><span class="line">Zend Engine v2.4.0, Copyright (c) 1998-2013 Zend Technologies</span><br><span class="line">[root@d0c987bcefa2 &#x2F;]# sed -i &#39;&#x2F;^user&#x2F;c user &#x3D; nginx&#39; &#x2F;etc&#x2F;php-fpm.d&#x2F;www.conf</span><br><span class="line">[root@d0c987bcefa2 &#x2F;]# sed -i &#39;&#x2F;^group&#x2F;c group &#x3D; nginx&#39; &#x2F;etc&#x2F;php-fpm.d&#x2F;www.conf</span><br><span class="line">[root@d0c987bcefa2 &#x2F;]# sed -i &#39;&#x2F;daemonize&#x2F;s#no#yes#g&#39; &#x2F;etc&#x2F;php-fpm.conf     </span><br><span class="line">[root@d0c987bcefa2 &#x2F;]# php-fpm -c &#x2F;etc&#x2F;php.ini -y &#x2F;etc&#x2F;php-fpm.conf</span><br><span class="line">[root@d0c987bcefa2 &#x2F;]# php-fpm -c &#x2F;etc&#x2F;php.ini -y &#x2F;etc&#x2F;php-fpm.conf                                   </span><br><span class="line">[root@d0c987bcefa2 &#x2F;]# ps -ef|grep php</span><br><span class="line">root         77      0  0 21:43 ?        00:00:00 php-fpm: master process (&#x2F;etc&#x2F;php-fpm.conf)</span><br><span class="line">nginx        78     77  0 21:43 ?        00:00:00 php-fpm: pool www</span><br><span class="line">nginx        79     77  0 21:43 ?        00:00:00 php-fpm: pool www</span><br><span class="line">nginx        80     77  0 21:43 ?        00:00:00 php-fpm: pool www</span><br><span class="line">nginx        81     77  0 21:43 ?        00:00:00 php-fpm: pool www</span><br><span class="line">nginx        82     77  0 21:43 ?        00:00:00 php-fpm: pool www</span><br></pre></td></tr></table></figure><h2 id="6-2-3-配置-nginx展开目录"><a href="#6-2-3-配置-nginx展开目录" class="headerlink" title="6.2.3 配置 nginx展开目录"></a>6.2.3 配置 nginx展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@d0c987bcefa2 &#x2F;]# cat &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;cloud.conf   </span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name localhost;</span><br><span class="line">    root &#x2F;code;</span><br><span class="line">    index index.php index.html;</span><br><span class="line"></span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        root &#x2F;code;</span><br><span class="line">        fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">        fastcgi_index index.php;</span><br><span class="line">        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</span><br><span class="line">        include fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@d0c987bcefa2 &#x2F;]# nginx -t</span><br><span class="line">nginx: the configuration file &#x2F;etc&#x2F;nginx&#x2F;nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file &#x2F;etc&#x2F;nginx&#x2F;nginx.conf test is successful</span><br><span class="line">[root@d0c987bcefa2 &#x2F;]# nginx -s reload</span><br></pre></td></tr></table></figure><h2 id="6-2-4-下载代码目录展开目录"><a href="#6-2-4-下载代码目录展开目录" class="headerlink" title="6.2.4 下载代码目录展开目录"></a>6.2.4 下载代码目录展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@d0c987bcefa2 &#x2F;]# mkdir &#x2F;code</span><br><span class="line">[root@d0c987bcefa2 &#x2F;]# cd &#x2F;code&#x2F;</span><br><span class="line">[root@d0c987bcefa2 code]# scp -r 10.0.1.11:&#x2F;data&#x2F;kod&#x2F;* &#x2F;code&#x2F;</span><br><span class="line">[root@d0c987bcefa2 code]# ls</span><br><span class="line">ChangeLog.md  README.MD  app  config  data  index.php  plugins  static</span><br><span class="line">[root@d0c987bcefa2 code]# chown -R nginx:nginx &#x2F;code&#x2F;</span><br></pre></td></tr></table></figure><h2 id="6-2-5-测试展开目录"><a href="#6-2-5-测试展开目录" class="headerlink" title="6.2.5 测试展开目录"></a>6.2.5 测试展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@d0c987bcefa2 code]# curl -I 127.0.0.1</span><br><span class="line">HTTP&#x2F;1.1 302 Moved Temporarily</span><br><span class="line">Server: nginx&#x2F;1.16.1</span><br><span class="line">Date: Sat, 07 Sep 2019 21:53:17 GMT</span><br><span class="line">Content-Type: text&#x2F;html; charset&#x3D;utf-8</span><br><span class="line">Connection: keep-alive</span><br><span class="line">X-Powered-By: PHP&#x2F;5.4.16</span><br><span class="line">Set-Cookie: KOD_SESSION_ID_9d6d9&#x3D;ljq63o0tmcscon6eb3gdpqscf4; path&#x3D;&#x2F;</span><br><span class="line">Set-Cookie: KOD_SESSION_ID_9d6d9&#x3D;ljq63o0tmcscon6eb3gdpqscf4; path&#x3D;&#x2F;</span><br><span class="line">Set-Cookie: KOD_SESSION_ID_9d6d9&#x3D;ljq63o0tmcscon6eb3gdpqscf4; path&#x3D;&#x2F;</span><br><span class="line">Set-Cookie: KOD_SESSION_SSO&#x3D;bboh1p0h1uc50tfibrg67dnra7; path&#x3D;&#x2F;</span><br><span class="line">Expires: Thu, 19 Nov 1981 08:52:00 GMT</span><br><span class="line">Cache-Control: no-store, no-cache, must-revalidate, post-check&#x3D;0, pre-check&#x3D;0</span><br><span class="line">Pragma: no-cache</span><br><span class="line">Set-Cookie: KOD_SESSION_ID_9d6d9&#x3D;deleted; expires&#x3D;Thu, 01-Jan-1970 00:00:01 GMT; path&#x3D;&#x2F;</span><br><span class="line">Set-Cookie: kod_name&#x3D;deleted; expires&#x3D;Thu, 01-Jan-1970 00:00:01 GMT</span><br><span class="line">Set-Cookie: kodToken&#x3D;deleted; expires&#x3D;Thu, 01-Jan-1970 00:00:01 GMT</span><br><span class="line">Set-Cookie: X-CSRF-TOKEN&#x3D;deleted; expires&#x3D;Thu, 01-Jan-1970 00:00:01 GMT</span><br><span class="line">Location: .&#x2F;index.php?user&#x2F;login</span><br></pre></td></tr></table></figure><h2 id="6-2-6-提交新的镜像展开目录"><a href="#6-2-6-提交新的镜像展开目录" class="headerlink" title="6.2.6 提交新的镜像展开目录"></a>6.2.6 提交新的镜像展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@docker01 ~]# docker commit d0c987bcefa2 kod:v1</span><br><span class="line">sha256:169df6e8db11bd044e3e05237f2947783f9cc7a65b643dc9206ecf05fdc4a3ea</span><br></pre></td></tr></table></figure><h2 id="6-2-7-编写启动脚本并提交新镜像展开目录"><a href="#6-2-7-编写启动脚本并提交新镜像展开目录" class="headerlink" title="6.2.7 编写启动脚本并提交新镜像展开目录"></a>6.2.7 编写启动脚本并提交新镜像展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@docker01 ~]# docker exec -it c14835183fb5 &#x2F;bin&#x2F;bash</span><br><span class="line">[root@c14835183fb5 &#x2F;]# cat init.sh     </span><br><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">php-fpm -c &#x2F;etc&#x2F;php.ini -y &#x2F;etc&#x2F;php-fpm.conf</span><br><span class="line">nginx -g &#39;daemon off;&#39;</span><br><span class="line">[root@c14835183fb5 &#x2F;]# chmod +x init.sh </span><br><span class="line">[root@docker01 ~]# docker commit c14835183fb5 kod:v2</span><br><span class="line">sha256:c05ebdf400aa7f7a27aa857df0d9c75c42943db89abca66f79101771db8e9585</span><br></pre></td></tr></table></figure><h2 id="6-2-8-启动测试展开目录"><a href="#6-2-8-启动测试展开目录" class="headerlink" title="6.2.8 启动测试展开目录"></a>6.2.8 启动测试展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@docker01 ~]# docker stop $(docker ps -qa)</span><br><span class="line">[root@docker01 ~]# docker run -d -p 80:80 kod:v2 &#x2F;bin&#x2F;bash &#x2F;init.sh</span><br><span class="line">dccf4aea5471713872e4fefaca45f7fac3bffec8f5f602570863ed14231dea1a</span><br><span class="line">[root@docker01 ~]# docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                                            NAMES</span><br><span class="line">dccf4aea5471        kod:v2              &quot;&#x2F;bin&#x2F;bash &#x2F;init.sh&quot;     36 seconds ago      Up 35 seconds       0.0.0.0:80-&gt;80&#x2F;tcp                               magical_napier</span><br></pre></td></tr></table></figure><h2 id="6-2-9-添加-GD-库展开目录"><a href="#6-2-9-添加-GD-库展开目录" class="headerlink" title="6.2.9 添加 GD 库展开目录"></a>6.2.9 添加 GD 库展开目录</h2><p>此时打开页面提示缺少 GD 库，进入容器内安装 php 支持插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@dccf4aea5471 &#x2F;]yum install php-mbstring php-gd -y</span><br></pre></td></tr></table></figure><p>然后重启容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">[root@docker01 ~]# docker restart dccf4aea5471</span><br></pre></td></tr></table></figure><h2 id="6-2-10-访问测试没问题后提交新镜像展开目录"><a href="#6-2-10-访问测试没问题后提交新镜像展开目录" class="headerlink" title="6.2.10 访问测试没问题后提交新镜像展开目录"></a>6.2.10 访问测试没问题后提交新镜像展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@docker01 ~]# docker commit dccf4aea5471 kod:v2</span><br><span class="line">sha256:23051ce545a2eb6bb50bb2307bd9cfbaf6139e52f205a4126fb1d8d974c417f4</span><br></pre></td></tr></table></figure><h1 id="第-7-章-Dockerfile-自动构建-Docker-镜像展开目录"><a href="#第-7-章-Dockerfile-自动构建-Docker-镜像展开目录" class="headerlink" title="第 7 章 Dockerfile 自动构建 Docker 镜像展开目录"></a>第 7 章 Dockerfile 自动构建 Docker 镜像展开目录</h1><h2 id="7-1-Dockerfile-操作命令说明展开目录"><a href="#7-1-Dockerfile-操作命令说明展开目录" class="headerlink" title="7.1 Dockerfile 操作命令说明展开目录"></a>7.1 Dockerfile 操作命令说明展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">Docker通过对于在Dockerfile中的一系列指令的顺序解析实现自动的image的构建</span><br><span class="line">　　通过使用build命令，根据Dockerfiel的描述来构建镜像</span><br><span class="line">　　通过源代码路径的方式</span><br><span class="line">　　通过标准输入流的方式</span><br><span class="line">Dockerfile指令：</span><br><span class="line">　　只支持Docker自己定义的一套指令，不支持自定义</span><br><span class="line">　　大小写不敏感，但是建议全部使用大写</span><br><span class="line">　　根据Dockerfile的内容顺序执行</span><br><span class="line">FROM：</span><br><span class="line">　　FROM &#123;base镜像&#125;</span><br><span class="line">　　必须放在DOckerfile的第一行，表示从哪个baseimage开始构建</span><br><span class="line">MAINTAINER：</span><br><span class="line">　　可选的，用来标识image作者的地方</span><br><span class="line">RUN：</span><br><span class="line">　　每一个RUN指令都会是在一个新的container里面运行，并提交为一个image作为下一个RUN的base</span><br><span class="line">　　一个Dockerfile中可以包含多个RUN，按定义顺序执行</span><br><span class="line">　　RUN支持两种运行方式：</span><br><span class="line">　　　　RUN &lt;cmd&gt; 这个会当作&#x2F;bin&#x2F;sh -c “cmd” 运行</span><br><span class="line">　　　　RUN [“executable”，“arg1”，。。]，Docker把他当作json的顺序来解析，因此必须使用双引号，而且executable需要是完整路径</span><br><span class="line">　　RUN 都是启动一个容器、执行命令、然后提交存储层文件变更。第一层 RUN command1 的执行仅仅是当前进程，一个内存上的变化而已，其结果不会造成任何文件。而到第二层的时候，启动的是一个全新的容器，跟第一层的容器更完全没关系，自然不可能继承前一层构建过程中的内存变化。而如果需要将两条命令或者多条命令联合起来执行需要加上&amp;&amp;。如：cd &#x2F;usr&#x2F;local&#x2F;src &amp;&amp; wget xxxxxxx</span><br><span class="line">CMD：</span><br><span class="line">　　CMD的作用是作为执行container时候的默认行为（容器默认的启动命令）</span><br><span class="line">　　当运行container的时候声明了command，则不再用image中的CMD默认所定义的命令</span><br><span class="line">　　一个Dockerfile中只能有一个有效的CMD，当定义多个CMD的时候，只有最后一个才会起作用 </span><br><span class="line">CMD定义的三种方式：</span><br><span class="line">　　CMD &lt;cmd&gt; 这个会当作&#x2F;bin&#x2F;sh -c &quot;cmd&quot;来执行</span><br><span class="line">　　CMD [&quot;executable&quot;,&quot;arg1&quot;,....]</span><br><span class="line">　　CMD [&quot;arg1&quot;,&quot;arg2&quot;]，这个时候CMD作为ENTRYPOINT的参数 </span><br><span class="line">EXPOSE 声明端口</span><br><span class="line">　　格式为 EXPOSE &lt;端口1&gt; [&lt;端口2&gt;...]。</span><br><span class="line">　　EXPOSE 指令是声明运行时容器提供服务端口，这只是一个声明，在运行时并不会因为这个声明应用就会开启这个端口的服务。在 Dockerfile 中写入这样的声明有两个好处，一个是帮助镜像使用者理解这个镜像服务的守护端口，以方便配置映射；另一个用处则是在运行时使用随机端口映射时，也就是 docker run -P 时，会自动随机映射 EXPOSE 的端口。</span><br><span class="line">entrypoint：</span><br><span class="line">　　entrypoint的作用是，把整个container变成了一个可执行的文件，这样不能够通过替换CMD的方法来改变创建container的方式。但是可以通过参数传递的方法影响到container内部</span><br><span class="line">　　每个Dockerfile只能够包含一个entrypoint，多个entrypoint只有最后一个有效</span><br><span class="line">　　当定义了entrypoint以后，CMD只能够作为参数进行传递</span><br><span class="line">entrypoint定义方式：</span><br><span class="line">　　entrypoint [&quot;executable&quot;,&quot;arg1&quot;,&quot;arg2&quot;]，这种定义方式下，CMD可以通过json的方式来定义entrypoint的参数，可以通过在运行container的时候通过指定command的方式传递参数</span><br><span class="line">　　entrypoint &lt;cmd&gt;，当作&#x2F;bin&#x2F;bash -c &quot;cmd&quot;运行命令</span><br><span class="line">ADD &amp; COPY：</span><br><span class="line">　　当在源代码构建的方式下，可以通过ADD和COPY的方式，把host上的文件或者目录复制到image中</span><br><span class="line">　　ADD和COPY的源必须在context路径下</span><br><span class="line">　　当src为网络URL的情况下，ADD指令可以把它下载到dest的指定位置，这个在任何build的方式下都可以work</span><br><span class="line">　　ADD相对COPY还有一个多的功能，能够进行自动解压压缩包</span><br><span class="line">ENV：</span><br><span class="line">　　ENV key value</span><br><span class="line">    调用变量格式：$&#123;key&#125;</span><br><span class="line">　　用来设置环境变量，后续的RUN可以使用它所创建的环境变量</span><br><span class="line">　　当创建基于该镜像的container的时候，会自动拥有设置的环境变量 </span><br><span class="line">WORKDIR：</span><br><span class="line">　　用来指定当前工作目录（或者称为当前目录）</span><br><span class="line">　　当使用相对目录的情况下，采用上一个WORKDIR指定的目录作为基准 </span><br><span class="line">USER：</span><br><span class="line">　　指定UID或者username，来决定运行RUN指令的用户 </span><br><span class="line">ONBUILD：</span><br><span class="line">　　ONBUILD作为一个trigger的标记，可以用来trigger任何Dockerfile中的指令</span><br><span class="line">　　可以定义多个ONBUILD指令</span><br><span class="line">　　当下一个镜像B使用镜像A作为base的时候，在FROM A指令前，会先按照顺序执行在构建A时候定义的ONBUILD指令</span><br><span class="line">　　ONBUILD &lt;DOCKERFILE 指令&gt; &lt;content&gt;</span><br><span class="line">VOLUME：</span><br><span class="line">　　用来创建一个在image之外的mount point，用来在多个container之间实现数据共享</span><br><span class="line">　　运行使用json array的方式定义多个volume</span><br><span class="line">　　VOLUME [&quot;&#x2F;var&#x2F;data1&quot;,&quot;&#x2F;var&#x2F;data2&quot;]</span><br><span class="line">　　或者plain text的情况下定义多个VOLUME指令</span><br></pre></td></tr></table></figure><h2 id="7-2-使用-Dockerfile-创建云盘展开目录"><a href="#7-2-使用-Dockerfile-创建云盘展开目录" class="headerlink" title="7.2 使用 Dockerfile 创建云盘展开目录"></a>7.2 使用 Dockerfile 创建云盘展开目录</h2><h2 id="7-2-1-准备需要的文件展开目录"><a href="#7-2-1-准备需要的文件展开目录" class="headerlink" title="7.2.1 准备需要的文件展开目录"></a>7.2.1 准备需要的文件展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@docker01 ~&#x2F;dockerfile&#x2F;kod]# ls CentOS-Base.repo cloud.conf dockerfile epel.repo init.sh kodexplorer4.40.zip nginx.repo</span><br></pre></td></tr></table></figure><h2 id="7-2-2-编写-dockerfile展开目录"><a href="#7-2-2-编写-dockerfile展开目录" class="headerlink" title="7.2.2 编写 dockerfile展开目录"></a>7.2.2 编写 dockerfile展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@docker01 ~&#x2F;dockerfile&#x2F;kod]# cat dockerfile </span><br><span class="line">FROM centos:latest</span><br><span class="line"></span><br><span class="line">ADD CentOS-Base.repo  &#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-Base.repo</span><br><span class="line">ADD epel.repo  &#x2F;etc&#x2F;yum.repos.d&#x2F;epel.repo</span><br><span class="line">ADD nginx.repo  &#x2F;etc&#x2F;yum.repos.d&#x2F;nginx.repo</span><br><span class="line">RUN yum install nginx php-fpm unzip php-gd php-mbstring -y </span><br><span class="line"></span><br><span class="line">RUN rm -rf &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;default.conf </span><br><span class="line">RUN sed -i &#39;&#x2F;^user&#x2F;c user &#x3D; nginx&#39; &#x2F;etc&#x2F;php-fpm.d&#x2F;www.conf</span><br><span class="line">RUN sed -i &#39;&#x2F;^group&#x2F;c group &#x3D; nginx&#39; &#x2F;etc&#x2F;php-fpm.d&#x2F;www.conf</span><br><span class="line">RUN sed -i &#39;&#x2F;daemonize&#x2F;s#no#yes#g&#39; &#x2F;etc&#x2F;php-fpm.conf   </span><br><span class="line">ADD cloud.conf &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;cloud.conf</span><br><span class="line"></span><br><span class="line">RUN   mkdir &#x2F;code</span><br><span class="line">WORKDIR &#x2F;code</span><br><span class="line">ADD kodexplorer4.40.zip &#x2F;code&#x2F;kodexplorer4.40.zip </span><br><span class="line">RUN unzip kodexplorer4.40.zip </span><br><span class="line">RUN chown -R nginx:nginx .</span><br><span class="line">VOLUME &#x2F;code</span><br><span class="line"></span><br><span class="line">ADD init.sh  &#x2F;init.sh</span><br><span class="line">EXPOSE 80</span><br><span class="line"></span><br><span class="line">CMD [&quot;&#x2F;bin&#x2F;bash&quot;,&quot;&#x2F;init.sh&quot;]</span><br></pre></td></tr></table></figure><h2 id="7-2-3-构建新镜像展开目录"><a href="#7-2-3-构建新镜像展开目录" class="headerlink" title="7.2.3 构建新镜像展开目录"></a>7.2.3 构建新镜像展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@docker01 ~&#x2F;dockerfile&#x2F;kod]# docker build --network&#x3D;host -t centos_kod:v1 .</span><br><span class="line">[root@docker01 ~&#x2F;dockerfile&#x2F;kod]# docker images</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">centos_kod          v1                  87071ea7c86b        2 minutes ago       465MB</span><br></pre></td></tr></table></figure><h2 id="7-2-4-基于新镜像运行容器展开目录"><a href="#7-2-4-基于新镜像运行容器展开目录" class="headerlink" title="7.2.4 基于新镜像运行容器展开目录"></a>7.2.4 基于新镜像运行容器展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@docker01 ~&#x2F;dockerfile&#x2F;kod]# docker run -d -p 80:80 centos_kod:v1</span><br><span class="line">4d1007d7194d434248762e5aca76070206643f0f0f533f2112d0359b25fe7ba0</span><br></pre></td></tr></table></figure><h1 id="第-8-章-Docker-私有仓库展开目录"><a href="#第-8-章-Docker-私有仓库展开目录" class="headerlink" title="第 8 章 Docker 私有仓库展开目录"></a>第 8 章 Docker 私有仓库展开目录</h1><h2 id="8-1-普通的-docker-registry展开目录"><a href="#8-1-普通的-docker-registry展开目录" class="headerlink" title="8.1 普通的 docker registry展开目录"></a>8.1 普通的 docker registry展开目录</h2><h2 id="8-2-带认证的-docker-registry展开目录"><a href="#8-2-带认证的-docker-registry展开目录" class="headerlink" title="8.2 带认证的 docker registry展开目录"></a>8.2 带认证的 docker registry展开目录</h2><h2 id="8-3-企业级的-docker-harbor展开目录"><a href="#8-3-企业级的-docker-harbor展开目录" class="headerlink" title="8.3 企业级的 docker-harbor展开目录"></a>8.3 企业级的 docker-harbor展开目录</h2><h2 id="8-3-1-部署思路展开目录"><a href="#8-3-1-部署思路展开目录" class="headerlink" title="8.3.1 部署思路展开目录"></a>8.3.1 部署思路展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">第一步：安装docker和docker-compose</span><br><span class="line">第二步：下载harbor-offline-installer-v1.9.0-rc1.tgz</span><br><span class="line">第三步：上传到&#x2F;opt,并解压</span><br><span class="line">第四步：修改harbor.yml配置文件 hostname &#x3D; 10.0.0.11 harbor_admin_password &#x3D; 123456</span><br><span class="line">第五步：执行install.sh</span><br></pre></td></tr></table></figure><h2 id="8-3-2-安装-docker-compose展开目录"><a href="#8-3-2-安装-docker-compose展开目录" class="headerlink" title="8.3.2 安装 docker-compose展开目录"></a>8.3.2 安装 docker-compose展开目录</h2><p>1. 安装 docker-compose</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y python2-pip</span><br></pre></td></tr></table></figure><p>2. 这里使用 pip 安装，默认源为国外，可以使用国内加速，相关网站</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;help&#x2F;pypi&#x2F;</span><br></pre></td></tr></table></figure><p>pip 加速操作命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install -i https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple pip -U</span><br><span class="line">pip config set global.index-url https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple</span><br></pre></td></tr></table></figure><p>3. 继续安装 docker-compose</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install docker-compose</span><br></pre></td></tr></table></figure><p>4. 检查</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose version</span><br></pre></td></tr></table></figure><h2 id="8-3-3-上传解压-docker-harbor展开目录"><a href="#8-3-3-上传解压-docker-harbor展开目录" class="headerlink" title="8.3.3 上传解压 docker-harbor展开目录"></a>8.3.3 上传解压 docker-harbor展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@docker01 ~]# cd &#x2F;opt&#x2F;</span><br><span class="line">[root@docker01 &#x2F;opt]# ls</span><br><span class="line">harbor-offline-installer-v1.9.0-rc1.tgz</span><br><span class="line">[root@docker01 &#x2F;opt]# tar zxf harbor-offline-installer-v1.9.0-rc1.tgz </span><br><span class="line">[root@docker01 &#x2F;opt]# ls</span><br><span class="line">harbor  harbor-offline-installer-v1.9.0-rc1.tgz</span><br><span class="line">[root@docker01 &#x2F;opt]# cd harbor&#x2F;</span><br></pre></td></tr></table></figure><h2 id="8-3-4-修改配置文件展开目录"><a href="#8-3-4-修改配置文件展开目录" class="headerlink" title="8.3.4 修改配置文件展开目录"></a>8.3.4 修改配置文件展开目录</h2><p>修改 2 个地方：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@docker01 &#x2F;opt&#x2F;harbor]# egrep &quot;10.0.1.11|123456&quot; harbor.yml </span><br><span class="line">hostname: 10.0.1.11</span><br><span class="line">harbor_admin_password: 123456</span><br></pre></td></tr></table></figure><h2 id="8-3-5-安装展开目录"><a href="#8-3-5-安装展开目录" class="headerlink" title="8.3.5 安装展开目录"></a>8.3.5 安装展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@docker01 &#x2F;opt&#x2F;harbor]# .&#x2F;install.sh</span><br></pre></td></tr></table></figure><h2 id="8-3-6-修改-docker-信任仓库展开目录"><a href="#8-3-6-修改-docker-信任仓库展开目录" class="headerlink" title="8.3.6 修改 docker 信任仓库展开目录"></a>8.3.6 修改 docker 信任仓库展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@docker01 &#x2F;opt&#x2F;harbor]# cat &#x2F;etc&#x2F;docker&#x2F;daemon.json    </span><br><span class="line">&#123;</span><br><span class="line">      &quot;registry-mirrors&quot;: [&quot;http:&#x2F;&#x2F;hub-mirror.c.163.com&quot;],</span><br><span class="line">      &quot;insecure-registries&quot;: [&quot;http:&#x2F;&#x2F;10.0.1.11&quot;] </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="8-3-7-重启-docker-并上传镜像展开目录"><a href="#8-3-7-重启-docker-并上传镜像展开目录" class="headerlink" title="8.3.7 重启 docker 并上传镜像展开目录"></a>8.3.7 重启 docker 并上传镜像展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart docker  </span><br></pre></td></tr></table></figure><h2 id="8-3-8-给镜像打标签并提交到-dockerharbor展开目录"><a href="#8-3-8-给镜像打标签并提交到-dockerharbor展开目录" class="headerlink" title="8.3.8 给镜像打标签并提交到 dockerharbor展开目录"></a>8.3.8 给镜像打标签并提交到 dockerharbor展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@docker01 &#x2F;opt&#x2F;harbor]# docker login 10.0.1.11           </span><br><span class="line">Username: zhangya </span><br><span class="line">Password: </span><br><span class="line">WARNING! Your password will be stored unencrypted in &#x2F;root&#x2F;.docker&#x2F;config.json.</span><br><span class="line">Configure a credential helper to remove this warning. See</span><br><span class="line">https:&#x2F;&#x2F;docs.docker.com&#x2F;engine&#x2F;reference&#x2F;commandline&#x2F;login&#x2F;#credentials-store</span><br><span class="line"></span><br><span class="line">Login Succeeded</span><br><span class="line">[root@docker01 ~]# docker run -d -p 8080:80 centos_kod:v1          </span><br><span class="line">78be80f7c2029b68e8943e38fa99131ec6709f798e63c94afb5a7fdfa4a8047c</span><br><span class="line">[root@docker01 ~]# docker ps|grep kod</span><br><span class="line">78be80f7c202        centos_kod:v1                                       &quot;&#x2F;bin&#x2F;bash &#x2F;init.sh&quot;     15 seconds ago      Up 13 seconds            0.0.0.0:8080-&gt;80&#x2F;tcp        tender_dirac</span><br><span class="line">[root@docker01 ~]# docker commit 78be80f7c202 10.0.1.11&#x2F;linux&#x2F;centos_kod:v1</span><br><span class="line">sha256:6bf1e1eef1969bcd4c82472aed945d4dda74a923c0d7dae91e38539676f8c240</span><br><span class="line">[root@docker01 ~&#x2F;dockerfile&#x2F;kod]# docker images</span><br><span class="line">REPOSITORY                      TAG                        IMAGE ID            CREATED             SIZE</span><br><span class="line">10.0.1.11&#x2F;linux&#x2F;centos_kod      v1                         6bf1e1eef196        13 minutes ago      465MB</span><br><span class="line">[root@docker01 &#x2F;opt&#x2F;harbor]# docker push 10.0.1.11&#x2F;linux&#x2F;centos_kod:v1</span><br></pre></td></tr></table></figure><h2 id="8-3-9-在-docker-harbor-上查看展开目录"><a href="#8-3-9-在-docker-harbor-上查看展开目录" class="headerlink" title="8.3.9 在 docker-harbor 上查看展开目录"></a>8.3.9 在 docker-harbor 上查看展开目录</h2><h2 id="8-3-10-其他主机上下载镜像展开目录"><a href="#8-3-10-其他主机上下载镜像展开目录" class="headerlink" title="8.3.10 其他主机上下载镜像展开目录"></a>8.3.10 其他主机上下载镜像展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@docker02 ~]# cat &#x2F;etc&#x2F;docker&#x2F;daemon.json </span><br><span class="line">&#123;</span><br><span class="line">      &quot;registry-mirrors&quot;: [&quot;http:&#x2F;&#x2F;hub-mirror.c.163.com&quot;],</span><br><span class="line">      &quot;insecure-registries&quot;: [&quot;http:&#x2F;&#x2F;10.0.1.11&quot;],</span><br><span class="line">      &quot;insecure-registries&quot;: [&quot;https:&#x2F;&#x2F;10.0.1.11&quot;] </span><br><span class="line">&#125;</span><br><span class="line">[root@docker02 ~]# docker pull 10.0.1.11&#x2F;linux&#x2F;centos_kod:v1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Docker+K8s </category>
          
          <category> 云计算 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes进阶（二）核心网络插件Flannel</title>
      <link href="/posts/28896/"/>
      <url>/posts/28896/</url>
      
        <content type="html"><![CDATA[<p><strong>网络插件Flannel介绍：<a href="https://www.kubernetes.org.cn/3682.html">https://www.kubernetes.org.cn/3682.html</a></strong></p><p>首先，flannel利用Kubernetes API或者etcd用于存储整个集群的网络配置，其中最主要的内容为设置集群的网络地址空间。例如，设定整个集群内所有容器的IP都取自网段“10.1.0.0/16”。</p><p>接着，flannel在每个主机中运行flanneld作为agent，它会为所在主机从集群的网络地址空间中，获取一个小的网段subnet，本主机内所有容器的IP地址都将从中分配。</p><p>然后，flanneld再将本主机获取的subnet以及用于主机间通信的Public IP，同样通过kubernetes API或者etcd存储起来。</p><p>最后，flannel利用各种backend mechanism，例如udp，vxlan等等，跨主机转发容器间的网络流量，完成容器间的跨主机通信。</p><p>一、下载flannel插件</p><p>在所有node节点安装flannel插件，本次环境在hdss7-21，hdss7-22上：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># cd &#x2F;opt&#x2F;src</span><br><span class="line"># wget https:&#x2F;&#x2F;github.com&#x2F;coreos&#x2F;flannel&#x2F;releases&#x2F;download&#x2F;v0.11.0&#x2F;flannel-v0.11.0-linux-amd64.tar.gz</span><br><span class="line"># mkdir &#x2F;opt&#x2F;flannel-v0.11.0</span><br><span class="line"># tar xf flannel-v0.11.0-linux-amd64.tar.gz -C &#x2F;opt&#x2F;flannel-v0.11.0&#x2F;</span><br><span class="line"># ln -s &#x2F;opt&#x2F;flannel-v0.11.0&#x2F; &#x2F;opt&#x2F;flannel</span><br><span class="line"># cd &#x2F;opt&#x2F;flannel</span><br><span class="line"># mkdir cert</span><br></pre></td></tr></table></figure><p>因为要和apiserver通信，所以要配置client证书：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cert]# scp hdss7-200:&#x2F;opt&#x2F;certs&#x2F;ca.pem . </span><br><span class="line"></span><br><span class="line">cert]# scp hdss7-200:&#x2F;opt&#x2F;certs&#x2F;client.pem .</span><br><span class="line"></span><br><span class="line">cert]# scp hdss7-200:&#x2F;opt&#x2F;certs&#x2F;client-key.pem .</span><br></pre></td></tr></table></figure><p>编辑环境变量env文件：红色部分根据node节点信息修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># vi subnet.env</span><br><span class="line"></span><br><span class="line">FLANNEL_NETWORK&#x3D;172.7.0.0&#x2F;16</span><br><span class="line">FLANNEL_SUBNET&#x3D;172.7.21.1&#x2F;24</span><br><span class="line">FLANNEL_MTU&#x3D;1500</span><br><span class="line">FLANNEL_IPMASQ&#x3D;false</span><br></pre></td></tr></table></figure><p>编辑启动脚本：红色部分根据node节点信息修改，并且eth0信息根据本机网卡信息修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># vi flanneld.sh </span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;sh</span><br><span class="line">.&#x2F;flanneld \</span><br><span class="line">  --public-ip&#x3D;10.4.7.21 \</span><br><span class="line">  --etcd-endpoints&#x3D;https:&#x2F;&#x2F;10.4.7.12:2379,https:&#x2F;&#x2F;10.4.7.21:2379,https:&#x2F;&#x2F;10.4.7.22:2379 \</span><br><span class="line">  --etcd-keyfile&#x3D;.&#x2F;cert&#x2F;client-key.pem \</span><br><span class="line">  --etcd-certfile&#x3D;.&#x2F;cert&#x2F;client.pem \</span><br><span class="line">  --etcd-cafile&#x3D;.&#x2F;cert&#x2F;ca.pem \</span><br><span class="line">  --iface&#x3D;eth0 \</span><br><span class="line">  --subnet-file&#x3D;.&#x2F;subnet.env \</span><br><span class="line">  --healthz-port&#x3D;2401</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># chmod u+x flanneld.sh</span><br></pre></td></tr></table></figure><p>创建日志存放目录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># mkdir -p &#x2F;data&#x2F;logs&#x2F;flanneld</span><br></pre></td></tr></table></figure><p>在etcd中增加网络配置信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># cd &#x2F;opt&#x2F;etcd</span><br></pre></td></tr></table></figure><p>测试使用 host-gw模型：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># .&#x2F;etcdctl set &#x2F;coreos.com&#x2F;network&#x2F;config &#39;&#123;&quot;Network&quot;: &quot;172.7.0.0&#x2F;16&quot;, &quot;Backend&quot;: &#123;&quot;Type&quot;: &quot;host-gw&quot;&#125;&#125;&#39;</span><br></pre></td></tr></table></figure><p>查看网络模型配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># .&#x2F;etcdctl get &#x2F;coreos.com&#x2F;network&#x2F;config</span><br></pre></td></tr></table></figure><p><a href="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612240962.png"><img src="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612240962.png" title="img"></a></p><p>编辑supervisor启动脚本：红色部分记得修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># vi &#x2F;etc&#x2F;supervisord.d&#x2F;flannel.ini</span><br></pre></td></tr></table></figure><p><a href="javascript:void"></a>;)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[program:flanneld-7-21]</span><br><span class="line">command&#x3D;&#x2F;opt&#x2F;flannel&#x2F;flanneld.sh                             ; the program (relative uses PATH, can take args)</span><br><span class="line">numprocs&#x3D;1                                                   ; number of processes copies to start (def 1)</span><br><span class="line">directory&#x3D;&#x2F;opt&#x2F;flannel                                       ; directory to cwd to before exec (def no cwd)</span><br><span class="line">autostart&#x3D;true                                               ; start at supervisord start (default: true)</span><br><span class="line">autorestart&#x3D;true                                             ; retstart at unexpected quit (default: true)</span><br><span class="line">startsecs&#x3D;30                                                 ; number of secs prog must stay running (def. 1)</span><br><span class="line">startretries&#x3D;3                                               ; max # of serial start failures (default 3)</span><br><span class="line">exitcodes&#x3D;0,2                                                ; &#39;expected&#39; exit codes for process (default 0,2)</span><br><span class="line">stopsignal&#x3D;QUIT                                              ; signal used to kill process (default TERM)</span><br><span class="line">stopwaitsecs&#x3D;10                                              ; max num secs to wait b4 SIGKILL (default 10)</span><br><span class="line">user&#x3D;root                                                    ; setuid to this UNIX account to run the program</span><br><span class="line">redirect_stderr&#x3D;true                                         ; redirect proc stderr to stdout (default false)</span><br><span class="line">stdout_logfile&#x3D;&#x2F;data&#x2F;logs&#x2F;flanneld&#x2F;flanneld.stdout.log       ; stderr log path, NONE for none; default AUTO</span><br><span class="line">stdout_logfile_maxbytes&#x3D;64MB                                 ; max # logfile bytes b4 rotation (default 50MB)</span><br><span class="line">stdout_logfile_backups&#x3D;4                                     ; # of stdout logfile backups (default 10)</span><br><span class="line">stdout_capture_maxbytes&#x3D;1MB                                  ; number of bytes in &#39;capturemode&#39; (default 0)</span><br><span class="line">stdout_events_enabled&#x3D;false                                  ; emit events on stdout writes (default false)</span><br></pre></td></tr></table></figure><p>更新supervisor配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># supervisorctl update</span><br></pre></td></tr></table></figure><p><a href="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612241033.png"><img src="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612241033.png" title="img"></a></p><p><strong>这里需要修改iptables优化SNAT规则，否则在访问时，其他节点记录的是node节点的ip 10.4.7.21，而不是pod集群内部的172.7.21.x，红色部分按需修改</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># yum install iptables-services -y</span><br><span class="line"># iptables -t nat -D POSTROUTING -s 172.7.21.0&#x2F;24 ! -o docker0 -j MASQUERADE</span><br><span class="line"># iptables -t nat -I POSTROUTING -s 172.7.21.0&#x2F;24 ! -d 172.7.0.0&#x2F;16 ! -o docker0 -j MASQUERADE</span><br><span class="line"># iptables-save |grep -i postrouting</span><br><span class="line"># iptables-save &gt; &#x2F;etc&#x2F;sysconfig&#x2F;iptables</span><br></pre></td></tr></table></figure><p>修改后会影响到docker原本的iptables链的规则，所以需要重启docker服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># systemctl restart docker</span><br></pre></td></tr></table></figure><p>配置vxlan模型：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># cd &#x2F;opt&#x2F;etcd</span><br><span class="line"># .&#x2F;etcdctl set &#x2F;coreos.com&#x2F;network&#x2F;config  &#39;&#123;&quot;Network&quot;: &quot;172.7.0.0&#x2F;16&quot;, &quot;Backend&quot;: &#123;&quot;Type&quot;: &quot;vxlan&quot;&#125;&#125;&#39;</span><br></pre></td></tr></table></figure><p>重启flanneld：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># supervisorctl restart flanneld-7-21</span><br></pre></td></tr></table></figure><p>可以发现多了一块网卡，这块网卡就是vxlan用于隧道通信的虚拟网卡：</p><p><a href="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612241089.png"><img src="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612241089.png" title="img"></a></p><p><a href="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612241089.png"><img src="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612241089.png" title="img"></a></p><p>配置vxlan跟host-gw混合模型：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># .&#x2F;etcdctl set &#x2F;coreos.com&#x2F;network&#x2F;config  &#39;&#123;&quot;Network&quot;: &quot;172.7.0.0&#x2F;16&quot;, &quot;Backend&quot;: &#123;&quot;Type&quot;: &quot;vxlan&quot;,&quot;Directrouting&quot;: true&#125;&#125;&#39;</span><br></pre></td></tr></table></figure><p>重启flanneld：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># supervisorctl restart flanneld-7-21</span><br></pre></td></tr></table></figure><p><a href="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612241084.png"><img src="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612241084-1024x44.png" title="img"></a></p>]]></content>
      
      
      <categories>
          
          <category> Docker+K8s </category>
          
          <category> 云计算 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes进阶（一） kubectl工具使用详解</title>
      <link href="/posts/33788/"/>
      <url>/posts/33788/</url>
      
        <content type="html"><![CDATA[<p><strong>管理k8s核心资源的三种基本方法：</strong></p><p>一、陈述式-主要依赖命令行工具 –可以满足90%以上的使用场景，但是缺点也很明显：</p><p>命令冗长，复杂，难以记忆</p><p>特定场景下，无法实现管理需求</p><p>对资源的增、删、查操作比较容易，改比较麻烦，需要patch来使用json串来更改。</p><p><strong>1.1 查看名称空间</strong> 查询时，为了避免重名，需要指定名称空间。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># kubectl get namespace</span><br><span class="line">简写：</span><br><span class="line"># kubectl get ns</span><br></pre></td></tr></table></figure><p><a href="https://img2018.cnblogs.com/blog/1034759/201911/1034759-20191120162038299-1719142838.png"><img src="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612015499.png" title="img"></a></p><p><strong>1.2 查询命名空间中的资源</strong>，使用-n 指定命名空间</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># kubectl get all -n default</span><br><span class="line"># kubectl get pods -n default</span><br><span class="line"># kubectl get nodes -n default</span><br></pre></td></tr></table></figure><p><strong>1.3 创建命名空间</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># kubectl create ns app</span><br></pre></td></tr></table></figure><p><a href="https://img2018.cnblogs.com/blog/1034759/201911/1034759-20191120163051927-1329056471.png"><img src="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612015579.png" title="img"></a></p><p><strong>1.4 删除命名空间</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># kubectl delete ns app</span><br></pre></td></tr></table></figure><p><a href="https://img2018.cnblogs.com/blog/1034759/201911/1034759-20191120163157819-1947277387.png"><img src="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612015563.png" title="img"></a></p><p><strong>1.5 创建一个deployment类型的pod控制器</strong>：PS:1.16版本以后，控制器有变化，具体变化参考k8s官网。</p><p>pod控制器类型参考：<a href="https://www.cnblogs.com/weiyiming007/p/10246118.html">https://www.cnblogs.com/weiyiming007/p/10246118.html</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># kubectl create deployment nginx-dp --image&#x3D;harbor.od.com&#x2F;public&#x2F;nginx:v1.7.9 -n kube-public</span><br><span class="line"># kubectl get deploy -n kube-public</span><br></pre></td></tr></table></figure><p><a href="https://img2018.cnblogs.com/blog/1034759/201911/1034759-20191120181727487-1964819809.png"><img src="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612015564.png" title="img"></a></p><p><strong>1.6 查看pod控制器或者pod概览信息</strong> : -o wide</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># kubectl get deploy -o wide -n kube-public</span><br><span class="line"># kubectl get pod -o wide -n kube-public</span><br></pre></td></tr></table></figure><p><a href="https://img2018.cnblogs.com/blog/1034759/201911/1034759-20191120182326063-1712655305.png"><img src="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612015550-1024x98.png" title="img"></a></p><p><strong>1.7 查看pod控制器、pod、service等资源的详细信息</strong>：describe</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># kubectl describe deploy nginx-dp -n kube-public</span><br><span class="line"># kubectl describe pod nginx-dp-5dfc689474-4bhfh -n kube-public</span><br><span class="line"># kubectl describe svc nginx-dp -n kube-public　</span><br></pre></td></tr></table></figure><p>详细信息太多，就不截图了。</p><p><strong>1.8 进入pod容器，用法和docker exec一致</strong>，但是需要使用-n 指定命名空间</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># kubectl exec -ti nginx-dp-5dfc689474-4bhfh &#x2F;bin&#x2F;bash -n kube-public</span><br></pre></td></tr></table></figure><p><a href="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612015673.png"><img src="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612015673.png" title="img"></a></p><p><strong>1.9 删除pod容器</strong>，此删除，只是删除了pod容器，并没有删除pod控制器，所以此操作相当于删除pod后，pod控制器在拉起一个新的pod。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># kubectl delete pods nginx-dp-5dfc689474-4bhfh -n kube-public</span><br></pre></td></tr></table></figure><p><a href="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612015631.png"><img src="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612015631.png" title="img"></a></p><p>可以看到我们删除pod以后，pod控制器又帮我们从新拉起了一个新的pod，想要完全删除，需要删除pod控制器。</p><p><strong>1.10 删除pod控制器</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># kubectl delete deploy nginx-dp -n kube-public</span><br></pre></td></tr></table></figure><p><a href="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612015617.png"><img src="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612015617.png" title="img"></a></p><p>可以看到，当我们删除了pod控制器以后，pod容器也随之被删除了。</p><p><strong>1.11 扩容pod –replicas=数量</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># kubectl scale deployment nginx-dp --replicas&#x3D;2 -n kube-public</span><br></pre></td></tr></table></figure><p><a href="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612015771.png"><img src="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612015771.png" title="img"></a></p><p><a href="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612015870.png"><img src="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612015870-1024x100.png" title="img"></a></p><p><strong>1.12 管理service资源 service资源</strong>：为pod资源提供稳定的接入点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># kubectl create deploy nginx-dp --image&#x3D;harbor.od.com&#x2F;public&#x2F;nginx:v1.7.9</span><br><span class="line"># kubectl expose deploy nginx-dp --port&#x3D;80 -n kube-public</span><br></pre></td></tr></table></figure><p><a href="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612015656.png"><img src="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612015656.png" title="img"></a></p><p>看到我们已经创建了一个service资源，可以通过192.168.234.234的80，访问到后面pod，为了解决pod漂移导致IP变化的问题。</p><p>可以使用ipvsadm -Ln来查看：nq为ipvs调度算法中的一种，其他调度算法请自行查阅。</p><p><a href="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612015670.png"><img src="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612015670.png" title="img"></a></p><p>我们通过删除pod的方式，让pod漂移到另一台node节点，再来查看一下：</p><p><a href="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612015781.png"><img src="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612015781-1024x344.png" title="img"></a></p><p>可以看到，虽然pod漂移了，但是service资源提供的接入点是不变的，这得益于ipvs的强大。</p><p><a href="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612015784.png"><img src="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612015784.png" title="img"></a></p><p><a href="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612015811.png"><img src="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612015811.png" title="img"></a></p><p><strong>1.13 查看资源配置清单详细信息</strong>：-o yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># kubectl get pod nginx-dp-5dfc689474-c5r9r -o yaml -n kube-public</span><br><span class="line"># kubectl get deploy nginx-dp -o yaml -n kube-public</span><br><span class="line"># kubectl get svc -o yaml -n kube-public</span><br></pre></td></tr></table></figure><p><strong>1.14 查看属性的定义及用法</strong>：例：查看service资源下metadata的定义及用法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># kubectl explain service.metadata</span><br></pre></td></tr></table></figure><p><a href="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612015899.png"><img src="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612015899.png" title="img"></a></p><p><strong>2、声明式-依赖统一资源配置清单(manifest) yaml/json</strong></p><p><strong>2.1 创建一个svc资源配置清单</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># vi nginx-ds-svc.yaml</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app: nginx-ds</span><br><span class="line">  name: nginx-ds</span><br><span class="line">  namespace: default</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - port: 80</span><br><span class="line">    protocol: TCP</span><br><span class="line">    targetPort: 80</span><br><span class="line">  selector:</span><br><span class="line">    app: nginx-ds</span><br><span class="line">  sessionAffinity: None</span><br><span class="line">  type: ClusterIP</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># kubectl create -f nginx-ds-svc.yaml</span><br></pre></td></tr></table></figure><p><a href="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612015849.png"><img src="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612015849.png" title="img"></a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># kubectl get svc nginx-ds -o yaml -n default</span><br></pre></td></tr></table></figure><p><a href="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612015811-1.png"><img src="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612015811-1.png" title="img"></a></p><p><strong>2.2 离线修改资源配置清单：</strong></p><p>修改资源配置清单后可以使用apply应用。</p><p>这里增加一个知识点，就是kube-apiserver这个服务当中，有一个限制端口范围的参数：–service-node-port-range 10-29999，这个参数在使用apply修改资源配置清单的时候，会有作用</p><p>如果修改后的资源配置清单中的port不在这个范围，会报错，修改这个以后，重启kube-apiserver即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># vi nginx-ds-svc.yaml #将对外暴露的端口改为881</span><br><span class="line"># kubectl apply -f nginx-ds-svc.yaml</span><br></pre></td></tr></table></figure><p>可以看到端口从80变成了881</p><p><a href="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612015965.png"><img src="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612015965.png" title="img"></a></p><p>修改资源配置清单分为在线修改和离线修改（推荐离线修改）：</p><p><strong>2.3 在线修改：</strong>我这里使用在线修改，将端口修改为888</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># kubectl edit svc nginx-ds -n default</span><br></pre></td></tr></table></figure><p><a href="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612015951.png"><img src="https://blog.kococ.cn/wp-content/uploads/2019/11/2020071612015951.png" title="img"></a></p><p>2.4 删除资源：</p><p>2.4.1 陈述式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># kubectl delete svc nginx-ds -n default</span><br></pre></td></tr></table></figure><p>2.4.2 声明式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># kubectl delete -f nginx-ds-svc.yaml</span><br></pre></td></tr></table></figure><p>3、GUI式-主要依赖图形化操作界面(web界面)</p>]]></content>
      
      
      <categories>
          
          <category> Docker+K8s </category>
          
          <category> 云计算 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>各大搜索引擎 User-Agent</title>
      <link href="/posts/41490/"/>
      <url>/posts/41490/</url>
      
        <content type="html"><![CDATA[<blockquote><p>由于项目需求，所以搜集了各大搜索引擎的蜘蛛 User-Agent，做了个统计</p></blockquote><h2 id="百度搜索-User-Agent："><a href="#百度搜索-User-Agent：" class="headerlink" title="百度搜索 User-Agent："></a>百度搜索 User-Agent：</h2><p>百度 PC UA</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Mozilla&#x2F;5.0 (compatible; Baiduspider&#x2F;2.0; +http:&#x2F;&#x2F;www.baidu.com&#x2F;search&#x2F;spider.html)</span><br><span class="line">Mozilla&#x2F;5.0 (compatible; Baiduspider-render&#x2F;2.0; +http:&#x2F;&#x2F;www.baidu.com&#x2F;search&#x2F;spider.html)</span><br></pre></td></tr></table></figure><p>百度移动 UA</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Mozilla&#x2F;5.0 (Linux;u;Android 4.2.2;zh-cn;) AppleWebKit&#x2F;534.46 (KHTML,like Gecko) Version&#x2F;5.1 Mobile Safari&#x2F;10600.6.3 (compatible; Baiduspider&#x2F;2.0; +http:&#x2F;&#x2F;www.baidu.com&#x2F;search&#x2F;spider.html)</span><br><span class="line">Mozilla&#x2F;5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit&#x2F;601.1.46 (KHTML, like Gecko) Version&#x2F;9.0 Mobile&#x2F;13B143 Safari&#x2F;601.1 (compatible; Baiduspider-render&#x2F;2.0; +http:&#x2F;&#x2F;www.baidu.com&#x2F;search&#x2F;spider.html)</span><br></pre></td></tr></table></figure><p>百度图片 UA</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Baiduspider-image+(+http:&#x2F;&#x2F;www.baidu.com&#x2F;search&#x2F;spider.htm)</span><br></pre></td></tr></table></figure><h2 id="神马搜索-User-Agent："><a href="#神马搜索-User-Agent：" class="headerlink" title="神马搜索 User-Agent："></a>神马搜索 User-Agent：</h2><p>神马搜索 PC UA</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mozilla&#x2F;5.0 (Windows NT 6.1; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;69.0.3497.81 YisouSpider&#x2F;5.0 Safari&#x2F;537.36</span><br></pre></td></tr></table></figure><p>神马搜索移动 UA</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mozilla&#x2F;5.0 (iPhone; CPU iPhone OS 10_3 like Mac OS X) AppleWebKit&#x2F;602.1.50 (KHTML, like Gecko) CriOS&#x2F;56.0.2924.75 Mobile&#x2F;14E5239e YisouSpider&#x2F;5.0 Safari&#x2F;602.1</span><br></pre></td></tr></table></figure><h2 id="谷歌-User-Agent："><a href="#谷歌-User-Agent：" class="headerlink" title="谷歌 User-Agent："></a>谷歌 User-Agent：</h2><p>谷歌 PC UA</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mozilla&#x2F;5.0 (compatible; Googlebot&#x2F;2.1; +http:&#x2F;&#x2F;www.google.com&#x2F;bot.html)</span><br></pre></td></tr></table></figure><p>谷歌移动 UA</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AdsBot-Google-Mobile (+http:&#x2F;&#x2F;www.google.com&#x2F;mobile&#x2F;adsbot.html) Mozilla (iPhone; U; CPU iPhone OS 3 0 like Mac OS X) AppleWebKit (KHTML, like Gecko) Mobile Safari</span><br></pre></td></tr></table></figure><p>谷歌图片 UA</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mozilla&#x2F;5.0 (compatible; Googlebot-Image&#x2F;1.0; +http:&#x2F;&#x2F;www.google.com&#x2F;bot.html)</span><br></pre></td></tr></table></figure><h2 id="搜狗-User-Agent："><a href="#搜狗-User-Agent：" class="headerlink" title="搜狗 User-Agent："></a>搜狗 User-Agent：</h2><p>搜索 PC UA</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Sogou web spider&#x2F;4.0(+http:&#x2F;&#x2F;www.sogou.com&#x2F;docs&#x2F;help&#x2F;webmasters.htm#07)</span><br></pre></td></tr></table></figure><p>搜狗图片 UA</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Sogou Pic Spider&#x2F;3.0(+http:&#x2F;&#x2F;www.sogou.com&#x2F;docs&#x2F;help&#x2F;webmasters.htm#07)</span><br></pre></td></tr></table></figure><p>搜狗新闻 UA</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Sogou News Spider&#x2F;4.0(+http:&#x2F;&#x2F;www.sogou.com&#x2F;docs&#x2F;help&#x2F;webmasters.htm#07)</span><br></pre></td></tr></table></figure><p>搜狗视频 UA</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Sogou Video Spider&#x2F;3.0(+http:&#x2F;&#x2F;www.sogou.com&#x2F;docs&#x2F;help&#x2F;webmasters.htm#07)</span><br></pre></td></tr></table></figure><h2 id="360-搜索-User-Agent："><a href="#360-搜索-User-Agent：" class="headerlink" title="360 搜索 User-Agent："></a>360 搜索 User-Agent：</h2><p>360 搜索 UA</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mozilla&#x2F;5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident&#x2F;5.0);</span><br></pre></td></tr></table></figure><p>360 移动 UA</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Mozilla&#x2F;5.0 (Linux; U; Android 4.0.2; en-us; Galaxy Nexus Build&#x2F;ICL53F) AppleWebKit&#x2F;534.30 (KHTML, like Gecko)Version&#x2F;4.0 Mobile Safari&#x2F;534.30; 360Spider</span><br><span class="line">Mozilla&#x2F;5.0 (Linux; U; Android 4.0.2; en-us; Galaxy Nexus Build&#x2F;ICL53F) AppleWebKit&#x2F;534.30 (KHTML, like Gecko) Version&#x2F;4.0 Mobile Safari&#x2F;534.30; HaosouSpider</span><br></pre></td></tr></table></figure><p>360 安全 UA</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">360spider (http:&#x2F;&#x2F;webscan.360.cn)</span><br></pre></td></tr></table></figure><h2 id="必应-User-Agent："><a href="#必应-User-Agent：" class="headerlink" title="必应 User-Agent："></a>必应 User-Agent：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mozilla&#x2F;5.0 (compatible; bingbot&#x2F;2.0; +http:&#x2F;&#x2F;www.bing.com&#x2F;bingbot.htm)</span><br></pre></td></tr></table></figure><h2 id="搜搜-User-Agent："><a href="#搜搜-User-Agent：" class="headerlink" title="搜搜 User-Agent："></a>搜搜 User-Agent：</h2><p>搜搜 UA：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Sosospider+(+http:&#x2F;&#x2F;help.soso.com&#x2F;webspider.htm)</span><br></pre></td></tr></table></figure><p>搜搜图片 UA：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Sosoimagespider+(+http:&#x2F;&#x2F;help.soso.com&#x2F;soso-image-spider.htm)</span><br></pre></td></tr></table></figure><h2 id="雅虎-User-Agent："><a href="#雅虎-User-Agent：" class="headerlink" title="雅虎 User-Agent："></a>雅虎 User-Agent：</h2><p>雅虎中文 UA：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mozilla&#x2F;5.0 (compatible; Yahoo! Slurp China; http:&#x2F;&#x2F;misc.yahoo.com.cn&#x2F;help.html)</span><br></pre></td></tr></table></figure><p>雅虎英文 UA：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mozilla&#x2F;5.0 (compatible; Yahoo! Slurp; http:&#x2F;&#x2F;help.yahoo.com&#x2F;help&#x2F;us&#x2F;ysearch&#x2F;slurp)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>LVS,Nginx , HAProxy 的工作原理</title>
      <link href="/posts/14584/"/>
      <url>/posts/14584/</url>
      
        <content type="html"><![CDATA[<blockquote><p>当前大多数的互联网系统都使用了服务器集群技术，集群是将相同服务部署在多台服务器上构成一个集群整体对外提供服务，这些集群可以是 Web 应用服务器集群，也可以是数据库服务器集群，还可以是分布式缓存服务器集群等等。</p></blockquote><p>在实际应用中，在 Web 服务器集群之前总会有一台负载均衡服务器，负载均衡设备的任务就是作为 Web 服务器流量的入口，挑选最合适的一台 Web 服务器，将客户端的请求转发给它处理，实现客户端到真实服务端的透明转发。</p><p>最近几年很火的「云计算」以及分布式架构，本质上也是将后端服务器作为计算资源、存储资源，由某台管理服务器封装成一个服务对外提供，客户端不需要关心真正提供服务的是哪台机器，在它看来，就好像它面对的是一台拥有近乎无限能力的服务器，而本质上，真正提供服务的，是后端的集群。</p><p>LVS、Nginx、HAProxy 是目前使用最广泛的三种软件负载均衡软件。</p><p>一般对负载均衡的使用是随着网站规模的提升根据不同的阶段来使用不同的技术。具体的应用需求还得具体分析，如果是中小型的 Web 应用，比如日 PV 小于 1000 万，用 Nginx 就完全可以了；</p><p>如果机器不少，可以用 DNS 轮询，LVS 所耗费的机器还是比较多的；大型网站或重要的服务，且服务器比较多时，可以考虑用 LVS。<br>目前关于网站架构一般比较合理流行的架构方案：Web 前端采用 Nginx/HAProxy+Keepalived 作负载均衡器；后端采用 MySQ L 数据库一主多从和读写分离，采用 LVS+Keepalived 的架构。</p><h1 id="LVS"><a href="#LVS" class="headerlink" title="LVS"></a>LVS</h1><hr><p>LVS 是 Linux Virtual Server 的简称，也就是 Linux 虚拟服务器。现在 LVS 已经是 Linux 标准内核的一部分，从 Linux2.4 内核以后，已经完全内置了 LVS 的各个功能模块，无需给内核打任何补丁，可以直接使用 LVS 提供的各种功能。</p><p>LVS 自从 1998 年开始，发展到现在已经是一个比较成熟的技术项目了。</p><h2 id="1-LVS-的体系结构"><a href="#1-LVS-的体系结构" class="headerlink" title="1 LVS 的体系结构"></a>1 LVS 的体系结构</h2><p>LVS 架设的服务器集群系统有三个部分组成：<br>(1) 最前端的负载均衡层，用 Load Balancer 表示。<br>(2) 中间的服务器集群层，用 Server Array 表示。<br>(3) 最底端的数据共享存储层，用 Shared Storage 表示。</p><h2 id="2-LVS-负载均衡机制"><a href="#2-LVS-负载均衡机制" class="headerlink" title="2 LVS 负载均衡机制"></a>2 LVS 负载均衡机制</h2><p>LVS 不像 HAProxy 等七层软负载面向的是 HTTP 包，所以七层负载可以做的 URL 解析等工作，LVS 无法完成。</p><p>LVS 是四层负载均衡，也就是说建立在 OSI 模型的第四层 —— 传输层之上，传输层上有我们熟悉的 TCP/UDP，LVS 支持 TCP/UDP 的负载均衡。因为 LVS 是四层负载均衡，因此它相对于其它高层负载均衡的解决办法，比如 DNS 域名轮流解析、应用层负载的调度、客户端的调度等，它的效率是非常高的。</p><p>所谓四层负载均衡 ，也就是主要通过报文中的目标地址和端口。七层负载均衡 ，也称为 “内容交换”，也就是主要通过报文中的真正有意义的应用层内容。</p><p>LVS 的转发主要通过修改 IP 地址（NAT 模式，分为源地址修改 SNAT 和目标地址修改 DNAT）、修改目标 MAC（DR 模式）来实现。</p><h2 id="3-NAT-模式：网络地址转换"><a href="#3-NAT-模式：网络地址转换" class="headerlink" title="3 NAT 模式：网络地址转换"></a>3 NAT 模式：网络地址转换</h2><p>NAT（Network Address Translation）是一种外网和内网地址映射的技术。</p><p>NAT 模式下，网络数据报的进出都要经过 LVS 的处理。LVS 需要作为 RS（真实服务器）的网关。</p><p>当包到达 LVS 时，LVS 做目标地址转换（DNAT），将目标 IP 改为 RS 的 IP。RS 接收到包以后，仿佛是客户端直接发给它的一样。RS 处理完，返回响应时，源 IP 是 RS IP，目标 IP 是客户端的 IP。</p><p>这时 RS 的包通过网关（LVS）中转，LVS 会做源地址转换（SNAT），将包的源地址改为 VIP，这样，这个包对客户端看起来就仿佛是 LVS 直接返回给它的。</p><h2 id="4-DR-模式：直接路由"><a href="#4-DR-模式：直接路由" class="headerlink" title="4 DR 模式：直接路由"></a>4 DR 模式：直接路由</h2><p>DR 模式下需要 LVS 和 RS 集群绑定同一个 VIP（RS 通过将 VIP 绑定在 loopback 实现），但与 NAT 的不同点在于：请求由 LVS 接受，由真实提供服务的服务器（RealServer，RS）直接返回给用户，返回的时候不经过 LVS。<br>详细来看，一个请求过来时，LVS 只需要将网络帧的 MAC 地址修改为某一台 RS 的 MAC，该包就会被转发到相应的 RS 处理，注意此时的源 IP 和目标 IP 都没变，LVS 只是做了一下移花接木。RS 收到 LVS 转发来的包时，链路层发现 MAC 是自己的，到上面的网络层，发现 IP 也是自己的，于是这个包被合法地接受，RS 感知不到前面有 LVS 的存在。而当 RS 返回响应时，只要直接向源 IP（即用户的 IP）返回即可，不再经过 LVS。</p><p>DR 负载均衡模式数据分发过程中不修改 IP 地址，只修改 mac 地址，由于实际处理请求的真实物理 IP 地址和数据请求目的 IP 地址一致，所以不需要通过负载均衡服务器进行地址转换，可将响应数据包直接返回给用户浏览器，避免负载均衡服务器网卡带宽成为瓶颈。因此，DR 模式具有较好的性能，也是目前大型网站使用最广泛的一种负载均衡手段。</p><h2 id="5-LVS-的优点"><a href="#5-LVS-的优点" class="headerlink" title="5 LVS 的优点"></a>5 LVS 的优点</h2><ul><li>抗负载能力强、是工作在传输层上仅作分发之用，没有流量的产生，这个特点也决定了它在负载均衡软件里的性能最强的，对内存和 cpu<br>资源消耗比较低。</li><li>配置性比较低，这是一个缺点也是一个优点，因为没有可太多配置的东西，所以并不需要太多接触，大大减少了人为出错的几率。</li><li>工作稳定，因为其本身抗负载能力很强，自身有完整的双机热备方案，如 LVS+Keepalived。</li><li>无流量，LVS 只分发请求，而流量并不从它本身出去，这点保证了均衡器 IO 的性能不会受到大流量的影响。</li><li>应用范围比较广，因为 LVS 工作在传输层，所以它几乎可以对所有应用做负载均衡，包括 http、数据库、在线聊天室等等。</li></ul><h2 id="6-LVS-的缺点"><a href="#6-LVS-的缺点" class="headerlink" title="6 LVS 的缺点"></a>6 LVS 的缺点</h2><ul><li>软件本身不支持正则表达式处理，不能做动静分离；而现在许多网站在这方面都有较强的需求，这个是<br>Nginx、HAProxy+Keepalived 的优势所在。</li><li>如果是网站应用比较庞大的话，LVS/DR+Keepalived<br>实施起来就比较复杂了，相对而言，Nginx/HAProxy+Keepalived 就简单多了。</li></ul><h1 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h1><p>Nginx 是一个强大的 Web 服务器软件，用于处理高并发的 HTTP 请求和作为反向代理服务器做负载均衡。具有高性能、轻量级、内存消耗少，强大的负载均衡能力等优势。</p><h2 id="1-Nignx-的架构设计"><a href="#1-Nignx-的架构设计" class="headerlink" title="1 Nignx 的架构设计"></a>1 Nignx 的架构设计</h2><p>相对于传统基于进程或线程的模型（Apache 就采用这种模型）在处理并发连接时会为每一个连接建立一个单独的进程或线程，且在网络或者输入 / 输出操作时阻塞。这将导致内存和 CPU 的大量消耗，因为新起一个单独的进程或线程需要准备新的运行时环境，包括堆和栈内存的分配，以及新的执行上下文，当然，这些也会导致多余的 CPU 开销。</p><p>最终，会由于过多的上下文切换而导致服务器性能变差。反过来，Nginx 的架构设计是采用模块化的、基于事件驱动、异步、单线程且非阻塞。<br>Nginx 大量使用多路复用和事件通知，Nginx 启动以后，会在系统中以 daemon 的方式在后台运行，其中包括一个 master 进程，n (n&gt;=1) 个 worker 进程。所有的进程都是单线程（即只有一个主线程）的，且进程间通信主要使用共享内存的方式。</p><p>其中，master 进程用于接收来自外界的信号，并给 worker 进程发送信号，同时监控 worker 进程的工作状态。worker 进程则是外部请求真正的处理者，每个 worker 请求相互独立且平等的竞争来自客户端的请求。请求只能在一个 worker 进程中被处理，且一个 worker 进程只有一个主线程，所以同时只能处理一个请求。（原理同 Netty 很像）</p><h2 id="2-Nginx-负载均衡"><a href="#2-Nginx-负载均衡" class="headerlink" title="2 Nginx 负载均衡"></a>2 Nginx 负载均衡</h2><p>Nginx 负载均衡主要是对七层网络通信模型中的第七层应用层上的 http、https 进行支持。</p><p>Nginx 是以反向代理的方式进行负载均衡的。反向代理（Reverse Proxy）方式是指以代理服务器来接受 Internet 上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给 Internet 上请求连接的客户端，此时代理服务器对外就表现为一个服务器。<br>Nginx 实现负载均衡的分配策略有很多，Nginx 的 upstream 目前支持以下几种方式：</p><ul><li>轮询（默认）：每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器 down 掉，能自动剔除。</li><li>weight：指定轮询几率，weight 和访问比率成正比，用于后端服务器性能不均的情况。</li><li>ip_hash：每个请求按访问 ip 的 hash 结果分配，这样每个访客固定访问一个后端服务器，可以解决 session 的问题。</li><li>fair（第三方）：按后端服务器的响应时间来分配请求，响应时间短的优先分配。</li><li>url_hash（第三方）：按访问 url 的 hash 结果来分配请求，使每个 url 定向到同一个后端服务器，后端服务器为缓存时比较有效。</li></ul><h2 id="3-Nginx-的优点"><a href="#3-Nginx-的优点" class="headerlink" title="3 Nginx 的优点"></a>3 Nginx 的优点</h2><ul><li>跨平台：Nginx 可以在大多数 Unix like OS 编译运行，而且也有 Windows 的移植版本</li><li>配置异常简单：非常容易上手。配置风格跟程序开发一样，神一般的配置</li><li>非阻塞、高并发连接：官方测试能够支撑 5 万并发连接，在实际生产环境中跑到 2～3 万并发连接数</li><li>事件驱动：通信机制采用 epoll 模型，支持更大的并发连接</li><li>Master/Worker 结构：一个 master 进程，生成一个或多个 worker 进程</li><li>内存消耗小：处理大并发的请求内存消耗非常小。在 3 万并发连接下，开启的 10 个 Nginx 进程才消耗 150M 内存（15M*10=150M）</li><li>内置的健康检查功能：如果 Nginx 代理的后端的某台 Web 服务器宕机了，不会影响前端访问</li><li>节省带宽：支持 GZIP 压缩，可以添加浏览器本地缓存的 Header 头</li><li>稳定性高：用于反向代理，宕机的概率微乎其微</li></ul><h2 id="4-Nginx-的缺点"><a href="#4-Nginx-的缺点" class="headerlink" title="4 Nginx 的缺点"></a>4 Nginx 的缺点</h2><ul><li>Nginx 仅能支 持 http、https 和 Email 协议，这样就在适用范围上面小些，这个是它的缺点。</li><li>对后端服务器的健康检查，只支持通过端口来检测，不支持通过 url 来检测。</li><li>不支持 Session 的直接保持，但能通过 ip_hash 来解决。</li></ul><h1 id="HAProxy"><a href="#HAProxy" class="headerlink" title="HAProxy"></a>HAProxy</h1><p>HAProxy 支持两种代理模式 TCP（四层）和 HTTP（七层），也是支持虚拟主机的。</p><p>HAProxy 的优点能够补充 Nginx 的一些缺点，比如支持 Session 的保持，Cookie 的引导；同时支持通过获取指定的 url 来检测后端服务器的状态。</p><p>HAProxy 跟 LVS 类似，本身就只是一款负载均衡软件；单纯从效率上来讲 HAProxy 会比 Nginx 有更出色的负载均衡速度，在并发处理上也是优于 Nginx 的。</p><p>HAProxy 支持 TCP 协议的负载均衡转发，可以对 MySQL 读进行负载均衡，对后端的 MySQL 节点进行检测和负载均衡，大家可以用 LVS+Keepalived 对 MySQL 主从做负载均衡。</p><p>HAProxy 负载均衡策略非常多：Round-robin（轮循）、Weight-round-robin（带权轮循）、source（原地址保持）、RI（请求 URL）、rdp-cookie（根据 cookie）。</p>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> haproxy </tag>
            
            <tag> lvs </tag>
            
            <tag> nginx </tag>
            
            <tag> 负载均衡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>采集各种美女图片站并下载图片、自动搭建属于自己的图片站</title>
      <link href="/posts/51554/"/>
      <url>/posts/51554/</url>
      
        <content type="html"><![CDATA[<h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="https://www.moerats.com/usr/picture/94imm.png" alt="请输入图片描述"></p><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p><strong>项目地址：</strong><a href="https://github.com/zephyr-y/94imm">https://git.coding.net/zxy_coding/94imm.git</a></p><p><strong>环境要求：</strong><code>Python 3.6</code>、<code>Mysql 5.5+</code>、<code>Nginx</code>/<code>Apache</code>(非必需)，本文只说<code>CentOS 6/7</code>、<code>Debian 8/9</code>。</p><p>这里使用宝塔和手动<code>2</code>种方法安装，如果你需要快速上手就使用手动安装，想操作方便就宝塔，自行选择。</p><h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p><strong>1、使用宝塔安装</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#CentOS系统</span><br><span class="line">wget -O install.sh http:&#x2F;&#x2F;download.bt.cn&#x2F;install&#x2F;install_6.0.sh &amp;&amp; sh install.sh</span><br><span class="line">#Debian系统</span><br><span class="line">wget -O install.sh http:&#x2F;&#x2F;download.bt.cn&#x2F;install&#x2F;install-ubuntu_6.0.sh &amp;&amp; bash install.sh</span><br></pre></td></tr></table></figure><p>安装完成后，进入面板，点击左侧软件管理，然后安装<code>Mysql 5.5+</code>、<code>Nginx</code>(如果你使用域名的话，就需要安装)。</p><p>然后点击左侧数据库-添加数据库，设置好数据库信息。</p><p><strong>2、手动安装环境</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">提示：为了简单，这里采用Mysql 5.7+Caddy环境，这里也是，如果你需要使用到域名才安装Caddy。</span><br></pre></td></tr></table></figure><p>这里博主是用的<code>Mysql 5.7</code>，如果内存很低，<code>5.7</code>跑起来会有点吃力，建议增加点虚拟内存，可以用下<code>Swap</code>一键脚本→<a href="https://www.moerats.com/archives/722/">传送门</a>。</p><p>安装<code>Mysql 5.7</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">#CentOS 6系统</span><br><span class="line">rpm -ivh http:&#x2F;&#x2F;repo.mysql.com&#x2F;mysql57-community-release-el6.rpm</span><br><span class="line">yum install mysql-community-server -y</span><br><span class="line">service mysqld start</span><br><span class="line">chkconfig mysqld on</span><br><span class="line"></span><br><span class="line">#CentOS 7系统</span><br><span class="line">rpm -ivh http:&#x2F;&#x2F;repo.mysql.com&#x2F;mysql57-community-release-el7.rpm</span><br><span class="line">yum install mysql-community-server -y</span><br><span class="line">systemctl start mysqld</span><br><span class="line">systemctl enable mysqld</span><br><span class="line"></span><br><span class="line">#Debian 8系统</span><br><span class="line">echo &#39;deb http:&#x2F;&#x2F;repo.mysql.com&#x2F;apt&#x2F;debian&#x2F; jessie mysql-5.7</span><br><span class="line">deb-src http:&#x2F;&#x2F;repo.mysql.com&#x2F;apt&#x2F;debian&#x2F; jessie mysql-5.7&#39; &gt;&#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;mysql.list</span><br><span class="line">wget https:&#x2F;&#x2F;repo.mysql.com&#x2F;RPM-GPG-KEY-mysql</span><br><span class="line">apt-key add RPM-GPG-KEY-mysql</span><br><span class="line">apt update</span><br><span class="line">#安装的时候会要你输入数据库密码</span><br><span class="line">apt install mysql-server -y</span><br><span class="line"></span><br><span class="line">#Debian 9系统</span><br><span class="line">echo &#39;deb http:&#x2F;&#x2F;repo.mysql.com&#x2F;apt&#x2F;debian&#x2F; stretch mysql-5.7</span><br><span class="line">deb-src http:&#x2F;&#x2F;repo.mysql.com&#x2F;apt&#x2F;debian&#x2F; stretch mysql-5.7&#39; &gt;&#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;mysql.list</span><br><span class="line">wget https:&#x2F;&#x2F;repo.mysql.com&#x2F;RPM-GPG-KEY-mysql</span><br><span class="line">apt-key add RPM-GPG-KEY-mysql</span><br><span class="line">apt update</span><br><span class="line">#安装的时候会要你输入数据库密码</span><br><span class="line">apt install mysql-server -y</span><br></pre></td></tr></table></figure><p>这里<code>CentOS</code>安装<code>MySQL 5.7</code>的时候会生成一个随机密码，使用命令查看：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grep &quot;password&quot; &#x2F;var&#x2F;log&#x2F;mysqld.log</span><br><span class="line">#大致信息，******为密码</span><br><span class="line">[Note] A temporary password is generated for root@localhost: ******</span><br></pre></td></tr></table></figure><p>然后<code>CentOS</code>还需要修改数据库密码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#登录数据库，输入你上面看到的密码</span><br><span class="line">mysql -u root -p</span><br><span class="line">#稍微设置密码难度下，不然修改的时候，密码必须很复杂才行</span><br><span class="line">mysql&gt; set global validate_password_policy&#x3D;0;</span><br><span class="line">mysql&gt; set global validate_password_length&#x3D;4;</span><br><span class="line">#修改密码为moerats</span><br><span class="line">mysql&gt; set password&#x3D;password(&quot;moerats&quot;);</span><br><span class="line">#退出数据库</span><br><span class="line">mysql&gt; exit;</span><br><span class="line"></span><br><span class="line">#CentOS 6重启数据库</span><br><span class="line">service mysqld restart</span><br><span class="line">#CentOS 7重启数据库</span><br><span class="line">systemctl restart mysqld</span><br></pre></td></tr></table></figure><p>创建新的数据库，使用命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#创建94imm数据库，moerats为数据库密码，自行修改</span><br><span class="line">mysql -uroot -pmoerats</span><br><span class="line">mysql &gt; create database 94imm;</span><br><span class="line">#退出</span><br><span class="line">mysql &gt; exit;</span><br></pre></td></tr></table></figure><p>此时<code>Mysql 5.7</code>算是安装完成了。</p><p>安装<code>Caddy</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;ToyoDAdoubiBackup&#x2F;doubi&#x2F;master&#x2F;caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh</span><br><span class="line">#备用地址</span><br><span class="line">wget -N --no-check-certificate https:&#x2F;&#x2F;www.moerats.com&#x2F;usr&#x2F;shell&#x2F;Caddy&#x2F;caddy_install.sh &amp;&amp; chmod +x caddy_install.sh &amp;&amp; bash caddy_install.sh</span><br></pre></td></tr></table></figure><h2 id="搭建站点"><a href="#搭建站点" class="headerlink" title="搭建站点"></a>搭建站点</h2><p><strong>1、安装Python3</strong><br>为了避免下面依赖安装出错，这里就不使用软件包安装<code>Python3</code>了，直接就使用脚本安装，使用命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#CentOS系统</span><br><span class="line">wget https:&#x2F;&#x2F;www.moerats.com&#x2F;usr&#x2F;shell&#x2F;Python3&#x2F;CentOS_Python3.6.sh &amp;&amp; sh CentOS_Python3.6.sh</span><br><span class="line">#Debian系统</span><br><span class="line">wget https:&#x2F;&#x2F;www.moerats.com&#x2F;usr&#x2F;shell&#x2F;Python3&#x2F;Debian_Python3.6.sh &amp;&amp; sh Debian_Python3.6.sh</span><br></pre></td></tr></table></figure><p><strong>2、搭建站点</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#下载源码</span><br><span class="line">git clone https:&#x2F;&#x2F;git.coding.net&#x2F;zxy_coding&#x2F;94imm.git</span><br><span class="line">#安装依赖</span><br><span class="line">cd 94imm</span><br><span class="line">pip3 install -r requirements.txt</span><br><span class="line">#导入目录的数据库文件，这里数据库名94imm，用户名和密码root、moerats，请自行修改</span><br><span class="line">mysql -uroot -pmoerats 94imm &lt; silumz.sql</span><br><span class="line">#编辑配置文件</span><br><span class="line">nano silumz&#x2F;settings.py</span><br></pre></td></tr></table></figure><p>填上你的数据库信息，大致如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">DATABASES &#x3D; &#123;</span><br><span class="line">    &#39;default&#39;: &#123;</span><br><span class="line">        &#39;ENGINE&#39;: &#39;django.db.backends.mysql&#39;,</span><br><span class="line">        &#39;NAME&#39;: &#39;94imm&#39;,</span><br><span class="line">        &#39;USER&#39;: &#39;root&#39;,</span><br><span class="line">        &#39;PASSWORD&#39;: &#39;moerats&#39;,</span><br><span class="line">        &#39;HOST&#39;: &#39;127.0.0.1&#39;,</span><br><span class="line">        &#39;PORT&#39;: &#39;3306&#39;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再使用<code>Ctrl+x</code>、<code>y</code>保存退出。</p><p>编辑启动配置文件，使用命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano uwsgi.ini</span><br></pre></td></tr></table></figure><p>然后看着改，大致修改如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#配置文件默认是将源码放在root目录，如果在其他目录可以自行修改</span><br><span class="line">#如果你要是用ip访问，将127.0.0.1:8000改成http&#x3D;0.0.0.0:8000，端口也可以改</span><br></pre></td></tr></table></figure><p>启动程序：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uwsgi --ini uwsgi.ini</span><br></pre></td></tr></table></figure><p>此时站点地址为<code>ip:8000</code>。</p><p><strong>3、域名反代</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">提示：不需要域名的跳过该步骤</span><br></pre></td></tr></table></figure><p>宝塔面板设置：<br>然后点击左侧网站-添加站点，填上你的域名，其他默认，然后点击域名设置-反向代理，<code>url</code>设置<code>http://127.0.0.1:8000</code>即可。然后打开你的域名就可以看到站点了。</p><p><code>Caddy</code>设置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#以下全部内容是一个整体，请修改域名后一起复制到SSH运行！且会自动给你配置ssl证书</span><br><span class="line">echo &quot;www.moerats.com &#123;</span><br><span class="line"> gzip</span><br><span class="line"> tls admin@moerats.com</span><br><span class="line"> proxy &#x2F; 127.0.0.1:8000</span><br><span class="line">&#125;&quot; &gt; &#x2F;usr&#x2F;local&#x2F;caddy&#x2F;Caddyfile</span><br><span class="line"></span><br><span class="line">#启动Caddy</span><br><span class="line">&#x2F;etc&#x2F;init.d&#x2F;caddy start</span><br></pre></td></tr></table></figure><h2 id="采集发布"><a href="#采集发布" class="headerlink" title="采集发布"></a>采集发布</h2><p>光搭建站点是不够的，还需要采集并自动发布图片，爬虫和发布脚本在<code>crawler</code>目录，详细脚本说明：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">crawler开头的脚本为图片采集爬虫，然后也会自动给你发布到文章，目前有6个美女站的爬虫脚本，后期可能会更多</span><br><span class="line">AutoPost.py为自动发布脚本，将你本地的图片自动发布到搭建的站点中</span><br><span class="line">Compress.py为图片压缩脚本，可以自动压缩图片，减少硬盘占用</span><br></pre></td></tr></table></figure><p>这里以<code>mm131</code>爬虫脚本为例，先编辑<code>crawler_mm131.py</code>爬虫脚本。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd crawler</span><br><span class="line">nano crawler_mm131.py</span><br></pre></td></tr></table></figure><p>大致修改如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#修改为你的数据库连接信息</span><br><span class="line">dbhost &#x3D; &#123;</span><br><span class="line">    &quot;host&quot;: &quot;127.0.0.1&quot;,</span><br><span class="line">    &quot;dbname&quot;: &quot;94imm&quot;,</span><br><span class="line">    &quot;user&quot;: &quot;root&quot;,</span><br><span class="line">    &quot;password&quot;: &quot;moerats&quot;</span><br><span class="line">&#125;</span><br><span class="line">#修改爬取的页数和图片保存路径，page为页数，img_path为路径，自行修改</span><br><span class="line">for i in [&#123;&quot;page&quot;: 1, &quot;type&quot;: &quot;xinggan&quot;, &quot;type_id&quot;: 1&#125;, &#123;&quot;page&quot;: 1, &quot;type&quot;: &quot;qingchun&quot;, &quot;type_id&quot;: 3&#125;,</span><br><span class="line">          &#123;&quot;page&quot;: 1, &quot;type&quot;: &quot;xiaohua&quot;, &quot;type_id&quot;: 3&#125;, &#123;&quot;page&quot;: 1, &quot;type&quot;: &quot;chemo&quot;, &quot;type_id&quot;: 1&#125;,</span><br><span class="line">          &#123;&quot;page&quot;: 1, &quot;type&quot;: &quot;qipao&quot;, &quot;type_id&quot;: 2&#125;, &#123;&quot;page&quot;: 1, &quot;type&quot;: &quot;mingxing&quot;, &quot;type_id&quot;: 1&#125;]:</span><br><span class="line">spider&#x3D;Spider(page_num&#x3D;i.get(&quot;page&quot;),img_path&#x3D;&#39;&#x2F;static&#x2F;images&#x2F;mm131&#x2F;&#39;,thread_num&#x3D;10,type_id&#x3D;i.get(&quot;type_id&quot;),type&#x3D;i.get(&quot;type&quot;))</span><br></pre></td></tr></table></figure><p>然后开始采集并自动发布到程序，使用命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#其它爬虫使用方法也都一样</span><br><span class="line">python3 crawler_mm131.py</span><br></pre></td></tr></table></figure><p>然后就可以再图片站看到你的图片了，要是不显示的话，可以尝试删除<code>cache</code>目录里的缓存文件。</p><p>如果你的硬盘空间很小，可以使用压缩脚本压缩下，使用命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#压缩时，会要你选择图片等路径</span><br><span class="line">python3 Compress.py</span><br></pre></td></tr></table></figure><p>如果压缩报错<code>No module named &#39;PIL&#39;</code>，那需要先使用命令<code>pip3 install Pillow</code>。</p><p>如果你要发布你本地的图片，就需要编辑<code>AutoPost.py</code>，填上你的数据库信息，再使用<code>python3 AutoPost.py</code>发布即可。</p><p>最后你运行爬虫脚本的时候出现<code>UnicodeEncodeError: &#39;ascii&#39; codec can&#39;t encode</code>错误，那就需要先将系统的默认语言环境编码设置为<code>UTF-8</code>格式，使用命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &#39;export LANG&#x3D;en_US.UTF-8 LANGUAGE&#x3D;en_US.UTF-8&#39; &gt;&gt; &#x2F;etc&#x2F;profile</span><br><span class="line">source &#x2F;etc&#x2F;profile</span><br></pre></td></tr></table></figure><h2 id="其他说明"><a href="#其他说明" class="headerlink" title="其他说明"></a>其他说明</h2><p>对于修改模板，目前模板总共有<code>3</code>套，位于<code>templates</code>文件夹下，需要先修改<code>silumz</code>下<code>settings</code>文件中的模板配置。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#94imm为模板名</span><br><span class="line">TEMPLATES &#x3D; [</span><br><span class="line">&#123;</span><br><span class="line">    &#39;BACKEND&#39;: &#39;django.template.backends.django.DjangoTemplates&#39;,</span><br><span class="line">    &#39;DIRS&#39;: [os.path.join(BASE_DIR, &#39;templates&#39;+&quot;&#x2F;&quot;+&quot;94imm&quot;)]</span><br></pre></td></tr></table></figure><p>然后将模板目录下的<code>pagination.html</code>文件放入<code>python</code>安装目录的<code>pagination</code>下。</p><p>一般为<code>/usr/local/lib/python3.6/site-packages/dj_pagination/templates/pagination</code></p><p>然后自己修改模板，模板为<code>html</code>文件，可在页面添加统计代码和广告代码。</p><p>对于想了解更多的，或者修改模板，爬虫分类、数据库的可以看下以下参考文章：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;www.dablog.cn&#x2F;index.php&#x2F;archives&#x2F;7&#x2F;</span><br><span class="line">https:&#x2F;&#x2F;sunsea.im&#x2F;139&#x2F;94imm_tips&#x2F;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 采集 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LNMP(YUM)</title>
      <link href="/posts/12262/"/>
      <url>/posts/12262/</url>
      
        <content type="html"><![CDATA[<h1 id="第一章-LNMP-架构概述展开目录"><a href="#第一章-LNMP-架构概述展开目录" class="headerlink" title="第一章 LNMP 架构概述展开目录"></a>第一章 LNMP 架构概述展开目录</h1><h2 id="1-1-什么是-LNMP展开目录"><a href="#1-1-什么是-LNMP展开目录" class="headerlink" title="1.1 什么是 LNMP展开目录"></a>1.1 什么是 LNMP展开目录</h2><p>LNMP 是一套技术的组合， L=Linux、 N=Nginx、 M=MySQL、 P=PHP</p><h2 id="1-2-LNMP-架构是如何工作的展开目录"><a href="#1-2-LNMP-架构是如何工作的展开目录" class="headerlink" title="1.2 LNMP 架构是如何工作的展开目录"></a>1.2 LNMP 架构是如何工作的展开目录</h2><p>首先 Nginx 服务是不能处理动态请求，那么当用户发起动态请求时，Nginx 又是如何进行处理的。<br>当用户发起 http 请求，请求会被 Nginx 处理，如果是静态资源请求 Nginx 则直接返回，如果是动态请求 Nginx 则通过 fastcgi 协议转交给后端的 PHP 程序处理，具体如下图所示</p><h2 id="1-3-Nginx-与-Fast-CGI-工作流程展开目录"><a href="#1-3-Nginx-与-Fast-CGI-工作流程展开目录" class="headerlink" title="1.3 Nginx 与 Fast-CGI 工作流程展开目录"></a>1.3 Nginx 与 Fast-CGI 工作流程展开目录</h2><p><img src="http://upload-images.jianshu.io/upload_images/14248468-d748fdac327fb43c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp"></p><p>比喻：<br>Nginx: 拉货的货车<br>FastCGI: 高速公路<br>php-fpm: 每个路道的收费站<br>wrapper: 搬货的师傅<br>systemctl start php-fpm: 管理整个高速工作所有的收费站</p><p>1. 用户通过 http 协议发起请求，请求会先抵达 LNMP 架构中的 Nginx<br>2.Nginx 会根据用户的请求进行判断，这个判断是有 Location 进行完成<br>3. 判断用户请求的是静态页面， Nginx 直接进行处理<br>4. 判断用户请求的是动态页面， Nginx 会将该请求交给 fastcgi 协议下发<br>5.fastgi 会将请求交给 php-fpm 管理进程，php-fpm 管理进程接收到后会调用具体的工作进程 warrap<br>6.warrap 进程会调用 php 程序进行解析，如果只是解析代码 php 直接返回<br>7. 如果有查询数据库操作，则由 php 连接数据库 (用户 密码 IP) 发起查询的操作<br>8. 最终数据由 mysql-&gt;php-&gt;php-fpm-&gt;fastcgi-&gt;nginx-&gt;http-&gt;user</p><h1 id="第二章-LNMP-安装部署展开目录"><a href="#第二章-LNMP-安装部署展开目录" class="headerlink" title="第二章 LNMP 安装部署展开目录"></a>第二章 LNMP 安装部署展开目录</h1><h2 id="2-0-创建-www-统一用户展开目录"><a href="#2-0-创建-www-统一用户展开目录" class="headerlink" title="2.0 创建 www 统一用户展开目录"></a>2.0 创建 www 统一用户展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# groupadd www -g 666</span><br><span class="line">[root@web01 ~]# useradd www -s &#x2F;sbin&#x2F;nologin -M -u 666 -g 666</span><br><span class="line">[root@web01 ~]# id www</span><br><span class="line">uid&#x3D;666(www) gid&#x3D;666(www) 组&#x3D;666(www)</span><br></pre></td></tr></table></figure><h2 id="2-1-使用官方仓库安装-nginx展开目录"><a href="#2-1-使用官方仓库安装-nginx展开目录" class="headerlink" title="2.1 使用官方仓库安装 nginx展开目录"></a>2.1 使用官方仓库安装 nginx展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# cat &#x2F;etc&#x2F;yum.repos.d&#x2F;nginx.repo </span><br><span class="line">[nginx-stable]</span><br><span class="line">name&#x3D;nginx stable repo</span><br><span class="line">baseurl&#x3D;http:&#x2F;&#x2F;nginx.org&#x2F;packages&#x2F;centos&#x2F;$releasever&#x2F;$basearch&#x2F;</span><br><span class="line">gpgcheck&#x3D;1</span><br><span class="line">enabled&#x3D;1</span><br><span class="line">gpgkey&#x3D;https:&#x2F;&#x2F;nginx.org&#x2F;keys&#x2F;nginx_signing.key</span><br><span class="line"></span><br><span class="line">[nginx-mainline]</span><br><span class="line">name&#x3D;nginx mainline repo</span><br><span class="line">baseurl&#x3D;http:&#x2F;&#x2F;nginx.org&#x2F;packages&#x2F;mainline&#x2F;centos&#x2F;$releasever&#x2F;$basearch&#x2F;</span><br><span class="line">gpgcheck&#x3D;1</span><br><span class="line">enabled&#x3D;0</span><br><span class="line">gpgkey&#x3D;https:&#x2F;&#x2F;nginx.org&#x2F;keys&#x2F;nginx_signing.key</span><br><span class="line"></span><br><span class="line">[root@web01 ~]# yum install nginx -y</span><br></pre></td></tr></table></figure><h2 id="2-2-启动-Nginx-并加入开机自启动展开目录"><a href="#2-2-启动-Nginx-并加入开机自启动展开目录" class="headerlink" title="2.2 启动 Nginx 并加入开机自启动展开目录"></a>2.2 启动 Nginx 并加入开机自启动展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# systemctl start nginx</span><br><span class="line">[root@web01 ~]# systemctl enable nginx</span><br></pre></td></tr></table></figure><h2 id="2-3-使用第三方拓展源安装-php7-1展开目录"><a href="#2-3-使用第三方拓展源安装-php7-1展开目录" class="headerlink" title="2.3 使用第三方拓展源安装 php7.1展开目录"></a>2.3 使用第三方拓展源安装 php7.1展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# yum remove php-mysql-5.4 php php-fpm php-common</span><br><span class="line">[root@web01 ~]# rpm -Uvh https:&#x2F;&#x2F;dl.fedoraproject.org&#x2F;pub&#x2F;epel&#x2F;epel-release-latest-7.noarch.rpm</span><br><span class="line">[root@web01 ~]# rpm -Uvh https:&#x2F;&#x2F;mirror.webtatic.com&#x2F;yum&#x2F;el7&#x2F;webtatic-release.rpm</span><br><span class="line">[root@web01 ~]# yum -y install php71w php71w-cli php71w-common php71w-devel php71w-embedded php71w-gd php71w-mcrypt php71w-mbstring php71w-pdo php71w-xml php71w-fpm php71w-mysqlnd php71w-opcache php71w-pecl-memcached php71w-pecl-redis php71w-pecl-mongodb </span><br></pre></td></tr></table></figure><h2 id="2-4-配置-php-fpm-用户与-nginx-用户保持一致展开目录"><a href="#2-4-配置-php-fpm-用户与-nginx-用户保持一致展开目录" class="headerlink" title="2.4 配置 php-fpm 用户与 nginx 用户保持一致展开目录"></a>2.4 配置 php-fpm 用户与 nginx 用户保持一致展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# sed -i &#39;&#x2F;^user&#x2F;c user &#x3D; www&#39; &#x2F;etc&#x2F;php-fpm.d&#x2F;www.conf</span><br><span class="line">[root@web01 ~]# sed -i &#39;&#x2F;^group&#x2F;c group &#x3D; www&#39; &#x2F;etc&#x2F;php-fpm.d&#x2F;www.conf</span><br></pre></td></tr></table></figure><h2 id="2-5-启动-php-fpm-并加入开机自启动展开目录"><a href="#2-5-启动-php-fpm-并加入开机自启动展开目录" class="headerlink" title="2.5 启动 php-fpm 并加入开机自启动展开目录"></a>2.5 启动 php-fpm 并加入开机自启动展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# systemctl start php-fpm</span><br><span class="line">[root@web01 ~]# systemctl enable php-fpm</span><br></pre></td></tr></table></figure><h2 id="2-6-安装-Mariadb-数据库展开目录"><a href="#2-6-安装-Mariadb-数据库展开目录" class="headerlink" title="2.6 安装 Mariadb 数据库展开目录"></a>2.6 安装 Mariadb 数据库展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# yum install mariadb-server mariadb -y</span><br></pre></td></tr></table></figure><h2 id="2-7-启动-Mariadb-数据库并加入开机自启动展开目录"><a href="#2-7-启动-Mariadb-数据库并加入开机自启动展开目录" class="headerlink" title="2.7 启动 Mariadb 数据库并加入开机自启动展开目录"></a>2.7 启动 Mariadb 数据库并加入开机自启动展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# systemctl start mariadb</span><br><span class="line">[root@web01 ~]# systemctl enable mariadb</span><br></pre></td></tr></table></figure><h2 id="2-8-配置-Mariadb-账号密码展开目录"><a href="#2-8-配置-Mariadb-账号密码展开目录" class="headerlink" title="2.8 配置 Mariadb 账号密码展开目录"></a>2.8 配置 Mariadb 账号密码展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# mysqladmin password &#39;oldboy123&#39;</span><br><span class="line">[root@web01 ~]# mysql -uroot -poldboy123</span><br></pre></td></tr></table></figure><h2 id="2-9-mysql-基础命令展开目录"><a href="#2-9-mysql-基础命令展开目录" class="headerlink" title="2.9 mysql 基础命令展开目录"></a>2.9 mysql 基础命令展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#查看当前mysql有哪些用户</span><br><span class="line">MariaDB [(none)]&gt; select user,host from mysql.user;</span><br><span class="line">+------+-----------+</span><br><span class="line">| user | host      |</span><br><span class="line">+------+-----------+</span><br><span class="line">| root | 127.0.0.1 |</span><br><span class="line">| root | ::1       |</span><br><span class="line">|      | localhost |</span><br><span class="line">| root | localhost |</span><br><span class="line">|      | web01     |</span><br><span class="line">| root | web01     |</span><br><span class="line">+------+-----------+</span><br></pre></td></tr></table></figure><p>登录 mysql</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# mysql -uroot -poldboy123</span><br></pre></td></tr></table></figure><p>使用指定 IP 登录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# mysql -uroot -poldboy123 -h127.0.0.1</span><br></pre></td></tr></table></figure><p>查询当前数据库有哪些用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select user,host from mysql.user;</span><br><span class="line">查询   mysql库里的user表里的    user和host字段的内容</span><br></pre></td></tr></table></figure><p>查看当前有哪些数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| test               |</span><br><span class="line">+--------------------+</span><br></pre></td></tr></table></figure><p>查看库里面有哪些表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; show tables from mysql;</span><br><span class="line">+---------------------------+</span><br><span class="line">| Tables_in_mysql           |</span><br><span class="line">+---------------------------+</span><br><span class="line">| columns_priv              |</span><br><span class="line">| db                        |</span><br><span class="line">| event                     |</span><br><span class="line">| func                      |</span><br><span class="line">| general_log               |</span><br><span class="line">| help_category             |</span><br><span class="line">| help_keyword              |</span><br><span class="line">| help_relation             |</span><br><span class="line">| help_topic                |</span><br><span class="line">| host                      |</span><br><span class="line">| ndb_binlog_index          |</span><br><span class="line">| plugin                    |</span><br><span class="line">| proc                      |</span><br><span class="line">| procs_priv                |</span><br><span class="line">| proxies_priv              |</span><br><span class="line">| servers                   |</span><br><span class="line">| slow_log                  |</span><br><span class="line">| tables_priv               |</span><br><span class="line">| time_zone                 |</span><br><span class="line">| time_zone_leap_second     |</span><br><span class="line">| time_zone_name            |</span><br><span class="line">| time_zone_transition      |</span><br><span class="line">| time_zone_transition_type |</span><br><span class="line">| user                      |</span><br><span class="line">+---------------------------+</span><br><span class="line">24 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>查看表里有哪些字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [mysql]&gt; desc user;</span><br><span class="line">+------------------------+-----------------------------------+------+-----+---------+-------+</span><br><span class="line">| Field                  | Type                              | Null | Key | Default | Extra |</span><br><span class="line">+------------------------+-----------------------------------+------+-----+---------+-------+</span><br><span class="line">| Host                   | char(60)                          | NO   | PRI |         |       |</span><br><span class="line">| User                   | char(16)                          | NO   | PRI |         |       |</span><br><span class="line">| Password               | char(41)                          | NO   |     |         |       |</span><br><span class="line">| Select_priv            | enum(&#39;N&#39;,&#39;Y&#39;)                     | NO   |     | N       |       |</span><br><span class="line">| Insert_priv            | enum(&#39;N&#39;,&#39;Y&#39;)                     | NO   |     | N       |       |</span><br><span class="line">| Update_priv            | enum(&#39;N&#39;,&#39;Y&#39;)                     | NO   |     | N       |       |</span><br><span class="line">| Delete_priv            | enum(&#39;N&#39;,&#39;Y&#39;)                     | NO   |     | N       |       |</span><br><span class="line">| Create_priv            | enum(&#39;N&#39;,&#39;Y&#39;)                     | NO   |     | N       |       |</span><br><span class="line">| Drop_priv              | enum(&#39;N&#39;,&#39;Y&#39;)                     | NO   |     | N       |       |</span><br><span class="line">| Reload_priv            | enum(&#39;N&#39;,&#39;Y&#39;)                     | NO   |     | N       |       |</span><br><span class="line">| Shutdown_priv          | enum(&#39;N&#39;,&#39;Y&#39;)                     | NO   |     | N       |       |</span><br><span class="line">| Process_priv           | enum(&#39;N&#39;,&#39;Y&#39;)                     | NO   |     | N       |       |</span><br><span class="line">| File_priv              | enum(&#39;N&#39;,&#39;Y&#39;)                     | NO   |     | N       |       |</span><br><span class="line">| Grant_priv             | enum(&#39;N&#39;,&#39;Y&#39;)                     | NO   |     | N       |       |</span><br><span class="line">| References_priv        | enum(&#39;N&#39;,&#39;Y&#39;)                     | NO   |     | N       |       |</span><br><span class="line">| Index_priv             | enum(&#39;N&#39;,&#39;Y&#39;)                     | NO   |     | N       |       |</span><br><span class="line">| Alter_priv             | enum(&#39;N&#39;,&#39;Y&#39;)                     | NO   |     | N       |       |</span><br><span class="line">| Show_db_priv           | enum(&#39;N&#39;,&#39;Y&#39;)                     | NO   |     | N       |       |</span><br><span class="line">| Super_priv             | enum(&#39;N&#39;,&#39;Y&#39;)                     | NO   |     | N       |       |</span><br><span class="line">| Create_tmp_table_priv  | enum(&#39;N&#39;,&#39;Y&#39;)                     | NO   |     | N       |       |</span><br><span class="line">| Lock_tables_priv       | enum(&#39;N&#39;,&#39;Y&#39;)                     | NO   |     | N       |       |</span><br><span class="line">| Execute_priv           | enum(&#39;N&#39;,&#39;Y&#39;)                     | NO   |     | N       |       |</span><br><span class="line">| Repl_slave_priv        | enum(&#39;N&#39;,&#39;Y&#39;)                     | NO   |     | N       |       |</span><br><span class="line">| Repl_client_priv       | enum(&#39;N&#39;,&#39;Y&#39;)                     | NO   |     | N       |       |</span><br><span class="line">| Create_view_priv       | enum(&#39;N&#39;,&#39;Y&#39;)                     | NO   |     | N       |       |</span><br><span class="line">| Show_view_priv         | enum(&#39;N&#39;,&#39;Y&#39;)                     | NO   |     | N       |       |</span><br><span class="line">| Create_routine_priv    | enum(&#39;N&#39;,&#39;Y&#39;)                     | NO   |     | N       |       |</span><br><span class="line">| Alter_routine_priv     | enum(&#39;N&#39;,&#39;Y&#39;)                     | NO   |     | N       |       |</span><br><span class="line">| Create_user_priv       | enum(&#39;N&#39;,&#39;Y&#39;)                     | NO   |     | N       |       |</span><br><span class="line">| Event_priv             | enum(&#39;N&#39;,&#39;Y&#39;)                     | NO   |     | N       |       |</span><br><span class="line">| Trigger_priv           | enum(&#39;N&#39;,&#39;Y&#39;)                     | NO   |     | N       |       |</span><br><span class="line">| Create_tablespace_priv | enum(&#39;N&#39;,&#39;Y&#39;)                     | NO   |     | N       |       |</span><br><span class="line">| ssl_type               | enum(&#39;&#39;,&#39;ANY&#39;,&#39;X509&#39;,&#39;SPECIFIED&#39;) | NO   |     |         |       |</span><br><span class="line">| ssl_cipher             | blob                              | NO   |     | NULL    |       |</span><br><span class="line">| x509_issuer            | blob                              | NO   |     | NULL    |       |</span><br><span class="line">| x509_subject           | blob                              | NO   |     | NULL    |       |</span><br><span class="line">| max_questions          | int(11) unsigned                  | NO   |     | 0       |       |</span><br><span class="line">| max_updates            | int(11) unsigned                  | NO   |     | 0       |       |</span><br><span class="line">| max_connections        | int(11) unsigned                  | NO   |     | 0       |       |</span><br><span class="line">| max_user_connections   | int(11)                           | NO   |     | 0       |       |</span><br><span class="line">| plugin                 | char(64)                          | NO   |     |         |       |</span><br><span class="line">| authentication_string  | text                              | NO   |     | NULL    |       |</span><br><span class="line">+------------------------+-----------------------------------+------+-----+---------+-------+</span><br><span class="line">42 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>退出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br></pre></td></tr></table></figure><h1 id="第三章-LNMP-环境配置展开目录"><a href="#第三章-LNMP-环境配置展开目录" class="headerlink" title="第三章 LNMP 环境配置展开目录"></a>第三章 LNMP 环境配置展开目录</h1><h2 id="3-1-Fastcgi-语法展开目录"><a href="#3-1-Fastcgi-语法展开目录" class="headerlink" title="3.1 Fastcgi 语法展开目录"></a>3.1 Fastcgi 语法展开目录</h2><p>设置 fastcgi 服务器的地址，该地址可以指定为域名或 IP 地址，以及端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Syntax: fastcgi_pass address;</span><br><span class="line">Default: —</span><br><span class="line">Context: location, if in location</span><br><span class="line"></span><br><span class="line">#语法示例</span><br><span class="line">fastcgi_pass localhost:9000;</span><br><span class="line">fastcgi_pass unix:&#x2F;tmp&#x2F;fastcgi.socket;</span><br></pre></td></tr></table></figure><p>设置 fastcgi 默认的首页文件，需要结合 fastcgi_param 一起设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Syntax: fastcgi_index name;</span><br><span class="line">Default: —</span><br><span class="line">Context: http, server, location</span><br></pre></td></tr></table></figure><p>通过 fastcgi_param 设置变量，并将设置的变量传递到后端的 fastcgi 服务器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Syntax: fastcgi_param parameter value [if_not_empty];</span><br><span class="line">Default: —</span><br><span class="line">Context: http, server, location</span><br><span class="line"></span><br><span class="line">#语法示例</span><br><span class="line">fastcgi_index index.php;</span><br><span class="line">fastcgi_param SCRIPT_FILENAME &#x2F;code$fastcgi_script_name;</span><br></pre></td></tr></table></figure><h2 id="3-2-最终-Nginx-连接-FastCGI-服务器配置如下展开目录"><a href="#3-2-最终-Nginx-连接-FastCGI-服务器配置如下展开目录" class="headerlink" title="3.2 最终 Nginx 连接 FastCGI 服务器配置如下展开目录"></a>3.2 最终 Nginx 连接 FastCGI 服务器配置如下展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# cat &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;php.conf</span><br><span class="line">server &#123;</span><br><span class="line">    server_name www.xoxo.com;</span><br><span class="line">    listen 80;</span><br><span class="line">    root &#x2F;code;</span><br><span class="line">    index index.php index.html;</span><br><span class="line"></span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        root &#x2F;code;</span><br><span class="line">        fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">        fastcgi_index index.php;</span><br><span class="line">        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</span><br><span class="line">        include fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-3-在-code-目录下创建-info-php-文件并访问测试展开目录"><a href="#3-3-在-code-目录下创建-info-php-文件并访问测试展开目录" class="headerlink" title="3.3 在 /code 目录下创建 info.php 文件并访问测试展开目录"></a>3.3 在 /code 目录下创建 info.php 文件并访问测试展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# mkdir &#x2F;code</span><br><span class="line">[root@web01 ~]# chown -R www:www &#x2F;code&#x2F;</span><br><span class="line">[root@web01 ~]# cat &#x2F;code&#x2F;info.php</span><br><span class="line">&lt;?php</span><br><span class="line">    phpinfo();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h2 id="3-4-检查-nginx-语法并重启展开目录"><a href="#3-4-检查-nginx-语法并重启展开目录" class="headerlink" title="3.4 检查 nginx 语法并重启展开目录"></a>3.4 检查 nginx 语法并重启展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# nginx -t</span><br><span class="line">nginx: the configuration file &#x2F;etc&#x2F;nginx&#x2F;nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file &#x2F;etc&#x2F;nginx&#x2F;nginx.conf test is successful</span><br><span class="line">[root@web01 ~]# systemctl restart nginx</span><br></pre></td></tr></table></figure><h2 id="3-5-绑定-hosts-然后在浏览器访问展开目录"><a href="#3-5-绑定-hosts-然后在浏览器访问展开目录" class="headerlink" title="3.5 绑定 hosts 然后在浏览器访问展开目录"></a>3.5 绑定 hosts 然后在浏览器访问展开目录</h2><p><a href="http://www.xoxo.com/info.php">http://www.xoxo.com/info.php</a></p><p><img src="http://upload-images.jianshu.io/upload_images/14248468-afbdb80c1c011970.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img" title="img"></p><h2 id="3-6-测试-php-和数据库访问是否正常展开目录"><a href="#3-6-测试-php-和数据库访问是否正常展开目录" class="headerlink" title="3.6 测试 php 和数据库访问是否正常展开目录"></a>3.6 测试 php 和数据库访问是否正常展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# cat &#x2F;code&#x2F;mysql.php </span><br><span class="line">&lt;?php</span><br><span class="line">    $servername &#x3D; &quot;localhost&quot;;</span><br><span class="line">    $username &#x3D; &quot;root&quot;;</span><br><span class="line">    $password &#x3D; &quot;xoxo123&quot;;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 创建连接</span><br><span class="line">    $conn &#x3D; mysqli_connect($servername, $username, $password);</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; &#x2F;&#x2F; 检测连接</span><br><span class="line">    if (!$conn) &#123;</span><br><span class="line">        die(&quot;Connection failed: &quot; . mysqli_connect_error());</span><br><span class="line">    &#125;</span><br><span class="line">    echo &quot;php 连接 MySQL 数据库成功&quot;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h2 id="3-6-通过浏览器访问数据库页面展开目录"><a href="#3-6-通过浏览器访问数据库页面展开目录" class="headerlink" title="3.6 通过浏览器访问数据库页面展开目录"></a>3.6 通过浏览器访问数据库页面展开目录</h2><p><img src="http://upload-images.jianshu.io/upload_images/14248468-3a48ddeaf5e0131e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/860/format/webp" alt="img" title="img"></p><h1 id="第四章-部署博客-Wordpress展开目录"><a href="#第四章-部署博客-Wordpress展开目录" class="headerlink" title="第四章 部署博客 Wordpress展开目录"></a>第四章 部署博客 Wordpress展开目录</h1><h2 id="4-1-配置-Nginx-虚拟主机站点展开目录"><a href="#4-1-配置-Nginx-虚拟主机站点展开目录" class="headerlink" title="4.1 配置 Nginx 虚拟主机站点展开目录"></a>4.1 配置 Nginx 虚拟主机站点展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# cat &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;wordpress.conf    </span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name blog.xoxo.com;</span><br><span class="line">    root &#x2F;code&#x2F;wordpress;</span><br><span class="line">    index index.php index.html;</span><br><span class="line"></span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        root &#x2F;code&#x2F;wordpress;</span><br><span class="line">        fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">        fastcgi_index index.php;</span><br><span class="line">        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</span><br><span class="line">        include fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-2-重启-nginx展开目录"><a href="#4-2-重启-nginx展开目录" class="headerlink" title="4.2 重启 nginx展开目录"></a>4.2 重启 nginx展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# systemctl restart nginx</span><br></pre></td></tr></table></figure><h2 id="4-3-下载解压-wordpress-到代码目录展开目录"><a href="#4-3-下载解压-wordpress-到代码目录展开目录" class="headerlink" title="4.3 下载解压 wordpress 到代码目录展开目录"></a>4.3 下载解压 wordpress 到代码目录展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# mkdir &#x2F;code</span><br><span class="line">[root@web01 ~]# cd &#x2F;code&#x2F;</span><br><span class="line">[root@web01 &#x2F;code]# wget http:&#x2F;&#x2F;cn.wordpress.org&#x2F;wordpress-4.9.4-zh_CN.tar.gz</span><br><span class="line">[root@web01 &#x2F;code]# tar xf wordpress-4.9.4-zh_CN.tar.gz </span><br><span class="line">[root@web01 &#x2F;code]# chown -R www:www &#x2F;code&#x2F;wordpress</span><br></pre></td></tr></table></figure><h2 id="4-4-创建-wordpress-数据库展开目录"><a href="#4-4-创建-wordpress-数据库展开目录" class="headerlink" title="4.4 创建 wordpress 数据库展开目录"></a>4.4 创建 wordpress 数据库展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 &#x2F;code]# mysql -uroot -poldboy123</span><br><span class="line">&gt; create database wordpress;</span><br><span class="line">&gt; exit</span><br></pre></td></tr></table></figure><h2 id="4-5-浏览器访问-wordpress-并部署展开目录"><a href="#4-5-浏览器访问-wordpress-并部署展开目录" class="headerlink" title="4.5 浏览器访问 wordpress 并部署展开目录"></a>4.5 浏览器访问 wordpress 并部署展开目录</h2><p><img src="http://upload-images.jianshu.io/upload_images/14248468-dd38100064951e77.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img" title="img"></p><p><img src="http://upload-images.jianshu.io/upload_images/14248468-917f136b8d1f2221.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img" title="img"></p><p><img src="http://upload-images.jianshu.io/upload_images/14248468-63fc1d8feb9a6d81.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img" title="img"></p><p><img src="http://upload-images.jianshu.io/upload_images/14248468-fd5a927bf9abb1fe.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img" title="img"></p><p><img src="http://upload-images.jianshu.io/upload_images/14248468-bf85028664bb24e3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img" title="img"></p><p><img src="http://upload-images.jianshu.io/upload_images/14248468-9cf599089d9c11f7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/808/format/webp" alt="img" title="img"></p><p><img src="http://upload-images.jianshu.io/upload_images/14248468-e9d90ec2658dd12d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img" title="img"></p><h1 id="第五章-部署问答网站-Wecenter展开目录"><a href="#第五章-部署问答网站-Wecenter展开目录" class="headerlink" title="第五章 部署问答网站 Wecenter展开目录"></a>第五章 部署问答网站 Wecenter展开目录</h1><h2 id="5-1-配置-Nginx-虚拟站点展开目录"><a href="#5-1-配置-Nginx-虚拟站点展开目录" class="headerlink" title="5.1 配置 Nginx 虚拟站点展开目录"></a>5.1 配置 Nginx 虚拟站点展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# cat &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;wecenter.conf </span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name zh.xoxo.com;</span><br><span class="line">    root &#x2F;code&#x2F;zh;</span><br><span class="line">    index index.php index.html;</span><br><span class="line"></span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        root &#x2F;code&#x2F;zh;</span><br><span class="line">        fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">        fastcgi_index index.php;</span><br><span class="line">        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</span><br><span class="line">        include fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-2-下载解压-wecenter-并授权展开目录"><a href="#5-2-下载解压-wecenter-并授权展开目录" class="headerlink" title="5.2 下载解压 wecenter 并授权展开目录"></a>5.2 下载解压 wecenter 并授权展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# mkdir &#x2F;code&#x2F;zh -p</span><br><span class="line">[root@web01 ~]# cd &#x2F;opt&#x2F;</span><br><span class="line">[root@web01 &#x2F;opt]# rz</span><br><span class="line">[root@web01 &#x2F;opt]# ls</span><br><span class="line">WeCenter_3-3-2.zip</span><br><span class="line">[root@web01 &#x2F;opt]# unzip WeCenter_3-3-2.zip -d &#x2F;code&#x2F;zh&#x2F;</span><br><span class="line">[root@web01 &#x2F;opt]# chown -R www:www &#x2F;code&#x2F;</span><br></pre></td></tr></table></figure><h2 id="5-3-创建-wecenter-数据库展开目录"><a href="#5-3-创建-wecenter-数据库展开目录" class="headerlink" title="5.3 创建 wecenter 数据库展开目录"></a>5.3 创建 wecenter 数据库展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# mysql -uroot -poldboy123</span><br><span class="line">&gt; create database zh;</span><br><span class="line">&gt; exit;</span><br></pre></td></tr></table></figure><h2 id="5-4-浏览器访问展开目录"><a href="#5-4-浏览器访问展开目录" class="headerlink" title="5.4 浏览器访问展开目录"></a>5.4 浏览器访问展开目录</h2><p><img src="http://upload-images.jianshu.io/upload_images/14248468-45af6dbf2723e166.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img" title="img"></p><p><img src="http://upload-images.jianshu.io/upload_images/14248468-ba367727e768d79e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img" title="img"></p><p><img src="http://upload-images.jianshu.io/upload_images/14248468-31c7fb7b33531170.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img" title="img"></p><p><img src="http://upload-images.jianshu.io/upload_images/14248468-f70702b0f513d8fd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img" title="img"></p><h2 id="5-5-清除首页安装文件展开目录"><a href="#5-5-清除首页安装文件展开目录" class="headerlink" title="5.5 清除首页安装文件展开目录"></a>5.5 清除首页安装文件展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# rm -rf &#x2F;code&#x2F;zh&#x2F;install</span><br></pre></td></tr></table></figure><h1 id="第六章-拆分数据库展开目录"><a href="#第六章-拆分数据库展开目录" class="headerlink" title="第六章 拆分数据库展开目录"></a>第六章 拆分数据库展开目录</h1><h2 id="6-1-为什么要进行数据库的拆分展开目录"><a href="#6-1-为什么要进行数据库的拆分展开目录" class="headerlink" title="6.1 为什么要进行数据库的拆分展开目录"></a>6.1 为什么要进行数据库的拆分展开目录</h2><p>由于单台服务器运行 LNMP 架构会导致网站访问缓慢，当内存被吃满时，很容易导致系统出现 oom，从而 kill 掉 MySQL 数据库，所以需要将 web 和数据库进行独立部署</p><h2 id="6-2-数据库拆分后解决了什么问题展开目录"><a href="#6-2-数据库拆分后解决了什么问题展开目录" class="headerlink" title="6.2 数据库拆分后解决了什么问题展开目录"></a>6.2 数据库拆分后解决了什么问题展开目录</h2><p>1. 缓解 web 网站的压力<br>2. 增强数据库读写性能<br>3. 提高用户访问的速度</p><h2 id="6-3-数据库拆分架构演变过程展开目录"><a href="#6-3-数据库拆分架构演变过程展开目录" class="headerlink" title="6.3 数据库拆分架构演变过程展开目录"></a>6.3 数据库拆分架构演变过程展开目录</h2><p><img src="http://upload-images.jianshu.io/upload_images/14248468-bded52866d935067.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img" title="img"></p><h2 id="6-4-数据库拆分环境搭建展开目录"><a href="#6-4-数据库拆分环境搭建展开目录" class="headerlink" title="6.4 数据库拆分环境搭建展开目录"></a>6.4 数据库拆分环境搭建展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">web01 172.16.1.7    nginx+php</span><br><span class="line">db01    172.16.1.51  mysql</span><br></pre></td></tr></table></figure><h2 id="6-5-数据库拆分详细步骤展开目录"><a href="#6-5-数据库拆分详细步骤展开目录" class="headerlink" title="6.5 数据库拆分详细步骤展开目录"></a>6.5 数据库拆分详细步骤展开目录</h2><h3 id="6-5-1-web01-上备份数据库并拷贝到-db01-上展开目录"><a href="#6-5-1-web01-上备份数据库并拷贝到-db01-上展开目录" class="headerlink" title="6.5.1 web01 上备份数据库并拷贝到 db01 上展开目录"></a>6.5.1 web01 上备份数据库并拷贝到 db01 上展开目录</h3><p>备份 web01 上的数据库，xoxo123 是数据库密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# mysqldump -uroot -p&#39;xoxo123&#39; -A --single-transaction &gt; mysql-all.sql</span><br></pre></td></tr></table></figure><p>将 web01 上备份的数据库拷贝至 db01 服务器上</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# scp mysql-all.sql 10.0.1.51:&#x2F;tmp</span><br></pre></td></tr></table></figure><h3 id="6-5-2-db01-恢复数据库展开目录"><a href="#6-5-2-db01-恢复数据库展开目录" class="headerlink" title="6.5.2 db01 恢复数据库展开目录"></a>6.5.2 db01 恢复数据库展开目录</h3><p>将 web01 服务器上推送的数据库备份文件恢复至 db01 服务器新数据库中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]# yum install mariadb mariadb-server -y</span><br><span class="line">[root@db01 ~]# systemctl start mariadb</span><br><span class="line">[root@db01 ~]# systemctl enable mariadb</span><br><span class="line">[root@db01 ~]# mysqladmin password &#39;xoxo123&#39;</span><br><span class="line">[root@db01 ~]# mysql -uroot -p&#39;xoxo123&#39; &lt; &#x2F;tmp&#x2F;mysql-all.sql</span><br><span class="line">[root@db01 ~]# mysql -uroot -p&#39;xoxo123&#39; -e &quot;show databases;&quot;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| test               |</span><br><span class="line">| wordpress          |</span><br><span class="line">| zh                 |</span><br><span class="line">+--------------------+</span><br></pre></td></tr></table></figure><h3 id="6-6-3-db01-数据库进行授权展开目录"><a href="#6-6-3-db01-数据库进行授权展开目录" class="headerlink" title="6.6.3 db01 数据库进行授权展开目录"></a>6.6.3 db01 数据库进行授权展开目录</h3><p>在新数据库上授权，允许所有网段，通过 all 账户连接并操作该数据库<br>授权所有权限 grant all privileges<br>授权所有库所有表 <em>.</em><br>将授权赋予给哪个用户，这个用户只能通过哪个网段过来 (% 所有) ‘all’@’%’<br>授权该用户登录的密码 identified by</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]# mysql -uroot -p&#39;xoxo123&#39;</span><br><span class="line">&gt; grant all privileges on *.* to &#39;all&#39;@&#39;%&#39; identified by &#39;xoxo123&#39;;</span><br><span class="line">&gt; flush privileges; </span><br><span class="line">&gt;exit;</span><br></pre></td></tr></table></figure><p>测试使用 IP 地址能不能登陆</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]# mysql -uall -p&#39;xoxo123&#39; -h 10.0.1.51</span><br><span class="line">&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| test               |</span><br><span class="line">| wordpress          |</span><br><span class="line">| zh                 |</span><br><span class="line">+--------------------+</span><br></pre></td></tr></table></figure><h3 id="6-6-4-web01-修改代码连接到新数据库展开目录"><a href="#6-6-4-web01-修改代码连接到新数据库展开目录" class="headerlink" title="6.6.4 web01 修改代码连接到新数据库展开目录"></a>6.6.4 web01 修改代码连接到新数据库展开目录</h3><p>修改 wordpress</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# vim &#x2F;code&#x2F;wordpress&#x2F;wp-config.php</span><br><span class="line">&#x2F;** MySQL数据库用户名 *&#x2F;</span><br><span class="line">define(&#39;DB_USER&#39;, &#39;all&#39;);</span><br><span class="line"></span><br><span class="line">&#x2F;** MySQL数据库密码 *&#x2F;</span><br><span class="line">define(&#39;DB_PASSWORD&#39;, &#39;xoxo123&#39;);</span><br><span class="line"></span><br><span class="line">&#x2F;** MySQL主机 *&#x2F;</span><br><span class="line">define(&#39;DB_HOST&#39;, &#39;172.16.1.51&#39;);</span><br></pre></td></tr></table></figure><p>修改 wecenter</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# vim &#x2F;code&#x2F;zh&#x2F;system&#x2F;config&#x2F;database.php</span><br><span class="line">  &#39;host&#39; &#x3D;&gt; &#39;172.16.1.51&#39;,</span><br><span class="line">  &#39;username&#39; &#x3D;&gt; &#39;all&#39;,</span><br><span class="line">  &#39;password&#39; &#x3D;&gt; &#39;xoxo123&#39;,</span><br><span class="line">  &#39;dbname&#39; &#x3D;&gt; &#39;zh&#39;,</span><br></pre></td></tr></table></figure><p>停止 web01 上的数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# systemctl stop mariadb.service </span><br></pre></td></tr></table></figure><h3 id="6-6-5-测试访问展开目录"><a href="#6-6-5-测试访问展开目录" class="headerlink" title="6.6.5 测试访问展开目录"></a>6.6.5 测试访问展开目录</h3><p>此时如果打开网页没有问题则表明数据库拆分完成</p><p><img src="http://upload-images.jianshu.io/upload_images/14248468-99b22a82925ed9d2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img" title="img"></p><p><img src="http://upload-images.jianshu.io/upload_images/14248468-a81bb35ff49e4c50.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img" title="img"></p><h1 id="第七章-拓展-WEB-服务器展开目录"><a href="#第七章-拓展-WEB-服务器展开目录" class="headerlink" title="第七章 拓展 WEB 服务器展开目录"></a>第七章 拓展 WEB 服务器展开目录</h1><h2 id="7-1-为什么要拓展多台-web-节点展开目录"><a href="#7-1-为什么要拓展多台-web-节点展开目录" class="headerlink" title="7.1 为什么要拓展多台 web 节点展开目录"></a>7.1 为什么要拓展多台 web 节点展开目录</h2><p>单台 web 服务器能抗住的访问量是有限的，配置多台 web 服务器能提升更高的访问速度</p><h2 id="7-2-拓展多台-web-解决了什么问题展开目录"><a href="#7-2-拓展多台-web-解决了什么问题展开目录" class="headerlink" title="7.2 拓展多台 web 解决了什么问题展开目录"></a>7.2 拓展多台 web 解决了什么问题展开目录</h2><p>1. 单台 web 节点如果故障，会导致业务 down 机<br>2. 多台 web 节点能保证业务的持续稳定，扩展性高<br>3. 多台 web 节点能有效的提升用户访问网站的速度</p><h2 id="7-3-多台-web-服务器架构组成展开目录"><a href="#7-3-多台-web-服务器架构组成展开目录" class="headerlink" title="7.3 多台 web 服务器架构组成展开目录"></a>7.3 多台 web 服务器架构组成展开目录</h2><p><img src="http://upload-images.jianshu.io/upload_images/14248468-31c746a3e1874575.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img" title="img"></p><h2 id="7-4-多台-web-服务器思路展开目录"><a href="#7-4-多台-web-服务器思路展开目录" class="headerlink" title="7.4 多台 web 服务器思路展开目录"></a>7.4 多台 web 服务器思路展开目录</h2><p>1. 可以使用 ansible 批量部署多台 web 服务器<br>2. 配置内网私有 yum 仓库<br>3 按照 web01 的步骤安装好 nginx 和 php，然后远程拷贝代码到新机器</p><h2 id="7-5-正常配置步骤展开目录"><a href="#7-5-正常配置步骤展开目录" class="headerlink" title="7.5 正常配置步骤展开目录"></a>7.5 正常配置步骤展开目录</h2><h3 id="7-5-1-创建用户名密码展开目录"><a href="#7-5-1-创建用户名密码展开目录" class="headerlink" title="7.5.1 创建用户名密码展开目录"></a>7.5.1 创建用户名密码展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web02 ~]# groupadd www -g 666</span><br><span class="line">[root@web02 ~]# useradd www -s &#x2F;sbin&#x2F;nologin -M -u 666 -g 666</span><br></pre></td></tr></table></figure><h3 id="7-5-2-安装-NP展开目录"><a href="#7-5-2-安装-NP展开目录" class="headerlink" title="7.5.2 安装 NP展开目录"></a>7.5.2 安装 NP展开目录</h3><p>可以直接从 web01 上拷贝 yum 源到本机 yum 目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web02 ~]# scp -rp root@172.16.1.7:&#x2F;etc&#x2F;yum.repos.d&#x2F;* &#x2F;etc&#x2F;yum.repos.d&#x2F;</span><br><span class="line">[root@web02 ~]# scp -rp root@172.16.1.7:&#x2F;etc&#x2F;pki&#x2F;rpm-gpg&#x2F;* &#x2F;etc&#x2F;pki&#x2F;rpm-gpg&#x2F;</span><br><span class="line">[root@web02 ~]# yum install nginx -y</span><br><span class="line">[root@web02 ~]# yum -y install php71w php71w-cli php71w-common php71w-devel php71w-embedded php71w-gd php71w-mcrypt php71w-mbstring php71w-pdo php71w-xml php71w-fpm php71w-mysqlnd php71w-opcache php71w-pecl-memcached php71w-pecl-redis php71w-pecl-mongodb </span><br></pre></td></tr></table></figure><h3 id="7-5-3-拷贝-web01-的-nginx-配置文件到-web02展开目录"><a href="#7-5-3-拷贝-web01-的-nginx-配置文件到-web02展开目录" class="headerlink" title="7.5.3 拷贝 web01 的 nginx 配置文件到 web02展开目录"></a>7.5.3 拷贝 web01 的 nginx 配置文件到 web02展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web02 ~]# scp -rp root@172.16.1.7:&#x2F;etc&#x2F;nginx &#x2F;etc&#x2F;</span><br></pre></td></tr></table></figure><h3 id="7-5-4-拷贝-web01-的-php-配置文件到-web02展开目录"><a href="#7-5-4-拷贝-web01-的-php-配置文件到-web02展开目录" class="headerlink" title="7.5.4 拷贝 web01 的 php 配置文件到 web02展开目录"></a>7.5.4 拷贝 web01 的 php 配置文件到 web02展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web02 ~]# scp -rp root@172.16.1.7:&#x2F;etc&#x2F;php-fpm.d &#x2F;etc&#x2F;</span><br></pre></td></tr></table></figure><h3 id="7-5-5-拷贝代码目录到-web02展开目录"><a href="#7-5-5-拷贝代码目录到-web02展开目录" class="headerlink" title="7.5.5 拷贝代码目录到 web02展开目录"></a>7.5.5 拷贝代码目录到 web02展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# tar czf code.tar.gz &#x2F;code</span><br><span class="line">[root@web01 ~]# scp code.tar.gz root@172.16.1.8:&#x2F;tmp</span><br></pre></td></tr></table></figure><h3 id="7-5-6-web02-上将代码解压到相应目录展开目录"><a href="#7-5-6-web02-上将代码解压到相应目录展开目录" class="headerlink" title="7.5.6 web02 上将代码解压到相应目录展开目录"></a>7.5.6 web02 上将代码解压到相应目录展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web02 ~]# tar zxf &#x2F;tmp&#x2F;code.tar.gz -C &#x2F;</span><br></pre></td></tr></table></figure><h3 id="7-5-7-web02-上启动-nginx-和-php-fpm-并加入开机自启动展开目录"><a href="#7-5-7-web02-上启动-nginx-和-php-fpm-并加入开机自启动展开目录" class="headerlink" title="7.5.7 web02 上启动 nginx 和 php-fpm 并加入开机自启动展开目录"></a>7.5.7 web02 上启动 nginx 和 php-fpm 并加入开机自启动展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web02 ~]# systemctl start nginx php-fpm</span><br><span class="line">[root@web02 ~]# systemctl enable nginx php-fpm </span><br></pre></td></tr></table></figure><h3 id="7-5-8-web-访问测试展开目录"><a href="#7-5-8-web-访问测试展开目录" class="headerlink" title="7.5.8 web 访问测试展开目录"></a>7.5.8 web 访问测试展开目录</h3><p>修改 hosts 为 web02 的地址，然后浏览器访问测试</p><h1 id="第八章-将静态资源挂载到共享存储展开目录"><a href="#第八章-将静态资源挂载到共享存储展开目录" class="headerlink" title="第八章 将静态资源挂载到共享存储展开目录"></a>第八章 将静态资源挂载到共享存储展开目录</h1><h2 id="8-1-为什么要拆分静态资源到独立服务器展开目录"><a href="#8-1-为什么要拆分静态资源到独立服务器展开目录" class="headerlink" title="8.1 为什么要拆分静态资源到独立服务器展开目录"></a>8.1 为什么要拆分静态资源到独立服务器展开目录</h2><p>当后端的 web 节点出现多台时，会导致用户上传的图片、视频附件等内容仅上传至一台 web 服务器，那么其他的 web 服务器则无法访问到该图片</p><h2 id="8-2-新增一台-nfs-存储解决了什么问题展开目录"><a href="#8-2-新增一台-nfs-存储解决了什么问题展开目录" class="headerlink" title="8.2 新增一台 nfs 存储解决了什么问题展开目录"></a>8.2 新增一台 nfs 存储解决了什么问题展开目录</h2><p>1. 保证了多台 web 节点静态资源一致。<br>2. 有效节省多台 web 节点的存储空间。<br>3. 统一管理静态资源，便于后期推送至 CDN 进行静态资源加速</p><h2 id="8-3-多台-web-节点架构组成展开目录"><a href="#8-3-多台-web-节点架构组成展开目录" class="headerlink" title="8.3 多台 web 节点架构组成展开目录"></a>8.3 多台 web 节点架构组成展开目录</h2><p><img src="http://upload-images.jianshu.io/upload_images/14248468-d43c3a8fe3f54693.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img" title="img"></p><h2 id="8-4-多台-web-节点环境规划展开目录"><a href="#8-4-多台-web-节点环境规划展开目录" class="headerlink" title="8.4 多台 web 节点环境规划展开目录"></a>8.4 多台 web 节点环境规划展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">web01      nginx+php</span><br><span class="line">web02      nginx+php</span><br><span class="line">db01        mysql</span><br><span class="line">nfs           nfs</span><br></pre></td></tr></table></figure><h2 id="8-5-共享存储配置展开目录"><a href="#8-5-共享存储配置展开目录" class="headerlink" title="8.5 共享存储配置展开目录"></a>8.5 共享存储配置展开目录</h2><h3 id="8-5-1-安装配置-NFS展开目录"><a href="#8-5-1-安装配置-NFS展开目录" class="headerlink" title="8.5.1 安装配置 NFS展开目录"></a>8.5.1 安装配置 NFS展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs01 ~]# yum install nfs-utils -y</span><br><span class="line">[root@nfs01 ~]# cat &#x2F;etc&#x2F;exports</span><br><span class="line">&#x2F;data&#x2F;blog 172.16.1.0&#x2F;24(rw,sync,all_squash,anonuid&#x3D;666,anongid&#x3D;666)</span><br><span class="line">&#x2F;data&#x2F;zh 172.16.1.0&#x2F;24(rw,sync,all_squash,anonuid&#x3D;666,anongid&#x3D;666)</span><br></pre></td></tr></table></figure><h3 id="8-5-2-创建共享目录并进行授权展开目录"><a href="#8-5-2-创建共享目录并进行授权展开目录" class="headerlink" title="8.5.2 创建共享目录并进行授权展开目录"></a>8.5.2 创建共享目录并进行授权展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs01 ~]# mkdir &#x2F;data&#x2F;&#123;blog,zh&#125; -p</span><br><span class="line">[root@nfs01 ~]# chown -R www.www &#x2F;data</span><br></pre></td></tr></table></figure><h3 id="8-5-3-启动-nfs-服务并加入开机自启展开目录"><a href="#8-5-3-启动-nfs-服务并加入开机自启展开目录" class="headerlink" title="8.5.3 启动 nfs 服务并加入开机自启展开目录"></a>8.5.3 启动 nfs 服务并加入开机自启展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs01 ~]# systemctl restart nfs-server</span><br></pre></td></tr></table></figure><h2 id="8-6-web01-端操作步骤如下展开目录"><a href="#8-6-web01-端操作步骤如下展开目录" class="headerlink" title="8.6 web01 端操作步骤如下展开目录"></a>8.6 web01 端操作步骤如下展开目录</h2><h3 id="8-6-1-web01-节点挂在-nfs展开目录"><a href="#8-6-1-web01-节点挂在-nfs展开目录" class="headerlink" title="8.6.1 web01 节点挂在 nfs展开目录"></a>8.6.1 web01 节点挂在 nfs展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# yum install nfs-utils -y</span><br><span class="line">[root@web01 ~]# showmount -e 172.16.1.31</span><br><span class="line">Export list for 172.16.1.31:</span><br><span class="line">&#x2F;data&#x2F;zh   172.16.1.0&#x2F;24</span><br><span class="line">&#x2F;data&#x2F;blog 172.16.1.0&#x2F;24</span><br></pre></td></tr></table></figure><h3 id="8-6-2-查找-Wordpress-静态资源存放的位置展开目录"><a href="#8-6-2-查找-Wordpress-静态资源存放的位置展开目录" class="headerlink" title="8.6.2 查找 Wordpress 静态资源存放的位置展开目录"></a>8.6.2 查找 Wordpress 静态资源存放的位置展开目录</h3><p>在 wordpress 的文章里添加一张图片，然后查看图片 URL 资源</p><p><img src="http://upload-images.jianshu.io/upload_images/14248468-7eb776f29a163116.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img" title="img"></p><p>这里地址为：<br><a href="http://links.jianshu.com/go?to=http://blog.xoxo.com/wp-content/uploads/2019/07/DNS">http://blog.xoxo.com/wp-content/uploads/2019/07/DNS</a> 图.png</p><h3 id="8-6-3-备份-web01-服务器上-Wordpress-的静态资源展开目录"><a href="#8-6-3-备份-web01-服务器上-Wordpress-的静态资源展开目录" class="headerlink" title="8.6.3 备份 web01 服务器上 Wordpress 的静态资源展开目录"></a>8.6.3 备份 web01 服务器上 Wordpress 的静态资源展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# cd &#x2F;code&#x2F;wordpress&#x2F;wp-content</span><br><span class="line">[root@web01 &#x2F;code&#x2F;wordpress&#x2F;wp-content]# cp -a uploads&#x2F; uploads_bak&#x2F;</span><br></pre></td></tr></table></figure><h3 id="8-6-4-web01-客户端执行挂载操作展开目录"><a href="#8-6-4-web01-客户端执行挂载操作展开目录" class="headerlink" title="8.6.4 web01 客户端执行挂载操作展开目录"></a>8.6.4 web01 客户端执行挂载操作展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 &#x2F;code&#x2F;wordpress&#x2F;wp-content]# mount -t nfs 172.16.1.31:&#x2F;data&#x2F;blog &#x2F;code&#x2F;wordpress&#x2F;wp-content&#x2F;uploads&#x2F;</span><br><span class="line">[root@web01 &#x2F;code&#x2F;wordpress&#x2F;wp-content]# cp -rp uploads_bak&#x2F;* uploads&#x2F;</span><br></pre></td></tr></table></figure><h3 id="8-6-5-将挂载信息加入开机自启展开目录"><a href="#8-6-5-将挂载信息加入开机自启展开目录" class="headerlink" title="8.6.5 将挂载信息加入开机自启展开目录"></a>8.6.5 将挂载信息加入开机自启展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# tail -1 &#x2F;etc&#x2F;fstab </span><br><span class="line">172.16.1.31:&#x2F;data&#x2F;blog &#x2F;code&#x2F;wordpress&#x2F;wp-content&#x2F;uploads nfs defaults 0 0</span><br></pre></td></tr></table></figure><h2 id="8-7-web02-端操作展开目录"><a href="#8-7-web02-端操作展开目录" class="headerlink" title="8.7 web02 端操作展开目录"></a>8.7 web02 端操作展开目录</h2><p>web02 端操作和 web01 端一样</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@web02 ~]# cd &#x2F;code&#x2F;wordpress&#x2F;wp-content</span><br><span class="line">[root@web02 &#x2F;code&#x2F;wordpress&#x2F;wp-content]# cp -a uploads&#x2F; uploads_bak&#x2F;</span><br><span class="line">[root@web02 &#x2F;code&#x2F;wordpress&#x2F;wp-content]# mount -t nfs 172.16.1.31:&#x2F;data&#x2F;blog &#x2F;code&#x2F;wordpress&#x2F;wp-content&#x2F;uploads&#x2F;</span><br><span class="line">[root@web02 &#x2F;code&#x2F;wordpress&#x2F;wp-content]# cp -rp uploads_bak&#x2F;* uploads&#x2F;</span><br><span class="line">[root@web02 ~]# tail -1 &#x2F;etc&#x2F;fstab </span><br><span class="line">172.16.1.31:&#x2F;data&#x2F;blog &#x2F;code&#x2F;wordpress&#x2F;wp-content&#x2F;uploads nfs defaults 0 0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LNMP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简述文件系统共享网络服务 NFS</title>
      <link href="/posts/23427/"/>
      <url>/posts/23427/</url>
      
        <content type="html"><![CDATA[<h1 id="第-1-章-存储与-nfs-存储概述"><a href="#第-1-章-存储与-nfs-存储概述" class="headerlink" title="第 1 章 存储与 nfs 存储概述"></a>第 1 章 存储与 nfs 存储概述</h1><blockquote><p>1. 为什么用共享存储<br>2. 存储有哪些工具<br>3. 共享存储应用场景有哪些<br>4. 部署 nfs 共享存储<br>5. 客户端尝试连接共享存储</p></blockquote><p><strong>什么是 NFS？</strong><br>NFS 是 Network File System 的缩写及网络文件系统。 NFS 主要功能是通过局域网络让不同的主机系统之间可以共享文件或目录。<br>NFS 系统和 Windows 网络共享、网络驱动器类似，只不过 windows 用于局域网，NFS 用于企业集群架构中，如果是大型网站，会用到更复杂的分布式文件系统 FastDFS,glusterfs,HDFS<br><strong>那么我们为什么要使用数据存储共享服务？</strong></p><blockquote><p>1. 实现多台服务器之间数据共享<br>2. 实现多台服务器之间数据一致</p></blockquote><h2 id="1-1-NFS-应用场景"><a href="#1-1-NFS-应用场景" class="headerlink" title="1.1 NFS 应用场景"></a>1.1 NFS 应用场景</h2><p>下面我将通过图解给大家展示集群需要共享存储服务的理由。<br>1.A 用户上传图片经过负载均衡，负载均衡将上传请求调度至 WEB1 服务器上。<br>2.B 用户访问 A 用户上传的图片，此时 B 用户被负载均衡调度至 WEB2 上，因为 WEB2 上没有这张图片，所以 B 用户无法看到 A 用户传的图片</p><p><img src="http://wp.kococ.cn/wp-content/uploads/2020/07/2020071114273055.png" alt="请输入图片描述" title="请输入图片描述"></p><p>如果有共享存储的情况<br>1.A 用户上传图片无论被负载均衡调度至 WEB1 还是 WEB2, 最终数据都被写入至共享存储<br>2.B 用户访问 A 用户上传图片时，无论调度至 WEB1 还是 WEB2，最终都会上共享存储访问对应的文件，这样就可以访问到资源了</p><p><img src="http://wp.kococ.cn/wp-content/uploads/2020/07/2020071114274373.png" alt="请输入图片描述" title="请输入图片描述"></p><h2 id="1-2-nfs-存储工作原理实现"><a href="#1-2-nfs-存储工作原理实现" class="headerlink" title="1.2 nfs 存储工作原理实现"></a>1.2 nfs 存储工作原理实现</h2><p><img src="http://wp.kococ.cn/wp-content/uploads/2020/07/2020071114275494.png" alt="请输入图片描述" title="请输入图片描述"></p><p>NFS 工作原理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1.用户进程访问 NFS 客户端，使用不同的函数对数据进行处理</span><br><span class="line">2.NFS 客户端通过 TCP&#x2F;IP 的方式传递给 NFS 服务端</span><br><span class="line">3.NFS 服务端接收到请求后，会先调用 portmap 进程进行端口映射。</span><br><span class="line">4.nfsd 进程用于判断 NFS 客户端是否拥有权限连接 NFS 服务端。</span><br><span class="line">5.Rpc.mount 进程判断客户端是否有对应的权限进行验证。</span><br><span class="line">6.idmap 进程实现用户映射和压缩</span><br><span class="line">7.最后 NFS 服务端会将对应请求的函数转换为本地能识别的命令，传递至内核，由内核驱动硬件。</span><br><span class="line">注意: rpc 是一个远程过程调用，那么使用 nfs 必须有 rpc 服务</span><br></pre></td></tr></table></figure><h2 id="1-3-前提条件"><a href="#1-3-前提条件" class="headerlink" title="1.3 前提条件"></a>1.3 前提条件</h2><blockquote><p>1.nfs 依赖于 RPC 服务来传递消息<br>2.NFS 服务启动的端口号是随机的，启动之后会向本地的 RCP 注册<br>3. 先启动 RPC 服务，再启动 NFS 服务<br>4.NFS 和 RPC 之间的通讯是他们自己内部完成的，对于用户来说无感知<br>5.NFS 客户端和服务端不会直接沟通，必须通过 RPC 服务传递消息<br>6. 防火墙要开放 RPC 服务的端口</p></blockquote><h1 id="第-2-章-nfs-服务端部署"><a href="#第-2-章-nfs-服务端部署" class="headerlink" title="第 2 章 nfs 服务端部署"></a>第 2 章 nfs 服务端部署</h1><h2 id="2-1-安装-nfs"><a href="#2-1-安装-nfs" class="headerlink" title="2.1 安装 nfs"></a>2.1 安装 nfs</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install nfs-utils -y</span><br></pre></td></tr></table></figure><h2 id="2-2-配置参数"><a href="#2-2-配置参数" class="headerlink" title="2.2 配置参数"></a>2.2 配置参数</h2><p>nfs 服务程序的配置文件为 /etc/exports，需要严格按照共享目录的路径 允许访问的 NFS 客户端（共享权限参数）格式书写，定义要共享的目录与相应的权限，具体书写方式如下图所示</p><p><img src="http://wp.kococ.cn/wp-content/uploads/2020/07/2020071114281797.png" alt="111" title="111"></p><p>配置文件参数解释：<br>执行 man exports 命令，然后切换到文件结尾，可以快速查看如下样例格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">nfs共享参数 参数作用</span><br><span class="line">rw 读写权限</span><br><span class="line">ro 只读权限</span><br><span class="line">root_squash</span><br><span class="line">当 NFS 客户端以 root 管理员访问时，映射为 NFS 服务器的匿名用户(不常用)</span><br><span class="line">no_root_squash</span><br><span class="line">当 NFS 客户端以 root 管理员访问时，映射为 NFS 服务器的 root 管理员(不常用)</span><br><span class="line">all_squash</span><br><span class="line">无论 NFS 客户端使用什么账户访问，均映射为 NFS 服务器的匿名用户(常用)</span><br><span class="line">no_all_squash</span><br><span class="line">无论 NFS 客户端使用什么账户访问，都不进行压缩</span><br><span class="line">sync</span><br><span class="line">同时将数据写入到内存与硬盘中，保证不丢失数据</span><br><span class="line">async</span><br><span class="line">优先将数据保存到内存，然后再写入硬盘；这样效率更高，但可能会丢失数据</span><br><span class="line">anonuid</span><br><span class="line">配置 all_squash 使用,指定 NFS 的用户 UID,必须存在系统</span><br><span class="line">anongid</span><br><span class="line">配置 all_squash 使用,指定 NFS 的用户 UID,必须存在系统</span><br></pre></td></tr></table></figure><h2 id="2-3-配置-NFS-服务端"><a href="#2-3-配置-NFS-服务端" class="headerlink" title="2.3 配置 NFS 服务端"></a>2.3 配置 NFS 服务端</h2><p>写入配置文件：注意！IP 地址和后面的小括号没有空格</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs01 ~]# cat &gt; &#x2F;etc&#x2F;exports &lt;&lt;EOF &#x2F;data 172.16.1.0&#x2F;24(rw,sync,all_squash) EOF</span><br></pre></td></tr></table></figure><p>创建数据目录和授权:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs01 ~]# mkdir &#x2F;data -p</span><br><span class="line">[root@nfs01 ~]# chown -R nfsnobody:nfsnobody &#x2F;data&#x2F;</span><br></pre></td></tr></table></figure><h2 id="2-4-启动-nfs"><a href="#2-4-启动-nfs" class="headerlink" title="2.4 启动 nfs"></a>2.4 启动 nfs</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs01 ~]# systemctl start nfs-server.service</span><br></pre></td></tr></table></figure><h2 id="2-5-检查命令"><a href="#2-5-检查命令" class="headerlink" title="2.5 检查命令"></a>2.5 检查命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs01 ~]# showmount -e 172.16.1.31</span><br><span class="line">Export list for 172.16.1.31:</span><br><span class="line">&#x2F;data 172.16.1.0&#x2F;24</span><br></pre></td></tr></table></figure><h2 id="2-6-加入开机自启动"><a href="#2-6-加入开机自启动" class="headerlink" title="2.6 加入开机自启动"></a>2.6 加入开机自启动</h2><p>在使用 NFS 服务进行文件共享之前，需要使用 RPC（Remote Procedure Call 远程过程调用服务将 NFS 服务器的 IP 地址和端口号信息发送给客户端。因此，在启动 NFS 服务之前，需要先重启并启用 rpcbind 服务程序，同时都加入开机自启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs01 ~]# systemctl enable rpcbind nfs-server</span><br><span class="line">[root@nfs01 ~]# systemctl restart rpcbind nfs-server</span><br></pre></td></tr></table></figure><h2 id="2-7-客户端挂载命令"><a href="#2-7-客户端挂载命令" class="headerlink" title="2.7 客户端挂载命令"></a>2.7 客户端挂载命令</h2><p>客户端安装 nfs 服务十分简单，只需要安装 nfs 软件包即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@backup ~]# yum install nfs-utils rpcbind -y</span><br></pre></td></tr></table></figure><p>安装完成后只需要启动 rpcbind，不需要启动 nfs</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@backup ~]# systemctl restart rpcbind</span><br></pre></td></tr></table></figure><p>使用 showmount 命令查看 nfs 共享信息查询 NFS 服务器的远程共享信息，其输出格式为 “共享的目录名称 允许使用客户端地址”。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@backup ~]# showmount -e 172.16.1.31</span><br><span class="line">Export list for 172.16.1.31:</span><br><span class="line">&#x2F;data 172.16.1.0&#x2F;24 </span><br></pre></td></tr></table></figure><p>挂载命令：创建挂载目录<br>在 NFS 客户端创建一个挂载目录，使用 mount 命令并结合 - t 参数，指定要挂载的文件系统的类型，并在命令后面写上服务器的 IP 地址，以及服务器上的共享目录，最后需要写上要挂载到本地系统 (客户端) 的目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@backup ~]# mkdir &#x2F;data -p</span><br><span class="line">[root@backup ~]# mount -t nfs 172.16.1.31:&#x2F;data &#x2F;data</span><br></pre></td></tr></table></figure><p>查看是否挂载成功：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@backup ~]# df -h</span><br><span class="line">文件系统           容量  已用  可用 已用% 挂载点</span><br><span class="line">&#x2F;dev&#x2F;sda3           18G  1.9G   17G   11% &#x2F;</span><br><span class="line">devtmpfs           480M     0  480M    0% &#x2F;dev</span><br><span class="line">tmpfs              489M     0  489M    0% &#x2F;dev&#x2F;shm</span><br><span class="line">tmpfs              489M   32M  458M    7% &#x2F;run</span><br><span class="line">tmpfs              489M     0  489M    0% &#x2F;sys&#x2F;fs&#x2F;cgroup</span><br><span class="line">&#x2F;dev&#x2F;sda1         1014M  110M  905M   11% &#x2F;boot</span><br><span class="line">tmpfs               98M     0   98M    0% &#x2F;run&#x2F;user&#x2F;0</span><br><span class="line">172.16.1.31:&#x2F;data   18G  1.9G   17G   11% &#x2F;data</span><br></pre></td></tr></table></figure><p>测试写入数据是否正常</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@backup ~]# echo &quot;123&quot; &gt; &#x2F;data&#x2F;123.txt</span><br><span class="line">[root@backup ~]# cat &#x2F;data&#x2F;123.txt </span><br><span class="line">123</span><br></pre></td></tr></table></figure><p>写入开机自动挂载</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@backup ~]# vim &#x2F;etc&#x2F;fstab </span><br><span class="line">[root@backup ~]# tail -1 &#x2F;etc&#x2F;fstab       </span><br><span class="line">172.16.1.31:&#x2F;data                         &#x2F;data                   nfs     defaults        0 0</span><br><span class="line">[root@backup ~]# mount -a</span><br><span class="line">[root@backup ~]# df -h</span><br><span class="line">文件系统           容量  已用  可用 已用% 挂载点</span><br><span class="line">&#x2F;dev&#x2F;sda3           18G  1.9G   17G   11% &#x2F;</span><br><span class="line">devtmpfs           480M     0  480M    0% &#x2F;dev</span><br><span class="line">tmpfs              489M     0  489M    0% &#x2F;dev&#x2F;shm</span><br><span class="line">tmpfs              489M   32M  458M    7% &#x2F;run</span><br><span class="line">tmpfs              489M     0  489M    0% &#x2F;sys&#x2F;fs&#x2F;cgroup</span><br><span class="line">&#x2F;dev&#x2F;sda1         1014M  110M  905M   11% &#x2F;boot</span><br><span class="line">tmpfs               98M     0   98M    0% &#x2F;run&#x2F;user&#x2F;0</span><br><span class="line">172.16.1.31:&#x2F;data   18G  1.9G   17G   11% &#x2F;data</span><br></pre></td></tr></table></figure><p>卸载命令：注意！卸载的时候如果提示”umount.nfs: /nfsdir: device is busy” 先切换到其他目录再卸载</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@backup ~]# umount &#x2F;data&#x2F;</span><br></pre></td></tr></table></figure><p>强制卸载命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@backup ~]# umount -rl &#x2F;data&#x2F;</span><br></pre></td></tr></table></figure><h2 id="2-8-NFS-权限验证"><a href="#2-8-NFS-权限验证" class="headerlink" title="2.8 NFS 权限验证"></a>2.8 NFS 权限验证</h2><p>2.8.1 验证 ro 权限<br>服务端配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs01 ~]# cat &#x2F;etc&#x2F;exports</span><br><span class="line">&#x2F;data 172.16.1.0&#x2F;24(ro,sync,all_squash)</span><br><span class="line">[root@nfs01 ~]# systemctl restart nfs-server.service</span><br><span class="line">[root@nfs01 ~]# showmount -e 172.16.1.31</span><br><span class="line">Export list for 172.16.1.31:</span><br><span class="line">&#x2F;data 172.16.1.0&#x2F;24</span><br></pre></td></tr></table></figure><p>客户端挂载：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@backup ~]# mount -t nfs 172.16.1.31:&#x2F;data &#x2F;data</span><br><span class="line">[root@backup ~]# df -h</span><br><span class="line">文件系统           容量  已用  可用 已用% 挂载点</span><br><span class="line">&#x2F;dev&#x2F;sda3           18G  1.9G   17G   11% &#x2F;</span><br><span class="line">devtmpfs           480M     0  480M    0% &#x2F;dev</span><br><span class="line">tmpfs              489M     0  489M    0% &#x2F;dev&#x2F;shm</span><br><span class="line">tmpfs              489M   38M  452M    8% &#x2F;run</span><br><span class="line">tmpfs              489M     0  489M    0% &#x2F;sys&#x2F;fs&#x2F;cgroup</span><br><span class="line">&#x2F;dev&#x2F;sda1         1014M  110M  905M   11% &#x2F;boot</span><br><span class="line">tmpfs               98M     0   98M    0% &#x2F;run&#x2F;user&#x2F;0</span><br><span class="line">172.16.1.31:&#x2F;data   18G  1.9G   17G   11% &#x2F;data</span><br></pre></td></tr></table></figure><p>测试读取：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@backup ~]# cat &#x2F;data&#x2F;123.txt </span><br><span class="line">123</span><br></pre></td></tr></table></figure><p>写入测试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@backup ~]# echo &quot;backup&quot; &gt; &#x2F;data&#x2F;123.txt </span><br><span class="line">-bash: &#x2F;data&#x2F;123.txt: 权限不够</span><br></pre></td></tr></table></figure><p>2.8.2 验证 all_squash、 anonuid、 anongid 权限<br>服务端配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs01 ~]# cat &#x2F;etc&#x2F;exports </span><br><span class="line">&#x2F;data 172.16.1.0&#x2F;24(rw,sync,all_squash,anonuid&#x3D;666,anongid&#x3D;666)</span><br></pre></td></tr></table></figure><p>服务端创建用户及授权：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs01 ~]# useradd -s &#x2F;sbin&#x2F;nologin -M -u 666 -g 666 www</span><br><span class="line">[root@nfs01 ~]# id www</span><br><span class="line">uid&#x3D;666(www) gid&#x3D;666(www) 组&#x3D;666(www)</span><br></pre></td></tr></table></figure><p>重启 NFS 服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs01 ~]# systemctl restart nfs-server.service</span><br></pre></td></tr></table></figure><p>更改目录授权：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs01 ~]# chown -R www:www &#x2F;data&#x2F;</span><br><span class="line">[root@nfs01 ~]# ls -ld &#x2F;data&#x2F;</span><br><span class="line">drwxr-xr-x 2 www www 35 7月  17 19:50 &#x2F;data&#x2F;</span><br></pre></td></tr></table></figure><p>客户端操作:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@backup ~]# mount -t nfs 172.16.1.31:&#x2F;data &#x2F;data</span><br><span class="line">[root@backup ~]# ls -ld &#x2F;data&#x2F;</span><br><span class="line">drwxr-xr-x 2 666 666 35 7月  17 19:50 &#x2F;data&#x2F;</span><br><span class="line">[root@backup ~]# ll &#x2F;data&#x2F;</span><br><span class="line">总用量 4</span><br><span class="line">-rw-r--r-- 1 666 666 0 7月  17 19:50 123</span><br><span class="line">-rw-r--r-- 1 666 666 9 7月  17 19:46 oldzhang.txt</span><br><span class="line">[root@backup ~]# echo &quot;oldzhangy&quot; &gt; &#x2F;data&#x2F;oldzhang.txt </span><br><span class="line">[root@backup ~]# cat &#x2F;data&#x2F;oldzhang.txt                    </span><br><span class="line">oldzhangy</span><br></pre></td></tr></table></figure><p>我们会发现依然可以写入，但是为了避免这种情况发生，建议客户端也创建相同 uid gid 的用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@backup ~]# groupadd -g 666 www</span><br><span class="line">[root@backup ~]# useradd -s &#x2F;sbin&#x2F;nologin -M -u 666 -g 666 www</span><br><span class="line">[root@backup ~]# id www</span><br><span class="line">uid&#x3D;666(www) gid&#x3D;666(www) 组&#x3D;666(www)</span><br><span class="line">[root@backup ~]# ls -ld &#x2F;data&#x2F;</span><br><span class="line">drwxr-xr-x 2 www www 35 7月  17 19:50 &#x2F;data&#x2F;</span><br><span class="line">[root@backup ~]# ll &#x2F;data&#x2F;    </span><br><span class="line">总用量 4</span><br><span class="line">-rw-r--r-- 1 www www  0 7月  17 19:50 123</span><br><span class="line">-rw-r--r-- 1 www www 10 7月  17 21:31 oldzhang.txt</span><br></pre></td></tr></table></figure><p>查看 nfs 的端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs01 ~]# rpcinfo -p</span><br><span class="line">   program vers proto   port  service</span><br><span class="line">    100000    4   tcp    111  portmapper</span><br><span class="line">    100000    3   tcp    111  portmapper</span><br><span class="line">    100000    2   tcp    111  portmapper</span><br><span class="line">    100000    4   udp    111  portmapper</span><br><span class="line">    100000    3   udp    111  portmapper</span><br><span class="line">    100000    2   udp    111  portmapper</span><br><span class="line">    100024    1   udp  43177  status</span><br><span class="line">    100024    1   tcp  36750  status</span><br><span class="line">    100003    3   tcp   2049  nfs</span><br><span class="line">    100003    4   tcp   2049  nfs</span><br><span class="line">    100227    3   tcp   2049  nfs_acl</span><br><span class="line">    100003    3   udp   2049  nfs</span><br><span class="line">    100003    4   udp   2049  nfs</span><br><span class="line">    100227    3   udp   2049  nfs_acl</span><br><span class="line">    100021    1   udp  41388  nlockmgr</span><br><span class="line">    100021    3   udp  41388  nlockmgr</span><br><span class="line">    100021    4   udp  41388  nlockmgr</span><br><span class="line">    100021    1   tcp  43678  nlockmgr</span><br><span class="line">    100021    3   tcp  43678  nlockmgr</span><br><span class="line">    100021    4   tcp  43678  nlockmgr&#96;&#96;&#96;</span><br></pre></td></tr></table></figure><p>firewall 防火墙配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --add-service&#x3D;nfs --permanent</span><br><span class="line">firewall-cmd --add-service&#x3D;mountd --permanent</span><br><span class="line">firewall-cmd --add-service&#x3D;rpc-bind --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><p>iptables 防火墙配置<br>参考博客<br><a href="https://www.cnblogs.com/xiangsikai/p/10297233.html">https://www.cnblogs.com/xiangsikai/p/10297233.html</a><br>启动 NFS 会开启如下端口：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1）portmapper 端口：111 udp&#x2F;tcp；</span><br><span class="line">2）nfs&#x2F;nfs_acl 端口：2049 udp&#x2F;tcp；</span><br><span class="line">3）mountd 端口：&quot;32768--65535&quot; udp&#x2F;tcp</span><br><span class="line">4）nlockmgr 端口：&quot;32768--65535&quot; udp&#x2F;tcp</span><br></pre></td></tr></table></figure><p>系统 RPC 服务在 nfs 服务启动时默认会给 mountd 和 nlockmgr 动态选取一个随机端口来进行通讯。<br>1. 查看 NFS 启动后的端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs01 &#x2F;opt&#x2F;sersync]# rpcinfo -p</span><br><span class="line">   program vers proto   port  service</span><br><span class="line">    100000    4   tcp    111  portmapper</span><br><span class="line">    100000    3   tcp    111  portmapper</span><br><span class="line">    100000    2   tcp    111  portmapper</span><br><span class="line">    100000    4   udp    111  portmapper</span><br><span class="line">    100000    3   udp    111  portmapper</span><br><span class="line">    100000    2   udp    111  portmapper</span><br><span class="line">    100024    1   udp  43177  status</span><br><span class="line">    100024    1   tcp  36750  status</span><br><span class="line">    100003    3   tcp   2049  nfs</span><br><span class="line">    100003    4   tcp   2049  nfs</span><br><span class="line">    100227    3   tcp   2049  nfs_acl</span><br><span class="line">    100003    3   udp   2049  nfs</span><br><span class="line">    100003    4   udp   2049  nfs</span><br><span class="line">    100227    3   udp   2049  nfs_acl</span><br><span class="line">    100021    1   udp  41388  nlockmgr</span><br><span class="line">    100021    3   udp  41388  nlockmgr</span><br><span class="line">    100021    4   udp  41388  nlockmgr</span><br><span class="line">    100021    1   tcp  43678  nlockmgr</span><br><span class="line">    100021    3   tcp  43678  nlockmgr</span><br><span class="line">    100021    4   tcp  43678  nlockmgr</span><br></pre></td></tr></table></figure><p>2. 将随机的端口号设置固定</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs01 ~]# vim &#x2F;etc&#x2F;sysconfig&#x2F;nfs</span><br><span class="line">[root@nfs01 ~]# tail -5 &#x2F;etc&#x2F;sysconfig&#x2F;nfs</span><br><span class="line">RQUOTAD_PORT&#x3D;4001</span><br><span class="line">LOCKD_TCPPORT&#x3D;4002</span><br><span class="line">LOCKD_UDPPORT&#x3D;4002</span><br><span class="line">MOUNTD_PORT&#x3D;4003</span><br><span class="line">STATD_PORT&#x3D;4004</span><br></pre></td></tr></table></figure><p>3. 重启 nfs 和 rpc 服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs01 ~]# systemctl restart rpcbind.service nfs-server.service</span><br></pre></td></tr></table></figure><p>4. 再次查看端口信息，发现端口号已经固定了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs01 ~]# rpcinfo -p</span><br><span class="line">   program vers proto   port  service</span><br><span class="line">    100000    4   tcp    111  portmapper</span><br><span class="line">    100000    3   tcp    111  portmapper</span><br><span class="line">    100000    2   tcp    111  portmapper</span><br><span class="line">    100000    4   udp    111  portmapper</span><br><span class="line">    100000    3   udp    111  portmapper</span><br><span class="line">    100000    2   udp    111  portmapper</span><br><span class="line">    100024    1   udp  43177  status</span><br><span class="line">    100024    1   tcp  36750  status</span><br><span class="line">    100005    1   udp   4003  mountd</span><br><span class="line">    100005    1   tcp   4003  mountd</span><br><span class="line">    100005    2   udp   4003  mountd</span><br><span class="line">    100005    2   tcp   4003  mountd</span><br><span class="line">    100005    3   udp   4003  mountd</span><br><span class="line">    100005    3   tcp   4003  mountd</span><br><span class="line">    100003    3   tcp   2049  nfs</span><br><span class="line">    100003    4   tcp   2049  nfs</span><br><span class="line">    100227    3   tcp   2049  nfs_acl</span><br><span class="line">    100003    3   udp   2049  nfs</span><br><span class="line">    100003    4   udp   2049  nfs</span><br><span class="line">    100227    3   udp   2049  nfs_acl</span><br><span class="line">    100021    1   udp   4002  nlockmgr</span><br><span class="line">    100021    3   udp   4002  nlockmgr</span><br><span class="line">    100021    4   udp   4002  nlockmgr</span><br><span class="line">    100021    1   tcp   4002  nlockmgr</span><br><span class="line">    100021    3   tcp   4002  nlockmgr</span><br><span class="line">    100021    4   tcp   4002  nlockmgr</span><br></pre></td></tr></table></figure><p>5. 设置 iptables</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-A INPUT -p tcp -m tcp --dport 111 -j ACCEPT</span><br><span class="line">-A INPUT -p udp -m udp --dport 111 -j ACCEPT</span><br><span class="line">-A INPUT -p tcp -m tcp --dport 2049 -j ACCEPT</span><br><span class="line">-A INPUT -p udp -m udp --dport 2049 -j ACCEPT</span><br><span class="line">-A INPUT -p tcp -m tcp --dport 4001:4004 -j ACCEPT</span><br><span class="line">-A INPUT -p udp -m udp --dport 4001:4004 -j ACCEPT</span><br></pre></td></tr></table></figure><p>6. 保存配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iptables-save </span><br><span class="line">iptables -nL</span><br></pre></td></tr></table></figure><p>NFS 故障案例<br>如果设置了开机自启动，但是系统启动的时候 NFS 并没有提供服务，就会导致开机自检的时候卡在挂在那一步<br>开机启动时添加 rd.break</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ctrl+x</span><br><span class="line">mount -o remount,rw &#x2F;sysroot&#x2F;</span><br><span class="line">chroot &#x2F;sysroot&#x2F;</span><br></pre></td></tr></table></figure><h1 id="第-3-章-NFS-小结"><a href="#第-3-章-NFS-小结" class="headerlink" title="第 3 章 NFS 小结"></a>第 3 章 NFS 小结</h1><p>NFS 存储优点</p><blockquote><p>1.NFS 文件系统简单易用、方便部署、数据可靠、服务稳定、满足中小企业需求。<br>2.NFS 文件系统内存放的数据都在文件系统之上，所有数据都是能看得见</p></blockquote><p>NFS 存储局限</p><blockquote><p>1. 存在单点故障，如果构建高可用维护麻烦 web-&gt;nfs ()-&gt;backup<br>2.NFS 数据明文，并不对数据做任何校验。<br>3. 客户端挂载 NFS 服务没有密码验证，安全性一般 (内网使用)</p></blockquote><p>NFS 应用建议</p><blockquote><p>1. 生产场景应将静态数据尽可能往前端推，减少后端存储压力<br>2. 必须将存储里的静态资源通过 CDN 缓存 jpgpngmp4avicssjs<br>3. 如果没有缓存或架构本身历史遗留问题太大，在多存储也无用</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NFS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker 使用命令</title>
      <link href="/posts/8141/"/>
      <url>/posts/8141/</url>
      
        <content type="html"><![CDATA[<h1 id="Docket-使用命令展开目录"><a href="#Docket-使用命令展开目录" class="headerlink" title="Docket 使用命令展开目录"></a><strong>Docket 使用命令</strong>展开目录</h1><hr><h2 id="查展开目录"><a href="#查展开目录" class="headerlink" title="查展开目录"></a><strong>查</strong>展开目录</h2><p><strong># 查询当前可以下载的镜像</strong></p><ul><li><strong>docker search httpd</strong></li><li>　　　　<strong>|_ NAME: 镜像仓库源的名称</strong></li><li>　　　　<strong>|_ DESCRIPTION: 镜像的描述</strong></li><li>　　　　<strong>|_ OFFICIAL: 是否 docker 官方发布</strong></li></ul><hr><p><strong># 镜像查看</strong></p><ul><li><strong>docker images</strong></li><li>　　　　<strong>|_ REPOSITORY：表示镜像的仓库源</strong></li><li>　　　　<strong>|_ TAG：镜像的标签</strong></li><li>　　　　<strong>|_ IMAGE ID：镜像 ID</strong></li><li>　　　　<strong>|_ CREATED：镜像创建时间</strong></li><li>　　　　<strong>|_ SIZE：镜像大小</strong></li></ul><hr><ul><li><strong># 深入帮助</strong></li><li><strong>docker command –help</strong></li></ul><hr><ul><li><strong># 概要信息</strong></li><li><strong>docker info</strong></li></ul><hr><ul><li><strong># 列出本机的所有 image 文件。</strong></li><li><strong>docker image ls</strong></li></ul><hr><ul><li><strong># 列出本机正在运行的容器</strong></li><li><strong>docker container ls</strong></li><li><strong>docker container ps</strong></li></ul><hr><ul><li><strong># 列出本机所有容器，包括终止运行的容器</strong></li><li><strong>docker container ls –all</strong></li></ul><hr><ul><li><strong># 容器查看，即进程查看</strong></li><li><strong>docker ps -a</strong></li></ul><hr><ul><li><strong># 查看容器输出内容</strong></li><li><strong>docker logs ID/NAMES</strong></li></ul><hr><ul><li><strong># 查看服务日志 类似 tail -f</strong></li><li><strong>docker logs -f ID/NAMES</strong></li></ul><hr><ul><li><strong># 查看指定容器端口</strong></li><li><strong>docker port ID/NAMES</strong></li></ul><hr><ul><li><strong># 查询最后一次创建的容器</strong></li><li><strong>docker ps -l</strong></li></ul><hr><ul><li><strong># 查看容器内启用的线程</strong></li><li><strong>docker top ID/NAMES</strong></li></ul><hr><ul><li><strong># 查看容器配置参数</strong></li><li><strong>docker inspect ID/NAMES</strong></li></ul><hr><ul><li><strong># 查看已创建网络环境</strong></li><li><strong>docker network ls</strong></li></ul><hr><ul><li><strong># 查看网络属性信息</strong></li><li><strong>docker network inspect ID/KEY</strong></li></ul><hr><ul><li><strong># 查看持久化数据名称</strong></li><li><strong>docker volume ls</strong></li><li><strong># 查看卷标详细信息</strong></li><li><strong>docker volume inspect 名称</strong></li></ul><hr><h2 id="改展开目录"><a href="#改展开目录" class="headerlink" title="改展开目录"></a><strong>改</strong>展开目录</h2><ul><li><strong># 设置镜像标签，接着，为本地的 image 标注用户名和版本。</strong></li><li><strong>docker image tag [imageName] [username]/[repository]:</strong></li><li><strong>docker tag 860c279d2fec runoob/centos:dev</strong></li><li><strong>docker image tag koa-demos:0.0.1 ruanyf/koa-demos:0.0.1</strong></li></ul><hr><h2 id="删展开目录"><a href="#删展开目录" class="headerlink" title="删展开目录"></a><strong>删</strong>展开目录</h2><ul><li><strong># 删除容器</strong></li><li><strong>docker rm ID/NAMES</strong></li></ul><hr><ul><li><strong># 删除 image 文件</strong></li><li><strong>docker image rm [imageName]</strong></li></ul><hr><ul><li><strong># 删除容器文件</strong></li><li><strong>docker container rm [containerID]</strong></li></ul><hr><ul><li><strong># 删除已创建网络</strong></li><li><strong>docker network rm [containerID]</strong></li></ul><hr><ul><li><strong># 删除所有未使用的网络</strong></li><li><strong>docker network prune -f</strong></li></ul><hr><ul><li><strong># docker container run 命令的 –rm 参数，在容器终止运行后自动删除容器文件。</strong></li><li><strong>docker container run –rm -p 8000:3000 -it koa-demo /bin/bash</strong></li></ul><hr><ul><li><strong># 删除所有容器</strong></li><li><strong>docker rm -f $(docker ps -qa)</strong></li></ul><hr><h2 id="执行方式展开目录"><a href="#执行方式展开目录" class="headerlink" title="执行方式展开目录"></a><strong>执行方式</strong>展开目录</h2><ul><li><strong># 执行一个镜像 run 加参数 名称：镜像标签 (自定义:latest)。</strong></li><li><strong>docker run -t -i ubuntu:15.10 /bin/bash</strong></li><li>　　　　<strong>|_ -i:–interactive=false: 打开 STDIN，用于控制台交互。</strong></li><li>　　　　<strong>|_ -t:–tty=false: 分配 tty 设备，该可以支持终端登录，默认为 false。</strong></li><li>　　　　<strong>|_ -d: 让容器在后台运行。</strong></li><li>　　　　<strong>|_ -p: 将容器内部使用的网络端口映射到我们使用的主机上。</strong></li><li>　　　　<strong>|_ 注：如果你不指定一个镜像的版本标签，例如你只使用 ubuntu，docker 将默认使用 ubuntu:latest 镜像。</strong></li></ul><hr><ul><li><strong># 执行 nginx 应用。</strong></li><li><strong>docker run -d -p 8080:80 nginx</strong></li></ul><hr><ul><li><strong># 关闭 web 服务端口</strong></li><li><strong>docker stop ID/NAMES</strong></li></ul><hr><ul><li><strong># 开启 web 服务端口</strong></li><li><strong>docker start ID/NAMES</strong></li></ul><hr><ul><li><strong># 根据容器 ID 进入到指定容器。要有 - i 参数。</strong></li><li><strong>docker attach ID/NAMES</strong></li></ul><hr><ul><li><strong># 通过此命令进入未加入 - it 参数的已存在容器中添加 - i-t 参数进入</strong></li><li><strong>docker container exec -it [containerID] /bin/bash</strong></li></ul><hr><ul><li><strong># 停止容器运行， SIGTERM 信号以后，可以自行进行收尾清理工作，但也可以不理会这个信号</strong></li><li><strong>bash container stop [containerID]</strong></li></ul><hr><ul><li><strong># SIGKILL 信号，就会强行立即终止，那些正在进行中的操作会全部丢失。</strong></li><li><strong>docker container kill</strong></li></ul><hr><ul><li><strong># 终止容器</strong></li><li><strong>docker container kill [containID]</strong></li></ul><hr><ul><li><strong># 启动已经生成或者已经停止的容器</strong></li><li><strong>docker container start [containerID]</strong></li></ul><hr><ul><li><strong># 容器内使用命令，退出容器</strong></li><li><strong>exit</strong></li></ul><hr><h2 id="其他展开目录"><a href="#其他展开目录" class="headerlink" title="其他展开目录"></a><strong>其他</strong>展开目录</h2><ul><li><strong># 下载，安装 nginx 测试服务</strong></li><li><strong>docker pull nginx</strong></li></ul><hr><ul><li><strong># 通过此条命令将，容器内的文件 copy 到原服务器内的当前目录下。</strong></li><li><strong>docker container cp [containID]:[/path/to/file] .</strong></li></ul><hr><ul><li><strong># 去 hub.docker.com 或 cloud.docker.com 注册一个账户。然后，用下面的命令登录。</strong></li><li><strong>docker login</strong></li></ul><hr><ul><li><strong># 最后，发布 image 文件。</strong></li><li><strong>docker push [username]/[repository]:</strong></li></ul><hr><ul><li><strong># 构建容器镜像 -t 指定 image 名称，当前目录需要有 Dockerfile 文件。</strong></li><li><strong>docker build -t [自定义名称]:[版本] .</strong></li></ul><hr><ul><li><strong># 生成容器</strong></li><li><strong>docker container run -p 8000:3000 -it koa-demo /bin/bash</strong></li><li> <strong>|_ -p 参数：容器的 3000 端口映射到本机的 8000 端口。</strong></li><li> <strong>|_ -it 参数：容器的 Shell 映射到当前的 Shell，然后你在本机窗口输入的命令，就会传入容器。</strong></li><li> <strong>|_ koa-demo:0.0.1：image 文件的名字（如果有标签，还需要提供标签，默认是 latest 标签）。</strong></li><li> <strong>|_ /bin/bash：容器启动以后，内部第一个执行的命令。这里是启动 Bash，保证用户可以使用 Shell。</strong></li></ul><hr><ul><li><strong># 打包镜像</strong></li><li><strong>docker save eb40dcf64078&gt; /root/mydjango-save-1016.tar</strong></li><li><strong># 导入镜像</strong></li><li><strong>docker load -i /root/mydjango-save-1016.tar</strong></li><li><strong>docker load &lt; /root/mydjango-save-1016.tar</strong></li><li><strong># 打 tag</strong></li><li><strong>docker tag *<em>eb40dcf64078*</em> runoob/centos:dev</strong></li></ul><hr><h2 id="增展开目录"><a href="#增展开目录" class="headerlink" title="增展开目录"></a><strong>增</strong>展开目录</h2><ul><li><strong># 创建 NFS 数据卷</strong></li><li><strong>docker volume create</strong></li></ul><p><strong>创建命令</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker volume create --driver local \</span><br><span class="line">&gt; --opt type&#x3D;nfs \</span><br><span class="line">&gt; --opt o&#x3D;addr&#x3D;服务端IP,vers&#x3D;4,soft,timeo&#x3D;180,bg,tcp,rw \</span><br><span class="line">&gt; --opt device&#x3D;服务端IP:&#x2F;data</span><br></pre></td></tr></table></figure><p>自定义名称</p><hr><ul><li><strong># 创建 config 配置文件</strong></li><li><strong>docker config create 创建配置文件名称 本地配置文件路径名称</strong></li></ul><h1 id="Docker-run-命令参数展开目录"><a href="#Docker-run-命令参数展开目录" class="headerlink" title="Docker run 命令参数展开目录"></a>Docker run 命令参数展开目录</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">docker run [OPTIONS] IMAGE [COMMAND] [ARG...]   </span><br><span class="line">   </span><br><span class="line">  -d, --detach&#x3D;false         指定容器运行于前台还是后台，默认为false    </span><br><span class="line">  -i, --interactive&#x3D;false    打开STDIN，用于控制台交互   </span><br><span class="line">  -t, --tty&#x3D;false            分配tty设备，该可以支持终端登录，默认为false   </span><br><span class="line">  -u, --user&#x3D;&quot;&quot;              指定容器的用户   </span><br><span class="line">  -a, --attach&#x3D;[]            登录容器（必须是以docker run -d启动的容器） </span><br><span class="line">  -w, --workdir&#x3D;&quot;&quot;           指定容器的工作目录  </span><br><span class="line">  -c, --cpu-shares&#x3D;0         设置容器CPU权重，在CPU共享场景使用   </span><br><span class="line">  -e, --env&#x3D;[]               指定环境变量，容器中可以使用该环境变量   </span><br><span class="line">  -m, --memory&#x3D;&quot;&quot;            指定容器的内存上限   </span><br><span class="line">  -P, --publish-all&#x3D;false    指定容器暴露的端口   </span><br><span class="line">  -p, --publish&#x3D;[]           指定容器暴露的端口  </span><br><span class="line">  -h, --hostname&#x3D;&quot;&quot;          指定容器的主机名   </span><br><span class="line">  -v, --volume&#x3D;[]            给容器挂载存储卷，挂载到容器的某个目录   </span><br><span class="line">  --volumes-from&#x3D;[]          给容器挂载其他容器上的卷，挂载到容器的某个目录 </span><br><span class="line">  --cap-add&#x3D;[]               添加权限，权限清单详见：http:&#x2F;&#x2F;linux.die.net&#x2F;man&#x2F;7&#x2F;capabilities   </span><br><span class="line">  --cap-drop&#x3D;[]              删除权限，权限清单详见：http:&#x2F;&#x2F;linux.die.net&#x2F;man&#x2F;7&#x2F;capabilities   </span><br><span class="line">  --cidfile&#x3D;&quot;&quot;               运行容器后，在指定文件中写入容器PID值，一种典型的监控系统用法   </span><br><span class="line">  --cpuset&#x3D;&quot;&quot;                设置容器可以使用哪些CPU，此参数可以用来容器独占CPU   </span><br><span class="line">  --device&#x3D;[]                添加主机设备给容器，相当于设备直通   </span><br><span class="line">  --dns&#x3D;[]                   指定容器的dns服务器   </span><br><span class="line">  --dns-search&#x3D;[]            指定容器的dns搜索域名，写入到容器的&#x2F;etc&#x2F;resolv.conf文件   </span><br><span class="line">  --entrypoint&#x3D;&quot;&quot;            覆盖image的入口点   </span><br><span class="line">  --env-file&#x3D;[]              指定环境变量文件，文件格式为每行一个环境变量   </span><br><span class="line">  --expose&#x3D;[]                指定容器暴露的端口，即修改镜像的暴露端口   </span><br><span class="line">  --link&#x3D;[]                  指定容器间的关联，使用其他容器的IP、env等信息   </span><br><span class="line">  --lxc-conf&#x3D;[]              指定容器的配置文件，只有在指定--exec-driver&#x3D;lxc时使用   </span><br><span class="line">  --name&#x3D;&quot;&quot;                  指定容器名字，后续可以通过名字进行容器管理，links特性需要使用名字   </span><br><span class="line">  --net&#x3D;&quot;bridge&quot;             容器网络设置: </span><br><span class="line">                                bridge 使用docker daemon指定的网桥      </span><br><span class="line">                                host    &#x2F;&#x2F;容器使用主机的网络   </span><br><span class="line">                                container:NAME_or_ID  &gt;&#x2F;&#x2F;使用其他容器的网路，共享IP和PORT等网络资源   </span><br><span class="line">                                none 容器使用自己的网络（类似--net&#x3D;bridge），但是不进行配置  </span><br><span class="line">  --privileged&#x3D;false         指定容器是否为特权容器，特权容器拥有所有的capabilities   </span><br><span class="line">  --restart&#x3D;&quot;no&quot;             指定容器停止后的重启策略: </span><br><span class="line">                                no：容器退出时不重启   </span><br><span class="line">                                on-failure：容器故障退出（返回值非零）时重启  </span><br><span class="line">                                always：容器退出时总是重启   </span><br><span class="line">  --rm&#x3D;false                 指定容器停止后自动删除容器(不支持以docker run -d启动的容器)   </span><br><span class="line">  --sig-proxy&#x3D;true           设置由代理接受并处理信号，但是SIGCHLD、SIGSTOP和SIGKILL不能被代理</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Docker+K8s </category>
          
          <category> 云计算 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx常用模块</title>
      <link href="/posts/45711/"/>
      <url>/posts/45711/</url>
      
        <content type="html"><![CDATA[<h1 id="第一章目录索引展开目录"><a href="#第一章目录索引展开目录" class="headerlink" title="第一章目录索引展开目录"></a>第一章目录索引展开目录</h1><h2 id="1-1应用场景展开目录"><a href="#1-1应用场景展开目录" class="headerlink" title="1.1应用场景展开目录"></a>1.1应用场景展开目录</h2><p>可以使用nginx作为简易的文件下载服务器</p><h2 id="1-2参数说明展开目录"><a href="#1-2参数说明展开目录" class="headerlink" title="1.2参数说明展开目录"></a>1.2参数说明展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Syntax: autoindex on | off;</span><br><span class="line">Default: autoindex off;</span><br><span class="line">Context: http, server, location</span><br><span class="line"></span><br><span class="line"># autoindex 常用参数</span><br><span class="line">autoindex_exact_size off;</span><br><span class="line">默认为 on， 显示出文件的确切大小，单位是 bytes。</span><br><span class="line">修改为 off，显示出文件的大概大小，单位是 kB 或者 MB 或者 GB。</span><br><span class="line"></span><br><span class="line">autoindex_localtime on;</span><br><span class="line">默认为 off，显示的文件时间为 GMT 时间。</span><br><span class="line">修改为 on， 显示的文件时间为文件的服务器时间。</span><br><span class="line"></span><br><span class="line">charset utf-8,gbk;</span><br><span class="line">默认中文目录乱码，添加上解决乱码</span><br></pre></td></tr></table></figure><h2 id="1-3配置文件展开目录"><a href="#1-3配置文件展开目录" class="headerlink" title="1.3配置文件展开目录"></a>1.3配置文件展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html]# cat &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;download.conf </span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name download.xoxoyun.com;</span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line">        root &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F;download;</span><br><span class="line">        charset utf-8,gbk;</span><br><span class="line">        autoindex on;</span><br><span class="line">        autoindex_localtime on;</span><br><span class="line">        autoindex_exact_size off;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[root@web01 &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html]# nginx -t</span><br><span class="line">nginx: the configuration file &#x2F;etc&#x2F;nginx&#x2F;nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file &#x2F;etc&#x2F;nginx&#x2F;nginx.conf test is successful</span><br><span class="line">[root@web01 &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html]# systemctl restart nginx</span><br></pre></td></tr></table></figure><h2 id="1-4创建测试数据展开目录"><a href="#1-4创建测试数据展开目录" class="headerlink" title="1.4创建测试数据展开目录"></a>1.4创建测试数据展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F;download&#x2F;&#123;1..10&#125;.txt</span><br></pre></td></tr></table></figure><h2 id="1-5访问页面展开目录"><a href="#1-5访问页面展开目录" class="headerlink" title="1.5访问页面展开目录"></a>1.5访问页面展开目录</h2><p><img src="https://www.kococ.cn/usr/uploads/2020/02/832404702.png" alt="1.png" title="1.png"></p><h1 id="第二章状态监控展开目录"><a href="#第二章状态监控展开目录" class="headerlink" title="第二章状态监控展开目录"></a>第二章状态监控展开目录</h1><h2 id="2-1状态分支解释展开目录"><a href="#2-1状态分支解释展开目录" class="headerlink" title="2.1状态分支解释展开目录"></a>2.1状态分支解释展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Active connections # 当前活动的连接数</span><br><span class="line">accepts # 当前的总连接数 TCP</span><br><span class="line">handled # 成功的连接数 TCP</span><br><span class="line">requests # 总的 http 请求数</span><br><span class="line">Reading # 请求</span><br><span class="line">Writing # 响应</span><br><span class="line">Waiting # 等待的请求数，开启了 keepalive</span><br><span class="line"># 注意, 一次 TCP 的连接，可以发起多次 http 的请求, 如下参数可配置进行验证</span><br><span class="line">keepalive_timeout 0; # 类似于关闭长连接</span><br><span class="line">keepalive_timeout 65; # 65s 没有活动则断开连接</span><br></pre></td></tr></table></figure><h2 id="2-2配置文件展开目录"><a href="#2-2配置文件展开目录" class="headerlink" title="2.2配置文件展开目录"></a>2.2配置文件展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# cat &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;status.conf </span><br><span class="line">server &#123;</span><br><span class="line">   listen 80;</span><br><span class="line">   server_name  status.xoxo.com;</span><br><span class="line">   stub_status on;</span><br><span class="line">   access_log off;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-3访问测试展开目录"><a href="#2-3访问测试展开目录" class="headerlink" title="2.3访问测试展开目录"></a>2.3访问测试展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# curl status.xoxo.com</span><br><span class="line">Active connections: 1 </span><br><span class="line">server accepts handled requests</span><br><span class="line"> 4 4 6 </span><br><span class="line">Reading: 0 Writing: 1 Waiting: 0 </span><br></pre></td></tr></table></figure><h1 id="第三章访问控制展开目录"><a href="#第三章访问控制展开目录" class="headerlink" title="第三章访问控制展开目录"></a>第三章访问控制展开目录</h1><h2 id="3-1基于IP的访问控制展开目录"><a href="#3-1基于IP的访问控制展开目录" class="headerlink" title="3.1基于IP的访问控制展开目录"></a>3.1基于IP的访问控制展开目录</h2><h3 id="3-1-1配置语法展开目录"><a href="#3-1-1配置语法展开目录" class="headerlink" title="3.1.1配置语法展开目录"></a>3.1.1配置语法展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#允许配置语法</span><br><span class="line">Syntax: allow address | CIDR | unix: | all;</span><br><span class="line">Default: —</span><br><span class="line">Context: http, server, location, limit_except</span><br><span class="line"></span><br><span class="line">#拒绝配置语法</span><br><span class="line">Syntax: deny address | CIDR | unix: | all;</span><br><span class="line">Default: —</span><br><span class="line">Context: http, server, location, limit_except</span><br></pre></td></tr></table></figure><h3 id="3-1-2配置案例1：拒绝windwos访问www域名展开目录"><a href="#3-1-2配置案例1：拒绝windwos访问www域名展开目录" class="headerlink" title="3.1.2配置案例1：拒绝windwos访问www域名展开目录"></a>3.1.2配置案例1：拒绝windwos访问www域名展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# cat &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;01-www.conf </span><br><span class="line">server   &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  www.xoxo.com;</span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line">        root   &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F;www;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">        deny 10.0.1.1;</span><br><span class="line">        allow all;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-1-3-Windows访问测试403-展开目录"><a href="#3-1-3-Windows访问测试403-展开目录" class="headerlink" title="3.1.3 Windows访问测试403 展开目录"></a>3.1.3 Windows访问测试403 展开目录</h3><h3 id="3-1-4使用curl访问测试ok-展开目录"><a href="#3-1-4使用curl访问测试ok-展开目录" class="headerlink" title="3.1.4使用curl访问测试ok 展开目录"></a>3.1.4使用curl访问测试ok 展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# curl www.xoxoyun.com</span><br><span class="line">www</span><br></pre></td></tr></table></figure><h3 id="3-1-5配置案例2：只允许Windows访问，其他全部拒绝展开目录"><a href="#3-1-5配置案例2：只允许Windows访问，其他全部拒绝展开目录" class="headerlink" title="3.1.5配置案例2：只允许Windows访问，其他全部拒绝展开目录"></a>3.1.5配置案例2：只允许Windows访问，其他全部拒绝展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# cat &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;01-www.conf    </span><br><span class="line">server   &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  www.xoxo.com;</span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line">        root   &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F;www;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">        allow 10.0.1.1;</span><br><span class="line">        deny all;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-1-6-Windows访问测试ok-展开目录"><a href="#3-1-6-Windows访问测试ok-展开目录" class="headerlink" title="3.1.6 Windows访问测试ok 展开目录"></a>3.1.6 Windows访问测试ok 展开目录</h3><h3 id="3-1-7-curl访问测试403-展开目录"><a href="#3-1-7-curl访问测试403-展开目录" class="headerlink" title="3.1.7 curl访问测试403 展开目录"></a>3.1.7 curl访问测试403 展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# curl www.xoxoyun.com             </span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;&lt;title&gt;403 Forbidden&lt;&#x2F;title&gt;&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;center&gt;&lt;h1&gt;403 Forbidden&lt;&#x2F;h1&gt;&lt;&#x2F;center&gt;</span><br><span class="line">&lt;hr&gt;&lt;center&gt;nginx&#x2F;1.16.0&lt;&#x2F;center&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h2 id="3-2基于用户认证的访问控制展开目录"><a href="#3-2基于用户认证的访问控制展开目录" class="headerlink" title="3.2基于用户认证的访问控制展开目录"></a>3.2基于用户认证的访问控制展开目录</h2><h3 id="3-2-1配置语法展开目录"><a href="#3-2-1配置语法展开目录" class="headerlink" title="3.2.1配置语法展开目录"></a>3.2.1配置语法展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#访问提示字符串</span><br><span class="line">Syntax: auth_basic string| off;</span><br><span class="line">Default: auth_basic off;</span><br><span class="line">Context: http, server, location, limit_except</span><br><span class="line"></span><br><span class="line">#账户密码文件</span><br><span class="line">Syntax: auth_basic_user_file file;</span><br><span class="line">Default: -</span><br><span class="line">Context: http, server, location, limit_except</span><br></pre></td></tr></table></figure><h3 id="3-2-2配置文件展开目录"><a href="#3-2-2配置文件展开目录" class="headerlink" title="3.2.2配置文件展开目录"></a>3.2.2配置文件展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#1.需要安装 httpd-tools，该包中携带了 htpasswd 命令</span><br><span class="line">[root@web01 ~]# yum install httpd-tools -y</span><br><span class="line">#2.创建新的密码文件, -c 创建新文件 -b 允许命令行输入密码</span><br><span class="line">[root@web01 ~]# htpasswd -b -c &#x2F;etc&#x2F;nginx&#x2F;auth_conf xoxoyun xoxoyun</span><br><span class="line">Adding password for user xoxoyun</span><br><span class="line">#3.nginx 配置调用</span><br><span class="line">[root@web01 ~]# cat &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;01-www.conf </span><br><span class="line">server   &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  www.xoxo.com;</span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line">        auth_basic &quot;Auth access Blog Input your Passwd!&quot;;</span><br><span class="line">        auth_basic_user_file auth_conf;</span><br><span class="line">        root   &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F;www;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-2-3访问测试展开目录"><a href="#3-2-3访问测试展开目录" class="headerlink" title="3.2.3访问测试展开目录"></a>3.2.3访问测试展开目录</h3><h1 id="第四章访问限制展开目录"><a href="#第四章访问限制展开目录" class="headerlink" title="第四章访问限制展开目录"></a>第四章访问限制展开目录</h1><p>对于大流量恶意的攻击访问，会带来大量的浪费，服务器压力，影响业务，经常考虑对同一个ip的连接数，请求数，进行限制。<br>ngx_http_limit_conn_module模块可以根据定义的键来限制每个键值的连接数，如同一个IP来源的连接数。<br>limit_conn_module连接频率限制<br>limit_req_module请求频率限制</p><h2 id="4-1请求限制展开目录"><a href="#4-1请求限制展开目录" class="headerlink" title="4.1请求限制展开目录"></a>4.1请求限制展开目录</h2><h3 id="4-1-1配置语法展开目录"><a href="#4-1-1配置语法展开目录" class="headerlink" title="4.1.1配置语法展开目录"></a>4.1.1配置语法展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#模块名 ngx_http_limit_req_module</span><br><span class="line">Syntax: limit_req_zone key zone&#x3D;name:size rate&#x3D;rate;</span><br><span class="line">Default: —</span><br><span class="line">Context: http</span><br><span class="line">Syntax: limit_conn zone number [burst&#x3D;number] [nodelay];</span><br><span class="line">Default: —</span><br><span class="line">Context: http, server, location</span><br></pre></td></tr></table></figure><h3 id="4-1-2配置文件展开目录"><a href="#4-1-2配置文件展开目录" class="headerlink" title="4.1.2配置文件展开目录"></a>4.1.2配置文件展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">      limit_req_zone $binary_remote_addr zone&#x3D;req_zone:10m rate&#x3D;1r&#x2F;s;</span><br><span class="line">&#125;</span><br><span class="line">[root@web01 ~]# cat &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;01-www.conf </span><br><span class="line">server   &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  www.xoxoyun.com;</span><br><span class="line">    limit_req zone&#x3D;req_zone burst&#x3D;3 nodelay;</span><br><span class="line">    access_log  &#x2F;var&#x2F;log&#x2F;nginx&#x2F;www.access.log  main;</span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line">        root   &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F;www;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-1-3访问测试展开目录"><a href="#4-1-3访问测试展开目录" class="headerlink" title="4.1.3访问测试展开目录"></a>4.1.3访问测试展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# yum install httpd-tools -y</span><br><span class="line">[root@web01 ~]# ab -n 20 -c 2 http:&#x2F;&#x2F;www.xoxoyun.com&#x2F;</span><br></pre></td></tr></table></figure><h3 id="4-1-4查看访问日志展开目录"><a href="#4-1-4查看访问日志展开目录" class="headerlink" title="4.1.4查看访问日志展开目录"></a>4.1.4查看访问日志展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# tail -f &#x2F;var&#x2F;log&#x2F;nginx&#x2F;www.access.log </span><br><span class="line">10.0.1.7 - - [30&#x2F;Jul&#x2F;2019:19:34:48 +0800] &quot;GET &#x2F; HTTP&#x2F;1.0&quot; 200 4 &quot;-&quot; &quot;ApacheBench&#x2F;2.3&quot; &quot;-&quot;</span><br><span class="line">10.0.1.7 - - [30&#x2F;Jul&#x2F;2019:19:34:48 +0800] &quot;GET &#x2F; HTTP&#x2F;1.0&quot; 200 4 &quot;-&quot; &quot;ApacheBench&#x2F;2.3&quot; &quot;-&quot;</span><br><span class="line">10.0.1.7 - - [30&#x2F;Jul&#x2F;2019:19:34:48 +0800] &quot;GET &#x2F; HTTP&#x2F;1.0&quot; 200 4 &quot;-&quot; &quot;ApacheBench&#x2F;2.3&quot; &quot;-&quot;</span><br><span class="line">10.0.1.7 - - [30&#x2F;Jul&#x2F;2019:19:34:48 +0800] &quot;GET &#x2F; HTTP&#x2F;1.0&quot; 200 4 &quot;-&quot; &quot;ApacheBench&#x2F;2.3&quot; &quot;-&quot;</span><br><span class="line">10.0.1.7 - - [30&#x2F;Jul&#x2F;2019:19:34:48 +0800] &quot;GET &#x2F; HTTP&#x2F;1.0&quot; 503 197 &quot;-&quot; &quot;ApacheBench&#x2F;2.3&quot; &quot;-&quot;</span><br><span class="line">10.0.1.7 - - [30&#x2F;Jul&#x2F;2019:19:34:48 +0800] &quot;GET &#x2F; HTTP&#x2F;1.0&quot; 503 197 &quot;-&quot; &quot;ApacheBench&#x2F;2.3&quot; &quot;-&quot;</span><br></pre></td></tr></table></figure><h3 id="4-1-5查看错误日志展开目录"><a href="#4-1-5查看错误日志展开目录" class="headerlink" title="4.1.5查看错误日志展开目录"></a>4.1.5查看错误日志展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# tail -f &#x2F;var&#x2F;log&#x2F;nginx&#x2F;error.log</span><br><span class="line">2019&#x2F;07&#x2F;30 19:34:48 [error] 17380#17380: *32 limiting requests, excess: 3.998 by zone &quot;req_zone&quot;, client: 10.0.1.7, server: www.xoxoyun.com, request: &quot;GET &#x2F; HTTP&#x2F;1.0&quot;, host: &quot;www.xoxoyun.com&quot;</span><br><span class="line">2019&#x2F;07&#x2F;30 19:34:48 [error] 17380#17380: *33 limiting requests, excess: 3.998 by zone &quot;req_zone&quot;, client: 10.0.1.7, server: www.xoxoyun.com, request: &quot;GET &#x2F; HTTP&#x2F;1.0&quot;, host: &quot;www.xoxoyun.com&quot;</span><br><span class="line">2019&#x2F;07&#x2F;30 19:34:48 [error] 17380#17380: *34 limiting requests, excess: 3.998 by zone &quot;req_zone&quot;, client: 10.0.1.7, server: www.xoxoyun.com, request: &quot;GET &#x2F; HTTP&#x2F;1.0&quot;, host: &quot;www.xoxoyun.com&quot;</span><br><span class="line">2019&#x2F;07&#x2F;30 19:34:48 [error] 17380#17380: *35 limiting requests, excess: 3.997 by zone &quot;req_zone&quot;, client: 10.0.1.7, server: www.xoxoyun.com, request: &quot;GET &#x2F; HTTP&#x2F;1.0&quot;, host: &quot;www.xoxoyun.com&quot;</span><br></pre></td></tr></table></figure><h3 id="4-3为什么限制请求的效果更好展开目录"><a href="#4-3为什么限制请求的效果更好展开目录" class="headerlink" title="4.3为什么限制请求的效果更好展开目录"></a>4.3为什么限制请求的效果更好展开目录</h3><p>我们先来回顾一下http协议的连接与请求，首先HTTP是建立在TCP基础之上，在完成HTTP请求需要先建立TCP三次握手（称为TCP连接），在连接的基础上在完成HTTP的请求。<br>所以多个HTTP请求可以建立一次TCP连接之上，那么我们对请求的精度限制，当然比对一个连接的限制会更加的有效，因为同一时刻只允许一个TCP连接进入，但是同一时刻多个HTTP请求可以通过一个TCP连接进入。所以针对HTTP的请求限制才是比较优的解决方案。</p><h1 id="第五章location-展开目录"><a href="#第五章location-展开目录" class="headerlink" title="第五章location 展开目录"></a>第五章location 展开目录</h1><p>使用Nginx Location可以控制访问网站的路径，但是一个服务器可以有多个location配置，多个location的优先级该如何区分</p><h2 id="5-1-location语法介绍展开目录"><a href="#5-1-location语法介绍展开目录" class="headerlink" title="5.1 location语法介绍展开目录"></a>5.1 location语法介绍展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">location [&#x3D;|^~|~|~*|!~|!~*|&#x2F;] &#x2F;uri&#x2F; &#123; ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-2-location语法优先级展开目录"><a href="#5-2-location语法优先级展开目录" class="headerlink" title="5.2 location语法优先级展开目录"></a>5.2 location语法优先级展开目录</h2><p><img src="http://upload-images.jianshu.io/upload_images/14248468-5cb322700a105acf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/998/format/webp" alt="img" title="img"></p><h2 id="5-3配置位置匹配规则实战展开目录"><a href="#5-3配置位置匹配规则实战展开目录" class="headerlink" title="5.3配置位置匹配规则实战展开目录"></a>5.3配置位置匹配规则实战展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# cat &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;01-www.conf </span><br><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  www.xoxoyun.com;</span><br><span class="line">    root   &#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F;www;</span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line">       return 200  &quot;location &#x2F; \n&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    location &#x3D; &#x2F; &#123;</span><br><span class="line">        return 200 &quot;location &#x3D; \n&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location &#x2F;documents&#x2F; &#123;</span><br><span class="line">        return 200 &quot;location &#x2F;documents&#x2F; \n&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    location ^~ &#x2F;images&#x2F; &#123;</span><br><span class="line">        return 200 &quot;location ^~ &#x2F;images&#x2F; \n&quot;;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    location ~* \.(gif|jpg|jpeg)$ &#123;</span><br><span class="line">        return 200 &quot;location ~* \.(gif|jpg|jpeg) \n&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    access_log off;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-4测试位置匹配规则展开目录"><a href="#5-4测试位置匹配规则展开目录" class="headerlink" title="5.4测试位置匹配规则展开目录"></a>5.4测试位置匹配规则展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#精确匹配&#x3D;&#x2F;</span><br><span class="line">[root@web01 ~]# curl www.xoxoyun.com</span><br><span class="line">location &#x3D; </span><br><span class="line">#没有满足的请求，所以匹配了&#x2F;</span><br><span class="line">[root@web01 ~]# curl www.xoxoyun.com&#x2F;xoxoyun.html</span><br><span class="line">location &#x2F; </span><br><span class="line">#匹配了&#x2F;documents</span><br><span class="line">[root@web01 ~]# curl www.xoxoyun.com&#x2F;documents&#x2F;xoxo.html</span><br><span class="line">location &#x2F;documents&#x2F; </span><br><span class="line">#没有满足的条件，匹配&#x2F;</span><br><span class="line">[root@web01 ~]# curl www.xoxoyun.com&#x2F;xoxo&#x2F;documents&#x2F;xoxo.html</span><br><span class="line">location &#x2F; </span><br><span class="line">#正则匹配了文件名</span><br><span class="line">[root@web01 ~]# curl www.xoxoyun.com&#x2F;xoxo.jpg</span><br><span class="line">location ~* \.(gif|jpg|jpeg) </span><br><span class="line">#~*匹配正则不区分大小写优先于&#x2F;documents</span><br><span class="line">[root@web01 ~]# curl www.xoxoyun.com&#x2F;documents&#x2F;xoxo.jpg</span><br><span class="line">location ~* \.(gif|jpg|jpeg) </span><br><span class="line">#^~优先匹配于~*</span><br><span class="line">[root@web01 ~]# curl www.xoxoyun.com&#x2F;images&#x2F;xoxo.jpg   </span><br><span class="line">location ^~ &#x2F;images&#x2F; </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx常用模块 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTTP 协议</title>
      <link href="/posts/7866/"/>
      <url>/posts/7866/</url>
      
        <content type="html"><![CDATA[<h1 id="第一章-用户访问流程展开目录"><a href="#第一章-用户访问流程展开目录" class="headerlink" title="第一章 用户访问流程展开目录"></a>第一章 用户访问流程展开目录</h1><p><img src="http://blog.kococ.cn/wp-content/uploads/2020/07/2020071114171198-1024x301.png" alt="img" title="img"></p><h2 id="01-访问网站流程：展开目录"><a href="#01-访问网站流程：展开目录" class="headerlink" title="01. 访问网站流程：展开目录"></a>01. 访问网站流程：展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">00. 客户端  浏览器输入网址信息点击回车(www.oldboyedu.com)</span><br><span class="line">01. 客户端  完成域名的解析过程(DNS) </span><br><span class="line">02. 客户端  直接访问相应网站服务器  建立TCP三次握手过程</span><br><span class="line">03. 客户端  访问网站服务器         发送HTTP请求报文  多次</span><br><span class="line">04. 服务端  响应客户端请求         回复HTTP响应报文  多次</span><br><span class="line">05. 客户端  浏览器看到网站页面</span><br><span class="line">06. 客户端  结束访问网站过程       完成TCP四次挥手过程</span><br></pre></td></tr></table></figure><h2 id="02-关键名词：展开目录"><a href="#02-关键名词：展开目录" class="headerlink" title="02. 关键名词：展开目录"></a>02. 关键名词：展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.域名</span><br><span class="line">2.DNS域名解析</span><br><span class="line">3.TCP三次握手</span><br><span class="line">4.TCP四次挥手</span><br><span class="line">5.HTTP请求报文</span><br><span class="line">6.HTTP响应报文</span><br></pre></td></tr></table></figure><h1 id="第二章-DNS-域名解析展开目录"><a href="#第二章-DNS-域名解析展开目录" class="headerlink" title="第二章 DNS 域名解析展开目录"></a>第二章 DNS 域名解析展开目录</h1><h2 id="DNS-介绍展开目录"><a href="#DNS-介绍展开目录" class="headerlink" title="DNS 介绍展开目录"></a>DNS 介绍展开目录</h2><p>DNS, 全称 Domain Name System/Serve<br>它在一个网站运行中起到了至关重要的作用<br>它的主要作用是负责把网站域名解析为对应的 IP 地址<br>例如：把 <a href="http://links.jianshu.com/go?to=http://www.etiantian.org">www.etiantian.org</a> 解析为对应的 IP 地址记录如 1.1.1.1, 这个从域名到 IP 的解析过程称为 A 记录，即 Address Record<br>DNS 常用记录类型主要有</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@记录</span><br><span class="line">A记录</span><br><span class="line">CNAME记录</span><br></pre></td></tr></table></figure><p>阿里云的 DNS 解析界面</p><p><img src="http://blog.kococ.cn/wp-content/uploads/2020/07/2020071114174214-1024x734.png" alt="img" title="img"></p><h2 id="DNS-系统树状结构图展开目录"><a href="#DNS-系统树状结构图展开目录" class="headerlink" title="DNS 系统树状结构图展开目录"></a>DNS 系统树状结构图展开目录</h2><p><img src="http://blog.kococ.cn/wp-content/uploads/2020/07/2020071114180010-1024x488.png" alt="img" title="img"></p><h2 id="DNS-解析流程图展开目录"><a href="#DNS-解析流程图展开目录" class="headerlink" title="DNS 解析流程图展开目录"></a>DNS 解析流程图展开目录</h2><p><img src="http://blog.kococ.cn/wp-content/uploads/2020/07/2020071114182719-1024x462.png" title="img"></p><p>使用 dig 命令追踪 DNS 解析过程展开目录</p><p>安装 dig 命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install bind-utils -y</span><br></pre></td></tr></table></figure><p>使用 dig 命令追踪</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# dig +trace www.oldboyedu.com        </span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.9.4-RedHat-9.9.4-74.el7_6.1 &lt;&lt;&gt;&gt; +trace www.oldboyedu.com</span><br><span class="line">;; global options: +cmd</span><br><span class="line">.                       5       IN      NS      d.root-servers.net.</span><br><span class="line">.                       5       IN      NS      j.root-servers.net.</span><br><span class="line">.                       5       IN      NS      b.root-servers.net.</span><br><span class="line">.                       5       IN      NS      l.root-servers.net.</span><br><span class="line">.                       5       IN      NS      f.root-servers.net.</span><br><span class="line">.                       5       IN      NS      m.root-servers.net.</span><br><span class="line">.                       5       IN      NS      i.root-servers.net.</span><br><span class="line">.                       5       IN      NS      e.root-servers.net.</span><br><span class="line">.                       5       IN      NS      a.root-servers.net.</span><br><span class="line">.                       5       IN      NS      g.root-servers.net.</span><br><span class="line">.                       5       IN      NS      c.root-servers.net.</span><br><span class="line">.                       5       IN      NS      h.root-servers.net.</span><br><span class="line">.                       5       IN      NS      k.root-servers.net.</span><br><span class="line">;; Received 492 bytes from 10.0.1.2#53(10.0.1.2) in 52 ms</span><br><span class="line"></span><br><span class="line">com.                    172800  IN      NS      h.gtld-servers.net.</span><br><span class="line">com.                    172800  IN      NS      i.gtld-servers.net.</span><br><span class="line">com.                    172800  IN      NS      c.gtld-servers.net.</span><br><span class="line">com.                    172800  IN      NS      e.gtld-servers.net.</span><br><span class="line">com.                    172800  IN      NS      j.gtld-servers.net.</span><br><span class="line">com.                    172800  IN      NS      m.gtld-servers.net.</span><br><span class="line">com.                    172800  IN      NS      g.gtld-servers.net.</span><br><span class="line">com.                    172800  IN      NS      f.gtld-servers.net.</span><br><span class="line">com.                    172800  IN      NS      k.gtld-servers.net.</span><br><span class="line">com.                    172800  IN      NS      d.gtld-servers.net.</span><br><span class="line">com.                    172800  IN      NS      a.gtld-servers.net.</span><br><span class="line">com.                    172800  IN      NS      l.gtld-servers.net.</span><br><span class="line">com.                    172800  IN      NS      b.gtld-servers.net.</span><br><span class="line">com.                    86400   IN      DS      30909 8 2 </span><br><span class="line">..............................</span><br><span class="line">oldboyedu.com.          172800  IN      NS      dns9.hichina.com.</span><br><span class="line">oldboyedu.com.          172800  IN      NS      dns10.hichina.com.</span><br><span class="line">..............................</span><br><span class="line">www.oldboyedu.com.      600     IN      A       39.97.3.87</span><br><span class="line">;; Received 62 bytes from 106.11.141.126#53(dns10.hichina.com) in 4 ms</span><br></pre></td></tr></table></figure><h2 id="DNS-解析流程展开目录"><a href="#DNS-解析流程展开目录" class="headerlink" title="DNS 解析流程展开目录"></a>DNS 解析流程展开目录</h2><p>第一步：客户端用户在浏览器里输入 <a href="https://links.jianshu.com/go?to=http://www.baidu.com">www.baidu.com</a> 网址后回车，系统首先会查找系统本地的 DNS 缓存及 host 文件信息，确定是否存在 <a href="https://links.jianshu.com/go?to=http://www.baidu.com">www.baidu.com</a> 域名对应的 IP 解析记录，如果有就直接获取到 IP 地址，然后去访问这个 IP 地址对应的 <a href="https://links.jianshu.com/go?to=http://www.baidu.com">www.baidu.com</a> 域名的服务器。一般第一次请求时，DNS 缓存是没有解析记录的，而 hosts 多为内部临时测试使用.<br>第二步：如果客户端本地 DNS 缓存及本地 hosts 文件没有 <a href="https://links.jianshu.com/go?to=http://www.baidu.com">www.baidu.com</a> 域名对应的解析记录，那么，系统会把浏览器的解析请求发送给在客户端本地设置的 DNS 服务器地址解析，通常称次 DNS 为 LDNS 即 local DNS, 如果 LDNS 服务器的本地缓存存有对应的解析记录就会直接返回给 IP 地址给客户端：如果没有，则 LDNS 会负责继续请求其他的 DNS 服务器.<br>第三步：LDNS 从 DNS 系统的 (“.”) 根开始请求对 <a href="https://links.jianshu.com/go?to=http://www.baidu.com">www.baidu.com</a> 域名的解析，根 DNS 服务器在全球一共有 13 台，根服务器下面是没有 <a href="https://links.jianshu.com/go?to=http://www.baidu.com">www.baidu.com</a> 域名解析记录的，但是根下面有 <a href="https://links.jianshu.com/go?to=http://www.baidu.com">www.baidu.com</a> 对应的顶级域名.com 的解析记录，因此，根会把.com 对应的 DNS 服务器地址返回给 LDNS.<br>第四步：LDNS 获取到.com 对应的 DNS 服务器地址后，就会去.com 服务器请求 <a href="https://links.jianshu.com/go?to=http://www.baidu.com">www.baidu.com</a> 域名的解析，. 而 com 服务器下面也没有 <a href="https://links.jianshu.com/go?to=http://www.baidu.com">www.baidu.com</a> 域名对应的解析记录，但是有 <a href="https://links.jianshu.com/go?to=http://baidu.com">baidu.com</a> 域名的解析记录，因此.com 服务器会把 <a href="https://links.jianshu.com/go?to=http://baidu.com">baidu.com</a> 对应的 DNS 服务器地址返回给 DNS.<br>第五步：同理，LDNS 获取到 <a href="https://links.jianshu.com/go?to=http://baidu.com">baidu.com</a> 对应的 DNS 服务器地址后，就会去 <a href="https://links.jianshu.com/go?to=http://baidu.com">baidu.com</a> 服务器请求对 <a href="https://links.jianshu.com/go?to=http://www.baidu.com">www.baidu.com</a> 域名的解析，<a href="https://links.jianshu.com/go?to=http://baidu.com">baidu.com</a> 域名对应的 DNS 服务器是该域名的授权 DNS 服务器，这个 DNS 服务器正是企业购买域名时用于管理解析的服务器，这个服务器会有 <a href="https://links.jianshu.com/go?to=http://www.baidu.com">www.baidu.com</a> 对应的解析记录，如果此时没有，就表示企业还没有对这个域名做解析，即网站服务器还没有架设好.<br>第六步:<a href="https://links.jianshu.com/go?to=http://baidu.com">baidu.com</a> 域名 DNS 服务器会把 <a href="https://links.jianshu.com/go?to=http://www.baidu.com">www.baidu.com</a> 对应的 IP 解析记录发给 LDNS.<br>第七步：LDNS 把来自授权 DNS 服务器的与 <a href="https://links.jianshu.com/go?to=http://www.baidu.com">www.baidu.com</a> 对应的 IP 解析记录发给客户端浏览器，并且 LDNS 会在本地把域名和 IP 对应解析记录缓存起来，以便下一次更快的返回相同解析请求的记录。至此，整个 DNS 的解析流程就完成了.</p><h1 id="第三章-TCP-IP-协议展开目录"><a href="#第三章-TCP-IP-协议展开目录" class="headerlink" title="第三章 TCP/IP 协议展开目录"></a>第三章 TCP/IP 协议展开目录</h1><h2 id="OSI-七层模型展开目录"><a href="#OSI-七层模型展开目录" class="headerlink" title="OSI 七层模型展开目录"></a>OSI 七层模型展开目录</h2><p><img src="http://blog.kococ.cn/wp-content/uploads/2020/07/2020071114190355-1024x548.png" alt="img" title="img"></p><h2 id="TCP-IP-五层模型展开目录"><a href="#TCP-IP-五层模型展开目录" class="headerlink" title="TCP/IP 五层模型展开目录"></a>TCP/IP 五层模型展开目录</h2><p><img src="http://blog.kococ.cn/wp-content/uploads/2020/07/2020071114194010-1024x403.png" alt="img" title="img"></p><h2 id="TCP-IP-每层包含的协议展开目录"><a href="#TCP-IP-每层包含的协议展开目录" class="headerlink" title="TCP/IP 每层包含的协议展开目录"></a>TCP/IP 每层包含的协议展开目录</h2><p><img src="http://blog.kococ.cn/wp-content/uploads/2020/07/2020071114200994-1024x372.png" alt="img" title="img"></p><h2 id="TCP-报文格式展开目录"><a href="#TCP-报文格式展开目录" class="headerlink" title="TCP 报文格式展开目录"></a>TCP 报文格式展开目录</h2><p><img src="http://blog.kococ.cn/wp-content/uploads/2020/07/2020071114212447-1024x670.png" alt="img" title="img"></p><h2 id="TCP-IP-三次握手展开目录"><a href="#TCP-IP-三次握手展开目录" class="headerlink" title="TCP/IP 三次握手展开目录"></a>TCP/IP 三次握手展开目录</h2><p><img src="http://upload-images.jianshu.io/upload_images/14248468-1cd97a2e1c591cf9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/798/format/webp" alt="img" title="img"></p><h2 id="TCP-IP-四次挥手展开目录"><a href="#TCP-IP-四次挥手展开目录" class="headerlink" title="TCP/IP 四次挥手展开目录"></a>TCP/IP 四次挥手展开目录</h2><p><img src="http://upload-images.jianshu.io/upload_images/14248468-1c8420711e350ab2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/868/format/webp" alt="img" title="img"></p><h1 id="第四章-HTTP-协议介绍展开目录"><a href="#第四章-HTTP-协议介绍展开目录" class="headerlink" title="第四章 HTTP 协议介绍展开目录"></a>第四章 HTTP 协议介绍展开目录</h1><h2 id="URL展开目录"><a href="#URL展开目录" class="headerlink" title="URL展开目录"></a>URL展开目录</h2><p>全称为 Uniform Resource Location，中文翻译为统一资源定位符</p><h2 id="URI展开目录"><a href="#URI展开目录" class="headerlink" title="URI展开目录"></a>URI展开目录</h2><p>全称为 Uniform Resource Identifier，中文翻译为统一资源标识符</p><h2 id="URL-和-URI-关系展开目录"><a href="#URL-和-URI-关系展开目录" class="headerlink" title="URL 和 URI 关系展开目录"></a>URL 和 URI 关系展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docs.ansible.com   &#x2F; ansible&#x2F;latest&#x2F;user_guide&#x2F;playbooks_reuse_roles.html</span><br><span class="line">URL                  URI </span><br></pre></td></tr></table></figure><h2 id="静态资源展开目录"><a href="#静态资源展开目录" class="headerlink" title="静态资源展开目录"></a>静态资源展开目录</h2><p>特点说明:  </p><ol><li>网页内容是固定不变的，因此，容易被搜索引擎收录（容易被用户找到）（优点）。  </li><li>因为网页没有数据库的支持，所以在网站制作和维护方面的工作量较大，当网站信息量很大时，<br>完全依靠静态网页比较困难（缺点）。  </li><li>网页的交互性较差，在程序的功能实现方面有较大的限制（缺点）。  </li><li>当客户端向服务器请求数据时，服务器会直接从磁盘文件系统上返回数据（不做任何解析）。</li></ol><h2 id="动态资源展开目录"><a href="#动态资源展开目录" class="headerlink" title="动态资源展开目录"></a>动态资源展开目录</h2><p>要什么信息，需要进行查询数据库进行解析后发送给客户端<br>查看班级人员信息表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">班级   人名   年龄   学历</span><br><span class="line">sz-01  张三   18     高中   ---&gt; 数据库中 oldboy&#x3D;123  &lt;--- post </span><br><span class="line">sz-01  李四   20     大专   </span><br><span class="line"></span><br><span class="line">班级   人员   年龄   学历</span><br><span class="line">代码信息直接调用数据库的内容</span><br><span class="line">1) 采用动态网页技术的网站可以实现更多的功能，如用户注册、用户登录、在线调查、</span><br><span class="line">   投票、用户管理、订单处理、发博文等。</span><br><span class="line">2) 动态资源页面会出现 &quot;?&quot; &quot;&amp;&quot;, 不便于被搜索引擎收录</span><br><span class="line">3) 接收到用户请求,需要让动态服务和数据库服务进行处理</span><br></pre></td></tr></table></figure><h2 id="伪静态资源-动态页面-展开目录"><a href="#伪静态资源-动态页面-展开目录" class="headerlink" title="伪静态资源 (动态页面)展开目录"></a>伪静态资源 (动态页面)展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. 可以便于搜索引擎进行收录</span><br><span class="line">2. 有数据库服务支持,实现网页交互功能</span><br></pre></td></tr></table></figure><h1 id="第五章-HTTP-请求方法展开目录"><a href="#第五章-HTTP-请求方法展开目录" class="headerlink" title="第五章 HTTP 请求方法展开目录"></a>第五章 HTTP 请求方法展开目录</h1><p><img src="http://blog.kococ.cn/wp-content/uploads/2020/07/2020071114223424-1024x300.png" alt="img" title="img"></p><h1 id="第六章-HTTP-响应状态码展开目录"><a href="#第六章-HTTP-响应状态码展开目录" class="headerlink" title="第六章 HTTP 响应状态码展开目录"></a>第六章 HTTP 响应状态码展开目录</h1><h2 id="响应状态码分类展开目录"><a href="#响应状态码分类展开目录" class="headerlink" title="响应状态码分类展开目录"></a>响应状态码分类展开目录</h2><p><img src="http://blog.kococ.cn/wp-content/uploads/2020/07/2020071114230090-1024x258.png" alt="img" title="img"></p><h2 id="常见响应状态码解释展开目录"><a href="#常见响应状态码解释展开目录" class="headerlink" title="常见响应状态码解释展开目录"></a>常见响应状态码解释展开目录</h2><p><img src="http://blog.kococ.cn/wp-content/uploads/2020/07/2020071114221677-1024x692.png" alt="img" title="img"></p><p>使用 curl 查看状态码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -I -s -w &quot;%&#123;http_code&#125;\n&quot; -o &#x2F;dev&#x2F;null  www.baidu.com</span><br></pre></td></tr></table></figure><h1 id="第七章-HTTP-请求报文展开目录"><a href="#第七章-HTTP-请求报文展开目录" class="headerlink" title="第七章 HTTP 请求报文展开目录"></a>第七章 HTTP 请求报文展开目录</h1><p><img src="http://blog.kococ.cn/wp-content/uploads/2020/07/2020071114231886-1024x371.png" alt="img" title="img"></p><h2 id="请求行展开目录"><a href="#请求行展开目录" class="headerlink" title="请求行展开目录"></a>请求行展开目录</h2><p><img src="http://blog.kococ.cn/wp-content/uploads/2020/07/2020071114233786-1024x94.png" alt="img" title="img"></p><h2 id="请求头展开目录"><a href="#请求头展开目录" class="headerlink" title="请求头展开目录"></a>请求头展开目录</h2><p><img src="http://blog.kococ.cn/wp-content/uploads/2020/07/2020071114235269-1024x293.png" alt="img" title="img"></p><h2 id="空行展开目录"><a href="#空行展开目录" class="headerlink" title="空行展开目录"></a>空行展开目录</h2><h2 id="请求主体展开目录"><a href="#请求主体展开目录" class="headerlink" title="请求主体展开目录"></a>请求主体展开目录</h2><h1 id="第八章-HTTP-响应报文展开目录"><a href="#第八章-HTTP-响应报文展开目录" class="headerlink" title="第八章 HTTP 响应报文展开目录"></a>第八章 HTTP 响应报文展开目录</h1><p><img src="http://blog.kococ.cn/wp-content/uploads/2020/07/2020071114240618-1024x333.png" alt="img" title="img"></p><h2 id="起始行展开目录"><a href="#起始行展开目录" class="headerlink" title="起始行展开目录"></a>起始行展开目录</h2><p>响应报文的起始行也叫状态行，用来说明服务器相应客户端请求的状态，一般为协议及版本号，数字状态码，状态情况，例如：HTTP/1.1 200 OK</p><h2 id="响应头部展开目录"><a href="#响应头部展开目录" class="headerlink" title="响应头部展开目录"></a>响应头部展开目录</h2><p>和请求报文类似，起始行的后面一般有若干个头部字段，每隔头部字段都包含一个名字和一个值，两者之间用冒号分隔。头部结尾也是以空行结束。常见的头部信息有</p><h2 id="空行展开目录-1"><a href="#空行展开目录-1" class="headerlink" title="空行展开目录"></a>空行展开目录</h2><h2 id="响应主体展开目录"><a href="#响应主体展开目录" class="headerlink" title="响应主体展开目录"></a>响应主体展开目录</h2><p>响应报文主体装载了要返回给客户端的数据，这些数据可以是文本，也可以使二进制的图片视频，下面是响应报文主体的 html 格式文本</p><h1 id="第十章-用户访问网站流程总结展开目录"><a href="#第十章-用户访问网站流程总结展开目录" class="headerlink" title="第十章 用户访问网站流程总结展开目录"></a>第十章 用户访问网站流程总结展开目录</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">1.用户输入域名-&gt;浏览器跳转-&gt;浏览器缓存-&gt;Hosts 文件-&gt;DNS 解析( 递归查询 | 迭代查询 )</span><br><span class="line">客户端向服务端发起查询-&gt;递归查询</span><br><span class="line">服务端向服务端发起查询-&gt;迭代查询</span><br><span class="line">2.由浏览器向服务端发起 TCP 连接（三次握手）</span><br><span class="line">客户端 --&gt;请求包连接-syn&#x3D;1 seq&#x3D;x 服务端</span><br><span class="line">服务端 --&gt;向应客户端 syn&#x3D;1 ack&#x3D;x+1 seq&#x3D;y 客户端</span><br><span class="line">客户端 --&gt;建立连接 ack&#x3D;y+1 seq&#x3D;x+1 服务端</span><br><span class="line">3.客户端发起 http 请求：</span><br><span class="line">1.请求的方法是什么： Get 获取</span><br><span class="line">2.请求的 Host 主机是： www.oldboyedu.com</span><br><span class="line">3.请求的资源是什么： &#x2F;index.html</span><br><span class="line">4.请求的端口是什么： 默认 http 是 80 https 443</span><br><span class="line">5.请求携带的参数是： 属性（请求的类型、压缩、认证、浏览器信息、等等）</span><br><span class="line">6.请求最后的空行</span><br><span class="line">4.服务端响应的内容是</span><br><span class="line">1.服务端响应使用的 WEB 服务软件</span><br><span class="line">2.服务端响应请求文件的类型</span><br><span class="line">3.服务端响应请求的文件是否进行压缩</span><br><span class="line">4.服务端响应请求的主机是否进行长连接</span><br><span class="line">5.客户端向服务端发起 TCP 断开（四次挥手）</span><br><span class="line">客户端 --&gt; 断开请求 fin&#x3D;1 seq&#x3D;x --&gt; 服务端</span><br><span class="line">服务端 --&gt; 响应断开 fin&#x3D;1 ack&#x3D;x+1 seq&#x3D;y --&gt; 客户端</span><br><span class="line">服务端 --&gt; 断开连接 fin&#x3D;1 ack&#x3D;x+1 seq&#x3D;z --&gt; 客户端</span><br><span class="line">客户端 --&gt; 确认断开 fin&#x3D;1 ack&#x3D;z+1 seq&#x3D;sj --&gt; 服务端</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTTP协议 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>年轻人…… 你有压力吗？</title>
      <link href="/posts/1479/"/>
      <url>/posts/1479/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>这个时代的好处就是，如果你没有家庭，孑身一人，走到哪里都无牵无挂，一人吃饱，全家不饿。 又正好处在二十来岁，身体没毛病，浑身都是劲儿的年纪。<br>那你可以活得毫无压力，你所有的苦恼都来自于内心的欲望，而这个社会就是这么一个，只要你肯埋头干，就肯定饿不死，也冻不着的存在。<br>你会发现，找个稳定的工作，每天早起一声奥利给，闷头干一天，晚上回到出租屋，打开手机一直玩到睡着，这种日子也不错。<br>这种优哉游哉的日子过了几年后，你有了一点存款，认识了一个女孩，你开始想有自己的家庭。 再然后，你又开始想有一套自己的房子，于是你的压力来了。<br>再到后来，你的身体开始变得没有以前那么好了。 甚至为了买房的梦想，你要多赚钱，连续熬夜加班。 大病一场，一下子就清空了你大半年的积蓄。<br>这时候你不但压力变得更大了，你发现你同时也开始焦虑了。 你开始担心，以后可能会时不时地因为疾病而消费。<br>而你的精力已经不再像二十几岁的时候那么好了。 那时的你，永远有使不完的劲儿，透支一天的体力，晚上吃饱睡一觉第二天就原地满血复活了。<br>就在你刚刚交完郊区房子首付的那一年，你的孩子也出生了。 你发现，自己每月要承担的开销又多了一笔，而未来这个消费数字似乎是个增长曲线。<br>就在你深夜开始抽着烟思考人生的时候，才忽然发现，自己现在好像一颗处在报废边缘的电池，但为了支撑眼下的生活，你必须得撑着，不能报废。<br>你陷入了沉思，开始要怀疑人生，这时候你手中的烟已经烧到了烟屁股，烫到了你的手。<br>你想起，来阳台抽烟前，你还在客厅泡了一碗面，赶紧回去，掀开泡面盖，发现冷却的泡面汤上面，油都凝固了。<br>你终于又回想起了二十郎当岁，刚来这座城市打工的那个时候，那种白天奥利给，晚上打王者的单纯快乐的日子，再也不会有了。<br>单纯地活下去，确实变得更容易了，生活还比以前更好了。 但也只是活下去罢了。</strong></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 压力 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中小型电商公司架构演变</title>
      <link href="/posts/18399/"/>
      <url>/posts/18399/</url>
      
        <content type="html"><![CDATA[<h1 id="演变过程"><a href="#演变过程" class="headerlink" title="演变过程"></a>演变过程</h1><p><img src="https://cdn.jsdelivr.net/gh/xoxoyun/MCDN/usr/uploads/2020/03/%E6%9E%B6%E6%9E%84%E6%BC%94%E5%8F%98.jpg" alt="网架构演变"></p><h1 id="完成架构图"><a href="#完成架构图" class="headerlink" title="完成架构图"></a>完成架构图</h1><p><img src="http://www.kococ.cn/usr/uploads/2020/03/%E5%AE%8C%E6%88%90%E6%9E%B6%E6%9E%84%E5%9B%BE.bmp" alt="请输入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 架构演变过程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tomcat服务</title>
      <link href="/posts/5752/"/>
      <url>/posts/5752/</url>
      
        <content type="html"><![CDATA[<p>Tomcat 是 Apache 软件基金会 (Apache Software Foundation) 的 Jakarta 项目中的一个核心项目，由 Apache,Sun 和其他一些公司及个人共同开发而成</p><p>Tomcat 服务器是一个免费的开放源代码的 Web 应用服务器，属于轻量级应用服务器，在中小型系统和并发访问用户不是很多的场合下被普遍使用，是开发和调试 JSP 程序的首选.</p><p>Tomcat 和 Nginx,Apache (httpd),lighttpd 等 Web 服务器一样，具有处理 HTML 页面的功能，另外它还是一个 Server 和 JSP 容器，独立的 Server 容器是 Tomcat 的默认模式，. 不过，Tomcat 处理静态 HTML 的能力不如 Nginx/Apache 服务器.<br>其他 JAVA 容器还有 resin,weblogic 等</p><h1 id="第-2-章-tomcat-安装展开目录"><a href="#第-2-章-tomcat-安装展开目录" class="headerlink" title="第 2 章 tomcat 安装展开目录"></a>第 2 章 tomcat 安装展开目录</h1><h2 id="1-环境介绍展开目录"><a href="#1-环境介绍展开目录" class="headerlink" title="1. 环境介绍展开目录"></a>1. 环境介绍展开目录</h2><h2 id="2-部署-java-环境展开目录"><a href="#2-部署-java-环境展开目录" class="headerlink" title="2. 部署 java 环境展开目录"></a>2. 部署 java 环境展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@sweb01 ~]# yum install java-1.8.0 -y</span><br><span class="line">[root@sweb01 ~]# java -version</span><br><span class="line">openjdk version &quot;1.8.0_222&quot;</span><br><span class="line">OpenJDK Runtime Environment (build 1.8.0_222-b10)</span><br><span class="line">OpenJDK 64-Bit Server VM (build 25.222-b10, mixed mode)</span><br></pre></td></tr></table></figure><h2 id="3-部署-tomcat展开目录"><a href="#3-部署-tomcat展开目录" class="headerlink" title="3. 部署 tomcat展开目录"></a>3. 部署 tomcat展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[root@sweb01 ~]# mkdir &#x2F;data&#x2F;soft -p</span><br><span class="line">[root@sweb01 ~]# cd &#x2F;data&#x2F;soft&#x2F;</span><br><span class="line">[root@sweb01 &#x2F;data&#x2F;soft]# wget http:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;apache&#x2F;tomcat&#x2F;tomcat-8&#x2F;v8.5.43&#x2F;bin&#x2F;apache-tomcat-8.5.43.tar.gz</span><br><span class="line">[root@sweb01 &#x2F;data&#x2F;soft]# tar zxf apache-tomcat-8.5.43.tar.gz -C &#x2F;opt&#x2F;</span><br><span class="line">[root@sweb01 &#x2F;data&#x2F;soft]# cd &#x2F;opt&#x2F;</span><br><span class="line">[root@sweb01 &#x2F;opt]# ll</span><br><span class="line">总用量 4</span><br><span class="line">drwxr-xr-x 9 root root 4096 8月  10 16:37 apache-tomcat-8.5.43</span><br><span class="line">[root@sweb01 &#x2F;opt]# ln -s apache-tomcat-8.5.43 tomcat</span><br><span class="line">[root@sweb01 &#x2F;opt]# ll -h</span><br><span class="line">总用量 4.0K</span><br><span class="line">drwxr-xr-x 9 root root 4.0K 8月  10 16:37 apache-tomcat-8.5.43</span><br><span class="line">lrwxrwxrwx 1 root root   20 8月  10 16:37 tomcat -&gt; apache-tomcat-8.5.43</span><br><span class="line">[root@sweb01 &#x2F;opt]# echo &#39;export TOMCAT_HOME&#x3D;&#x2F;opt&#x2F;tomcat&#39;&gt;&gt;&#x2F;etc&#x2F;profile</span><br><span class="line">[root@sweb01 &#x2F;opt]# source &#x2F;etc&#x2F;profile</span><br><span class="line">[root@sweb01 &#x2F;opt]# &#x2F;opt&#x2F;tomcat&#x2F;bin&#x2F;version.sh    </span><br><span class="line">Using CATALINA_BASE:   &#x2F;opt&#x2F;tomcat</span><br><span class="line">Using CATALINA_HOME:   &#x2F;opt&#x2F;tomcat</span><br><span class="line">Using CATALINA_TMPDIR: &#x2F;opt&#x2F;tomcat&#x2F;temp</span><br><span class="line">Using JRE_HOME:        &#x2F;usr</span><br><span class="line">Using CLASSPATH:       &#x2F;opt&#x2F;tomcat&#x2F;bin&#x2F;bootstrap.jar:&#x2F;opt&#x2F;tomcat&#x2F;bin&#x2F;tomcat-juli.jar</span><br><span class="line">Server version: Apache Tomcat&#x2F;8.5.43</span><br><span class="line">Server built:   Jul 4 2019 20:53:15 UTC</span><br><span class="line">Server number:  8.5.43.0</span><br><span class="line">OS Name:        Linux</span><br><span class="line">OS Version:     3.10.0-327.el7.x86_64</span><br><span class="line">Architecture:   amd64</span><br><span class="line">JVM Version:    1.8.0_222-b10</span><br><span class="line">JVM Vendor:     Oracle Corporation</span><br></pre></td></tr></table></figure><h2 id="4-tomcat-目录介绍展开目录"><a href="#4-tomcat-目录介绍展开目录" class="headerlink" title="4.tomcat 目录介绍展开目录"></a>4.tomcat 目录介绍展开目录</h2><p>总目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@sweb01 ~]# cd &#x2F;opt&#x2F;tomcat&#x2F;</span><br><span class="line">[root@sweb01 &#x2F;opt&#x2F;tomcat]# tree -L 1</span><br><span class="line">├── bin             #用以启动,关闭Tomcat或其他脚本功能的脚本(.bat和.sh)</span><br><span class="line">├── conf            #用以配置Tomcat的XML及DTD文件</span><br><span class="line">├── lib             #存放web应用能访问的JAR包</span><br><span class="line">├── logs            #Catalina和其他web应用程序的日志文件</span><br><span class="line">├── temp            #临时文件</span><br><span class="line">├── webapps         #Web应用程序根目录</span><br><span class="line">└── work            #用以产生有JSP编译出的Servlet的.java和.class文件</span><br></pre></td></tr></table></figure><p>webapps 目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@sweb01 &#x2F;opt&#x2F;tomcat]# cd webapps&#x2F;</span><br><span class="line">[root@sweb01 &#x2F;opt&#x2F;tomcat&#x2F;webapps]# ll</span><br><span class="line">总用量 8</span><br><span class="line">drwxr-x--- 14 root root 4096 8月  10 16:37 docs          #tomcat帮助文档</span><br><span class="line">drwxr-x---  6 root root   78 8月  10 16:37 examples      #web应用</span><br><span class="line">drwxr-x---  5 root root   82 8月  10 16:37 host-manager  #管理</span><br><span class="line">drwxr-x---  5 root root   97 8月  10 16:37 manager       #管理</span><br><span class="line">drwxr-x---  3 root root 4096 8月  10 16:37 ROOT          #默认网站根目录</span><br></pre></td></tr></table></figure><p>bin 目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">脚本            作用</span><br><span class="line">startup.sh           开启tomcat脚本</span><br><span class="line">shutdown.sh          关闭tomcat脚本</span><br><span class="line">catalina.shtomcat    核心管理脚本,以后jvm优化参数及相关配置,修改tomcat启动参数</span><br></pre></td></tr></table></figure><h2 id="5-启动-tomcat展开目录"><a href="#5-启动-tomcat展开目录" class="headerlink" title="5. 启动 tomcat展开目录"></a>5. 启动 tomcat展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@sweb01 &#x2F;opt&#x2F;tomcat&#x2F;bin]# cd</span><br><span class="line">[root@sweb01 ~]# &#x2F;opt&#x2F;tomcat&#x2F;bin&#x2F;startup.sh </span><br><span class="line">Using CATALINA_BASE:   &#x2F;opt&#x2F;tomcat</span><br><span class="line">Using CATALINA_HOME:   &#x2F;opt&#x2F;tomcat</span><br><span class="line">Using CATALINA_TMPDIR: &#x2F;opt&#x2F;tomcat&#x2F;temp</span><br><span class="line">Using JRE_HOME:        &#x2F;usr</span><br><span class="line">Using CLASSPATH:       &#x2F;opt&#x2F;tomcat&#x2F;bin&#x2F;bootstrap.jar:&#x2F;opt&#x2F;tomcat&#x2F;bin&#x2F;tomcat-juli.jar</span><br><span class="line">Tomcat started.</span><br></pre></td></tr></table></figure><h2 id="6-检查和测试展开目录"><a href="#6-检查和测试展开目录" class="headerlink" title="6. 检查和测试展开目录"></a>6. 检查和测试展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@sweb01 ~]# ps -ef|grep tomcat</span><br><span class="line">root       2249      1  5 16:49 pts&#x2F;1    00:00:01 &#x2F;usr&#x2F;bin&#x2F;java -Djava.util.logging.config.file&#x3D;&#x2F;opt&#x2F;tomcat&#x2F;conf&#x2F;logging.properties -Djava.util.logging.manager&#x3D;org.apache.juli.ClassLoaderLogManager -Djdk.tls.ephemeralDHKeySize&#x3D;2048 -Djava.protocol.handler.pkgs&#x3D;org.apache.catalina.webresources -Dorg.apache.catalina.security.SecurityListener.UMASK&#x3D;0027 -Dignore.endorsed.dirs&#x3D; -classpath &#x2F;opt&#x2F;tomcat&#x2F;bin&#x2F;bootstrap.jar:&#x2F;opt&#x2F;tomcat&#x2F;bin&#x2F;tomcat-juli.jar -Dcatalina.base&#x3D;&#x2F;opt&#x2F;tomcat -Dcatalina.home&#x3D;&#x2F;opt&#x2F;tomcat -Djava.io.tmpdir&#x3D;&#x2F;opt&#x2F;tomcat&#x2F;temp org.apache.catalina.startup.Bootstrap start</span><br><span class="line">[root@sweb01 ~]# ss -lntup|grep tomcat</span><br><span class="line">[root@sweb01 ~]# ss -lntup|grep java</span><br><span class="line">tcp    LISTEN     0      100      :::8009                 :::*                   users:((&quot;java&quot;,pid&#x3D;2249,fd&#x3D;54))</span><br><span class="line">tcp    LISTEN     0      100      :::8080                 :::*                   users:((&quot;java&quot;,pid&#x3D;2249,fd&#x3D;49))</span><br><span class="line">tcp    LISTEN     0      1      ::ffff:127.0.0.1:8005                 :::*                   users:((&quot;java&quot;,pid&#x3D;2249,fd&#x3D;69))</span><br></pre></td></tr></table></figure><h2 id="8-访问网站展开目录"><a href="#8-访问网站展开目录" class="headerlink" title="8. 访问网站展开目录"></a>8. 访问网站展开目录</h2><p><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071203253313-1024x366.png" alt="img" title="img"></p><h2 id="9-查看-tomcat-日志展开目录"><a href="#9-查看-tomcat-日志展开目录" class="headerlink" title="9. 查看 tomcat 日志展开目录"></a>9. 查看 tomcat 日志展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@sweb01 ~]# tail -f &#x2F;opt&#x2F;tomcat&#x2F;logs&#x2F;catalina.out </span><br><span class="line">10-Aug-2019 16:50:03.831 信息 [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [&#x2F;opt&#x2F;apache-tomcat-8.5.43&#x2F;webapps&#x2F;docs] has finished in [25] ms</span><br><span class="line">10-Aug-2019 16:50:03.831 信息 [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [&#x2F;opt&#x2F;apache-tomcat-8.5.43&#x2F;webapps&#x2F;examples]</span><br><span class="line">10-Aug-2019 16:50:04.144 信息 [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [&#x2F;opt&#x2F;apache-tomcat-8.5.43&#x2F;webapps&#x2F;examples] has finished in [313] ms</span><br><span class="line">10-Aug-2019 16:50:04.144 信息 [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [&#x2F;opt&#x2F;apache-tomcat-8.5.43&#x2F;webapps&#x2F;host-manager]</span><br><span class="line">10-Aug-2019 16:50:04.164 信息 [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [&#x2F;opt&#x2F;apache-tomcat-8.5.43&#x2F;webapps&#x2F;host-manager] has finished in [20] ms</span><br><span class="line">10-Aug-2019 16:50:04.164 信息 [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deploying web application directory [&#x2F;opt&#x2F;apache-tomcat-8.5.43&#x2F;webapps&#x2F;manager]</span><br><span class="line">10-Aug-2019 16:50:04.196 信息 [localhost-startStop-1] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [&#x2F;opt&#x2F;apache-tomcat-8.5.43&#x2F;webapps&#x2F;manager] has finished in [31] ms</span><br><span class="line">10-Aug-2019 16:50:04.213 信息 [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler [&quot;http-nio-8080&quot;]</span><br><span class="line">10-Aug-2019 16:50:04.219 信息 [main] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler [&quot;ajp-nio-8009&quot;]</span><br><span class="line">10-Aug-2019 16:50:04.221 信息 [main] org.apache.catalina.startup.Catalina.start Server startup in 44249 ms</span><br></pre></td></tr></table></figure><h2 id="10-关闭命令展开目录"><a href="#10-关闭命令展开目录" class="headerlink" title="10. 关闭命令展开目录"></a>10. 关闭命令展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@sweb01 ~]# &#x2F;opt&#x2F;tomcat&#x2F;bin&#x2F;shutdown.sh </span><br><span class="line">Using CATALINA_BASE:   &#x2F;opt&#x2F;tomcat</span><br><span class="line">Using CATALINA_HOME:   &#x2F;opt&#x2F;tomcat</span><br><span class="line">Using CATALINA_TMPDIR: &#x2F;opt&#x2F;tomcat&#x2F;temp</span><br><span class="line">Using JRE_HOME:        &#x2F;usr</span><br><span class="line">Using CLASSPATH:       &#x2F;opt&#x2F;tomcat&#x2F;bin&#x2F;bootstrap.jar:&#x2F;opt&#x2F;tomcat&#x2F;bin&#x2F;tomcat-juli.jar</span><br><span class="line">[root@sweb01 ~]# ss -lntup|grep java  </span><br></pre></td></tr></table></figure><h1 id="第-4-章-tomcat-配置文件展开目录"><a href="#第-4-章-tomcat-配置文件展开目录" class="headerlink" title="第 4 章 tomcat 配置文件展开目录"></a>第 4 章 tomcat 配置文件展开目录</h1><h2 id="1-tomcat-配置文件介绍展开目录"><a href="#1-tomcat-配置文件介绍展开目录" class="headerlink" title="1.tomcat 配置文件介绍展开目录"></a>1.tomcat 配置文件介绍展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@sweb01 ~]# tree &#x2F;opt&#x2F;tomcat&#x2F;conf&#x2F;</span><br><span class="line">&#x2F;opt&#x2F;tomcat&#x2F;conf&#x2F;</span><br><span class="line">├── Catalina</span><br><span class="line">│   └── localhost</span><br><span class="line">├── catalina.policy</span><br><span class="line">├── catalina.properties</span><br><span class="line">├── context.xml</span><br><span class="line">├── jaspic-providers.xml</span><br><span class="line">├── jaspic-providers.xsd</span><br><span class="line">├── logging.properties</span><br><span class="line">├── server.xml              #主配置文件</span><br><span class="line">├── tomcat-users.xml        #管理用户配置文件</span><br><span class="line">├── tomcat-users.xsd</span><br><span class="line">└── web.xml</span><br></pre></td></tr></table></figure><h2 id="2-tomcat-管理展开目录"><a href="#2-tomcat-管理展开目录" class="headerlink" title="2.tomcat 管理展开目录"></a>2.tomcat 管理展开目录</h2><p>测试功能，生产环境不要用<br>Tomcat 管理功能用于对 Tomcat 自身以及部署在 Tomcat 的应用管理的 web 应用，在默认的情况下处于禁止状态的。如果需要开启这个功能，就要配置管理用户，即配置前面说过的 tomcat-user.xml<br>下面是命令集合:<br>修改 tomcat-users.xml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@sweb01 ~]# cat &#x2F;opt&#x2F;tomcat&#x2F;conf&#x2F;tomcat-users.xml    </span><br><span class="line">&lt;?xml version&#x3D;&#39;1.0&#39; encoding&#x3D;&#39;utf-8&#39;?&gt;</span><br><span class="line">&lt;!--</span><br><span class="line">     这是个优雅的注释</span><br><span class="line">--&gt;</span><br><span class="line">&lt;tomcat-users xmlns&#x3D;&quot;http:&#x2F;&#x2F;tomcat.apache.org&#x2F;xml&quot;</span><br><span class="line">              xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;</span><br><span class="line">              xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;tomcat.apache.org&#x2F;xml tomcat-users.xsd&quot;</span><br><span class="line">              version&#x3D;&quot;1.0&quot;&gt;</span><br><span class="line">  &lt;role rolename&#x3D;&quot;admin-gui&quot;&#x2F;&gt;</span><br><span class="line">  &lt;role rolename&#x3D;&quot;host-gui&quot;&#x2F;&gt;</span><br><span class="line">  &lt;role rolename&#x3D;&quot;manager-gui&quot;&#x2F;&gt;</span><br><span class="line">  &lt;user username&#x3D;&quot;tomcat&quot; password&#x3D;&quot;tomcat&quot; roles&#x3D;&quot;admin-gui,host-gui,manager-gui&quot;&#x2F;&gt;</span><br><span class="line">&lt;&#x2F;tomcat-users&gt;</span><br></pre></td></tr></table></figure><p>修改 context.xml 文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@sweb01 ~]# grep &quot;10&quot; &#x2F;opt&#x2F;tomcat&#x2F;webapps&#x2F;manager&#x2F;META-INF&#x2F;context.xml    </span><br><span class="line">         allow&#x3D;&quot;10\.\d+\.\d+\.\d+|::1|0:0:0:0:0:0:0:1&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure><p>重新启动 tomcat</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@sweb01 ~]# &#x2F;opt&#x2F;tomcat&#x2F;bin&#x2F;shutdown.sh </span><br><span class="line">Using CATALINA_BASE:   &#x2F;opt&#x2F;tomcat</span><br><span class="line">Using CATALINA_HOME:   &#x2F;opt&#x2F;tomcat</span><br><span class="line">Using CATALINA_TMPDIR: &#x2F;opt&#x2F;tomcat&#x2F;temp</span><br><span class="line">Using JRE_HOME:        &#x2F;usr</span><br><span class="line">Using CLASSPATH:       &#x2F;opt&#x2F;tomcat&#x2F;bin&#x2F;bootstrap.jar:&#x2F;opt&#x2F;tomcat&#x2F;bin&#x2F;tomcat-juli.jar</span><br><span class="line">[root@sweb01 ~]# &#x2F;opt&#x2F;tomcat&#x2F;bin&#x2F;startup.sh </span><br><span class="line">Using CATALINA_BASE:   &#x2F;opt&#x2F;tomcat</span><br><span class="line">Using CATALINA_HOME:   &#x2F;opt&#x2F;tomcat</span><br><span class="line">Using CATALINA_TMPDIR: &#x2F;opt&#x2F;tomcat&#x2F;temp</span><br><span class="line">Using JRE_HOME:        &#x2F;usr</span><br><span class="line">Using CLASSPATH:       &#x2F;opt&#x2F;tomcat&#x2F;bin&#x2F;bootstrap.jar:&#x2F;opt&#x2F;tomcat&#x2F;bin&#x2F;tomcat-juli.jar</span><br><span class="line">Tomcat started.</span><br></pre></td></tr></table></figure><h2 id="3-访问网页测试展开目录"><a href="#3-访问网页测试展开目录" class="headerlink" title="3. 访问网页测试展开目录"></a>3. 访问网页测试展开目录</h2><p><img src="https://upload-images.jianshu.io/upload_images/14248468-4cdf44cb4681fc8b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img" title="img"></p><h1 id="第-5-章-tomcat-主配置文件-Server-xml-详解展开目录"><a href="#第-5-章-tomcat-主配置文件-Server-xml-详解展开目录" class="headerlink" title="第 5 章 tomcat 主配置文件 Server.xml 详解展开目录"></a>第 5 章 tomcat 主配置文件 Server.xml 详解展开目录</h1><h2 id="1-server-xml-组件类别展开目录"><a href="#1-server-xml-组件类别展开目录" class="headerlink" title="1.server.xml 组件类别展开目录"></a>1.server.xml 组件类别展开目录</h2><p> 顶级组件：位于整个配置的顶层，如 server<br> 容器类组件：可以包含其它组件的组件，如 server,engine,host,context<br> 连接器组件：连接用户请求至 tomcat, 如 connector<br> 被嵌套类组件：位于一个容器内，不能包含其它组件，如 Valve,logger.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;server&gt;</span><br><span class="line">     &lt;service&gt;</span><br><span class="line">     &lt;connector &#x2F;&gt;</span><br><span class="line">     &lt;engine&gt;</span><br><span class="line">     &lt;host&gt;</span><br><span class="line">     &lt;context&gt;&lt;&#x2F;context&gt;</span><br><span class="line">     &lt;&#x2F;host&gt;</span><br><span class="line">     &lt;host&gt;</span><br><span class="line">     &lt;context&gt;&lt;&#x2F;context&gt;</span><br><span class="line">     &lt;&#x2F;host&gt;</span><br><span class="line">     &lt;&#x2F;engine&gt;</span><br><span class="line">     &lt;&#x2F;service&gt;</span><br><span class="line">&lt;&#x2F;server&gt;</span><br></pre></td></tr></table></figure><h2 id="2-组件详情展开目录"><a href="#2-组件详情展开目录" class="headerlink" title="2. 组件详情展开目录"></a>2. 组件详情展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">engine:核心容器组件,catalina引擎,负责通过connector接受用户请求,并处理请求,将请求转至对应的虚拟主机host</span><br><span class="line">host:类似于httpd中的虚拟主机,一般而言支持基于FQDN的虚拟主机</span><br><span class="line">context:定义一个应用程序,是一个最内层的容器类组件(不能再嵌套).篇日志context的主要目的指定对应的webapp的根目录,类似于httpd的alias,其还能为webapp指定额外的属性,如部署方式等.</span><br><span class="line">connector:接收用户请求,类似于httpd的listen配置监听端口.</span><br><span class="line">service(服务):将connector关联至engine,因此一个service内部可以有多个connector,但只能有一个引擎engine.service内部有两个connector,一个engine.因此一个service内部可以有多个connector.</span><br><span class="line">server:表示一个运行于JVM中的tomcat实例</span><br><span class="line">Valve:阀门,拦截请求并在将其转至对应的webapp前进行某种处理操作,可以用于任何容器中,比如记录日志(access log valve),基于IP做访问控制(remote address filter valve).</span><br><span class="line">logger: 日志记录器,用于记录组件内部的状态信息,可以用于除context外的任何容器中.</span><br><span class="line">realm:可以用于任意容器类的组件中,关联一个用户认证库,实现认证和授权.可以关联的认证库有两种:UserDatabaseRealm,MemoryRealm和JDBCRealm</span><br><span class="line">UserDatabaseRealm:使用JNDI自定义的用户认证库.</span><br><span class="line">MemoryRealm:认证信息定义在tomcat-users.xml中</span><br><span class="line">JDBCRealm:认证信息定义在数据库中,并通过JDBC连接至数据库查找认证用户.</span><br></pre></td></tr></table></figure><h2 id="3-配置文件注释展开目录"><a href="#3-配置文件注释展开目录" class="headerlink" title="3. 配置文件注释展开目录"></a>3. 配置文件注释展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">tomcat配置文件注释</span><br><span class="line"></span><br><span class="line">&lt;?xml version&#x3D;&#39;1.0&#39; encoding&#x3D;&#39;utf-8&#39;?&gt;</span><br><span class="line">&lt;!--</span><br><span class="line">&lt;Server&gt;元素代表整个容器,是Tomcat实例的顶层元素.由org.apache.catalina.Server接口来定义.它包含一个&lt;Service&gt;元素.并且它不能做为任何元素的子元素.</span><br><span class="line">    port指定Tomcat监听shutdown命令端口.终止服务器运行时,必须在Tomcat服务器所在的机器上发出shutdown命令.该属性是必须的.</span><br><span class="line">    shutdown指定终止Tomcat服务器运行时,发给Tomcat服务器的shutdown监听端口的字符串.该属性必须设置</span><br><span class="line">--&gt;</span><br><span class="line">&lt;Server port&#x3D;&quot;8005&quot; shutdown&#x3D;&quot;SHUTDOWN&quot;&gt;</span><br><span class="line">  &lt;Listener className&#x3D;&quot;org.apache.catalina.startup.VersionLoggerListener&quot; &#x2F;&gt;</span><br><span class="line">  &lt;Listener className&#x3D;&quot;org.apache.catalina.core.AprLifecycleListener&quot; SSLEngine&#x3D;&quot;on&quot; &#x2F;&gt;</span><br><span class="line">  &lt;Listener className&#x3D;&quot;org.apache.catalina.core.JreMemoryLeakPreventionListener&quot; &#x2F;&gt;</span><br><span class="line">  &lt;Listener className&#x3D;&quot;org.apache.catalina.mbeans.GlobalResourcesLifecycleListener&quot; &#x2F;&gt;</span><br><span class="line">  &lt;Listener className&#x3D;&quot;org.apache.catalina.core.ThreadLocalLeakPreventionListener&quot; &#x2F;&gt;</span><br><span class="line">  &lt;GlobalNamingResources&gt;</span><br><span class="line">    &lt;Resource name&#x3D;&quot;UserDatabase&quot; auth&#x3D;&quot;Container&quot;</span><br><span class="line">              type&#x3D;&quot;org.apache.catalina.UserDatabase&quot;</span><br><span class="line">              description&#x3D;&quot;User database that can be updated and saved&quot;</span><br><span class="line">              factory&#x3D;&quot;org.apache.catalina.users.MemoryUserDatabaseFactory&quot;</span><br><span class="line">              pathname&#x3D;&quot;conf&#x2F;tomcat-users.xml&quot; &#x2F;&gt;</span><br><span class="line">  &lt;&#x2F;GlobalNamingResources&gt;</span><br><span class="line">  &lt;!--service服务组件--&gt;</span><br><span class="line">  &lt;Service name&#x3D;&quot;Catalina&quot;&gt;</span><br><span class="line">    &lt;!--</span><br><span class="line">    connector：接收用户请求，类似于httpd的listen配置监听端口.</span><br><span class="line">        port指定服务器端要创建的端口号，并在这个端口监听来自客户端的请求。</span><br><span class="line">        address：指定连接器监听的地址，默认为所有地址（即0.0.0.0）</span><br><span class="line">        protocol连接器使用的协议，支持HTTP和AJP。AJP（Apache Jserv Protocol）专用于tomcat与apache建立通信的， 在httpd反向代理用户请求至tomcat时使用（可见Nginx反向代理时不可用AJP协议）。</span><br><span class="line">        minProcessors服务器启动时创建的处理请求的线程数</span><br><span class="line">        maxProcessors最大可以创建的处理请求的线程数</span><br><span class="line">        enableLookups如果为true，则可以通过调用request.getRemoteHost()进行DNS查询来得到远程客户端的实际主机名，若为false则不进行DNS查询，而是返回其ip地址</span><br><span class="line">        redirectPort指定服务器正在处理http请求时收到了一个SSL传输请求后重定向的端口号</span><br><span class="line">        acceptCount指定当所有可以使用的处理请求的线程数都被使用时，可以放到处理队列中的请求数，超过这个数的请求将不予处理</span><br><span class="line">        connectionTimeout指定超时的时间数(以毫秒为单位)</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;Connector port&#x3D;&quot;8080&quot; protocol&#x3D;&quot;HTTP&#x2F;1.1&quot;</span><br><span class="line">               connectionTimeout&#x3D;&quot;20000&quot;</span><br><span class="line">               redirectPort&#x3D;&quot;8443&quot; &#x2F;&gt;</span><br><span class="line">    &lt;Connector port&#x3D;&quot;8009&quot; protocol&#x3D;&quot;AJP&#x2F;1.3&quot; redirectPort&#x3D;&quot;8443&quot; &#x2F;&gt;</span><br><span class="line">    &lt;!--engine,核心容器组件,catalina引擎,负责通过connector接收用户请求,并处理请求,将请求转至对应的虚拟主机host</span><br><span class="line">        defaultHost指定缺省的处理请求的主机名，它至少与其中的一个host元素的name属性值是一样的</span><br><span class="line">    --&gt;</span><br><span class="line">    &lt;Engine name&#x3D;&quot;Catalina&quot; defaultHost&#x3D;&quot;localhost&quot;&gt;</span><br><span class="line">      &lt;!--Realm表示存放用户名，密码及role的数据库--&gt;</span><br><span class="line">      &lt;Realm className&#x3D;&quot;org.apache.catalina.realm.LockOutRealm&quot;&gt;</span><br><span class="line">        &lt;Realm className&#x3D;&quot;org.apache.catalina.realm.UserDatabaseRealm&quot;</span><br><span class="line">               resourceName&#x3D;&quot;UserDatabase&quot;&#x2F;&gt;</span><br><span class="line">      &lt;&#x2F;Realm&gt;</span><br><span class="line">      &lt;!--</span><br><span class="line">      host表示一个虚拟主机</span><br><span class="line">        name指定主机名</span><br><span class="line">        appBase应用程序基本目录，即存放应用程序的目录.一般为appBase&#x3D;&quot;webapps&quot; ，相对于CATALINA_HOME而言的，也可以写绝对路径。</span><br><span class="line">        unpackWARs如果为true，则tomcat会自动将WAR文件解压，否则不解压，直接从WAR文件中运行应用程序</span><br><span class="line">        autoDeploy：在tomcat启动时，是否自动部署。</span><br><span class="line">        xmlValidation：是否启动xml的校验功能，一般xmlValidation&#x3D;&quot;false&quot;。</span><br><span class="line">        xmlNamespaceAware：检测名称空间，一般xmlNamespaceAware&#x3D;&quot;false&quot;。</span><br><span class="line">      --&gt;</span><br><span class="line">      &lt;Host name&#x3D;&quot;localhost&quot;  appBase&#x3D;&quot;webapps&quot;</span><br><span class="line">            unpackWARs&#x3D;&quot;true&quot; autoDeploy&#x3D;&quot;true&quot;&gt;</span><br><span class="line">        &lt;!--</span><br><span class="line">        Context表示一个web应用程序，通常为WAR文件</span><br><span class="line">            docBase应用程序的路径或者是WAR文件存放的路径,也可以使用相对路径，起始路径为此Context所属Host中appBase定义的路径。</span><br><span class="line">            path表示此web应用程序的url的前缀，这样请求的url为http:&#x2F;&#x2F;localhost:8080&#x2F;path&#x2F;****</span><br><span class="line">            reloadable这个属性非常重要，如果为true，则tomcat会自动检测应用程序的&#x2F;WEB-INF&#x2F;lib 和&#x2F;WEB-INF&#x2F;classes目录的变化，自动装载新的应用程序，可以在不重启tomcat的情况下改变应用程序</span><br><span class="line">        --&gt;</span><br><span class="line">        &lt;Context path&#x3D;&quot;&quot; docBase&#x3D;&quot;&quot; debug&#x3D;&quot;&quot;&#x2F;&gt;</span><br><span class="line">        &lt;Valve className&#x3D;&quot;org.apache.catalina.valves.AccessLogValve&quot; directory&#x3D;&quot;logs&quot;</span><br><span class="line">               prefix&#x3D;&quot;localhost_access_log&quot; suffix&#x3D;&quot;.txt&quot;</span><br><span class="line">               pattern&#x3D;&quot;%h %l %u %t &quot;%r&quot; %s %b&quot; &#x2F;&gt;</span><br><span class="line">      &lt;&#x2F;Host&gt;</span><br><span class="line">    &lt;&#x2F;Engine&gt;</span><br><span class="line">  &lt;&#x2F;Service&gt;</span><br><span class="line">&lt;&#x2F;Server&gt;</span><br></pre></td></tr></table></figure><h1 id="第-6-章-Tomcat-端口解释展开目录"><a href="#第-6-章-Tomcat-端口解释展开目录" class="headerlink" title="第 6 章 Tomcat 端口解释展开目录"></a>第 6 章 Tomcat 端口解释展开目录</h1><p>参考博客：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;www.jianshu.com&#x2F;p&#x2F;95d6ac54fc67</span><br></pre></td></tr></table></figure><p>tomcat 启动之后默认会启动 3 个端口，分别是 8080,8009,8005</p><h1 id="8080-端口和-8443-端口展开目录"><a href="#8080-端口和-8443-端口展开目录" class="headerlink" title="8080 端口和 8443 端口展开目录"></a>8080 端口和 8443 端口展开目录</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;Connector port&#x3D;&quot;80&quot; protocol&#x3D;&quot;HTTP&#x2F;1.1&quot;</span><br><span class="line">           connectionTimeout&#x3D;&quot;20000&quot;</span><br><span class="line">           redirectPort&#x3D;&quot;8443&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure><p>这个端口用于监听浏览器发送的请求，设置为 80 后可以直接使用域名访问，但是如果使用普通账户启动的 tomcat，则不能使用小于 1024 的端口<br>8443 端口是用于 https 连接的，除了打开注释之外还需要有域名证书才可以</p><h1 id="8009-端口展开目录"><a href="#8009-端口展开目录" class="headerlink" title="8009 端口展开目录"></a>8009 端口展开目录</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Connector port&#x3D;&quot;8009&quot; protocol&#x3D;&quot;AJP&#x2F;1.3&quot; redirectPort&#x3D;&quot;8443&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure><p>Nginx 反向代理 tomcat 的时候可以使用 ajp 协议反向代理到该端口<br>不过我们常用的还是反向代理到 8080。</p><h1 id="8005-端口展开目录"><a href="#8005-端口展开目录" class="headerlink" title="8005 端口展开目录"></a>8005 端口展开目录</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Server port&#x3D;&quot;8005&quot; shutdown&#x3D;&quot;SHUTDOWN&quot;&gt;</span><br></pre></td></tr></table></figure><p>tomcat 监听的额关闭端口，就是说这个端口负责关闭 tomcat 的请求<br>当执行 shutdown.sh 关闭 tomcat 就是链接 8085 端口执行 shutdown 命令</p><h1 id="第-7-章-WEB-站点部署展开目录"><a href="#第-7-章-WEB-站点部署展开目录" class="headerlink" title="第 7 章 WEB 站点部署展开目录"></a>第 7 章 WEB 站点部署展开目录</h1><h2 id="1-使用-war-包部署-web-站点展开目录"><a href="#1-使用-war-包部署-web-站点展开目录" class="headerlink" title="1. 使用 war 包部署 web 站点展开目录"></a>1. 使用 war 包部署 web 站点展开目录</h2><p>上线的代码有两种方式，第一种方式是直接将程序目录放在 webapps 目录下面，这种方式大家已经明白了，就不多说了，第二种方式是使用开发工具将程序打包成 war 包，然后上传到 webapps 目录下面，下面我们见识一下这种方式.</p><h2 id="2-自定义默认网站目录展开目录"><a href="#2-自定义默认网站目录展开目录" class="headerlink" title="2. 自定义默认网站目录展开目录"></a>2. 自定义默认网站目录展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@sweb01 &#x2F;opt&#x2F;tomcat&#x2F;webapps]# ls</span><br><span class="line">docs  examples  host-manager  manager  ROOT</span><br><span class="line">[root@sweb01 &#x2F;opt&#x2F;tomcat&#x2F;webapps]# rz      #上传软件包</span><br><span class="line">[root@sweb01 &#x2F;opt&#x2F;tomcat&#x2F;webapps]# ls      #上传完毕后tomcat会自动解压memtest.war包</span><br><span class="line">docs  examples  host-manager  manager  memtest  memtest.war  ROOT</span><br></pre></td></tr></table></figure><h2 id="3-访问测试展开目录"><a href="#3-访问测试展开目录" class="headerlink" title="3. 访问测试展开目录"></a>3. 访问测试展开目录</h2><p>浏览器访问：<a href="https://links.jianshu.com/go?to=http://10.0.1.9:8080/memtest/meminfo.jsp">http://10.0.1.9:8080/memtest/meminfo.jsp</a></p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-80abed6733369b7d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1056/format/webp" alt="img" title="img"></p><h2 id="4-自定义默认网站目录展开目录"><a href="#4-自定义默认网站目录展开目录" class="headerlink" title="4. 自定义默认网站目录展开目录"></a>4. 自定义默认网站目录展开目录</h2><p>上面访问的的网址为:<a href="https://links.jianshu.com/go?to=http://10.0.1.9:8080/memtest/meminfo.jsp">http://10.0.1.9:8080/memtest/meminfo.jsp</a><br>现在我想访问格式为:<a href="https://links.jianshu.com/go?to=http://10.0.1.9:8080/meminfo.jsp">http://10.0.1.9:8080/meminfo.jsp</a><br>应该怎么修改呢？<br>方法一：<br>将 meminfo.jsp 或其他程序放在 tomcat/webapps/ROOT 目录下即可。因为默认网站根目录为 tomcat/webapps/ROOT<br>方法二：<br>修改配置文件，操作命令如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@sweb01 ~]# vim &#x2F;opt&#x2F;tomcat&#x2F;conf&#x2F;server.xml </span><br><span class="line">   148        &lt;Host name&#x3D;&quot;localhost&quot;  appBase&#x3D;&quot;webapps&quot;</span><br><span class="line">   149              unpackWARs&#x3D;&quot;true&quot; autoDeploy&#x3D;&quot;true&quot;&gt;</span><br><span class="line">   150              &lt;Context path&#x3D;&quot;&quot; docBase&#x3D;&quot;&#x2F;opt&#x2F;tomcat&#x2F;webapps&#x2F;memtest&quot; debug&#x3D;&quot;0&quot; reloadable&#x3D;&quot;false&quot; crossContext&#x3D;&quot;true&quot;&#x2F;&gt;</span><br></pre></td></tr></table></figure><h2 id="5-访问测试展开目录"><a href="#5-访问测试展开目录" class="headerlink" title="5. 访问测试展开目录"></a>5. 访问测试展开目录</h2><p><img src="https://upload-images.jianshu.io/upload_images/14248468-d7cd653bbacfc642.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/850/format/webp" alt="img" title="img"></p><h1 id="第-x-章-搭建-jpress-部署实践展开目录"><a href="#第-x-章-搭建-jpress-部署实践展开目录" class="headerlink" title="第 x 章 搭建 jpress 部署实践展开目录"></a>第 x 章 搭建 jpress 部署实践展开目录</h1><h2 id="1-安装配置-mariadb-数据库展开目录"><a href="#1-安装配置-mariadb-数据库展开目录" class="headerlink" title="1. 安装配置 mariadb 数据库展开目录"></a>1. 安装配置 mariadb 数据库展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@sweb01 ~]# yum -y install mariadb mariadb-server</span><br><span class="line">[root@sweb01 ~]# systemctl start mariadb.service</span><br><span class="line">[root@sweb01 ~]# mysqladmin password 123456</span><br><span class="line">[root@sweb01 ~]# mysql -uroot -p123456</span><br><span class="line">&gt; create database jpress DEFAULT CHARACTER SET utf8;</span><br><span class="line">&gt; grant all on jpress.* to jpress@&#39;10.0.1.%&#39; identified by &#39;123456&#39;;</span><br><span class="line">&gt;  flush privileges;</span><br></pre></td></tr></table></figure><h2 id="2-上传-jpress-代码展开目录"><a href="#2-上传-jpress-代码展开目录" class="headerlink" title="2. 上传 jpress 代码展开目录"></a>2. 上传 jpress 代码展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@sweb01 &#x2F;data&#x2F;soft]# ls</span><br><span class="line">apache-tomcat-8.5.43.tar.gz  jpress-web-newest.war  memtest.war</span><br><span class="line">[root@sweb01 &#x2F;data&#x2F;soft]# mv jpress-web-newest.war jpress.war</span><br><span class="line">[root@sweb01 &#x2F;data&#x2F;soft]# ll &#x2F;opt&#x2F;tomcat&#x2F;webapps&#x2F;           </span><br><span class="line">总用量 20324</span><br><span class="line">drwxr-x--- 14 root root     4096 8月  10 16:37 docs</span><br><span class="line">drwxr-x---  6 root root       78 8月  10 16:37 examples</span><br><span class="line">drwxr-x---  5 root root       82 8月  10 16:37 host-manager</span><br><span class="line">drwxr-x---  7 root root       96 8月  10 21:42 jpress</span><br><span class="line">-rw-r--r--  1 root root 20797013 8月  10 15:39 jpress.war</span><br><span class="line">drwxr-x---  2 root root       23 8月  10 21:41 logs</span><br><span class="line">drwxr-x---  5 root root       97 8月  10 16:37 manager</span><br><span class="line">drwxr-x---  3 root root       39 8月  10 17:36 memtest</span><br><span class="line">-rw-r--r--  1 root root      643 8月  10 15:39 memtest.war</span><br><span class="line">drwxr-x---  3 root root     4096 8月  10 17:41 ROOT</span><br></pre></td></tr></table></figure><h2 id="3-web-页面配置-jpress展开目录"><a href="#3-web-页面配置-jpress展开目录" class="headerlink" title="3.web 页面配置 jpress展开目录"></a>3.web 页面配置 jpress展开目录</h2><p>打开浏览器：<a href="https://links.jianshu.com/go?to=http://10.0.1.9:8080/jpress/">http://10.0.1.9:8080/jpress/</a></p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-59cee70dabc96a21.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img" title="img"></p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-c3300c0c77bec7f0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img" title="img"></p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-9b80a111231a3e23.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img" title="img"></p><p>重启一下 tomcat</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@sweb01 ~]# &#x2F;opt&#x2F;tomcat&#x2F;bin&#x2F;startup.sh</span><br><span class="line">[root@sweb01 ~]# &#x2F;opt&#x2F;tomcat&#x2F;bin&#x2F;shutdown.sh   </span><br></pre></td></tr></table></figure><p>后台登陆页面</p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-42fb54294309015d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img" title="img"></p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-a580588b1400d7d9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img" title="img"></p><p>测试写一篇文章并上传附件</p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-09344890f016171d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img" title="img"></p><p>上传文件的路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@sweb01 ~]# ll &#x2F;opt&#x2F;tomcat&#x2F;webapps&#x2F;jpress&#x2F;attachment&#x2F;20190810&#x2F;</span><br><span class="line">总用量 16</span><br><span class="line">-rw-r----- 1 root root 7630 8月  10 22:31 55f65d452e9b4fdb99a09f0c68532f6a_780x240.jpeg</span><br><span class="line">-rw-r----- 1 root root 4430 8月  10 22:31 55f65d452e9b4fdb99a09f0c68532f6a.jpeg</span><br></pre></td></tr></table></figure><p>文章内容在数据库的位置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [jpress]&gt; select * from  jpress.jpress_content\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">              id: 1</span><br><span class="line">           title: 第一篇博客</span><br><span class="line">            text: &lt;p&gt;&lt;img src&#x3D;&quot;&#x2F;jpress&#x2F;attachment&#x2F;20190810&#x2F;55f65d452e9b4fdb99a09f0c68532f6a.jpeg&quot; alt&#x3D;&quot;&quot; width&#x3D;&quot;256&quot; height&#x3D;&quot;256&quot;&gt;&lt;&#x2F;p&gt; </span><br><span class="line">&lt;p&gt;测试页面&lt;&#x2F;p&gt;</span><br><span class="line">         summary: NULL</span><br><span class="line">         link_to: NULL</span><br><span class="line"> markdown_enable: 0</span><br><span class="line">       thumbnail: NULL</span><br><span class="line">          module: article</span><br><span class="line">           style: NULL</span><br><span class="line">         user_id: 1</span><br><span class="line">          author: NULL</span><br><span class="line">      user_email: NULL</span><br><span class="line">         user_ip: NULL</span><br><span class="line">      user_agent: NULL</span><br><span class="line">       parent_id: NULL</span><br><span class="line">       object_id: NULL</span><br><span class="line">    order_number: 0</span><br><span class="line">          status: normal</span><br><span class="line">         vote_up: 0</span><br><span class="line">       vote_down: 0</span><br><span class="line">            rate: NULL</span><br><span class="line">      rate_count: 0</span><br><span class="line">           price: 0.00</span><br><span class="line">  comment_status: NULL</span><br><span class="line">   comment_count: 0</span><br><span class="line">    comment_time: NULL</span><br><span class="line">      view_count: 0</span><br><span class="line">         created: 2019-08-10 22:31:34</span><br><span class="line">        modified: 2019-08-10 22:31:34</span><br><span class="line">            slug: 第一篇博客</span><br><span class="line">            flag: NULL</span><br><span class="line">             lng: NULL</span><br><span class="line">             lat: NULL</span><br><span class="line">   meta_keywords: NULL</span><br><span class="line">meta_description: NULL</span><br><span class="line">         remarks: NULL</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><h1 id="第-8-章-zabbix-监控-tomcat展开目录"><a href="#第-8-章-zabbix-监控-tomcat展开目录" class="headerlink" title="第 8 章 zabbix 监控 tomcat展开目录"></a>第 8 章 zabbix 监控 tomcat展开目录</h1><h2 id="1-tomcat-服务器安装-zabbix-agent-服务展开目录"><a href="#1-tomcat-服务器安装-zabbix-agent-服务展开目录" class="headerlink" title="1.tomcat 服务器安装 zabbix-agent 服务展开目录"></a>1.tomcat 服务器安装 zabbix-agent 服务展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@sweb01 ~]# rpm -ivh https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;zabbix&#x2F;zabbix&#x2F;4.0&#x2F;rhel&#x2F;7&#x2F;x86_64&#x2F;zabbix-release-4.0-1.el7.noarch.rpm</span><br><span class="line">[root@sweb01 ~]# yum install zabbix-agent -y</span><br><span class="line">[root@sweb01 ~]# cat &#x2F;etc&#x2F;zabbix&#x2F;zabbix_agentd.conf    </span><br><span class="line">PidFile&#x3D;&#x2F;var&#x2F;run&#x2F;zabbix&#x2F;zabbix_agentd.pid</span><br><span class="line">LogFile&#x3D;&#x2F;var&#x2F;log&#x2F;zabbix&#x2F;zabbix_agentd.log</span><br><span class="line">LogFileSize&#x3D;0</span><br><span class="line">Server&#x3D;10.0.1.61</span><br><span class="line">ServerActive&#x3D;127.0.0.1</span><br><span class="line">Hostname&#x3D;Zabbix server</span><br><span class="line">Include&#x3D;&#x2F;etc&#x2F;zabbix&#x2F;zabbix_agentd.d&#x2F;*.conf</span><br><span class="line">[root@sweb01 ~]# systemctl restart zabbix-agent.service </span><br></pre></td></tr></table></figure><h2 id="2-tomcat-服务器修改配置文件开启远程监控功能展开目录"><a href="#2-tomcat-服务器修改配置文件开启远程监控功能展开目录" class="headerlink" title="2.tomcat 服务器修改配置文件开启远程监控功能展开目录"></a>2.tomcat 服务器修改配置文件开启远程监控功能展开目录</h2><p>注意！建议把下面的参数放在最前面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@sweb01 ~]# head -7 &#x2F;opt&#x2F;tomcat&#x2F;bin&#x2F;catalina.sh  </span><br><span class="line">#!&#x2F;bin&#x2F;sh</span><br><span class="line">CATALINA_OPTS&#x3D;&quot;$CATALINA_OPTS</span><br><span class="line">-Dcom.sun.management.jmxremote </span><br><span class="line">-Dcom.sun.management.jmxremote.port&#x3D;12345  </span><br><span class="line">-Dcom.sun.management.jmxremote.authenticate&#x3D;false </span><br><span class="line">-Dcom.sun.management.jmxremote.ssl&#x3D;false </span><br><span class="line">-Djava.rmi.server.hostname&#x3D;10.0.1.9&quot;</span><br></pre></td></tr></table></figure><p>重启 tomcat</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@sweb01 ~]# &#x2F;opt&#x2F;tomcat&#x2F;bin&#x2F;shutdown.sh </span><br><span class="line">[root@sweb01 ~]# &#x2F;opt&#x2F;tomcat&#x2F;bin&#x2F;startup.sh </span><br></pre></td></tr></table></figure><h2 id="3-修改-hosts-解析展开目录"><a href="#3-修改-hosts-解析展开目录" class="headerlink" title="3. 修改 hosts 解析展开目录"></a>3. 修改 hosts 解析展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@sweb01 ~]# tail -1 &#x2F;etc&#x2F;hosts</span><br><span class="line">10.0.1.9  sweb01</span><br></pre></td></tr></table></figure><h2 id="4-检查进程和端口号展开目录"><a href="#4-检查进程和端口号展开目录" class="headerlink" title="4. 检查进程和端口号展开目录"></a>4. 检查进程和端口号展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@sweb01 ~]# ps -ef|grep java           </span><br><span class="line">root       3790      1 99 23:37 pts&#x2F;0    00:00:01 &#x2F;usr&#x2F;bin&#x2F;java -Djava.util.logging.config.file&#x3D;&#x2F;opt&#x2F;tomcat&#x2F;conf&#x2F;logging.properties -Djava.util.logging.manager&#x3D;org.apache.juli.ClassLoaderLogManager -Djdk.tls.ephemeralDHKeySize&#x3D;2048 -Djava.protocol.handler.pkgs&#x3D;org.apache.catalina.webresources -Dorg.apache.catalina.security.SecurityListener.UMASK&#x3D;0027 -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port&#x3D;12345 -Dcom.sun.management.jmxremote.authenticate&#x3D;false -Dcom.sun.management.jmxremote.ssl&#x3D;false -Djava.rmi.server.hostname&#x3D;10.0.1.9 -Dignore.endorsed.dirs&#x3D; -classpath &#x2F;opt&#x2F;tomcat&#x2F;bin&#x2F;bootstrap.jar:&#x2F;opt&#x2F;tomcat&#x2F;bin&#x2F;tomcat-juli.jar -Dcatalina.base&#x3D;&#x2F;opt&#x2F;tomcat -Dcatalina.home&#x3D;&#x2F;opt&#x2F;tomcat -Djava.io.tmpdir&#x3D;&#x2F;opt&#x2F;tomcat&#x2F;temp org.apache.catalina.startup.Bootstrap start</span><br><span class="line">root       3810   1834  0 23:37 pts&#x2F;0    00:00:00 grep -E --color&#x3D;auto --color&#x3D;auto java</span><br><span class="line">[root@sweb01 ~]# ss -lntup|grep 12345</span><br><span class="line">tcp    LISTEN     0      50       :::12345                :::*                   users:((&quot;java&quot;,pid&#x3D;3790,fd&#x3D;20))</span><br></pre></td></tr></table></figure><h2 id="5-zabbi-服务器上的配置操作展开目录"><a href="#5-zabbi-服务器上的配置操作展开目录" class="headerlink" title="5.zabbi 服务器上的配置操作展开目录"></a>5.zabbi 服务器上的配置操作展开目录</h2><p>安装 java</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# yum install java-1.8.0 -y</span><br><span class="line">[root@m01 ~]# java  -version</span><br><span class="line">openjdk version &quot;1.8.0_222&quot;</span><br><span class="line">OpenJDK Runtime Environment (build 1.8.0_222-b10)</span><br><span class="line">OpenJDK 64-Bit Server VM (build 25.222-b10, mixed mode)</span><br></pre></td></tr></table></figure><p>安装并启动 zabbix-java-gateway 服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# yum install zabbix-java-gateway.x86_64 -y</span><br><span class="line">[root@m01 ~]# systemctl start zabbix-java-gateway.service</span><br></pre></td></tr></table></figure><p>修改 zabbix_server.conf 配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# grep &quot;Java&quot; &#x2F;etc&#x2F;zabbix&#x2F;zabbix_server.conf|grep -v &quot;#&quot;</span><br><span class="line">JavaGateway&#x3D;127.0.0.1</span><br><span class="line">JavaGatewayPort&#x3D;10052</span><br><span class="line">StartJavaPollers&#x3D;5</span><br></pre></td></tr></table></figure><p>重启 zabbix 服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# systemctl restart httpd</span><br><span class="line">[root@m01 ~]# systemctl restart zabbix-server.service </span><br><span class="line">[root@m01 ~]# systemctl restart zabbix-java-gateway.service </span><br></pre></td></tr></table></figure><p>zabbix 网页操作</p><p><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071203225240-1024x525.png" alt="img" title="img"></p><p><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071203235424-1024x476.png" alt="img" title="img"></p><p><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071203235917-1024x63.png" alt="img" title="img"></p><p><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071203240528-1024x401.png" alt="img" title="img"></p><h1 id="第-9-章-tomcat-多实例及反向代理展开目录"><a href="#第-9-章-tomcat-多实例及反向代理展开目录" class="headerlink" title="第 9 章 tomcat 多实例及反向代理展开目录"></a>第 9 章 tomcat 多实例及反向代理展开目录</h1><h2 id="1-tomcat-多实例介绍展开目录"><a href="#1-tomcat-多实例介绍展开目录" class="headerlink" title="1.tomcat 多实例介绍展开目录"></a>1.tomcat 多实例介绍展开目录</h2><p>其本质就是复制多个 tomcat 目录，然后修改为不同的端口并启动<br>代码一致，但是公用一个数据库</p><h2 id="2-复制目录展开目录"><a href="#2-复制目录展开目录" class="headerlink" title="2. 复制目录展开目录"></a>2. 复制目录展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@sweb01 ~]# cd &#x2F;opt&#x2F;</span><br><span class="line">[root@sweb01 &#x2F;opt]# cp -a apache-tomcat-8.5.43 tomcat_01</span><br><span class="line">[root@sweb01 &#x2F;opt]# cp -a apache-tomcat-8.5.43 tomcat_02</span><br></pre></td></tr></table></figure><h2 id="3-修改配置文件展开目录"><a href="#3-修改配置文件展开目录" class="headerlink" title="3. 修改配置文件展开目录"></a>3. 修改配置文件展开目录</h2><p>修改端口号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@sweb01 &#x2F;opt]# sed -i &#39;s#8005#8006#g&#39;  tomcat_01&#x2F;conf&#x2F;server.xml </span><br><span class="line">[root@sweb01 &#x2F;opt]# sed -i &#39;s#8009#8010#g&#39;  tomcat_01&#x2F;conf&#x2F;server.xml</span><br><span class="line">[root@sweb01 &#x2F;opt]# sed -i &#39;s#8080#8081#g&#39;  tomcat_01&#x2F;conf&#x2F;server.xml </span><br><span class="line">[root@sweb01 &#x2F;opt]# </span><br><span class="line">[root@sweb01 &#x2F;opt]# sed -i &#39;s#8005#8007#g&#39;  tomcat_02&#x2F;conf&#x2F;server.xml </span><br><span class="line">[root@sweb01 &#x2F;opt]# sed -i &#39;s#8009#8011#g&#39;  tomcat_02&#x2F;conf&#x2F;server.xml</span><br><span class="line">[root@sweb01 &#x2F;opt]# sed -i &#39;s#8080#8082#g&#39;  tomcat_02&#x2F;conf&#x2F;server.xml</span><br></pre></td></tr></table></figure><p>删除自定义的配置路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">150             &lt;Context path&#x3D;&quot;&quot; docBase&#x3D;&quot;&#x2F;opt&#x2F;tomcat_02&#x2F;webapps&#x2F;memtest&quot; debug&#x3D;&quot;0&quot; reloadable&#x3D;&quot;false&quot; crossContext&#x3D;&quot;true&quot;&#x2F;&gt;</span><br></pre></td></tr></table></figure><p>修改监听端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@sweb01 ~]# grep &quot;1234&quot; &#x2F;opt&#x2F;tomcat_01&#x2F;bin&#x2F;catalina.sh  </span><br><span class="line">-Dcom.sun.management.jmxremote.port&#x3D;12345 </span><br><span class="line">[root@sweb01 ~]# grep &quot;1234&quot; &#x2F;opt&#x2F;tomcat_02&#x2F;bin&#x2F;catalina.sh               </span><br><span class="line">-Dcom.sun.management.jmxremote.port&#x3D;12346 </span><br></pre></td></tr></table></figure><h2 id="4-启动多实例展开目录"><a href="#4-启动多实例展开目录" class="headerlink" title="4. 启动多实例展开目录"></a>4. 启动多实例展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@sweb01 &#x2F;opt&#x2F;tomcat_02&#x2F;conf]# &#x2F;opt&#x2F;tomcat_01&#x2F;bin&#x2F;startup.sh </span><br><span class="line">Using CATALINA_BASE:   &#x2F;opt&#x2F;tomcat_01</span><br><span class="line">Using CATALINA_HOME:   &#x2F;opt&#x2F;tomcat_01</span><br><span class="line">Using CATALINA_TMPDIR: &#x2F;opt&#x2F;tomcat_01&#x2F;temp</span><br><span class="line">Using JRE_HOME:        &#x2F;usr</span><br><span class="line">Using CLASSPATH:       &#x2F;opt&#x2F;tomcat_01&#x2F;bin&#x2F;bootstrap.jar:&#x2F;opt&#x2F;tomcat_01&#x2F;bin&#x2F;tomcat-juli.jar</span><br><span class="line">Tomcat started.</span><br><span class="line">[root@sweb01 ~]# &#x2F;opt&#x2F;tomcat_02&#x2F;bin&#x2F;startup.sh </span><br><span class="line">Using CATALINA_BASE:   &#x2F;opt&#x2F;tomcat_02</span><br><span class="line">Using CATALINA_HOME:   &#x2F;opt&#x2F;tomcat_02</span><br><span class="line">Using CATALINA_TMPDIR: &#x2F;opt&#x2F;tomcat_02&#x2F;temp</span><br><span class="line">Using JRE_HOME:        &#x2F;usr</span><br><span class="line">Using CLASSPATH:       &#x2F;opt&#x2F;tomcat_02&#x2F;bin&#x2F;bootstrap.jar:&#x2F;opt&#x2F;tomcat_02&#x2F;bin&#x2F;tomcat-juli.jar</span><br><span class="line">Tomcat started.</span><br></pre></td></tr></table></figure><h2 id="5-查看服务是否启动展开目录"><a href="#5-查看服务是否启动展开目录" class="headerlink" title="5. 查看服务是否启动展开目录"></a>5. 查看服务是否启动展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@sweb01 ~]# ss -lntup|grep java</span><br><span class="line">tcp    LISTEN     0      100      :::8010                 :::*                   users:((&quot;java&quot;,pid&#x3D;5874,fd&#x3D;57))</span><br><span class="line">tcp    LISTEN     0      100      :::8011                 :::*                   users:((&quot;java&quot;,pid&#x3D;6076,fd&#x3D;57))</span><br><span class="line">tcp    LISTEN     0      100      :::8081                 :::*                   users:((&quot;java&quot;,pid&#x3D;5874,fd&#x3D;53))</span><br><span class="line">tcp    LISTEN     0      100      :::8082                 :::*                   users:((&quot;java&quot;,pid&#x3D;6076,fd&#x3D;53))</span><br><span class="line">tcp    LISTEN     0      50       :::12345                :::*                   users:((&quot;java&quot;,pid&#x3D;5874,fd&#x3D;20))</span><br><span class="line">tcp    LISTEN     0      50       :::12346                :::*                   users:((&quot;java&quot;,pid&#x3D;6076,fd&#x3D;20))</span><br><span class="line">tcp    LISTEN     0      50       :::36383                :::*                   users:((&quot;java&quot;,pid&#x3D;5874,fd&#x3D;23))</span><br><span class="line">tcp    LISTEN     0      50       :::59493                :::*                   users:((&quot;java&quot;,pid&#x3D;5874,fd&#x3D;19))</span><br><span class="line">tcp    LISTEN     0      1      ::ffff:127.0.0.1:8006                 :::*                   users:((&quot;java&quot;,pid&#x3D;5874,fd&#x3D;77))</span><br><span class="line">tcp    LISTEN     0      1      ::ffff:127.0.0.1:8007                 :::*                   users:((&quot;java&quot;,pid&#x3D;6076,fd&#x3D;77))</span><br><span class="line">tcp    LISTEN     0      50       :::46535                :::*                   users:((&quot;java&quot;,pid&#x3D;6076,fd&#x3D;23))</span><br><span class="line">tcp    LISTEN     0      50       :::46471                :::*                   users:((&quot;java&quot;,pid&#x3D;6076,fd&#x3D;19)</span><br></pre></td></tr></table></figure><h2 id="6-浏览器测试多实例展开目录"><a href="#6-浏览器测试多实例展开目录" class="headerlink" title="6. 浏览器测试多实例展开目录"></a>6. 浏览器测试多实例展开目录</h2><p><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071203244065.png" alt="img" title="img"></p><p><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071203243619.png" alt="img" title="img"></p><h1 id="第-10-章-tomcat-集群配置展开目录"><a href="#第-10-章-tomcat-集群配置展开目录" class="headerlink" title="第 10 章 tomcat 集群配置展开目录"></a>第 10 章 tomcat 集群配置展开目录</h1><h2 id="1-实验环境准备展开目录"><a href="#1-实验环境准备展开目录" class="headerlink" title="1. 实验环境准备展开目录"></a>1. 实验环境准备展开目录</h2><p>a. 多实例 tomcat 8081 8082<br>b. 数据库使用共有的 db 10.0.1.9:3306<br>c. 代码使用各自目录的 jpress<br>d. 使用 nginx 反向代理到后端的 2 个端口</p><h2 id="2-安装配置-nginx展开目录"><a href="#2-安装配置-nginx展开目录" class="headerlink" title="2. 安装配置 nginx展开目录"></a>2. 安装配置 nginx展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@sweb01 ~]# cat &#x2F;etc&#x2F;yum.repos.d&#x2F;nginx.repo</span><br><span class="line">[nginx-stable]</span><br><span class="line">name&#x3D;nginx stable repo</span><br><span class="line">baseurl&#x3D;http:&#x2F;&#x2F;nginx.org&#x2F;packages&#x2F;centos&#x2F;$releasever&#x2F;$basearch&#x2F;</span><br><span class="line">gpgcheck&#x3D;1</span><br><span class="line">enabled&#x3D;1</span><br><span class="line">gpgkey&#x3D;https:&#x2F;&#x2F;nginx.org&#x2F;keys&#x2F;nginx_signing.key</span><br><span class="line"></span><br><span class="line">[nginx-mainline]</span><br><span class="line">name&#x3D;nginx mainline repo</span><br><span class="line">baseurl&#x3D;http:&#x2F;&#x2F;nginx.org&#x2F;packages&#x2F;mainline&#x2F;centos&#x2F;$releasever&#x2F;$basearch&#x2F;</span><br><span class="line">gpgcheck&#x3D;1</span><br><span class="line">enabled&#x3D;0</span><br><span class="line">gpgkey&#x3D;https:&#x2F;&#x2F;nginx.org&#x2F;keys&#x2F;nginx_signing.key</span><br><span class="line">[root@sweb01 ~]# yum install nginx -y</span><br></pre></td></tr></table></figure><h2 id="3-创建代理配置文件展开目录"><a href="#3-创建代理配置文件展开目录" class="headerlink" title="3. 创建代理配置文件展开目录"></a>3. 创建代理配置文件展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@sweb01 &#x2F;etc&#x2F;nginx&#x2F;conf.d]# cat &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;proxy.conf </span><br><span class="line">upstream java &#123;</span><br><span class="line">    server 10.0.1.9:8081;</span><br><span class="line">    server 10.0.1.9:8082;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  www.oldzhang.com;</span><br><span class="line">    root   html;</span><br><span class="line">    index  index.html index.htm;</span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line">        proxy_pass http:&#x2F;&#x2F;java;</span><br><span class="line">        proxy_set_header Host $http_host;</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-检查并启动-nginx展开目录"><a href="#4-检查并启动-nginx展开目录" class="headerlink" title="4. 检查并启动 nginx展开目录"></a>4. 检查并启动 nginx展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@sweb01 &#x2F;etc&#x2F;nginx&#x2F;conf.d]# nginx -t</span><br><span class="line">nginx: the configuration file &#x2F;etc&#x2F;nginx&#x2F;nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file &#x2F;etc&#x2F;nginx&#x2F;nginx.conf test is successful</span><br><span class="line">[root@sweb01 ~]# systemctl start nginx</span><br></pre></td></tr></table></figure><h2 id="5-网页访问展开目录"><a href="#5-网页访问展开目录" class="headerlink" title="5. 网页访问展开目录"></a>5. 网页访问展开目录</h2><p><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071203251055-1024x655.png" alt="img" title="img"></p><h1 id="第-11-章-tomcat-安全优化展开目录"><a href="#第-11-章-tomcat-安全优化展开目录" class="headerlink" title="第 11 章 tomcat 安全优化展开目录"></a>第 11 章 tomcat 安全优化展开目录</h1><p>降权启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp -a apache-tomcat-8.0.27 &#x2F;home&#x2F;zy&#x2F;tomcat</span><br><span class="line">chown -R  zy.zy &#x2F;home&#x2F;zy&#x2F;tomcat</span><br><span class="line">[zy@CentOS7 ~]$ .&#x2F;tomcat&#x2F;bin&#x2F;startup.sh</span><br></pre></td></tr></table></figure><p>telnet 管理端口保护<br>ajp 连接端口保护<br>禁用管理端</p><h1 id="第-x-章-tomcat-性能优化展开目录"><a href="#第-x-章-tomcat-性能优化展开目录" class="headerlink" title="第 x 章 tomcat 性能优化展开目录"></a>第 x 章 tomcat 性能优化展开目录</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#屏蔽dns查询enableLookups&#x3D;&quot;false&quot;;</span><br><span class="line">vim &#x2F;application&#x2F;tomcat&#x2F;conf&#x2F;server.xml</span><br><span class="line">    &lt;Connector  port&#x3D;&quot;8081&quot; protocol&#x3D;&quot;HTTP&#x2F;1.1&quot;</span><br><span class="line">               connectionTimeout&#x3D;&quot;6000&quot; enableLookups&#x3D;&quot;false&quot; acceptCount&#x3D;&quot;800&quot;</span><br><span class="line">               redirectPort&#x3D;&quot;8443&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure><h1 id="第-12-章-jvm-调优展开目录"><a href="#第-12-章-jvm-调优展开目录" class="headerlink" title="第 12 章 jvm 调优展开目录"></a>第 12 章 jvm 调优展开目录</h1><p>Tomcat 最吃内存，只要内存足够，这只猫就跑的很快。<br>如果系统资源有限，那就需要进行调优，提高资源使用率。<br>优化 catalina.sh 配置文件。在 catalina.sh 配置文件中添加以下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">JAVA_OPTS&#x3D;&quot;-Djava.awt.headless&#x3D;true -Dfile.encoding&#x3D;UTF-8 -server -Xms1024m -Xmx1024m -XX:NewSize&#x3D;512m -XX:MaxNewSize&#x3D;512m -XX:PermSize&#x3D;512m -XX:MaxPermSize&#x3D;512m&quot;</span><br><span class="line">server:一定要作为第一个参数，在多个CPU时性能佳</span><br><span class="line">-Xms：初始堆内存Heap大小，使用的最小内存,cpu性能高时此值应设的大一些</span><br><span class="line">-Xmx：初始堆内存heap最大值，使用的最大内存</span><br><span class="line">上面两个值是分配JVM的最小和最大内存，取决于硬件物理内存的大小，建议均设为物理内存的一半。</span><br><span class="line">-XX:PermSize:设定内存的永久保存区域</span><br><span class="line">-XX:MaxPermSize:设定最大内存的永久保存区域</span><br><span class="line">-XX:MaxNewSize:</span><br><span class="line">-Xss 15120 这使得JBoss每增加一个线程（thread)就会立即消耗15M内存，而最佳值应该是128K,默认值好像是512k.</span><br><span class="line">+XX:AggressiveHeap 会使得 Xms没有意义。这个参数让jvm忽略Xmx参数,疯狂地吃完一个G物理内存,再吃尽一个G的swap。</span><br><span class="line">-Xss：每个线程的Stack大小</span><br><span class="line">-verbose:gc 现实垃圾收集信息</span><br><span class="line">-Xloggc:gc.log 指定垃圾收集日志文件</span><br><span class="line">-Xmn：young generation的heap大小，一般设置为Xmx的3、4分之一</span><br><span class="line">-XX:+UseParNewGC ：缩短minor收集的时间</span><br><span class="line">-XX:+UseConcMarkSweepGC ：缩短major收集的时间</span><br></pre></td></tr></table></figure><h1 id="第-13-章-Tomcat-启动慢解决展开目录"><a href="#第-13-章-Tomcat-启动慢解决展开目录" class="headerlink" title="第 13 章 Tomcat 启动慢解决展开目录"></a>第 13 章 Tomcat 启动慢解决展开目录</h1><p>没优化之前的启动时间</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@sweb01 ~]# tail -1 &#x2F;opt&#x2F;tomcat&#x2F;logs&#x2F;catalina.out  </span><br><span class="line">12-Aug-2019 19:59:30.207 信息 [main] org.apache.catalina.startup.Catalina.start Server startup in 66131 ms</span><br></pre></td></tr></table></figure><p>解决方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@sweb01 ~]# find &#x2F; -name &quot;java.security&quot;</span><br><span class="line">&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;java-1.8.0-openjdk-1.8.0.222.b10-0.el7_6.x86_64&#x2F;jre&#x2F;lib&#x2F;security&#x2F;java.security</span><br><span class="line">[root@sweb01 ~]# vim &#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;java-1.8.0-openjdk-1.8.0.222.b10-0.el7_6.x86_64&#x2F;jre&#x2F;lib&#x2F;security&#x2F;java.security </span><br><span class="line">[root@sweb01 ~]# sed -n &#39;117p&#39; &#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;java-1.8.0-openjdk-1.8.0.222.b10-0.el7_6.x86_64&#x2F;jre&#x2F;lib&#x2F;security&#x2F;java.security               </span><br><span class="line">securerandom.source&#x3D;file:&#x2F;dev&#x2F;urandom</span><br></pre></td></tr></table></figure><p>优化后的启动时间</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@sweb01 ~]# tail -1 &#x2F;opt&#x2F;tomcat&#x2F;logs&#x2F;catalina.out  </span><br><span class="line">12-Aug-2019 20:11:16.619 信息 [main] org.apache.catalina.startup.Catalina.start Server startup in 2606 ms</span><br></pre></td></tr></table></figure><h1 id="第-14-章-打包和解压-war-包展开目录"><a href="#第-14-章-打包和解压-war-包展开目录" class="headerlink" title="第 14 章 打包和解压 war 包展开目录"></a>第 14 章 打包和解压 war 包展开目录</h1><p>使用 jkd 二进制包自带的 jar 命令可以打包和解压 war 包</p><p>解压命令<br>/opt/jdk1.8.0_60/bin/jar -xvf jpress-web-newest.war</p><p>打包命令<br>/opt/jdk1.8.0_60/bin/jar -cvfM0 jpress.war ./</p><h1 id="第-15-章-ansible-启动-tomcat展开目录"><a href="#第-15-章-ansible-启动-tomcat展开目录" class="headerlink" title="第 15 章 ansible 启动 tomcat展开目录"></a>第 15 章 ansible 启动 tomcat展开目录</h1><p>参考博客：<br><a href="https://www.jianshu.com/p/91014c311c09">https://www.jianshu.com/p/91014c311c09</a></p><p>如果直接使用 ansible 的 shell 模块启动 tomcat 会发现并不能启动成功，需要使用 chdir 切换工作目录并结合 nohub 放在后台启动<br>下面是一个简单的测试剧本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~&#x2F;tomcat]# cat tomcat.yml </span><br><span class="line">- hosts: tomcat</span><br><span class="line">  tasks:</span><br><span class="line"></span><br><span class="line">  - name: 01-start-tomcat</span><br><span class="line">    shell: chdir&#x3D;&#x2F;opt&#x2F;tomcat&#x2F;bin nohup .&#x2F;startup.sh start &amp;</span><br><span class="line"></span><br><span class="line">  - name: 02-copy-jpress</span><br><span class="line">    copy: </span><br><span class="line">      src: &#x2F;root&#x2F;tomcat&#x2F;jpress.war</span><br><span class="line">      dest: &#x2F;opt&#x2F;tomcat&#x2F;webapps</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tomcat </tag>
            
            <tag> Web服务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shell 脚本基础</title>
      <link href="/posts/15563/"/>
      <url>/posts/15563/</url>
      
        <content type="html"><![CDATA[<h2 id="1-shell的基本语法"><a href="#1-shell的基本语法" class="headerlink" title="1. shell的基本语法"></a><strong>1. shell的基本语法</strong></h2><h3 id="1-1-什么是shell"><a href="#1-1-什么是shell" class="headerlink" title="1.1 什么是shell"></a><strong>1.1 什么是shell</strong></h3><p>hell是一个命令解释器，它在操作系统的最外层，负责直接与用户进行对话，把用户的输入解释给操作系统，并处理各种各样的操作系统的输出结果，输出到屏幕反馈给用户。这种对话方式可是交互也可以是非交互式的</p><p><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071507291329.png"></p><p>我们所输入的命令计算机是不识别的，这时就需要程序来帮我们进行翻译，变成计算机能识别的二进制程序，同时又把计算机生成的结果返回给我们。</p><h3 id="1-2-什么是shell脚本"><a href="#1-2-什么是shell脚本" class="headerlink" title="1.2 什么是shell脚本"></a><strong>1.2 什么是shell脚本</strong></h3><p>shell脚本：就是说我们把原来linux命令或语句放在一个文件中，然后通过这个程序文件去执行时，我们就说这个程序为shell脚本或shell程序；我们可以在脚本中输入一系统的命令以及相关的语法语句组合，比如变量，流程控制语句等，把他们有机结合起来就形成了一个功能强大的shell脚本。<br><strong>让我们来写一个脚本体验一下</strong><br>[root@hutt ~ ]# vim test.sh<br>#!/bin/bash<br>#This is shell.<br>echo “hello world”<br>mkdir /test<br>touch /test/1.txt<br><strong>注释：<br>1、!/bin/bash 作用： 告诉脚本使用的是那种命令解释器。 如果不指shell，以当前shell作为执行的shell。<br>2、在shell中以#表示开头，整个行就被当作一个注释。执行时被忽略。<br>3、shell程序一般以.sh结尾</strong><br><strong>创建shell程序的步骤：</strong><br><strong>第一步：创建一个包含命令和控制结构的文件。</strong><br><strong>第二步：修改这个文件的权限使它可以执行。 使用chmod +x  test.sh</strong><br><strong>第三步：检测语法错误</strong><br><strong>第四步：执行 ./example</strong><br><strong>shell脚本的执行通常有以下几种方式</strong><br><strong>1、/root/test.sh  或者 ./test.sh (当前路径下执行脚本的话要有执行权限chmod +x test.sh)</strong><br><strong>2、bash test.sh 或 sh test.sh  （这种方式可以不对脚本文件添加执行权限）</strong><br><strong>3、source test.sh (可以没有执行权限)</strong><br><strong>4、sh &lt; test.sh 或者 cat test.sh |sh(bash)</strong></p><h2 id="2-Shell变量及运用"><a href="#2-Shell变量及运用" class="headerlink" title="2. Shell变量及运用"></a><strong>2. Shell变量及运用</strong></h2><h3 id="2-1-shell变量"><a href="#2-1-shell变量" class="headerlink" title="2.1 shell变量"></a><strong>2.1 shell变量</strong></h3><p><strong>变量是shell 传递数据的一种方法。变量是用来代表每个值的符号名。我们可以把变量当成一个容器，通过变量**</strong>，可以在内存中存储数据。也**<strong>可以在脚本执行中进行修改和访问存储的数据</strong></p><p><strong>变量的设置规则：</strong></p><ul><li><strong><strong>变量名称通常是大写字母，它可以由数字、字母（大小写）和下划线_组成。</strong></strong><br><strong><strong>变量名区分大小写；</strong></strong><br><strong>**但是大家要注意变量名称不能以数字开头</strong>等号 = 用于为变量分配值，在使用过程中等号两边不能有空格变量存储的数据类型是整数值和字符串值在对变量赋于字符串值时，建议大家用引号将其括起来。**<br><strong>因为如果字符串中存在空格隔符号。</strong><br><strong>需要使用单引号或双引号要对变量进行调用，可以在变量名称前加美元符号$如果需要增加变量的值，那么可以进行变量值的叠加。不过变量需要用双引号包含“$变量名”或用${变量名}包含</strong></li><li><strong>变量的分类</strong></li><li><strong>按照变量的作用可以分成4类：</strong></li><li><strong>1、用户自定义变量</strong></li><li><strong>2、环境变量：这种变量中主要保存的是和系统操作环境相关的数据。</strong></li><li><strong>3、位置参数变量：这种变量主要是用来向脚本当中传递参数或数据的，变量名不能自定义，变量作用是固定的。</strong></li><li><strong>4、预定义变量：是Bash中已经定义好的变量，变量名不能自定义，变量作用也是固定的。按照变量作用域可以分成2类：全局变量和局部变量。局部变量是shell 程序内部定义的，其使用范围仅限于定义它的程序，对其它程序不可见。包括：用户自定义变量、位置变量和预定义变量。全局变量是环境变量，其值不随shell 脚本的执行结束而消失。</strong></li></ul><h3 id="2-2-用户定义变量"><a href="#2-2-用户定义变量" class="headerlink" title="2.2 用户定义变量"></a><strong>2.2 用户定义变量</strong></h3><p><strong>变量名命名规则：由字母或下划线打头，不允许数字开头,后面由字母、数字或下划线组成，并且大小写字母意义不同。在使用变量时，在变量名前加$</strong><br>例 1: 给变量VAR1赋值<br>[root@hututu ~]# VAR1=123<br>[root@hututu ~]# echo $VAR1<br>123  </p><p><strong>例2：错误的赋值方式,不允许数字开头，等号两边不能有空格</strong><br>[root@hututu ~]# VAR2 =456<br>bash: VAR2: 未找到命令…<br>[root@hututu ~]# VAR2= 456<br>bash: 456: 未找到命令…<br>[root@hututu ~]# VAR2 = 456<br>bash: VAR2: 未找到命令…  </p><p><strong>例3：变量值的叠加，使用${}</strong><br><strong>$name是${name}的简化版本，但是在某些情况下，还必须使用花括号引起的方式来消除歧义并避免意外的结果</strong><br>[root@hututu ~]# VAR3=mysql<br>[root@hututu ~]# echo $VAR3<br>mysql<br>[root@hututu ~]# echo $VAR3-db.log<br>mysql-db.log<br>[root@hututu ~]# echo $VAR3.db.log<br>mysql.db.log<br>[root@hututu ~]# echo $VAR3db.log<br>.log （输出的并不是想要的结果）<br>[root@hututu ~]# echo ${VAR3}db.log<br>mysqldb.log （加上大括号后的效果）</p><h3 id="2-3-命令的替换，使用-或反引号"><a href="#2-3-命令的替换，使用-或反引号" class="headerlink" title="2.3 命令的替换，使用$()或反引号"></a><strong>2.3 命令的替换，使用$()或反引号</strong></h3><p><strong>例1：在命令就调用date命令</strong><br><strong>扩展：date命令是显示或设置系统时间与日期。</strong><br><strong>-s&lt;字符串&gt;：根据字符串来设置日期与时间。字符串前后必须加上双引号；</strong><br><strong>&lt;+时间日期格式&gt;：指定显示时，使用特定的日期时间格式。</strong><br><strong>例：格式化输出：</strong><br>[root@hututu ~]# date +”%Y-%m-%d” （<strong>今天时间，一般备份数据需要用这个</strong>）<br>2019-05-18<br>[root@hututu ~]# date +”%Y-%m” （只显示年月）<br>2019-05<br>[root@hututu ~]# date +”%Y-%m-%d %H:%M.%S” (期日和时间)<br>2019-05-18 19:44.27<br>[root@hututu ~]# date +”%Y/%m/%d %H/%M/%S” （使用/作为分隔符号）<br>2019/05/18 19/45/45<br>[root@hututu ~]# date +”%Y-%m-%d-%H-%M-%S”<br>2019-05-18-19-47-15<br>[root@hututu ~]# date +”%y-%m-%d-%H-%M-%S”<br>19-05-18-19-48-14<br>注: %y 年份只显示后两位 %Y 年份显示4位</p><p><strong>date命令加减操作：</strong><br><strong>date +%Y%m%d                   显示当天年月日</strong><br><strong>date -d “+1 day” +%Y%m%d       显示明天的日期</strong><br><strong>date -d “-1 day” +%Y%m%d       显示昨天的日期</strong><br><strong>date -d “-1 month” +%Y%m%d     显示上一月的日期</strong><br><strong>date -d “+1 month” +%Y%m%d     显示下一月的日期</strong><br><strong>date -d “-1 year” +%Y%m%d      显示前一年的日期</strong><br><strong>date -d “+1 year” +%Y%m%d      显示下一年的日期</strong><br><strong>设定时间：</strong><br><strong>date -s 20190523</strong><br><strong>设置成20120523，这样会把具体时间设置成空00:00:00</strong><br><strong>date -s 01:01:01</strong><br><strong>设置具体时间，不会对日期做更改</strong><br><strong>date -s “2019-05-23 01:01:01”</strong><br><strong>这样可以设置全部时间</strong>  </p><p><strong>例 1: 在命令中调用date命令输出值</strong><br>[root@hututu ~]# echo date<br>2019年 05月 18日 星期六 19:53:05 CST<br>[root@hututu ~]# echo $(date)<br>2019年 05月 18日 星期六 19:53:55 CST<br>[root@hututu ~]# echo `date +“%Y-%m-%d`<br>2019-05-18</p><h3 id="2-4-命令的嵌套使用，使用"><a href="#2-4-命令的嵌套使用，使用" class="headerlink" title="2.4  命令的嵌套使用，使用$( $( ))"></a><strong>2.4  命令的嵌套使用，使用$( $( ))</strong></h3><p>[root@hututu ~]# find /root/ -name *.txt<br>/root/.cache/tracker/db-version.txt<br>/root/.cache/tracker/db-locale.txt<br>/root/.cache/tracker/miner-applications-locale.txt<br>/root/.cache/tracker/last-crawl.txt<br>/root/.cache/tracker/first-index.txt<br>[root@hututu ~]# VAR4=$(tar zcvf root.tar.gz$(find /root/ -name *.txt))<br>tar: 从成员名中删除开头的“/”<br>/root/.cache/tracker/db-version.txt<br>/root/.cache/tracker/db-locale.txt<br>/root/.cache/tracker/miner-applications-locale.txt<br>/root/.cache/tracker/last-crawl.txt<br>/root/.cache/tracker/first-index.txt<br>[root@hututu ~]# echo $VAR4 （查看值，VAR4中存储着tar的标准输出）<br>/root/.cache/tracker/db-locale.txt<br>/root/.cache/tracker/miner-applications-locale.txt<br>/root/.cache/tracker/last-crawl.txt<br>/root/.cache/tracker/first-index.txt</p><h3 id="2-5-Shell中单引号和双引号区别"><a href="#2-5-Shell中单引号和双引号区别" class="headerlink" title="2.5 Shell中单引号和双引号区别"></a><strong>2.5 Shell中单引号和双引号区别</strong></h3><p><strong>‘’  在单引号中所有的字符包括特殊字符（$,’’,`和\）都将解释成字符本身而成为普通字符。**<br>**“”  在双引号中，除了$, ‘’, `和\以外所有的字符都解释成字符本身，拥有“调用变量的值”、“引用命令”和“转义符”的特殊含义</strong><br><strong>注：\转义符，跟在\之后的特殊符号将失去特殊含义，变为普通字符。如\$将输出“$”符号，而不当做是变量引用</strong><br><strong>列：</strong><br>[root@hututu ~]# echo $VAR1<br>123<br>[root@hututu ~]# echo \$VAR1<br>$VAR1  </p><p><strong>例 1: 给变量赋予多个单词，需要使用单引号和双引号</strong><br>[root@hututu ~]# VAR5=hututu mk<br>bash: mk: 未找到命令…<br>[root@hututu ~]# VAR5=’hututu mk’<br>[root@hututu ~]# echo $VAR5<br>hututu mk  </p><p><strong>例2：赋值时单引号和双引号的区别</strong><br>[root@hututu ~]# VAR6=’hututu mk $VAR1’<br>[root@hututu ~]# VAR7=”hututu mk $VAR1”<br>[root@hututu ~]# echo $VAR6<br>hututu mk $VAR1<br>[root@hututu ~]# echo $VAR7<br>hututu mk 123<br><strong>注：单引号之间的内容原封不动赋值给变量，  双引号之间的内容如有特殊符号会保留它的特殊含义</strong>  </p><p><strong>删除变量</strong><br>[root@hututu ~]# unset VAR1<br>[root@hututu ~]# echo $VAR1</p><h3 id="2-6-环境变啦"><a href="#2-6-环境变啦" class="headerlink" title="2.6 环境变啦"></a><strong>2.6 环境变啦</strong></h3><p><strong>例 1： 局部变量</strong><br>[root@hututu ~]# tt=123<br>[root@hututu ~]# echo $tt<br>123<br>[root@hututu ~]# vim a.sh<br>[root@hututu ~]# cat a.sh<br>#!/bin/bash<br>echo $tt<br>[root@hututu ~]# echo $tt<br>123<br>[root@hututu ~]# bash a.sh<br>执行a.sh 时，会使用另一个bash去执行，就访问不到$VAR1的值  </p><p><strong>例 2：env命令查看所有全局变量</strong><br>[root@hututu ~]# env<br>[root@hututu ~]# env | grep<br>PATHPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin  </p><p><strong>例3：使用export把这个局部变量输出为全局变量</strong><br>[root@hututu ~]# export tt=123<br>[root@hututu ~]# echo $tt<br>123<br>[root@hututu ~]# vim a.sh<br>[root@hututu ~]# cat a.sh<br>#!/bin/bash<br>echo $tt<br>[root@hututu ~]# bash a.sh<br>123</p><h3 id="2-7-设置PATH环境变量"><a href="#2-7-设置PATH环境变量" class="headerlink" title="2.7 设置PATH环境变量"></a><strong>2.7 设置PATH环境变量</strong></h3><p><strong>shell要执行某一个程序，它要在系统中去搜索这个程序的路径，path变量是用来定义命令和查找命令的目录，当我们安装了第三方程序后，可以把第三方程序bin目录添加到这个path路径内，就可以在全局调用这个第三方程序的<br>例 :1</strong><br>[root@hututu ~]# vim /opt/backup<br>#!/bin/bashecho “Backup data is OK”<br>[root@hututu ~]# chmod +x /opt/backup<br>[root@hututu ~]# /opt/backup<br>Backup data is OK<br>[root@hututu ~]# backup<br>bash: backup: 未找到命令…  </p><p><strong>将backup命令添加到PATH中</strong><br>[root@hututu ~]#  PATH=/opt/:$PATH<br>[root@hututu ~]#  backup   #发现命令可以直接执行了，不用写全路径了<br>[root@hututu ~]#  vim /etc/profile  # 在文件最后追加以下内容，永久生效export PATH=/opt/:$PATH<br>[root@hututu ~]#  source  /etc/profile   #重新加载配置文件，使用配置生效</p><h3 id="2-8-shell位置变量"><a href="#2-8-shell位置变量" class="headerlink" title="2.8 shell位置变量"></a><strong>2.8 shell位置变量</strong></h3><p><strong>Shell解释执行用户的命令时，将命令行的第一个字符作为命令名，而其它字符</strong><br><strong>为参数。</strong><br><strong>$0  获取当前执行shell脚本的文件文件名，包括脚本路径,命令本身</strong><br><strong>$n  获取当前脚本的第n个参数 n=1,2…..n 当n大于9时 用${10}表示。</strong><br><strong>例子：</strong><br>[root@hututu ~]# <strong>vim print.sh</strong><br>#!/bin/bash<br>echo “本shell脚本的文件名： $0”<br>echo “第1个参数：  $1”<br>echo “第2个参数：  $2”<br>echo “第3个参数：  $3”<br>echo “第4个参数：  $4”<br>[root@hututu ~]# ** chmod +x print.sh**<br>[root@hututu ~]# ** ./print.sh 111  222 a.txt  444**<br><strong>本shell脚本的文件名： ./print.sh</strong><br><strong>第1个参数：  111</strong><br><strong>第2个参数：  222</strong><br><strong>第3个参数：  a.txt</strong><br><strong>第4个参数：  444</strong><br><strong>使用场景：服务器启动传参数</strong><br>[root@hututu ~]# ** /etc/init.d/network restart**</p><h3 id="2-9-特殊变量"><a href="#2-9-特殊变量" class="headerlink" title="2.9 特殊变量"></a><strong>2.9 特殊变量</strong></h3><p><strong>有些变量是一开始执行Script脚本时就会设定，且不能被修改，但我们不叫它只读的系统变量，而叫它特殊变量。这些变量当一执行程序时就有了，以下是一些特殊变量：</strong>  </p><p><strong>$*</strong></p><p><strong>以一个单字符串显示所有向脚本传递的参数；</strong> <strong>如”$*“用【”】括起来的情况、以”$1 $2 … $n”的形式输出所有参数</strong></p><p><strong>$#</strong></p><p><strong>传递到脚本的参数个数</strong></p><p><strong>$$</strong></p><p><strong>当前进程的进程号PID</strong></p><p><strong>$?</strong></p><p><strong>显示最后命令的退出状态；0表示没有错误，其他任何值表明有错误</strong></p><p><strong>$!</strong></p><p><strong>后台运行的最后一个进程的进程号pid</strong></p><p><strong>例子：</strong><br>[root@hututu ~]# ** vim special_variable.sh  #写入以一下内容**<br>#!/bin/bash<br>echo “$* 表示这个程序的所有参数 “<br>echo “$#  表示这个程序的参数个数”<br>echo “$$  表示程序的进程ID “<br>touch /tmp/b.txt &amp;<br>echo “$!  执行上一个后台指令的PID”<br>echo “$$  表示程序的进程ID “<br>echo “$? 表示上一个程序执行返回结果 “<br>[root@hututu ~]# ** bash special_variable.sh  11 22 33 44 55**<br><strong>11 22 33 44 55 表示这个程序的所有参数</strong><br><strong>11 22 33 44 55 表示这个程序的所有参数</strong><br><strong>5  表示这个程序的参数个数</strong><br><strong>45502  表程序的进程ID</strong><br><strong>45504  执行上一个后台指令的PID</strong><br><strong>45502  表程序的进程ID</strong><br><strong>0 表示上一个程序执行返回结果</strong><br><strong>例2：常用的环境变量</strong><br><strong>[root@hututu opt]# cd /opt/</strong><br><strong>[**root@hututu opt]**# vim env.sh</strong><br>#!/bin/bash<br>echo $HOME<br>echo $PATH<br>echo $PWD<br><strong>[**</strong>root@hututu opt**<strong>]# bash env.sh</strong><br><strong>/root</strong><br><strong>/opt/:/opt/:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin:/root/bin</strong><br><strong>/opt</strong></p>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux VPS 一键搭建 KMS 服务器脚本及激活 Windows 和 Office</title>
      <link href="/posts/30589/"/>
      <url>/posts/30589/</url>
      
        <content type="html"><![CDATA[<p><strong>说明：</strong><code>KMS</code> 就不详细介绍了，可以用来激活微软的一些系统和软件，让你免费体验正版的系统或软件。这里就分享个 <code>KMS</code> 激活服务器一键搭建脚本，可以供多人使用，一次激活有效期 <code>180</code> 天，且 <code>180</code> 天内只要服务器重新在线一次就会自动续期。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>Github 地址：</strong><a href="https://github.com/dakkidaze/one-key-kms">https://github.com/dakkidaze/one-key-kms</a></p><p>使用命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#CentOS，Redhat，Fedora等请选择CentOS脚本</span><br><span class="line">wget https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;dakkidaze&#x2F;one-key-kms&#x2F;master&#x2F;one-key-kms-centos.sh</span><br><span class="line">chmod +x one-key-kms-centos.sh</span><br><span class="line">.&#x2F;one-key-kms-centos.sh</span><br><span class="line"></span><br><span class="line">#Debian，Ubuntu，Mint等请选择Debian脚本</span><br><span class="line">wget https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;dakkidaze&#x2F;one-key-kms&#x2F;master&#x2F;one-key-kms-debian.sh</span><br><span class="line">chmod +x one-key-kms-debian.sh</span><br><span class="line">.&#x2F;one-key-kms-debian.sh</span><br><span class="line"></span><br><span class="line">#启动KMS</span><br><span class="line">wget https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;dakkidaze&#x2F;one-key-kms&#x2F;master&#x2F;kms.sh</span><br><span class="line">chmod +x kms.sh</span><br><span class="line">.&#x2F;kms.sh start</span><br></pre></td></tr></table></figure><p>注意放行服务器 <code>1688</code> 端口！</p><h2 id="激活-Windows"><a href="#激活-Windows" class="headerlink" title="激活 Windows"></a>激活 Windows</h2><p>系统需要是 <code>VL</code> 版本的，然后使用管理员权限运行 <code>cmd</code>，运行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;d &quot;%SystemRoot%\system32&quot;</span><br><span class="line">slmgr &#x2F;skms ip  #ip为你KMS的IP地址或者域名 </span><br><span class="line">slmgr &#x2F;ato</span><br><span class="line">slmgr &#x2F;xpr</span><br></pre></td></tr></table></figure><p>看到网上还有很多系统不是 <code>VL</code> 版本的激活方法，这个方法就不说了，感觉没啥用，因为不是 <code>VL</code> 版本的都没 <code>KEY</code>，比如说旗舰版，家庭高级版等。</p><h2 id="激活-Office"><a href="#激活-Office" class="headerlink" title="激活 Office"></a>激活 Office</h2><p>首先你的 <code>Office</code> 必须是 <code>VOL</code> 版本，否则无法激活。</p><p>找到你的 <code>Office</code> 安装目录，如果你不知道你的 <code>Office</code> 装在哪个目录，可以鼠标右键一个程序图标比如 <code>Word</code>，然后选择 “打开文件所在的位置”，在上面地址栏就可以看到了。</p><p>这里以 <code>Office2016</code> 为例，<code>32</code> 位文件夹目录为 <code>C:\Program Files (x86)\Microsoft Office\Office16</code>。<code>62</code> 位目录为 <code>C:\Program Files\Microsoft Office\Office16</code>。关于文件夹对应的版本说明：<code>Office16</code> 是 <code>Office2016</code>，<code>Office15</code> 就是 <code>Office2013</code>，<code>Office14</code> 就是 <code>Office2010</code>。</p><p>下面以 <code>32</code> 位为参考。使用管理员权限运行 <code>cmd</code>，运行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#进入Office文件夹执行命令</span><br><span class="line">cd &quot;C:\Program Files (x86)\Microsoft Office\Office16&quot;</span><br><span class="line">cscript ospp.vbs &#x2F;sethst:ip  #ip为你KMS的IP地址或者域名</span><br><span class="line">cscript ospp.vbs &#x2F;act</span><br></pre></td></tr></table></figure><p>如果提示看到 <code>successful</code> 的字样，那么就是激活成功了，重新打开 <code>Office</code> 就好。</p><p>原文：<a href="https://www.moerats.com/archives/512/">https://www.moerats.com/archives/512/</a><br><a href="https://www.moerats.com/kms/">KMS 激活工具</a></p>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> KMS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Zabbix4.0监控系统设计与部属</title>
      <link href="/posts/61456/"/>
      <url>/posts/61456/</url>
      
        <content type="html"><![CDATA[<h1 id="zabbix-监控服务"><a href="#zabbix-监控服务" class="headerlink" title="zabbix 监控服务"></a>zabbix 监控服务</h1><hr><h1 id="第一章-监控知识基本概述"><a href="#第一章-监控知识基本概述" class="headerlink" title="第一章 监控知识基本概述"></a>第一章 监控知识基本概述</h1><h2 id="1-为什么要使用监控"><a href="#1-为什么要使用监控" class="headerlink" title="1. 为什么要使用监控"></a>1. 为什么要使用监控</h2><ul><li>1. 对系统不间断实时监控</li><li>2. 实时反馈系统当前状态</li><li>3. 保证服务可靠性安全性</li><li>4. 保证业务持续稳定运行</li></ul><h2 id="2-如何进行监控，比如我们需要监控磁盘的使用率"><a href="#2-如何进行监控，比如我们需要监控磁盘的使用率" class="headerlink" title="2. 如何进行监控，比如我们需要监控磁盘的使用率"></a>2. 如何进行监控，比如我们需要监控磁盘的使用率</h2><ul><li>1. 如何查看磁盘使用率 df -h</li><li>2. 监控磁盘的那些指标 block、 inode</li><li>3. 如何获取具体的信息 df -h|awk ‘///{print (NF-1)}’</li><li>4. 获取的数值到达多少报警 80%</li></ul><h2 id="3-流行的监控工具"><a href="#3-流行的监控工具" class="headerlink" title="3. 流行的监控工具"></a>3. 流行的监控工具</h2><ul><li>1.Zabbix</li><li>2.Lepus (天兔) 数据库监控系统</li><li>3.Open-Falcon 小米</li><li>4.Prometheus (普罗米修斯， Docker、 K8s)</li></ul><h2 id="4-如果去到一家新公司，如何入手监控"><a href="#4-如果去到一家新公司，如何入手监控" class="headerlink" title="4. 如果去到一家新公司，如何入手监控"></a>4. 如果去到一家新公司，如何入手监控</h2><ul><li>1. 硬件监控 路由器、交换机、防火墙</li><li>2. 系统监控 CPU、内存、磁盘、网络、进程、 TCP</li><li>3. 服务监控 nginx、 php、 tomcat、 redis、 memcache、 mysql</li><li>4.WEB 监控 请求时间、响应时间、加载时间、</li><li>5. 日志监控 ELk（收集、存储、分析、展示） 日志易</li><li>6. 安全监控 Firewalld、 WAF (Nginx+lua)、安全宝、牛盾云、安全狗</li><li>7. 网络监控 smokeping 多机房</li><li>8. 业务监控 活动引入多少流量、产生多少注册量、带来多大价值</li></ul><h1 id="第二章-单机时代如何监控"><a href="#第二章-单机时代如何监控" class="headerlink" title="第二章 单机时代如何监控"></a>第二章 单机时代如何监控</h1><p>CPU 监控命令: w、 top、 htop、 glances</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">%Cpu(s): 0.3 us, 0.3 sy, 0.0 ni, 99.3 id, 0.0 wa, 0.0 hi, 0.0 si, 0.0 st</span><br><span class="line">us 用户态: 跟用户的操作有关 35%</span><br><span class="line">sy 系统态: 跟内核的处理有关 60%</span><br><span class="line">id CPU 空闲:</span><br></pre></td></tr></table></figure><p>内存监控命令: free</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# free -h</span><br><span class="line">              total        used        free      shared  buff&#x2F;cache   available</span><br><span class="line">Mem:           977M        105M        724M        6.6M        148M        729M</span><br><span class="line">Swap:          1.0G          0B        1.0G</span><br></pre></td></tr></table></figure><p>磁盘监控命令: df、 iotop</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Device: tps kB_read&#x2F;s kB_wrtn&#x2F;s kB_read kB_wrtn</span><br><span class="line">sda 0.80 25.32 33.36 221034 291193</span><br><span class="line">设备名 每秒传输次数 每秒读大小 每秒写大小 读的总大小 写的总大小</span><br></pre></td></tr></table></figure><p>网络监控命令: ifconfig、 route、 glances、 iftop、 nethogs、 netstat</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">单位换算</span><br><span class="line">Mbps 100Mbps&#x2F;8</span><br><span class="line">MB 12MB</span><br><span class="line">iftop 中间的&lt;&#x3D; &#x3D;&gt;这两个左右箭头，表示的是流量的方向。</span><br><span class="line">TX：发送流量、 RX：接收流量、 TOTAL：总流量</span><br><span class="line">#查看 TCP11 中状态</span><br><span class="line">netstat -an|grep ESTABLISHED</span><br><span class="line">netstat -rn # 查看路由信息</span><br><span class="line">netstat -lntup</span><br></pre></td></tr></table></figure><p>随着时间的推移，用户不断的增多，服务随时可能扛不住会被 oom (out of memory)，当系统内存不足的时候，会<br>触发 oom<br>1. 当系统内存不足的时候就会大量使用 swap<br>2. 当系统大量使用 swap 的时候，系统会特别卡<br>注意：有时可能内存还有剩余 300Mb-500Mb，但会发现 swap 依然被使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@ZabbixServer ~]# dd if&#x3D;&#x2F;dev&#x2F;zero of&#x3D;&#x2F;dev&#x2F;null bs&#x3D;800M</span><br><span class="line">[root@ZabbixServer ~]# tail -f &#x2F;var&#x2F;log&#x2F;messages</span><br><span class="line">Out of memory: Kill process 2227 (dd) score 778 or sacrifice child</span><br><span class="line">Killed process 2227 (dd) total-vm:906724kB, anon-rss:798820kB, file-rss:0kB</span><br></pre></td></tr></table></figure><p>3. 那单机时代，如何使用 shell 脚本来实现服务器的监控<br>需求：每隔 1 分钟监控一次内存，当你的可用内存低于 100m, 发邮件报警，要求显示剩余内存</p><ul><li>1. 怎么获取内存可用的值 free -m|awk ‘/^Mem/{print $NF}’</li><li>2. 获取到内存可用的值如何和设定的阈值进行比较</li><li>3. 比较如果大于 100m 则不处理，如果小于 100 则报警</li><li>4. 如何每隔 1 分钟执行一次[root@ZabbixServer ~]# cat free.sh<br>#!/usr/bin/bash<br>HostName=$(hostname)_$(hostname -i)<br>Date=$(date +%F)<br>while true;do<br>Free=$(free -m|awk ‘/^Mem/{print $NF}’)<br>if [ $Free -le 100 ];then<br>echo “$Date: $HostName Mem Is &lt; ${Free}MB”<br>fi<br>sleep 5<br>done</li></ul><h1 id="第三章-zabbix-监控快速安装"><a href="#第三章-zabbix-监控快速安装" class="headerlink" title="第三章 zabbix 监控快速安装"></a>第三章 zabbix 监控快速安装</h1><h2 id="1-配置-zabbix-仓库"><a href="#1-配置-zabbix-仓库" class="headerlink" title="1. 配置 zabbix 仓库"></a>1. 配置 zabbix 仓库</h2><h3 id="在这里提供-zabbix4-2yum-仓库可供日常使用"><a href="#在这里提供-zabbix4-2yum-仓库可供日常使用" class="headerlink" title="在这里提供 zabbix4.2yum 仓库可供日常使用"></a>在这里提供 zabbix4.2yum 仓库可供日常使用</h3><p><a href="http://www.kococ.cn/cloud/index.php?share/folder&user=1&sid=eJIcXWhz">Zabbix4.2 仓库链接</a> （<a href="http://www.xoxoyun.cn/cloud/index.php?share/folder&user=1&sid=eJIcXWhz">http://www.xoxoyun.cn/cloud/index.php?share/folder&amp;user=1&amp;sid=eJIcXWhz</a>）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# rpm -ivh http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;zabbix&#x2F;zabbix&#x2F;4.0&#x2F;rhel&#x2F;7&#x2F;x86_64&#x2F;zabbix-release-4.0-1.el7.noarch.rpm</span><br></pre></td></tr></table></figure><p> <a href="http://cloud.xoxoyun.cn/index.php?share/file&user=1&sid=TIDYUqRn"><strong>可用 4.0 镜像源</strong></a></p><h2 id="2-安装-Zabbix-程序包，以及-MySQL、-Zabbix-agent"><a href="#2-安装-Zabbix-程序包，以及-MySQL、-Zabbix-agent" class="headerlink" title="2. 安装 Zabbix 程序包，以及 MySQL、 Zabbix-agent"></a>2. 安装 Zabbix 程序包，以及 MySQL、 Zabbix-agent</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# yum install -y zabbix-server-mysql zabbix-web-mysql zabbix-agent mariadb-server</span><br></pre></td></tr></table></figure><p>下载阿里云 epel 源 base 源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget -O &#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-Base.repo http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;repo&#x2F;Centos-7.repo</span><br><span class="line">wget -O &#x2F;etc&#x2F;yum.repos.d&#x2F;epel.repo http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;repo&#x2F;epel-7.repo</span><br><span class="line">yum install -y http:&#x2F;&#x2F;springdale.math.ias.edu&#x2F;data&#x2F;puias&#x2F;unsupported&#x2F;7&#x2F;x86_64&#x2F;iksemel-1.4-6.sdl7.x86_64.rpm</span><br><span class="line"></span><br><span class="line">[root@m01 ~]# systemctl start mariadb.service &amp;&amp; systemctl enable mariadb.service</span><br></pre></td></tr></table></figure><h2 id="3-创建-Zabbix-数据库以及用户"><a href="#3-创建-Zabbix-数据库以及用户" class="headerlink" title="3. 创建 Zabbix 数据库以及用户"></a>3. 创建 Zabbix 数据库以及用户</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# mysqladmin password 123456</span><br><span class="line">[root@m01 ~]# mysql -uroot -p123456</span><br><span class="line">MariaDB [(none)]&gt; create database zabbix character set utf8 collate utf8_bin;</span><br><span class="line">MariaDB [(none)]&gt; grant all privileges on zabbix.* to zabbix@localhost identified by &#39;zabbix&#39;;</span><br><span class="line">MariaDB [(none)]&gt; flush privileges;</span><br></pre></td></tr></table></figure><h2 id="4-导入-Zabbix-数据至数据库中"><a href="#4-导入-Zabbix-数据至数据库中" class="headerlink" title="4. 导入 Zabbix 数据至数据库中"></a>4. 导入 Zabbix 数据至数据库中</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# zcat &#x2F;usr&#x2F;share&#x2F;doc&#x2F;zabbix-server-mysql-4.0.11&#x2F;create.sql.gz | mysql -uzabbix -pzabbix zabbix</span><br></pre></td></tr></table></figure><h2 id="5-编辑-etc-zabbix-zabbix-server-conf-文件，修改数据库配置"><a href="#5-编辑-etc-zabbix-zabbix-server-conf-文件，修改数据库配置" class="headerlink" title="5. 编辑 /etc/zabbix/zabbix_server.conf 文件，修改数据库配置"></a>5. 编辑 /etc/zabbix/zabbix_server.conf 文件，修改数据库配置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# grep &quot;^[a-Z]&quot; &#x2F;etc&#x2F;zabbix&#x2F;zabbix_server.conf </span><br><span class="line">...............</span><br><span class="line">DBHost&#x3D;localhost</span><br><span class="line">DBName&#x3D;zabbix</span><br><span class="line">DBUser&#x3D;zabbix</span><br><span class="line">DBPassword&#x3D;zabbix</span><br><span class="line">...............</span><br></pre></td></tr></table></figure><h2 id="6-启动-Zabbix-服务进程，并加入开机自启"><a href="#6-启动-Zabbix-服务进程，并加入开机自启" class="headerlink" title="6. 启动 Zabbix 服务进程，并加入开机自启"></a>6. 启动 Zabbix 服务进程，并加入开机自启</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# systemctl start zabbix-server.service </span><br><span class="line">[root@m01 ~]# systemctl enable zabbix-server.service</span><br></pre></td></tr></table></figure><h2 id="7-配置-Apache-的配置文件-etc-httpd-conf-d-zabbix-conf，修改时区"><a href="#7-配置-Apache-的配置文件-etc-httpd-conf-d-zabbix-conf，修改时区" class="headerlink" title="7. 配置 Apache 的配置文件 /etc/httpd/conf.d/zabbix.conf，修改时区"></a>7. 配置 Apache 的配置文件 /etc/httpd/conf.d/zabbix.conf，修改时区</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# grep &quot;Shanghai&quot; &#x2F;etc&#x2F;httpd&#x2F;conf.d&#x2F;zabbix.conf </span><br><span class="line">        php_value date.timezone Asia&#x2F;Shanghai</span><br></pre></td></tr></table></figure><h2 id="8-重启-Apache-Web-服务器"><a href="#8-重启-Apache-Web-服务器" class="headerlink" title="8. 重启 Apache Web 服务器"></a>8. 重启 Apache Web 服务器</h2><h2 id="root-m01-systemctl-start-httpd"><a href="#root-m01-systemctl-start-httpd" class="headerlink" title="[root@m01 ~]# systemctl start httpd"></a>[root@m01 ~]# systemctl start httpd</h2><h1 id="第四章-WEB-安装步骤"><a href="#第四章-WEB-安装步骤" class="headerlink" title="第四章 WEB 安装步骤"></a>第四章 WEB 安装步骤</h1><h2 id="1-浏览器打开地址：http-192-168-10-66-zabbix-setup-php"><a href="#1-浏览器打开地址：http-192-168-10-66-zabbix-setup-php" class="headerlink" title="1. 浏览器打开地址：http://192.168.10.66/zabbix/setup.php"></a>1. 浏览器打开地址：<a href="http://192.168.10.66/zabbix/setup.php">http://192.168.10.66/zabbix/setup.php</a></h2><p><img src="http://www.kococ.cn/usr/uploads/2020/01/194576284.png" alt="1.png" title="1.png"></p><h2 id="2-检查依赖项是否存在异常"><a href="#2-检查依赖项是否存在异常" class="headerlink" title="2. 检查依赖项是否存在异常"></a>2. 检查依赖项是否存在异常</h2><p><img src="http://www.kococ.cn/usr/uploads/2020/01/2386190024.png" alt="2.png" title="2.png"></p><h2 id="3-配置-zabbix-连接数据库"><a href="#3-配置-zabbix-连接数据库" class="headerlink" title="3. 配置 zabbix 连接数据库"></a>3. 配置 zabbix 连接数据库</h2><p><img src="http://www.kococ.cn/usr/uploads/2020/01/395866565.png" alt="请输入图片描述" title="请输入图片描述"></p><h2 id="4-配置-ZabbixServer-服务器的信息"><a href="#4-配置-ZabbixServer-服务器的信息" class="headerlink" title="4. 配置 ZabbixServer 服务器的信息"></a>4. 配置 ZabbixServer 服务器的信息</h2><p><img src="http://www.kococ.cn/usr/uploads/2020/01/3424985468.png" alt="4.png" title="4.png"></p><h2 id="5-最终确认检查"><a href="#5-最终确认检查" class="headerlink" title="5. 最终确认检查"></a>5. 最终确认检查</h2><p><img src="http://www.kococ.cn/usr/uploads/2020/01/3424985468.png" alt="5.png" title="5.png"></p><h2 id="6-安装成功"><a href="#6-安装成功" class="headerlink" title="6. 安装成功"></a>6. 安装成功</h2><p><img src="http://www.kococ.cn/usr/uploads/2020/01/1365103457.png" alt="6.png" title="6.png"></p><p>提示已成功地安装了 Zabbix 前端。配置文件 /etc/zabbix/web/zabbix.conf.php 被创建。</p><h2 id="7-登陆-zabbix"><a href="#7-登陆-zabbix" class="headerlink" title="7. 登陆 zabbix"></a>7. 登陆 zabbix</h2><p>默认登陆 ZabbixWeb 的用户名 Admin，密码 zabbix</p><h2 id="8-调整字符集为中文"><a href="#8-调整字符集为中文" class="headerlink" title="8. 调整字符集为中文"></a>8. 调整字符集为中文</h2><p><img src="http://www.kococ.cn/usr/uploads/2020/01/632295469.png" alt="8.png" title="8.png"></p><h2 id="9-修复中文乱码"><a href="#9-修复中文乱码" class="headerlink" title="9. 修复中文乱码"></a>9. 修复中文乱码</h2><p><img src="http://www.kococ.cn/usr/uploads/2020/01/172339092.png" alt="10.png" title="10.png"></p><p>打开图形之后会发现语言为乱码，原因是缺少字体</p><p><strong>解决方法：安装字体并替换现有字体</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# yum install wqy-microhei-fonts -y</span><br><span class="line">[root@m01 ~]# cp &#x2F;usr&#x2F;share&#x2F;fonts&#x2F;wqy-microhei&#x2F;wqy-microhei.ttc &#x2F;usr&#x2F;share&#x2F;zabbix&#x2F;assets&#x2F;fonts&#x2F;graphfont.ttf</span><br></pre></td></tr></table></figure><p>再次刷新发现已经变成中文了<br><img src="http://www.kococ.cn/usr/uploads/2020/01/643160504.png" alt="11.png"></p><h1 id="第五章-Zabbix-监控基础架构"><a href="#第五章-Zabbix-监控基础架构" class="headerlink" title="第五章 Zabbix 监控基础架构"></a>第五章 Zabbix 监控基础架构</h1><p>zabbix-agent (数据采集)—&gt;zabbix-server (数据分析 | 报警)—&gt; 数据库 (数据存储)&lt;—zabbix web (数据展示)</p><p><a href="http://upload-images.jianshu.io/upload_images/14248468-189ad59c27ddffec.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-189ad59c27ddffec.png" alt="请输入图片描述"></a></p><h1 id="第六章-zabbix-快速监控主机"><a href="#第六章-zabbix-快速监控主机" class="headerlink" title="第六章 zabbix 快速监控主机"></a>第六章 zabbix 快速监控主机</h1><h2 id="1-安装-zabbix-agent"><a href="#1-安装-zabbix-agent" class="headerlink" title="1. 安装 zabbix-agent"></a>1. 安装 zabbix-agent</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# rpm -ivh https:&#x2F;&#x2F;mirror.tuna.tsinghua.edu.cn&#x2F;zabbix&#x2F;zabbix&#x2F;4.0&#x2F;rhel&#x2F;7&#x2F;x86_64&#x2F;zabbix-agent-4.0.11-1.el7.x86_64.rpm</span><br></pre></td></tr></table></figure><h2 id="2-配置-zabbix-agent"><a href="#2-配置-zabbix-agent" class="headerlink" title="2. 配置 zabbix-agent"></a>2. 配置 zabbix-agent</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# grep &quot;^[a-Z]&quot; &#x2F;etc&#x2F;zabbix&#x2F;zabbix_agentd.conf    </span><br><span class="line">PidFile&#x3D;&#x2F;var&#x2F;run&#x2F;zabbix&#x2F;zabbix_agentd.pid</span><br><span class="line">LogFile&#x3D;&#x2F;var&#x2F;log&#x2F;zabbix&#x2F;zabbix_agentd.log</span><br><span class="line">LogFileSize&#x3D;0</span><br><span class="line">Server&#x3D;10.0.1.61</span><br><span class="line">ServerActive&#x3D;127.0.0.1</span><br><span class="line">Hostname&#x3D;Zabbix server</span><br><span class="line">Include&#x3D;&#x2F;etc&#x2F;zabbix&#x2F;zabbix_agentd.d&#x2F;*.conf</span><br></pre></td></tr></table></figure><p>3. 启动 zabbix-agent 并检查</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# systemctl start zabbix-agent.service </span><br><span class="line">[root@web01 ~]# systemctl enable zabbix-agent.service</span><br><span class="line">[root@web01 ~]# netstat -lntup|grep 10050</span><br><span class="line">tcp        0      0 0.0.0.0:10050           0.0.0.0:*               LISTEN      10351&#x2F;zabbix_agentd </span><br><span class="line">tcp6       0      0 :::10050                :::*                    LISTEN      10351&#x2F;zabbix_agentd </span><br></pre></td></tr></table></figure><h2 id="4-zabbix-web-界面，添加主机"><a href="#4-zabbix-web-界面，添加主机" class="headerlink" title="4.zabbix-web 界面，添加主机"></a>4.zabbix-web 界面，添加主机</h2><p><a href="http://upload-images.jianshu.io/upload_images/14248468-10db69c42454d500.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-10db69c42454d500.png" alt="请输入图片描述" title="请输入图片描述"></a></p><p><a href="http://upload-images.jianshu.io/upload_images/14248468-ceee736beb333ce5.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-ceee736beb333ce5.png" alt="请输入图片描述" title="请输入图片描述"></a></p><p><a href="http://upload-images.jianshu.io/upload_images/14248468-5d12b07231386679.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-5d12b07231386679.png" alt="请输入图片描述" title="请输入图片描述"></a></p><h1 id="第七章-自定义监控主机"><a href="#第七章-自定义监控主机" class="headerlink" title="第七章 自定义监控主机"></a>第七章 自定义监控主机</h1><h2 id="1-监控需求"><a href="#1-监控需求" class="headerlink" title="1. 监控需求"></a>1. 监控需求</h2><p>监控 TCP11 种状态集</p><h2 id="2-命令行实现"><a href="#2-命令行实现" class="headerlink" title="2. 命令行实现"></a>2. 命令行实现</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# netstat -ant|grep -c TIME_WAIT</span><br><span class="line">55</span><br><span class="line">[root@web01 ~]# netstat -ant|grep -c LISTEN</span><br><span class="line">12</span><br></pre></td></tr></table></figure><h2 id="3-编写-zabbix-监控文件-传参形式"><a href="#3-编写-zabbix-监控文件-传参形式" class="headerlink" title="3. 编写 zabbix 监控文件 (传参形式)"></a>3. 编写 zabbix 监控文件 (传参形式)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# cat &#x2F;etc&#x2F;zabbix&#x2F;zabbix_agentd.d&#x2F;tcp_status.conf </span><br><span class="line">UserParameter&#x3D;tcp_state[*],netstat -ant|grep -c $1</span><br><span class="line">root@web01 ~]# systemctl restart zabbix-agent.service</span><br></pre></td></tr></table></figure><h2 id="4-server-端进行测试"><a href="#4-server-端进行测试" class="headerlink" title="4.server 端进行测试"></a>4.server 端进行测试</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# rpm -ivh https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;zabbix&#x2F;zabbix&#x2F;4.0&#x2F;rhel&#x2F;7&#x2F;x86_64&#x2F;zabbix-release-4.0-1.el7.noarch.rpm</span><br><span class="line">[root@m01 ~]# yum install zabbix-get.x86_64 -y </span><br><span class="line">[root@m01 ~]# zabbix_get -s 10.0.1.7 -k tcp_state[TIME_WAIT]</span><br><span class="line">51</span><br><span class="line">[root@m01 ~]# zabbix_get -s 10.0.1.7 -k tcp_state[LISTEN]   </span><br><span class="line">12</span><br></pre></td></tr></table></figure><h2 id="5-web-端添加"><a href="#5-web-端添加" class="headerlink" title="5.web 端添加"></a>5.web 端添加</h2><p><a href="http://upload-images.jianshu.io/upload_images/14248468-0b20f0a22391f3d1.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-0b20f0a22391f3d1.png" alt="请输入图片描述" title="请输入图片描述"></a></p><p><a href="http://upload-images.jianshu.io/upload_images/14248468-19c41a9832857c2b.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-19c41a9832857c2b.png" alt="请输入图片描述" title="请输入图片描述"></a></p><h2 id="6-克隆监控项"><a href="#6-克隆监控项" class="headerlink" title="6. 克隆监控项"></a>6. 克隆监控项</h2><p>由于 TCP 有多种状态，需要添加多个监控项，我们可以使用克隆快速达到创建的效果</p><p><a href="http://upload-images.jianshu.io/upload_images/14248468-743524f196e73c5e.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-743524f196e73c5e.png" alt="请输入图片描述"></a></p><p><a href="http://upload-images.jianshu.io/upload_images/14248468-35342ea8d4cb7a44.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-35342ea8d4cb7a44.png" alt="请输入图片描述" title="请输入图片描述"></a></p><p><a href="http://upload-images.jianshu.io/upload_images/14248468-2e2be3806f3c1c42.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-2e2be3806f3c1c42.png" alt="请输入图片描述" title="请输入图片描述"></a></p><p>其他的状态依次添加即可</p><h2 id="7-创建图形"><a href="#7-创建图形" class="headerlink" title="7. 创建图形"></a>7. 创建图形</h2><p><a href="http://upload-images.jianshu.io/upload_images/14248468-6203bb8201c63361.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-6203bb8201c63361.png" alt="请输入图片描述" title="请输入图片描述"></a></p><h2 id="8-查看图形"><a href="#8-查看图形" class="headerlink" title="8. 查看图形"></a>8. 查看图形</h2><p><a href="http://upload-images.jianshu.io/upload_images/14248468-a6cf4a1d2bdb3449.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-a6cf4a1d2bdb3449.png" alt="请输入图片描述" title="请输入图片描述"></a></p><h2 id="9-设置触发器"><a href="#9-设置触发器" class="headerlink" title="9. 设置触发器"></a>9. 设置触发器</h2><p><a href="http://upload-images.jianshu.io/upload_images/14248468-98cb06eb3b07e1d5.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-98cb06eb3b07e1d5.png" alt="请输入图片描述" title="请输入图片描述"></a></p><p><a href="http://upload-images.jianshu.io/upload_images/14248468-37e7cc88098879d9.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-37e7cc88098879d9.png" alt="请输入图片描述" title="请输入图片描述"></a></p><p><a href="http://upload-images.jianshu.io/upload_images/14248468-d684d487eb68da11.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-d684d487eb68da11.png" alt="请输入图片描述" title="请输入图片描述"></a></p><p><a href="http://upload-images.jianshu.io/upload_images/14248468-2e3bc7010546c2a1.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-2e3bc7010546c2a1.png" alt="请输入图片描述" title="请输入图片描述"></a></p><h1 id="第八章-邮件报警"><a href="#第八章-邮件报警" class="headerlink" title="第八章 邮件报警"></a>第八章 邮件报警</h1><h2 id="1-定义发件人"><a href="#1-定义发件人" class="headerlink" title="1. 定义发件人"></a>1. 定义发件人</h2><p><a href="http://upload-images.jianshu.io/upload_images/14248468-816d27e93e19aa6f.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-816d27e93e19aa6f.png" alt="请输入图片描述" title="请输入图片描述"></a></p><p><a href="http://upload-images.jianshu.io/upload_images/14248468-7e3279840e20452e.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-7e3279840e20452e.png" alt="请输入图片描述" title="请输入图片描述"></a></p><h2 id="2-定义收件人"><a href="#2-定义收件人" class="headerlink" title="2. 定义收件人"></a>2. 定义收件人</h2><p><a href="http://upload-images.jianshu.io/upload_images/14248468-57e702ed809d0b1b.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-57e702ed809d0b1b.png" alt="https://upload-images.jianshu.io/upload_images/14248468-57e702ed809d0b1b.png" title="https://upload-images.jianshu.io/upload_images/14248468-57e702ed809d0b1b.png"></a></p><p><a href="http://upload-images.jianshu.io/upload_images/14248468-ced9fc46c956b1e3.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-ced9fc46c956b1e3.png" alt="请输入图片描述" title="请输入图片描述"></a></p><p><a href="http://upload-images.jianshu.io/upload_images/14248468-90efc1aa92eb84da.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-90efc1aa92eb84da.png" alt="请输入图片描述" title="请输入图片描述"></a></p><h2 id="3-自定义报警内容过"><a href="#3-自定义报警内容过" class="headerlink" title="3. 自定义报警内容过"></a>3. 自定义报警内容过</h2><p>定制报警内容：<br><a href="https://www.zabbix.com/documentation/4.0/zh/manual/appendix/macros/supported_by_location">https://www.zabbix.com/documentation/4.0/zh/manual/appendix/macros/supported_by_location</a><br>参考博客</p><p><a href="https://www.cnblogs.com/bixiaoyu/p/7302541.html%E5%8F%91%E9%80%81%E8%AD%A6%E5%91%8A">https://www.cnblogs.com/bixiaoyu/p/7302541.html发送警告</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">报警邮件标题可以使用默认信息，亦可使用如下中文报警内容</span><br><span class="line">名称：Action-Email</span><br><span class="line">默认标题：故障&#123;TRIGGER.STATUS&#125;,服务器:&#123;HOSTNAME1&#125;发生: &#123;TRIGGER.NAME&#125;故障!</span><br><span class="line">告警主机:&#123;HOSTNAME1&#125;</span><br><span class="line">告警时间:&#123;EVENT.DATE&#125; &#123;EVENT.TIME&#125;</span><br><span class="line">告警等级:&#123;TRIGGER.SEVERITY&#125;</span><br><span class="line">告警信息: &#123;TRIGGER.NAME&#125;</span><br><span class="line">告警项目:&#123;TRIGGER.KEY1&#125;</span><br><span class="line">问题详情:&#123;ITEM.NAME&#125;:&#123;ITEM.VALUE&#125;</span><br><span class="line">当前状态:&#123;TRIGGER.STATUS&#125;:&#123;ITEM.VALUE1&#125;</span><br><span class="line">事件ID:&#123;EVENT.ID&#125;　</span><br><span class="line">恢复警告</span><br></pre></td></tr></table></figure><p>恢复标题：恢复 {TRIGGER.STATUS}, 服务器:{HOSTNAME1}: {TRIGGER.NAME} 已恢复！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">恢复信息：</span><br><span class="line">告警主机:&#123;HOSTNAME1&#125;</span><br><span class="line">告警时间:&#123;EVENT.DATE&#125; &#123;EVENT.TIME&#125;</span><br><span class="line">告警等级:&#123;TRIGGER.SEVERITY&#125;</span><br><span class="line">告警信息: &#123;TRIGGER.NAME&#125;</span><br><span class="line">告警项目:&#123;TRIGGER.KEY1&#125;</span><br><span class="line">问题详情:&#123;ITEM.NAME&#125;:&#123;ITEM.VALUE&#125;</span><br><span class="line">当前状态:&#123;TRIGGER.STATUS&#125;:&#123;ITEM.VALUE1&#125;</span><br><span class="line">事件ID:&#123;EVENT.ID&#125;</span><br></pre></td></tr></table></figure><h1 id="第九章-微信报警"><a href="#第九章-微信报警" class="headerlink" title="第九章 微信报警"></a>第九章 微信报警</h1><h2 id="1-查看配置文件里的脚本目录路径"><a href="#1-查看配置文件里的脚本目录路径" class="headerlink" title="1. 查看配置文件里的脚本目录路径"></a>1. 查看配置文件里的脚本目录路径</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# grep &quot;^AlertScriptsPath&quot; &#x2F;etc&#x2F;zabbix&#x2F;zabbix_server.conf</span><br><span class="line">AlertScriptsPath&#x3D;&#x2F;usr&#x2F;lib&#x2F;zabbix&#x2F;alertscripts</span><br></pre></td></tr></table></figure><h2 id="2-将-weixin-py-放在-zabbix-特定目录"><a href="#2-将-weixin-py-放在-zabbix-特定目录" class="headerlink" title="2. 将 weixin.py 放在 zabbix 特定目录"></a>2. 将 weixin.py 放在 zabbix 特定目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 &#x2F;usr&#x2F;lib&#x2F;zabbix&#x2F;alertscripts]# ll</span><br><span class="line">总用量 4</span><br><span class="line">-rwxr-xr-x 1 root root 1344 8月   7 21:58 weixin.py</span><br></pre></td></tr></table></figure><h2 id="3-配置发信人"><a href="#3-配置发信人" class="headerlink" title="3. 配置发信人"></a>3. 配置发信人</h2><p><a href="http://upload-images.jianshu.io/upload_images/14248468-75d0cf249f19bafe.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-75d0cf249f19bafe.png" alt="请输入图片描述" title="请输入图片描述"></a></p><p><a href="http://upload-images.jianshu.io/upload_images/14248468-7f1aaedd340ef02f.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-7f1aaedd340ef02f.png" alt="请输入图片描述" title="请输入图片描述"></a></p><h2 id="4-配置收信人"><a href="#4-配置收信人" class="headerlink" title="4. 配置收信人"></a>4. 配置收信人</h2><p><a href="http://upload-images.jianshu.io/upload_images/14248468-9709cce24dcb910a.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-9709cce24dcb910a.png" alt="请输入图片描述" title="请输入图片描述"></a></p><h2 id="5-登陆企业微信公众号添加账户"><a href="#5-登陆企业微信公众号添加账户" class="headerlink" title="5. 登陆企业微信公众号添加账户"></a>5. 登陆企业微信公众号添加账户</h2><p><a href="https://work.weixin.qq.com/wework_admin/loginpage_wx">https://work.weixin.qq.com/wework_admin/loginpage_wx</a><br>1. 登陆后在企业号上新建应用</p><p><a href="http://upload-images.jianshu.io/upload_images/14248468-1ae7607fe5113d11.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-1ae7607fe5113d11.png" alt="请输入图片描述" title="请输入图片描述"></a></p><p>2. 上传 logo，填写应用名称 ，应用介绍等</p><p><a href="http://upload-images.jianshu.io/upload_images/14248468-ee6bc21e8c1e9d39.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-ee6bc21e8c1e9d39.png" alt="请输入图片描述" title="请输入图片描述"></a></p><p>3. 查看启动应用<br>同时会生成应用的 AgentId 以及 Secret，这个在后面步骤会有用</p><p><a href="http://upload-images.jianshu.io/upload_images/14248468-2cccdc342330c5d0.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-2cccdc342330c5d0.png" alt="请输入图片描述"></a></p><p>4. 接口调用测试<br><a href="http://work.weixin.qq.com/api/devtools/devtool.php">http://work.weixin.qq.com/api/devtools/devtool.php</a></p><p><img src="http://upload-images.jianshu.io/upload_images/14248468-f24ffa3b5922d0c0.png" alt="请输入图片描述"></p><p>这里的 corpid 为公司 ID</p><p><a href="http://upload-images.jianshu.io/upload_images/14248468-03544eed481caa53.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-03544eed481caa53.png" alt="请输入图片描述" title="请输入图片描述"></a></p><p>Corpsecret 就是刚才创建应用生成的 Secrt，确认没问题填写进去然后下一步<br>如果没问题会显示 200 状态码</p><p><a href="http://upload-images.jianshu.io/upload_images/14248468-c6aba38bf4da189c.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-c6aba38bf4da189c.png" alt="请输入图片描述" title="请输入图片描述"></a></p><p>6. 添加成员</p><p><a href="http://upload-images.jianshu.io/upload_images/14248468-27ba2ae8bf3773fb.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-27ba2ae8bf3773fb.png" alt="请输入图片描述" title="请输入图片描述"></a></p><p>7. 关注公众号</p><p><a href="http://upload-images.jianshu.io/upload_images/14248468-b0341893f157d0fb.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-b0341893f157d0fb.png" alt="请输入图片描述" title="请输入图片描述"></a></p><p>8. 查看自己的账号</p><p><a href="http://upload-images.jianshu.io/upload_images/14248468-8247e4f85f7ddc9a.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-8247e4f85f7ddc9a.png" alt="**加粗文字**" title="**加粗文字**"></a></p><p>9. 修改脚本里的信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 &#x2F;usr&#x2F;lib&#x2F;zabbix&#x2F;alertscripts]# cat weixin.py </span><br><span class="line">..............</span><br><span class="line">corpid&#x3D;&#39;微信企业号corpid&#39;</span><br><span class="line">appsecret&#x3D;&#39;应用的Secret&#39;</span><br><span class="line">agentid&#x3D;应用的id</span><br><span class="line">..............</span><br></pre></td></tr></table></figure><p>10. 发信测试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 &#x2F;usr&#x2F;lib&#x2F;zabbix&#x2F;alertscripts]# python  weixin.py  你的账号  &#39;发信测试&#39;  ‘微信测试消息’</span><br></pre></td></tr></table></figure><p>11. 微信号上查看</p><p><a href="http://upload-images.jianshu.io/upload_images/14248468-9f1dc0fa9d6b8abb.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-9f1dc0fa9d6b8abb.png"></a></p><p>12. 发送到整个微信组<br>虽然我们实现了发送到单个用户的功能，但是如果我们的用户比较多，这样还是麻烦的，不过我们可以发送到整个组，其实脚本里已经预留好了配置，只不过默认注释了。<br>将脚本修改为以下内容，注释掉用户，打开组设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;env python</span><br><span class="line"></span><br><span class="line">import requests</span><br><span class="line">import sys</span><br><span class="line">import os</span><br><span class="line">import json</span><br><span class="line">import logging</span><br><span class="line"></span><br><span class="line">logging.basicConfig(level &#x3D; logging.DEBUG, format &#x3D; &#39;%(asctime)s, %(filename)s, %(levelname)s, %(message)s&#39;,</span><br><span class="line">                datefmt &#x3D; &#39;%a, %d %b %Y %H:%M:%S&#39;,</span><br><span class="line">                filename &#x3D; os.path.join(&#39;&#x2F;tmp&#39;,&#39;weixin.log&#39;),</span><br><span class="line">                filemode &#x3D; &#39;a&#39;)</span><br><span class="line">corpid&#x3D;&#39;wwd26fdfb9940e7efa&#39;</span><br><span class="line">appsecret&#x3D;&#39;Btg89FnZfMu0k7l6b4iagmAR5Z9TCgKknYbx-SMQvmg&#39;</span><br><span class="line">agentid&#x3D;1000005</span><br><span class="line"></span><br><span class="line">token_url&#x3D;&#39;https:&#x2F;&#x2F;qyapi.weixin.qq.com&#x2F;cgi-bin&#x2F;gettoken?corpid&#x3D;&#39; + corpid + &#39;&amp;corpsecret&#x3D;&#39; + appsecret</span><br><span class="line">req&#x3D;requests.get(token_url)</span><br><span class="line">accesstoken&#x3D;req.json()[&#39;access_token&#39;]</span><br><span class="line"></span><br><span class="line">msgsend_url&#x3D;&#39;https:&#x2F;&#x2F;qyapi.weixin.qq.com&#x2F;cgi-bin&#x2F;message&#x2F;send?access_token&#x3D;&#39; + accesstoken</span><br><span class="line"></span><br><span class="line">#touser&#x3D;sys.argv[1]</span><br><span class="line">toparty&#x3D;sys.argv[1]</span><br><span class="line">subject&#x3D;sys.argv[2]</span><br><span class="line">message&#x3D;sys.argv[2] + &quot;\n\n&quot; +sys.argv[3]</span><br><span class="line"></span><br><span class="line">params&#x3D;&#123;</span><br><span class="line">        #&quot;touser&quot;: touser,</span><br><span class="line">        &quot;toparty&quot;: toparty,</span><br><span class="line">        &quot;msgtype&quot;: &quot;text&quot;,</span><br><span class="line">        &quot;agentid&quot;: agentid,</span><br><span class="line">        &quot;text&quot;: &#123;</span><br><span class="line">                &quot;content&quot;: message</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;safe&quot;:0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">req&#x3D;requests.post(msgsend_url, data&#x3D;json.dumps(params))</span><br><span class="line"></span><br><span class="line">logging.info(&#39;sendto:&#39; + toparty + &#39;;;subject:&#39; + subject + &#39;;;message:&#39; + message)                                                                              </span><br><span class="line">12.随机发送到指定用户玩笑脚本</span><br><span class="line">#!&#x2F;bin&#x2F;bash </span><br><span class="line">num&#x3D;$(echo $(($RANDOM%28+1)))</span><br><span class="line">name&#x3D;$(sed -n &quot;$&#123;num&#125;p&quot; name.txt)</span><br><span class="line">ok_boy&#x3D;$(grep -v &quot;$&#123;name&#125;&quot; name.txt)</span><br><span class="line"></span><br><span class="line">for ok in $&#123;ok_boy&#125;</span><br><span class="line">do</span><br><span class="line">  python  weixin.py $&#123;ok&#125;  &quot;$1&quot;  &quot;$2&quot;</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h1 id="第十章-自定义模版"><a href="#第十章-自定义模版" class="headerlink" title="第十章 自定义模版"></a>第十章 自定义模版</h1><h2 id="1-监控-TCP11-种状态"><a href="#1-监控-TCP11-种状态" class="headerlink" title="1. 监控 TCP11 种状态"></a>1. 监控 TCP11 种状态</h2><p>编写 zabbix 配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 &#x2F;etc&#x2F;zabbix&#x2F;zabbix_agentd.d]# cat zbx_tcp.conf </span><br><span class="line">UserParameter&#x3D;ESTABLISHED,netstat -ant|grep  -c &#39;ESTABLISHED&#39;</span><br><span class="line">UserParameter&#x3D;SYN_SENT,netstat -ant|grep  -c &#39;SYN_SENT&#39;</span><br><span class="line">UserParameter&#x3D;SYN_RECV,netstat -ant|grep  -c &#39;SYN_RECV&#39;</span><br><span class="line">UserParameter&#x3D;FIN_WAIT1,netstat -ant|grep  -c &#39;FIN_WAIT1&#39;</span><br><span class="line">UserParameter&#x3D;FIN_WAIT2,netstat -ant|grep  -c &#39;FIN_WAIT2&#39;</span><br><span class="line">UserParameter&#x3D;TIME_WAIT,netstat -ant|grep  -c &#39;TIME_WAIT&#39;</span><br><span class="line">UserParameter&#x3D;CLOSE,netstat -ant|grep  -c &#39;CLOSE&#39;</span><br><span class="line">UserParameter&#x3D;CLOSE_WAIT,netstat -ant|grep  -c &#39;CLOSE_WAIT&#39;</span><br><span class="line">UserParameter&#x3D;LAST_ACK,netstat -ant|grep  -c &#39;LAST_ACK&#39;</span><br><span class="line">UserParameter&#x3D;LISTEN,netstat -ant|grep  -c &#39;LISTEN&#39;</span><br><span class="line">UserParameter&#x3D;CLOSING,netstat -ant|grep  -c &#39;CLOSING&#39;</span><br></pre></td></tr></table></figure><h2 id="2-重启-zabbix-agent"><a href="#2-重启-zabbix-agent" class="headerlink" title="2. 重启 zabbix-agent"></a>2. 重启 zabbix-agent</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# systemctl restart zabbix-agent.service </span><br></pre></td></tr></table></figure><h2 id="3-测试监控项"><a href="#3-测试监控项" class="headerlink" title="3. 测试监控项"></a>3. 测试监控项</h2><p>使用 zabbix-get 命令测试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# yum install zabbix-get.x86_64 -y</span><br><span class="line">[root@m01 ~]# zabbix_get -s 10.0.1.7 -k ESTABLISHED</span><br><span class="line">2</span><br><span class="line">[root@m01 ~]# zabbix_get -s 10.0.1.7 -k LISTEN</span><br><span class="line">12</span><br></pre></td></tr></table></figure><p>4. 导入模版文件</p><p><a href="http://upload-images.jianshu.io/upload_images/14248468-bf27be32d233f194.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-bf27be32d233f194.png" alt="请输入图片描述" title="请输入图片描述"></a></p><p><a href="http://upload-images.jianshu.io/upload_images/14248468-784f18988c7debab.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-784f18988c7debab.png" alt="请输入图片描述" title="请输入图片描述"></a></p><p><a href="http://upload-images.jianshu.io/upload_images/14248468-2a388d1ec74725e9.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-2a388d1ec74725e9.png" alt="请输入图片描述" title="请输入图片描述"></a></p><p>5. 主机关联模版文件</p><p><a href="http://upload-images.jianshu.io/upload_images/14248468-9070da45843e2644.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-9070da45843e2644.png" alt="请输入图片描述"></a></p><p><a href="http://upload-images.jianshu.io/upload_images/14248468-0ab34947877205eb.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-0ab34947877205eb.png" alt="请输入图片描述" title="请输入图片描述"></a></p><p>6. 查看最新数据</p><p><a href="http://upload-images.jianshu.io/upload_images/14248468-e17fda198f1ec1ac.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-e17fda198f1ec1ac.png" alt="请输入图片描述"></a></p><p>7. 查看图形</p><p><a href="http://upload-images.jianshu.io/upload_images/14248468-9c011ab3f383de99.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-9c011ab3f383de99.png" alt="请输入图片描述"></a></p><h2 id="第-x-章-自定义模版监控-nginx-状态"><a href="#第-x-章-自定义模版监控-nginx-状态" class="headerlink" title="第 x 章 自定义模版监控 nginx 状态"></a>第 x 章 自定义模版监控 nginx 状态</h2><h2 id="1-开启监控页面并访问测试"><a href="#1-开启监控页面并访问测试" class="headerlink" title="1. 开启监控页面并访问测试"></a>1. 开启监控页面并访问测试</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# cat &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;status.conf </span><br><span class="line">server &#123;</span><br><span class="line">   listen 80;</span><br><span class="line">   server_name localhost;</span><br><span class="line">   location &#x2F;nginx_status &#123;</span><br><span class="line">       stub_status on;</span><br><span class="line">       access_log off;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[root@web01 ~]# curl 127.0.0.1&#x2F;nginx_status&#x2F;</span><br><span class="line">Active connections: 1 </span><br><span class="line">server accepts handled requests</span><br><span class="line"> 6 6 6 </span><br><span class="line">Reading: 0 Writing: 1 Waiting: 0 </span><br></pre></td></tr></table></figure><h2 id="2-准备-nginx-监控状态脚本"><a href="#2-准备-nginx-监控状态脚本" class="headerlink" title="2. 准备 nginx 监控状态脚本"></a>2. 准备 nginx 监控状态脚本</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 &#x2F;etc&#x2F;zabbix&#x2F;zabbix_agentd.d]# cat nginx_monitor.sh </span><br><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">NGINX_COMMAND&#x3D;$1</span><br><span class="line">CACHEFILE&#x3D;&quot;&#x2F;tmp&#x2F;nginx_status.txt&quot;</span><br><span class="line">CMD&#x3D;&quot;&#x2F;usr&#x2F;bin&#x2F;curl http:&#x2F;&#x2F;127.0.0.1&#x2F;nginx_status&#x2F;&quot;</span><br><span class="line">if [ ! -f $CACHEFILE  ];then</span><br><span class="line">   $CMD &gt;$CACHEFILE 2&gt;&#x2F;dev&#x2F;null</span><br><span class="line">fi</span><br><span class="line"># Check and run the script</span><br><span class="line">TIMEFLM&#x3D;&#96;stat -c %Y $CACHEFILE&#96;</span><br><span class="line">TIMENOW&#x3D;&#96;date +%s&#96;</span><br><span class="line"></span><br><span class="line">if [ &#96;expr $TIMENOW - $TIMEFLM&#96; -gt 60 ]; then</span><br><span class="line">    rm -f $CACHEFILE</span><br><span class="line">fi</span><br><span class="line">if [ ! -f $CACHEFILE  ];then</span><br><span class="line">   $CMD &gt;$CACHEFILE 2&gt;&#x2F;dev&#x2F;null</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">nginx_active()&#123;</span><br><span class="line">         grep &#39;Active&#39; $CACHEFILE| awk &#39;&#123;print $NF&#125;&#39;</span><br><span class="line">         exit 0;</span><br><span class="line">&#125;</span><br><span class="line">nginx_reading()&#123;</span><br><span class="line">         grep &#39;Reading&#39; $CACHEFILE| awk &#39;&#123;print $2&#125;&#39;</span><br><span class="line">         exit 0;</span><br><span class="line">&#125;</span><br><span class="line">nginx_writing()&#123;</span><br><span class="line">         grep &#39;Writing&#39; $CACHEFILE | awk &#39;&#123;print $4&#125;&#39;</span><br><span class="line">         exit 0;</span><br><span class="line">&#125;</span><br><span class="line">nginx_waiting()&#123;</span><br><span class="line">         grep &#39;Waiting&#39; $CACHEFILE| awk &#39;&#123;print $6&#125;&#39;</span><br><span class="line">         exit 0;</span><br><span class="line">&#125;</span><br><span class="line">nginx_accepts()&#123;</span><br><span class="line">         awk NR&#x3D;&#x3D;3 $CACHEFILE| awk &#39;&#123;print $1&#125;&#39; </span><br><span class="line">         exit 0;</span><br><span class="line">&#125;</span><br><span class="line">nginx_handled()&#123;</span><br><span class="line">         awk NR&#x3D;&#x3D;3 $CACHEFILE| awk &#39;&#123;print $2&#125;&#39; </span><br><span class="line">         exit 0;</span><br><span class="line">&#125;</span><br><span class="line">nginx_requests()&#123;</span><br><span class="line">         awk NR&#x3D;&#x3D;3 $CACHEFILE| awk &#39;&#123;print $3&#125;&#39;</span><br><span class="line">         exit 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">case $NGINX_COMMAND in</span><br><span class="line">    active)</span><br><span class="line">        nginx_active;</span><br><span class="line">        ;;</span><br><span class="line">    reading)</span><br><span class="line">        nginx_reading;</span><br><span class="line">        ;;</span><br><span class="line">    writing)</span><br><span class="line">        nginx_writing;</span><br><span class="line">        ;;</span><br><span class="line">    waiting)</span><br><span class="line">        nginx_waiting;</span><br><span class="line">        ;;</span><br><span class="line">    accepts)</span><br><span class="line">        nginx_accepts;</span><br><span class="line">        ;;</span><br><span class="line">    handled)</span><br><span class="line">        nginx_handled;</span><br><span class="line">        ;;</span><br><span class="line">    requests)</span><br><span class="line">        nginx_requests;</span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">echo &#39;Invalid credentials&#39;;</span><br><span class="line">exit 2;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><h2 id="3-编写-zabbix-监控配置文件"><a href="#3-编写-zabbix-监控配置文件" class="headerlink" title="3. 编写 zabbix 监控配置文件"></a>3. 编写 zabbix 监控配置文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# cat &#x2F;etc&#x2F;zabbix&#x2F;zabbix_agentd.d&#x2F;nginx_status.conf</span><br><span class="line">UserParameter&#x3D;nginx_status[*],&#x2F;bin&#x2F;bash &#x2F;etc&#x2F;zabbix&#x2F;zabbix_agentd.d&#x2F;nginx_monitor.sh $1</span><br><span class="line"></span><br><span class="line">[root@web01 ~]# systemctl restart zabbix-agent.service</span><br></pre></td></tr></table></figure><h2 id="4-使用-zabbix-get-取值"><a href="#4-使用-zabbix-get-取值" class="headerlink" title="4. 使用 zabbix_get 取值"></a>4. 使用 zabbix_get 取值</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# zabbix_get -s 10.0.1.7 -k nginx_status[accepts]</span><br><span class="line">7</span><br></pre></td></tr></table></figure><h2 id="5-导入模版"><a href="#5-导入模版" class="headerlink" title="5. 导入模版"></a>5. 导入模版</h2><p><a href="http://upload-images.jianshu.io/upload_images/14248468-c3bbd17a2587f6b4.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-c3bbd17a2587f6b4.png" alt="请输入图片描述" title="请输入图片描述"></a></p><h2 id="6-链接模版"><a href="#6-链接模版" class="headerlink" title="6. 链接模版"></a>6. 链接模版</h2><p><a href="http://upload-images.jianshu.io/upload_images/14248468-7f460c46106c792c.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-7f460c46106c792c.png" alt="请输入图片描述" title="请输入图片描述"></a></p><p>7. 查看数据</p><p><a href="http://upload-images.jianshu.io/upload_images/14248468-3edb2a100a2a3987.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-3edb2a100a2a3987.png" alt="请输入图片描述"></a></p><h1 id="第-x-章-自定义模版监控-php-状态"><a href="#第-x-章-自定义模版监控-php-状态" class="headerlink" title="第 x 章 自定义模版监控 php 状态"></a>第 x 章 自定义模版监控 php 状态</h1><h2 id="1-开启监控页面"><a href="#1-开启监控页面" class="headerlink" title="1. 开启监控页面"></a>1. 开启监控页面</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# tail -1 &#x2F;etc&#x2F;php-fpm.d&#x2F;www.conf    </span><br><span class="line">pm.status_path &#x3D; &#x2F;php_status</span><br><span class="line"></span><br><span class="line">[root@web01 ~]# cat &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;status.conf    </span><br><span class="line">server &#123;</span><br><span class="line">   listen 80;</span><br><span class="line">   server_name localhost;</span><br><span class="line">   location &#x2F;nginx_status &#123;</span><br><span class="line">       stub_status on;</span><br><span class="line">       access_log off;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   location &#x2F;php_status &#123;</span><br><span class="line">       fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">       fastcgi_index index.php;</span><br><span class="line">       fastcgi_param SCRIPT_FILENAME html$fastcgi_script_name;</span><br><span class="line">       include fastcgi_params;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[root@web01 ~]# nginx -t</span><br><span class="line">nginx: the configuration file &#x2F;etc&#x2F;nginx&#x2F;nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file &#x2F;etc&#x2F;nginx&#x2F;nginx.conf test is successful</span><br><span class="line">[root@web01 ~]# systemctl restart nginx.service php-fpm.service</span><br></pre></td></tr></table></figure><h2 id="2-访问测试"><a href="#2-访问测试" class="headerlink" title="2. 访问测试"></a>2. 访问测试</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# curl 127.0.0.1&#x2F;php_status</span><br><span class="line">pool:                 www</span><br><span class="line">process manager:      dynamic</span><br><span class="line">start time:           08&#x2F;Aug&#x2F;2019:22:31:27 +0800</span><br><span class="line">start since:          37</span><br><span class="line">accepted conn:        1</span><br><span class="line">listen queue:         0</span><br><span class="line">max listen queue:     0</span><br><span class="line">listen queue len:     128</span><br><span class="line">idle processes:       4</span><br><span class="line">active processes:     1</span><br><span class="line">total processes:      5</span><br><span class="line">max active processes: 1</span><br><span class="line">max children reached: 0</span><br><span class="line">slow requests:        0</span><br></pre></td></tr></table></figure><h2 id="3-准备访问脚本"><a href="#3-准备访问脚本" class="headerlink" title="3. 准备访问脚本"></a>3. 准备访问脚本</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# cat &#x2F;etc&#x2F;zabbix&#x2F;zabbix_agentd.d&#x2F;fpm.sh </span><br><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">##################################</span><br><span class="line"># Zabbix monitoring script</span><br><span class="line">#</span><br><span class="line"># php-fpm:</span><br><span class="line">#  - anything available via FPM status page</span><br><span class="line">#</span><br><span class="line">##################################</span><br><span class="line"># Contact:</span><br><span class="line">#  vincent.viallet@gmail.com</span><br><span class="line">##################################</span><br><span class="line"># ChangeLog:</span><br><span class="line">#  20100922     VV      initial creation</span><br><span class="line">##################################</span><br><span class="line"></span><br><span class="line"># Zabbix requested parameter</span><br><span class="line">ZBX_REQ_DATA&#x3D;&quot;$1&quot;</span><br><span class="line">ZBX_REQ_DATA_URL&#x3D;&quot;$2&quot;</span><br><span class="line"></span><br><span class="line"># Nginx defaults</span><br><span class="line">NGINX_STATUS_DEFAULT_URL&#x3D;&quot;http:&#x2F;&#x2F;localhost&#x2F;fpm&#x2F;status&quot;</span><br><span class="line">WGET_BIN&#x3D;&quot;&#x2F;usr&#x2F;bin&#x2F;wget&quot;</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># Error handling:</span><br><span class="line">#  - need to be displayable in Zabbix (avoid NOT_SUPPORTED)</span><br><span class="line">#  - items need to be of type &quot;float&quot; (allow negative + float)</span><br><span class="line">#</span><br><span class="line">ERROR_NO_ACCESS_FILE&#x3D;&quot;-0.91&quot;</span><br><span class="line">ERROR_NO_ACCESS&#x3D;&quot;-0.92&quot;</span><br><span class="line">ERROR_WRONG_PARAM&#x3D;&quot;-0.93&quot;</span><br><span class="line">ERROR_DATA&#x3D;&quot;-0.94&quot; # either can not connect &#x2F;   bad host &#x2F; bad port</span><br><span class="line"></span><br><span class="line"># Handle host and port if non-default</span><br><span class="line">if [ ! -z &quot;$ZBX_REQ_DATA_URL&quot; ]; then</span><br><span class="line">  URL&#x3D;&quot;$ZBX_REQ_DATA_URL&quot;</span><br><span class="line">else</span><br><span class="line">  URL&#x3D;&quot;$NGINX_STATUS_DEFAULT_URL&quot;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"># save the nginx stats in a variable for future parsing</span><br><span class="line">NGINX_STATS&#x3D;$($WGET_BIN -q $URL -O - 2&gt;&#x2F;dev&#x2F;null)</span><br><span class="line"></span><br><span class="line"># error during retrieve</span><br><span class="line">if [ $? -ne 0 -o -z &quot;$NGINX_STATS&quot; ]; then</span><br><span class="line">  echo $ERROR_DATA</span><br><span class="line">  exit 1</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"># </span><br><span class="line"># Extract data from nginx stats</span><br><span class="line">#</span><br><span class="line">#RESULT&#x3D;$(echo &quot;$NGINX_STATS&quot; | awk &#39;print $0;match($0, &quot;^&#39;&quot;$ZBX_REQ_DATA&quot;&#39;:[[:space:]]+(.*)&quot;, a) &#123; print a[1] &#125;&#39;)</span><br><span class="line">#RESULT&#x3D;$(echo &quot;$NGINX_STATS&quot; | grep &quot;$ZBX_REQ_DATA&quot; | awk -F : &#39;&#123;print $2&#125;&#39;)</span><br><span class="line">RESULT&#x3D;$(echo &quot;$NGINX_STATS&quot; | awk -F : &quot;&#123;if(\$1&#x3D;&#x3D;\&quot;$ZBX_REQ_DATA\&quot;) print \$2&#125;&quot;)</span><br><span class="line">if [ $? -ne 0 -o -z &quot;$RESULT&quot; ]; then</span><br><span class="line">    echo $ERROR_WRONG_PARAM</span><br><span class="line">    exit 1</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">echo $RESULT</span><br><span class="line"></span><br><span class="line">exit 0</span><br><span class="line"></span><br><span class="line">[root@web01 ~]# bash &#x2F;etc&#x2F;zabbix&#x2F;zabbix_agentd.d&#x2F;fpm.sh &quot;total processes&quot; http:&#x2F;&#x2F;127.0.0.1&#x2F;php_status</span><br><span class="line">5</span><br></pre></td></tr></table></figure><p>4. 准备 zabbix 配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# cat &#x2F;etc&#x2F;zabbix&#x2F;zabbix_agentd.d&#x2F;fpm.conf    </span><br><span class="line">UserParameter&#x3D;php-fpm[*],&#x2F;etc&#x2F;zabbix&#x2F;zabbix_agentd.d&#x2F;fpm.sh &quot;$1&quot; &quot;$2&quot;</span><br><span class="line">[root@web01 ~]# systemctl restart zabbix-agent.service</span><br><span class="line">4.使用zabbix_get取值</span><br><span class="line">[root@m01 ~]# zabbix_get -s 10.0.1.7 -k php-fpm[&quot;total processes&quot;,http:&#x2F;&#x2F;127.0.0.1&#x2F;php_status]</span><br><span class="line">5</span><br></pre></td></tr></table></figure><p>5. 导入模版<br>导入之后需要修改一下模版里的宏配置</p><p><a href="http://upload-images.jianshu.io/upload_images/14248468-e9002db6117b2a36.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-e9002db6117b2a36.png" alt="请输入图片描述" title="请输入图片描述"></a></p><h1 id="第-x-章-WEB-监控"><a href="#第-x-章-WEB-监控" class="headerlink" title="第 x 章 WEB 监控"></a>第 x 章 WEB 监控</h1><p>需求，监控页面状态码</p><p><img src="https://cdn.jsdelivr.net/gh/kococ/IMAGE/hexo-image1.png"></p><p><img src="https://cdn.jsdelivr.net/gh/kococ/IMAGE/hexo-image2.png"></p><p><img src="https://cdn.jsdelivr.net/gh/kococ/IMAGE/hexo-image3.png"></p><h1 id="第-x-章-故障记录"><a href="#第-x-章-故障记录" class="headerlink" title="第 x 章 故障记录"></a>第 x 章 故障记录</h1><h2 id="故障-1"><a href="#故障-1" class="headerlink" title="故障 1"></a>故障 1</h2><p>故障现象：<br>提示 zabbix-server is not running</p><p><a href="http://upload-images.jianshu.io/upload_images/14248468-5ec40e3f9f9c0b22.png"><img src="http://upload-images.jianshu.io/upload_images/14248468-5ec40e3f9f9c0b22.png" alt="请输入图片描述" title="请输入图片描述"></a></p><p>报错日志：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">34983:20190807:202215.171 database is down: reconnecting in 10 seconds</span><br><span class="line">34983:20190807:202225.172 [Z3001] connection to database &#39;zabbix&#39; failed: [1045] Access denied for user &#39;zabbix&#39;@&#39;localhost&#39; (using password: NO)</span><br></pre></td></tr></table></figure><p>故障原因：<br>zabbix-server 的配置文件里配有配置数据库密码<br>故障解决：<br>添加正确的数据库账号密码信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# grep &quot;^DB&quot; &#x2F;etc&#x2F;zabbix&#x2F;zabbix_server.conf     </span><br><span class="line">DBHost&#x3D;localhost</span><br><span class="line">DBName&#x3D;zabbix</span><br><span class="line">DBUser&#x3D;zabbix</span><br><span class="line">DBPassword&#x3D;zabbix</span><br></pre></td></tr></table></figure><h2 id="故障-2"><a href="#故障-2" class="headerlink" title="故障 2"></a>故障 2</h2><p>故障现象：微信报警失败<br>报错日志：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# tail -f &#x2F;var&#x2F;log&#x2F;zabbix&#x2F;zabbix_server.log </span><br><span class="line">Problem name: TIME_WAIT过多</span><br><span class="line">Host: web01</span><br><span class="line">Severity: Average</span><br><span class="line"></span><br><span class="line">Original problem ID: 51</span><br><span class="line">&#39;&quot;: Traceback (most recent call last):</span><br><span class="line">  File &quot;&#x2F;usr&#x2F;lib&#x2F;zabbix&#x2F;alertscripts&#x2F;weixin.py&quot;, line 7, in &lt;module&gt;</span><br><span class="line">    import requests</span><br><span class="line">ImportError: No module named requests</span><br></pre></td></tr></table></figure><p>问题原因：<br>缺少模块 requests</p><p>问题解决：<br>安装缺失的依赖包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# yum install python-pip</span><br><span class="line">[root@m01 ~]# pip install --upgrade pip</span><br><span class="line">[root@m01 ~]# pip install requests</span><br></pre></td></tr></table></figure><h2 id="故障-3"><a href="#故障-3" class="headerlink" title="故障 3"></a>故障 3</h2><p>故障现象：<br>在 server 端使用 zabbix_get 命令测试键值命令时提示警告</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# zabbix_get -s 10.0.1.7 -k ESTABLISHED  </span><br><span class="line">(Not all processes could be identified, non-owned process info</span><br><span class="line"> will not be shown, you would have to be root to see it all.)</span><br><span class="line">2</span><br></pre></td></tr></table></figure><p>问题原因：<br>zabbix_agent 是以普通用户 zabbix 运行的，而普通用户执行 netstat -antp 时会有警告，网上查找发现只要不是用 p 参数就可以以普通用户运行<br>解决方案：<br>监控脚本里的命令修改为 netstat -ant</p><h1 id="zabbix服务深入"><a href="#zabbix服务深入" class="headerlink" title="zabbix服务深入"></a>zabbix服务深入</h1><h1 id="第1章-Grafana自定义图形"><a href="#第1章-Grafana自定义图形" class="headerlink" title="第1章 Grafana自定义图形"></a>第1章 Grafana自定义图形</h1><h2 id="1-安装grafana"><a href="#1-安装grafana" class="headerlink" title="1.安装grafana"></a>1.安装grafana</h2><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="symbol">root@</span>m01 /<span class="keyword">data</span>/soft]# wget https:<span class="comment">//dl.grafana.com/oss/release/grafana-6.3.2-1.x86_64.rpm </span></span><br><span class="line">[<span class="symbol">root@</span>m01 /<span class="keyword">data</span>/soft]# yum localinstall grafana-<span class="number">6.3</span><span class="number">.2</span>-<span class="number">1</span>.x86_64.rpm -y</span><br><span class="line">[<span class="symbol">root@</span>m01 /<span class="keyword">data</span>/soft]# systemctl start grafana-server.service </span><br><span class="line">[<span class="symbol">root@</span>m01 /<span class="keyword">data</span>/soft]# systemctl enable grafana-server.service</span><br></pre></td></tr></table></figure><p>访问grafana：<a href="http://10.0.0.61:3000/">http://10.0.0.61:3000</a><br> 账号密码：admin  admin</p><p>![](<a href="https://cdn.jsdelivr.net/gh/kococ/IMAGE/hexo-imagezabbix-high">https://cdn.jsdelivr.net/gh/kococ/IMAGE/hexo-imagezabbix-high</a> (5).png)</p><h2 id="2-安装并激活zabbix插件"><a href="#2-安装并激活zabbix插件" class="headerlink" title="2.安装并激活zabbix插件"></a>2.安装并激活zabbix插件</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">root@m01 ~</span>]<span class="meta"># grafana-cli plugins list-remote|grep zabbix</span></span><br><span class="line">id: alexanderzobnin-zabbix-app version: <span class="number">3.10</span><span class="number">.4</span></span><br><span class="line">[<span class="meta">root@m01 ~</span>]<span class="meta"># grafana-cli plugins install alexanderzobnin-zabbix-app</span></span><br><span class="line">[<span class="meta">root@m01 ~</span>]<span class="meta"># systemctl restart grafana-server.service</span></span><br></pre></td></tr></table></figure><p>网页操作-激活zabbix插件</p><p>![](<a href="https://cdn.jsdelivr.net/gh/kococ/IMAGE/hexo-imagezabbix-high">https://cdn.jsdelivr.net/gh/kococ/IMAGE/hexo-imagezabbix-high</a> (8).png)</p><p>网页操作-添加zabbix数据源</p><p>![](<a href="https://cdn.jsdelivr.net/gh/kococ/IMAGE/hexo-imagezabbix-high">https://cdn.jsdelivr.net/gh/kococ/IMAGE/hexo-imagezabbix-high</a> (3).png)</p><p>![](<a href="https://cdn.jsdelivr.net/gh/kococ/IMAGE/hexo-imagezabbix-high">https://cdn.jsdelivr.net/gh/kococ/IMAGE/hexo-imagezabbix-high</a> (10).png)</p><p><img src="https://cdn.jsdelivr.net/gh/kococ/IMAGE/hexo-imagezabbix.png"></p><p>网页操作-导入模版</p><p>![](<a href="https://cdn.jsdelivr.net/gh/kococ/IMAGE/hexo-imagezabbix-high">https://cdn.jsdelivr.net/gh/kococ/IMAGE/hexo-imagezabbix-high</a> (7).png)</p><h2 id="3-数据展示"><a href="#3-数据展示" class="headerlink" title="3.数据展示"></a>3.数据展示</h2><p><img src="https://gitee.com/xoxoyun/image/raw/master/hexo_img/14248468-1a28d9b244b4691c.png"></p><h2 id="4-自定义图形仪表盘"><a href="#4-自定义图形仪表盘" class="headerlink" title="4.自定义图形仪表盘"></a>4.自定义图形仪表盘</h2><p><img src="https://gitee.com/xoxoyun/image/raw/master/hexo_img/14248468-5272d9959f179918.png"></p><p><img src="https://gitee.com/xoxoyun/image/raw/master/hexo_img/14248468-cff40f0b36efe65e.png"></p><p><img src="https://gitee.com/xoxoyun/image/raw/master/hexo_img/14248468-f8b7aba6d8b32645.png"></p><p><img src="https://gitee.com/xoxoyun/image/raw/master/hexo_img/14248468-b7d6278a86ebb916.png"></p><p><img src="https://gitee.com/xoxoyun/image/raw/master/hexo_img/14248468-4aad0a1ed418e464.png"></p><p><img src="https://gitee.com/xoxoyun/image/raw/master/hexo_img/14248468-86034e8b66c76245.png"></p><h2 id="5-自定义图形饼图"><a href="#5-自定义图形饼图" class="headerlink" title="5.自定义图形饼图"></a>5.自定义图形饼图</h2><p>1.安装插件</p><p>在线安装方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grafana-cli plugins install grafana-piechart-panel</span><br></pre></td></tr></table></figure><p>离线安装方式</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget -nv https:<span class="comment">//grafana.com/api/plugins/grafana-piechart-panel/versions/latest/download -O /tmp/grafana-piechart-panel.zip</span></span><br><span class="line">unzip -q /tmp/grafana-piechart-panel.<span class="built_in">zip</span> -d /tmp</span><br><span class="line">mv /tmp/grafana-piechart-panel-* /<span class="keyword">var</span>/lib/grafana/plugins/grafana-piechart-panel</span><br><span class="line">service grafana-server restart</span><br></pre></td></tr></table></figure><p>2.配置图形</p><p><img src="https://gitee.com/xoxoyun/image/raw/master/hexo_img/14248468-a50d6c9b0bd09cc6.png"></p><p><img src="https://gitee.com/xoxoyun/image/raw/master/hexo_img/14248468-32be1d5b74806c63.png"></p><p><img src="https://gitee.com/xoxoyun/image/raw/master/hexo_img/14248468-c5963e12fa3f591b.png"></p><p><img src="https://gitee.com/xoxoyun/image/raw/master/hexo_img/14248468-801fc2580ce84a9f.png"></p><h1 id="第2章-percona模版监控mysql"><a href="#第2章-percona模版监控mysql" class="headerlink" title="第2章 percona模版监控mysql"></a>第2章 percona模版监控mysql</h1><p>参考强哥的博客</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="comment">//www.qstack.com.cn/archives/213.html</span></span><br></pre></td></tr></table></figure><h2 id="1-安装php环境"><a href="#1-安装php环境" class="headerlink" title="1.安装php环境"></a>1.安装php环境</h2><p>percona需要php环境</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">root@m01 /data/soft</span>]<span class="meta"># yum install php php-mysql -y</span></span><br></pre></td></tr></table></figure><h2 id="2-下载软件"><a href="#2-下载软件" class="headerlink" title="2.下载软件"></a>2.下载软件</h2><p><img src="https://gitee.com/xoxoyun/image/raw/master/hexo_img/14248468-7b1acd1996119ac2.png"></p><p><img src="https://gitee.com/xoxoyun/image/raw/master/hexo_img/14248468-1e99a6aa631efb9b.png"></p><p>注意，安装完成后会有提示模版的路径位置</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]<span class="comment"># cd /data/soft/</span></span><br><span class="line">[root@m01 /data/soft]<span class="comment"># wget https://www.percona.com/downloads/percona-monitoring-plugins/percona-monitoring-plugins-1.1.8/binary/redhat/7/x86_64/percona-zabbix-templates-1.1.8-1.noarch.rpm</span></span><br><span class="line">[root@m01 /data/soft]<span class="comment"># rpm -ivh percona-zabbix-templates-1.1.8-1.noarch.rpm </span></span><br><span class="line">警告：percona-zabbix-templates-<span class="number">1.1</span>.<span class="number">8</span>-<span class="number">1</span>.noarch.<span class="symbol">rpm:</span> 头V4 DSA/SHA1 Signature, 密钥 ID <span class="symbol">cd2efd2a:</span> NOKEY</span><br><span class="line">准备中...                          <span class="comment">################################# [100%]</span></span><br><span class="line">正在升级/安装...</span><br><span class="line">   <span class="number">1</span><span class="symbol">:percona-zabbix-templates-</span><span class="number">1.1</span>.<span class="number">8</span>-<span class="number">1</span> <span class="comment">################################# [100%]</span></span><br><span class="line"></span><br><span class="line">Scripts are installed to /var/lib/zabbix/percona/scripts</span><br><span class="line">Templates are installed to /var/lib/zabbix/percona/templates</span><br></pre></td></tr></table></figure><h2 id="3-查看目录"><a href="#3-查看目录" class="headerlink" title="3.查看目录"></a>3.查看目录</h2><p>进入安装目录会发现有2个目录，一个是脚本目录，一个是模版目录</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">root@m01 ~</span>]<span class="meta"># cd /var/lib/zabbix/percona/</span></span><br><span class="line">[<span class="meta">root@m01 /var/lib/zabbix/percona</span>]<span class="meta"># tree</span></span><br><span class="line">.</span><br><span class="line">├── scripts</span><br><span class="line">│   ├── get_mysql_stats_wrapper.sh</span><br><span class="line">│   └── ss_get_mysql_stats.php</span><br><span class="line">└── templates</span><br><span class="line">    ├── userparameter_percona_mysql.conf</span><br><span class="line">    └── zabbix_agent_template_percona_mysql_server_ht_2<span class="number">.0</span><span class="number">.9</span>-sver1<span class="number">.1</span><span class="number">.8</span>.xml</span><br></pre></td></tr></table></figure><p>其中脚本目录里有2个脚本，用来获取数据库信息</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">root@m01 /var/lib/zabbix/percona</span>]<span class="meta"># cd scripts/</span></span><br><span class="line">[<span class="meta">root@m01 /var/lib/zabbix/percona/scripts</span>]<span class="meta"># ls</span></span><br><span class="line">get_mysql_stats_wrapper.sh  ss_get_mysql_stats.php</span><br></pre></td></tr></table></figure><h2 id="4-修改get-mysql-stats-wrapper-sh"><a href="#4-修改get-mysql-stats-wrapper-sh" class="headerlink" title="4.修改get_mysql_stats_wrapper.sh"></a>4.修改get_mysql_stats_wrapper.sh</h2><p>修改get_mysql_stats_wrapper数据库登陆信息<br> 第19行添加mysql账号密码</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="meta">@m</span>01 v]# sed -n <span class="string">&#x27;19p&#x27;</span> get_mysql_stats_wrapper.sh </span><br><span class="line">    RES=`HOME=~zabbix mysql -uroot -p123456 -e <span class="string">&#x27;SHOW SLAVE STATUS\G&#x27;</span> | egrep <span class="string">&#x27;(Slave_IO_Running|Slave_SQL_Running):&#x27;</span> | awk -F: <span class="string">&#x27;&#123;print <span class="subst">$2</span>&#125;&#x27;</span> | tr <span class="string">&#x27;\n&#x27;</span> </span><br></pre></td></tr></table></figure><h2 id="5-修改ss-get-mysql-stats-php"><a href="#5-修改ss-get-mysql-stats-php" class="headerlink" title="5.修改ss_get_mysql_stats.php"></a>5.修改ss_get_mysql_stats.php</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 /<span class="keyword">var</span>/lib/zabbix/percona/scripts]<span class="comment"># sed -n &#x27;30,31p&#x27; ss_get_mysql_stats.php </span></span><br><span class="line">$mysql_user = <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">$mysql_pass = <span class="string">&#x27;123456&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="6-复制自定义监控项配置文件到zabbix目录"><a href="#6-复制自定义监控项配置文件到zabbix目录" class="headerlink" title="6.复制自定义监控项配置文件到zabbix目录"></a>6.复制自定义监控项配置文件到zabbix目录</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">root@m01 ~</span>]<span class="meta"># cd /var/lib/zabbix/percona/templates/</span></span><br><span class="line">[<span class="meta">root@m01 /var/lib/zabbix/percona/templates</span>]<span class="meta"># cp userparameter_percona_mysql.conf /etc/zabbix/zabbix_agentd.d/</span></span><br><span class="line">[<span class="meta">root@m01 /var/lib/zabbix/percona/templates</span>]<span class="meta"># cd /etc/zabbix/zabbix_agentd.d/</span></span><br><span class="line">[<span class="meta">root@m01 /etc/zabbix/zabbix_agentd.d</span>]<span class="meta"># ls</span></span><br><span class="line">userparameter_mysql.conf  userparameter_percona_mysql.conf</span><br></pre></td></tr></table></figure><h2 id="7-重启agent"><a href="#7-重启agent" class="headerlink" title="7.重启agent"></a>7.重启agent</h2><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">root@m01 ~</span>]<span class="meta"># systemctl restart zabbix-agent </span></span><br></pre></td></tr></table></figure><h2 id="8-测试key"><a href="#8-测试key" class="headerlink" title="8.测试key"></a>8.测试key</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[root@m01 ~]</span># <span class="selector-tag">zabbix_get</span> <span class="selector-tag">-s</span> 10<span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-class">.61</span> <span class="selector-tag">-k</span> <span class="selector-tag">MySQL</span><span class="selector-class">.Sort-scan</span></span><br><span class="line">16</span><br></pre></td></tr></table></figure><h2 id="9-导入模版"><a href="#9-导入模版" class="headerlink" title="9.导入模版"></a>9.导入模版</h2><p>官方自带的模版有点问题，需要先装在2.x版本然后导出来，这里使用网友已经修改好的模版上传</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//pan.baidu.com/s/1pL1wDYj</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/xoxoyun/image/raw/master/hexo_img/14248468-1460dad84fcf4215.png" alt="img"></p><h2 id="10-主机链接模版"><a href="#10-主机链接模版" class="headerlink" title="10.主机链接模版"></a>10.主机链接模版</h2><p><img src="https://gitee.com/xoxoyun/image/raw/master/hexo_img/20200822111320.png" alt="14248468-043e5a2bfdbae0c8"></p><h2 id="xx-报错解决"><a href="#xx-报错解决" class="headerlink" title="xx.报错解决"></a>xx.报错解决</h2><p>查看监控发现没有数据显示不支持类型<br> 查看zabbix-server发现因为tmp的文件没有权限，因为刚才手动执行了脚本，所以文件属性是root，将文件删除后由zabbix自己创建解决问题<br> 报错日志如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">2846:20190811:202708.785 item <span class="string">&quot;Zabbix server:MySQL.State-init&quot;</span> became not supported: Value <span class="string">&quot;rm: 无法删除&quot;</span>/tmp/localhost-mysql_cacti_stats.txt<span class="string">&quot;: 不允许的操作</span></span><br><span class="line"><span class="string">0&quot;</span> of <span class="built_in">type</span> <span class="string">&quot;string&quot;</span> is not suitable <span class="keyword">for</span> value <span class="built_in">type</span> <span class="string">&quot;Numeric (float)&quot;</span></span><br><span class="line">  2843:20190811:202709.787 item <span class="string">&quot;Zabbix server:MySQL.State-locked&quot;</span> became not supported: Value <span class="string">&quot;rm: 无法删除&quot;</span>/tmp/localhost-mysql_cacti_stats.txt<span class="string">&quot;: 不允许的操作</span></span><br><span class="line"><span class="string">0&quot;</span> of <span class="built_in">type</span> <span class="string">&quot;string&quot;</span> is not suitable <span class="keyword">for</span> value <span class="built_in">type</span> <span class="string">&quot;Numeric (float)&quot;</span></span><br><span class="line">  2844:20190811:202710.788 item <span class="string">&quot;Zabbix server:MySQL.State-login&quot;</span> became not supported: Value <span class="string">&quot;rm: 无法删除&quot;</span>/tmp/localhost-mysql_cacti_stats.txt<span class="string">&quot;: 不允许的操作</span></span><br><span class="line"><span class="string">0&quot;</span> of <span class="built_in">type</span> <span class="string">&quot;string&quot;</span> is not suitable <span class="keyword">for</span> value <span class="built_in">type</span> <span class="string">&quot;Numeric (float)&quot;</span></span><br></pre></td></tr></table></figure><h1 id="第3章-自动发现和自动注册"><a href="#第3章-自动发现和自动注册" class="headerlink" title="第3章 自动发现和自动注册"></a>第3章 自动发现和自动注册</h1><h2 id="1-自动发现"><a href="#1-自动发现" class="headerlink" title="1.自动发现"></a>1.自动发现</h2><p>web页面操作</p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-af1b63e83dcd3ee2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p>image.png</p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-587cc5af6644f1cd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-55665a39080a9967.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-7b7f5f253f24bc66.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><h2 id="2-自动注册"><a href="#2-自动注册" class="headerlink" title="2.自动注册"></a>2.自动注册</h2><p>修改zabbix-agent配置文件</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@web02 ~]<span class="comment"># cat /etc/zabbix/zabbix_agentd.conf        </span></span><br><span class="line">PidFile=<span class="regexp">/var/run</span><span class="regexp">/zabbix/zabbix</span>_agentd.pid</span><br><span class="line">LogFile=<span class="regexp">/var/log</span><span class="regexp">/zabbix/zabbix</span>_agentd.log</span><br><span class="line">LogFileSize=<span class="number">0</span></span><br><span class="line">Server=<span class="number">10.0</span>.<span class="number">1.61</span></span><br><span class="line">ServerActive=<span class="number">10.0</span>.<span class="number">1.61</span></span><br><span class="line">Hostname=web02</span><br><span class="line">Include=<span class="regexp">/etc/zabbix</span><span class="regexp">/zabbix_agentd.d/</span>*.conf</span><br></pre></td></tr></table></figure><p>web页面操作</p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-89509e930ea622c7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-504b6bb123b6afea.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-044769015deccf97.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-a8a5a1e544998517.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p>刷新查看发现已经添加上了</p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-7cf58b1faa58a663.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><h1 id="第4章-主动模式和被动模式"><a href="#第4章-主动模式和被动模式" class="headerlink" title="第4章 主动模式和被动模式"></a>第4章 主动模式和被动模式</h1><p>默认为被动模式：100个监控项要100个来回，要的时候才返回<br> 主动模式：100个监控项1个回合，将所需要的100个打包，然后一次发过去，发过去之后，客户端全部执行完再一次返回给服务端。</p><h2 id="1-克隆模版"><a href="#1-克隆模版" class="headerlink" title="1.克隆模版"></a>1.克隆模版</h2><p>完全克隆原来被动模式的模版为主动模式</p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-9072ea412330509c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-2b7a74c31cb9e70d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><h2 id="2-修改克隆后的模版为主动模式"><a href="#2-修改克隆后的模版为主动模式" class="headerlink" title="2.修改克隆后的模版为主动模式"></a>2.修改克隆后的模版为主动模式</h2><p><img src="https://upload-images.jianshu.io/upload_images/14248468-2d9e6aa27f419e3b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-0d190c6fa9149a77.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-4114ba3a0dbec5ff.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-4c10ce98fa4783af.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><h2 id="3-修改监控主机关联的模版为主动模式"><a href="#3-修改监控主机关联的模版为主动模式" class="headerlink" title="3.修改监控主机关联的模版为主动模式"></a>3.修改监控主机关联的模版为主动模式</h2><p><img src="https://upload-images.jianshu.io/upload_images/14248468-dca0ed0011c2960a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><h2 id="4-修改客户端配置文件并重启"><a href="#4-修改客户端配置文件并重启" class="headerlink" title="4.修改客户端配置文件并重启"></a>4.修改客户端配置文件并重启</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]<span class="comment"># cat /etc/zabbix/zabbix_agentd.conf        </span></span><br><span class="line">PidFile=<span class="regexp">/var/run</span><span class="regexp">/zabbix/zabbix</span>_agentd.pid</span><br><span class="line">LogFile=<span class="regexp">/var/log</span><span class="regexp">/zabbix/zabbix</span>_agentd.log</span><br><span class="line">LogFileSize=<span class="number">0</span></span><br><span class="line">Server=<span class="number">10.0</span>.<span class="number">1.61</span></span><br><span class="line">ServerActive=<span class="number">10.0</span>.<span class="number">1.61</span></span><br><span class="line">Hostname=web01</span><br><span class="line">Include=<span class="regexp">/etc/zabbix</span><span class="regexp">/zabbix_agentd.d/</span>*.conf</span><br><span class="line">[root@web01 ~]<span class="comment"># systemctl restart zabbix-agent.service </span></span><br></pre></td></tr></table></figure><h2 id="5-查看最新数据"><a href="#5-查看最新数据" class="headerlink" title="5.查看最新数据"></a>5.查看最新数据</h2><p>发现获取数据的时间是一样的</p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-e1fbc5c233c93824.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><h1 id="第5章-低级自动发现"><a href="#第5章-低级自动发现" class="headerlink" title="第5章 低级自动发现"></a>第5章 低级自动发现</h1><p>监控端口自动发现</p><h2 id="1-查看系统自带分区自动发现"><a href="#1-查看系统自带分区自动发现" class="headerlink" title="1.查看系统自带分区自动发现"></a>1.查看系统自带分区自动发现</h2><p>系统自带的自动发现会显示红字，比如自带的磁盘分区发现规则</p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-3e1355a302b1bee9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-bebe288c3164f220.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p>1.查看zabbbix所有的key过滤后展示</p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-3aae200019c829a5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p> 2.解析成json后的格式</p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-bbb49742f206739a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/798/format/webp" alt="img"></p><p> 3.过滤规则</p><p>实质上是从mount命令获取的分区名和类型</p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-98e5d30b864443ea.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p>image.png</p><p> 但是我们zabbix显示的并没有这么多<br> 是因为做了正则表达式过滤</p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-d8ac06ca30f4ceea.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p> 而正则表达式是在管理里面配置的</p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-e82720b03bededfb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p> 4.使用zabbix_get获取key<br> 因为根据过滤规则，只发现了一个xfs的key，使用zabbix_get可以查看到这个key</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">root@m01 ~</span>]<span class="meta"># zabbix_get -s 10.0.1.61 -k vfs.fs.size[&#123;#FSNAME&#125;,free]</span></span><br><span class="line">ZBX_NOTSUPPORTED: Cannot obtain filesystem information: [<span class="number">2</span>] No such file or directory</span><br><span class="line">[<span class="meta">root@m01 ~</span>]<span class="meta"># zabbix_agentd -p|grep vfs.fs.size</span></span><br><span class="line">vfs.fs.size[/,free]                           [u|<span class="number">15713636352</span>]</span><br><span class="line">[<span class="meta">root@m01 ~</span>]<span class="meta"># zabbix_get -s 10.0.1.61 -k vfs.fs.size[/,free]        </span></span><br><span class="line"><span class="number">15713693696</span></span><br></pre></td></tr></table></figure><h2 id="2-查看系统自带的网卡自动发现"><a href="#2-查看系统自带的网卡自动发现" class="headerlink" title="2.查看系统自带的网卡自动发现"></a>2.查看系统自带的网卡自动发现</h2><p>1.查看网络自动发现规则</p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-5f25500006f8fdf0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p>2.过滤规则</p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-3f6154ec87344d75.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-c2d3a0744d197826.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p>2.命令行过滤</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">root@m01 ~</span>]<span class="meta"># zabbix_agentd -p|grep net.<span class="meta-keyword">if</span>.discovery</span></span><br><span class="line">net.<span class="keyword">if</span>.discovery                              [s|&#123;<span class="string">&quot;data&quot;</span>:[&#123;<span class="string">&quot;&#123;#IFNAME&#125;&quot;</span>:<span class="string">&quot;tun0&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#IFNAME&#125;&quot;</span>:<span class="string">&quot;eth0&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#IFNAME&#125;&quot;</span>:<span class="string">&quot;eth1&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#IFNAME&#125;&quot;</span>:<span class="string">&quot;lo&quot;</span>&#125;]&#125;]</span><br></pre></td></tr></table></figure><p>3.查看自动添加的监控项<br> 我们会发现添加了四个监控项<br> 2个eth0<br> 2个eth1</p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-96ce8f126bb7a0c7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-b0f5fabb359005da.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p>4.查看key的值</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[root@m01 ~]</span># <span class="selector-tag">zabbix_get</span> <span class="selector-tag">-s</span> 10<span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-class">.61</span> <span class="selector-tag">-k</span> <span class="selector-tag">net</span><span class="selector-class">.if</span><span class="selector-class">.in</span><span class="selector-attr">[eth0]</span></span><br><span class="line">2191453</span><br><span class="line"><span class="selector-attr">[root@m01 ~]</span># <span class="selector-tag">zabbix_get</span> <span class="selector-tag">-s</span> 10<span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-class">.61</span> <span class="selector-tag">-k</span> <span class="selector-tag">net</span><span class="selector-class">.if</span><span class="selector-class">.in</span><span class="selector-attr">[eth1]</span></span><br><span class="line">7152</span><br></pre></td></tr></table></figure><h2 id="3-监控mysql多实例"><a href="#3-监控mysql多实例" class="headerlink" title="3.监控mysql多实例"></a>3.监控mysql多实例</h2><p>参考强哥博客</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">https://www.qstack.com.cn/archives/108.html</span>](https:<span class="comment">//www.qstack.com.cn/archives/108.html)</span></span><br></pre></td></tr></table></figure><p>1.复制并修改数据库配置文件</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]<span class="comment"># cp /etc/my.cnf /etc/my3307.cnf</span></span><br><span class="line">[root@m01 ~]<span class="comment"># vim /etc/my3307.cnf </span></span><br><span class="line">[root@m01 ~]<span class="comment"># cat /etc/my3307.cnf    </span></span><br><span class="line">[mysqld]</span><br><span class="line">datadir=<span class="regexp">/data/</span><span class="number">3307</span>/</span><br><span class="line">socket=<span class="regexp">/data/</span><span class="number">3307</span>/mysql.sock</span><br><span class="line">port=<span class="number">3307</span></span><br><span class="line">user=mysql</span><br><span class="line">symbolic-links=<span class="number">0</span></span><br><span class="line">[mysqld_safe]</span><br><span class="line">log-error=<span class="regexp">/data/</span><span class="number">3307</span>/mysqld.log</span><br><span class="line">pid-file=<span class="regexp">/data/</span><span class="number">3307</span>/mysqld.pid</span><br><span class="line">[root@m01 ~]<span class="comment"># cp /etc/my3307.cnf /etc/my3308.cnf</span></span><br><span class="line">[root@m01 ~]<span class="comment"># sed -i &#x27;s#3307#3308#g&#x27; /etc/my3308.cnf</span></span><br></pre></td></tr></table></figure><p>2.创建数据目录并初始化</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">root@m01 ~</span>]<span class="meta"># mkdir /data/&#123;3307,3308&#125;</span></span><br><span class="line">[<span class="meta">root@m01 ~</span>]<span class="meta"># chown -R mysql:mysql /data/330*</span></span><br><span class="line">[<span class="meta">root@m01 ~</span>]<span class="meta"># mysql_install_db --user=mysql --defaults-file=/etc/my3307.cnf</span></span><br><span class="line">[<span class="meta">root@m01 ~</span>]<span class="meta"># mysql_install_db --user=mysql --defaults-file=/etc/my3308.cnf</span></span><br></pre></td></tr></table></figure><p>3.启动多实例</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">root@m01 ~</span>]<span class="meta"># mysqld_safe --defaults-file=/etc/my3307.cnf &amp;</span></span><br><span class="line">[<span class="meta">root@m01 ~</span>]<span class="meta"># mysqld_safe --defaults-file=/etc/my3308.cnf &amp;</span></span><br></pre></td></tr></table></figure><p>4.检查端口</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]<span class="comment"># netstat -lntup|grep mysql</span></span><br><span class="line">tcp        <span class="number">0</span>      <span class="number">0</span> <span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span><span class="symbol">:</span><span class="number">3306</span>            <span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span><span class="symbol">:*</span>               LISTEN      <span class="number">2042</span>/mysqld         </span><br><span class="line">tcp        <span class="number">0</span>      <span class="number">0</span> <span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span><span class="symbol">:</span><span class="number">3307</span>            <span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span><span class="symbol">:*</span>               LISTEN      <span class="number">84790</span>/mysqld        </span><br><span class="line">tcp        <span class="number">0</span>      <span class="number">0</span> <span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span><span class="symbol">:</span><span class="number">3308</span>            <span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">0</span><span class="symbol">:*</span>               LISTEN      <span class="number">85439</span>/mysqld </span><br></pre></td></tr></table></figure><p>5.创建自动发现配置文件</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]<span class="comment"># vim /etc/zabbix/zabbix_agentd.d/mysql_discovery.conf</span></span><br><span class="line">[root@m01 ~]<span class="comment"># cat /etc/zabbix/zabbix_agentd.d/mysql_discovery.conf</span></span><br><span class="line">UserParameter=mysql.discovery,<span class="regexp">/bin/bash</span> /server/scripts/mysql_discovery.sh</span><br></pre></td></tr></table></figure><p>6.创建自动发现多实例脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]<span class="comment"># cat /server/scripts/mysql_discovery.sh                                                </span></span><br><span class="line"><span class="meta">#!/bin/bash </span></span><br><span class="line"><span class="comment">#mysql low-level discovery </span></span><br><span class="line">res=$(netstat -lntp|awk -F <span class="string">&quot;[ :\t]+&quot;</span> <span class="string">&#x27;/mysqld/&#123;print$5&#125;&#x27;</span>)</span><br><span class="line">port=(<span class="variable">$res</span>) </span><br><span class="line"><span class="built_in">printf</span> <span class="string">&#x27;&#123;&#x27;</span> </span><br><span class="line"><span class="built_in">printf</span> <span class="string">&#x27;&quot;data&quot;:[&#x27;</span> </span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> <span class="variable">$&#123;!port[@]&#125;</span> </span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">        <span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$&#123;#port[@]&#125;</span>&quot;</span> -gt 1 &amp;&amp; <span class="string">&quot;<span class="variable">$&#123;key&#125;</span>&quot;</span> -ne <span class="string">&quot;<span class="subst">$(($&#123;#port[@]&#125;-1)</span>)&quot;</span> ]];<span class="keyword">then</span> </span><br><span class="line">                <span class="built_in">printf</span> <span class="string">&#x27;&#123;&#x27;</span> </span><br><span class="line">                <span class="built_in">printf</span> <span class="string">&quot;\&quot;&#123;#MYSQLPORT&#125;\&quot;:\&quot;<span class="variable">$&#123;port[$&#123;key&#125;</span>]&#125;\&quot;&#125;,&quot;</span> </span><br><span class="line">        <span class="keyword">else</span> [[ <span class="string">&quot;<span class="variable">$&#123;key&#125;</span>&quot;</span> -eq <span class="string">&quot;((<span class="variable">$&#123;#port[@]&#125;</span>-1))&quot;</span> ]] </span><br><span class="line">                <span class="built_in">printf</span> <span class="string">&#x27;&#123;&#x27;</span> </span><br><span class="line">                <span class="built_in">printf</span> <span class="string">&quot;\&quot;&#123;#MYSQLPORT&#125;\&quot;:\&quot;<span class="variable">$&#123;port[$&#123;key&#125;</span>]&#125;\&quot;&#125;&quot;</span> </span><br><span class="line">        <span class="keyword">fi</span> </span><br><span class="line"><span class="keyword">done</span> </span><br><span class="line"><span class="built_in">printf</span> <span class="string">&#x27;]&#x27;</span> </span><br><span class="line"><span class="built_in">printf</span> <span class="string">&#x27;&#125;\n&#x27;</span></span><br></pre></td></tr></table></figure><p>7.测试自动发现脚本</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">root@m01 ~</span>]<span class="meta"># bash /server/scripts/mysql_discovery.sh    </span></span><br><span class="line">&#123;<span class="string">&quot;data&quot;</span>:[&#123;<span class="string">&quot;&#123;#MYSQLPORT&#125;&quot;</span>:<span class="string">&quot;3306&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#MYSQLPORT&#125;&quot;</span>:<span class="string">&quot;3307&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#MYSQLPORT&#125;&quot;</span>:<span class="string">&quot;3308&quot;</span>&#125;]&#125;</span><br></pre></td></tr></table></figure><p>8.重启zabbix-agent</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">root@m01 ~</span>]<span class="meta"># systemctl restart zabbix-agent.service </span></span><br></pre></td></tr></table></figure><p>9.zabbix_get测试取key</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]<span class="comment"># zabbix_get -s 10.0.1.61 -k mysql.discovery</span></span><br><span class="line">(Not all processes could be identified, non-owned process info</span><br><span class="line"> will <span class="keyword">not</span> be shown, you would have to be root to see it all.)</span><br><span class="line">&#123;<span class="string">&quot;data&quot;</span><span class="symbol">:[]</span>&#125;</span><br></pre></td></tr></table></figure><p>这时我们发现取不出来并提示了个错误<br> 原因是zabbix用户不能使用netstat的-p参数<br> 解决方法为给netstat命令添加s权限</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">root@m01 ~</span>]<span class="meta"># which netstat </span></span><br><span class="line">/usr/bin/netstat</span><br><span class="line">[<span class="meta">root@m01 ~</span>]<span class="meta"># chmod u+s /usr/bin/netstat </span></span><br></pre></td></tr></table></figure><p>然后再次测试就发现可以取到值了</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">root@m01 ~</span>]<span class="meta"># zabbix_get -s 10.0.1.61 -k mysql.discovery</span></span><br><span class="line">&#123;<span class="string">&quot;data&quot;</span>:[&#123;<span class="string">&quot;&#123;#MYSQLPORT&#125;&quot;</span>:<span class="string">&quot;3306&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#MYSQLPORT&#125;&quot;</span>:<span class="string">&quot;3307&quot;</span>&#125;,&#123;<span class="string">&quot;&#123;#MYSQLPORT&#125;&quot;</span>:<span class="string">&quot;3308&quot;</span>&#125;]&#125;</span><br></pre></td></tr></table></figure><p>10.web页面创建自动发现规则模版</p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-171b3b3a50955bf9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p>创建模版</p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-2202433ba4036071.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p>创建自动发现规则</p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-59a302671ae391e5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p>设置过滤规则</p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-5e7a48a0b94e7f14.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p>创建过滤 规则</p><p>11.模仿zabbix自带的mysql监控配置修改监控项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]<span class="comment"># cat /etc/zabbix/zabbix_agentd.d/userparameter_mysql.conf    </span></span><br><span class="line">UserParameter=mysql.status[*],<span class="built_in">echo</span> <span class="string">&quot;show global status where Variable_name=&#x27;<span class="variable">$1</span>&#x27;;&quot;</span> | HOME=/var/lib/zabbix mysql -uroot -p123456 -P <span class="variable">$2</span> -N | awk <span class="string">&#x27;&#123;print $$2&#125;&#x27;</span></span><br><span class="line">[root@m01 ~]<span class="comment"># systemctl restart zabbix-agent.service</span></span><br></pre></td></tr></table></figure><p>12.测试访问监控项</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[root@m01 ~]</span># <span class="selector-tag">zabbix_get</span> <span class="selector-tag">-s</span> 10<span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-class">.61</span> <span class="selector-tag">-k</span> <span class="selector-tag">mysql</span><span class="selector-class">.status</span><span class="selector-attr">[Uptime,3307]</span></span><br><span class="line">23202</span><br><span class="line"><span class="selector-attr">[root@m01 ~]</span># <span class="selector-tag">zabbix_get</span> <span class="selector-tag">-s</span> 10<span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-class">.61</span> <span class="selector-tag">-k</span> <span class="selector-tag">mysql</span><span class="selector-class">.status</span><span class="selector-attr">[Uptime,3308]</span></span><br><span class="line">23204</span><br></pre></td></tr></table></figure><p>13.web页面添加监控项原型</p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-89edada48188ca66.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p>监控项原型</p><p>12.web页面设置主机关联模版</p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-9057cc0e392a092b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p>主机关联模版</p><p>13.查看是否已经自动添加成功</p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-d5cfc8e308c182ba.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><h1 id="第6章-性能优化"><a href="#第6章-性能优化" class="headerlink" title="第6章 性能优化"></a>第6章 性能优化</h1><h2 id="1-监控数据分析"><a href="#1-监控数据分析" class="headerlink" title="1.监控数据分析"></a>1.监控数据分析</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">zabbix监控主机和监控项较少的时候，不需要优化</span><br><span class="line">数据库 200台主机 * 200个监控项 &#x3D; 40000监控项&#x2F;30秒 &#x3D; 1333次写入&#x2F;每秒</span><br><span class="line">写多 读少 </span><br></pre></td></tr></table></figure><h2 id="2-优化思路"><a href="#2-优化思路" class="headerlink" title="2.优化思路"></a>2.优化思路</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1<span class="selector-class">.mariadb</span> 5<span class="selector-class">.5</span> <span class="selector-tag">innodb</span> 升级到<span class="selector-tag">mysql5</span><span class="selector-class">.7</span> <span class="selector-tag">tokudb</span></span><br><span class="line">2.去掉无用监控项，增加监控项的取值间隔，减少历史数据的保存周期</span><br><span class="line">3.被动模式改为主动模式</span><br><span class="line">4.针对<span class="selector-tag">zabbix-server</span>进程数量调优</span><br><span class="line">5.针对<span class="selector-tag">zabbix-server</span>缓存调优，谁的剩余内存少，就加大他的缓存</span><br></pre></td></tr></table></figure><h2 id="3-升级存储引擎"><a href="#3-升级存储引擎" class="headerlink" title="3.升级存储引擎"></a>3.升级存储引擎</h2><p>TokuDB性能比InnoDB要好</p><p>实施步骤：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.找一台机器安装好<span class="selector-tag">mysql5</span><span class="selector-class">.7</span></span><br><span class="line">2.将<span class="selector-tag">mariadb</span>的数据导出，然后替换<span class="selector-tag">sql</span>文件里的存储引擎为<span class="selector-tag">TokuDB</span></span><br><span class="line">3.将替换之后的数据导入到<span class="selector-tag">mysql5</span><span class="selector-class">.7</span></span><br><span class="line">4.停掉<span class="selector-tag">mariadb</span></span><br><span class="line">5.检查测试</span><br></pre></td></tr></table></figure><h2 id="4-优化进程数"><a href="#4-优化进程数" class="headerlink" title="4.优化进程数"></a>4.优化进程数</h2><p><img src="https://upload-images.jianshu.io/upload_images/14248468-41a940740a329bc9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p>可以人为制造进程繁忙，把自动发现调整IP范围为1-254</p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-ddfb6f215b09e222.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p>这个时候观察会发现自动发现进程变得繁忙了</p><p>修改进程数</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">root@zabbix-11 ~</span>]<span class="meta"># grep &quot;^StartDiscoverers&quot; /etc/zabbix/zabbix_server.conf </span></span><br><span class="line">StartDiscoverers=<span class="number">10</span></span><br><span class="line">[<span class="meta">root@zabbix-11 ~</span>]<span class="meta"># systemctl restart zabbix-server.service</span></span><br></pre></td></tr></table></figure><p>调整之后发现进程不这么繁忙了</p><p><img src="https://upload-images.jianshu.io/upload_images/14248468-d81ca9c49790856a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><h2 id="5-缓存调优"><a href="#5-缓存调优" class="headerlink" title="5.缓存调优"></a>5.缓存调优</h2><p><img src="https://upload-images.jianshu.io/upload_images/14248468-6b296d212dbc5a45.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img"></p><p>调整配置文件</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@zabbix<span class="number">-11</span> ~]<span class="meta"># grep <span class="meta-string">&quot;^Cache&quot;</span> /etc/zabbix/zabbix_server.conf </span></span><br><span class="line">CacheSize=<span class="number">128</span>M</span><br></pre></td></tr></table></figure><h1 id="第7章-zabbix高可用"><a href="#第7章-zabbix高可用" class="headerlink" title="第7章 zabbix高可用"></a>第7章 zabbix高可用</h1><p>思路：<br> 2台zabbix-server使用keepavied做高可用<br> 数据库做主从复制<br> keepalived两端都做backup角色，设置不抢占VIP<br> keepalived设置如果发生改变就将自身的从库数据库修改为主库设置<br> 然后另一台修复上线后，手动介入重新做主从同步，变成从库</p>]]></content>
      
      
      <categories>
          
          <category> 云计算 </category>
          
          <category> 监控 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Zabbix </tag>
            
            <tag> 分布式 </tag>
            
            <tag> 监控 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL优化</title>
      <link href="/posts/43137/"/>
      <url>/posts/43137/</url>
      
        <content type="html"><![CDATA[<ul><li>1.优化哲学</li><li>1.1 优化有风险</li><li>1.2 优化的范围</li><li>存储、主机和操作系统:</li><li>主机架构稳定性</li><li>I/O规划及配置</li><li>Swap</li><li>OS内核参数</li><li>网络问题</li><li>应用 :（Index，lock，session）</li><li>应用程序稳定性和性能</li><li>SQL语句性能</li><li>串行访问资源</li><li>性能欠佳会话管理</li><li>数据库优化:（内存、数据库设计、参数）</li><li>内存</li><li>数据库结构(物理&amp;逻辑)</li><li>实例配置</li><li>2.优化工具介绍</li><li>2.1 系统层</li><li>CPU : 计算(主)和调度(次)</li><li>MEM : 缓存和缓冲</li><li>IO : 输入和输出</li></ul><p>(1) top命令</p><p>%Cpu(s): 0.0 us, 0.0 sy, 100.0 id, 0.0 wa</p><ul><li><p>id 空闲的CPU时间片占比</p></li><li><p>us 用户程序工作所占用的时间片占比</p></li><li><p>sy 内核工作花费的cpu时间片占比</p></li><li><p>过高的原因:</p></li><li><p>内核本身bug</p></li><li><p>并发很高</p></li><li><p>锁</p></li><li><p>wa cpu用来等待的时间片占比</p></li><li><p>IO</p></li><li><p>等待大的处理事件</p></li><li><p>锁</p></li></ul><p>KiB Mem : 4937752 total, 3988956 free, 476100 used, 472696 buff/cache 4193924 avail Mem KiB Swap: 1048572 total, 1048572 free, 0 used.</p><p>(2) iostat</p><p>[root@db01 ~]# iostat -dk 1</p><ul><li>一般情况下，CPU高，IO也应该高。</li><li>如果：CPU 高 ，IO 比较低</li><li>wait 高： 有可以能IO出问题了（Raid ，过度条带化）</li><li>SyS 高： 有可能是锁的问题，需要进一步去数据库中判断</li></ul><p>(3) vmstat</p><p>[root@db01 ~]# vmstat 1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@db01 ~]# vmstat 1</span><br></pre></td></tr></table></figure><p>2.2 数据库层工具</p><p>show status<br>show variables<br>show index<br>show processlist<br>show slave status<br>show engine innodb status<br>desc /explain<br>slowlog</p><p>扩展类深度优化:<br>pt系列（pt-query-digest pt-osc pt-index 等）<br>mysqlslap<br>sysbench<br>information_schema （I_S）<br>performance_schema (P_S)<br>sys </p><p>3.优化思路</p><p>3.0 未优化前的压力测试</p><p>db01 [(none)]&gt;create database oldguo charset utf8mb4;<br>db01 [(none)]&gt;use oldguo;<br>db01 [oldguo]&gt;set sql_log_bin=0;<br>db01 [oldguo]&gt;source t100w.sql<br>db01 [oldguo]&gt;grant all on <em>.</em> to root@’localhost’ identified by ‘123’;</p><p>[root@db01 ~]# mysqlslap –defaults-file=/etc/my.cnf \<br>–concurrency=100 –iterations=1 –create-schema=’oldguo’ \<br>–query=”select * from oldguo.t100w where k2=’ABxy’” engine=innodb \<br>–number-of-queries=200 -uroot -p123 -verbose</p><p>3.1 主机,存储,网络</p><ul><li><p>主机</p></li><li><p>真实的硬件（PC Server）: DELL R系列 ，华为，浪潮，HP，曙光,联想</p></li><li><p>云产品：ECS、数据库RDS、DRDS、PolarDB</p></li><li><p>IBM 小型机 P6 570 595 P7 720 750 780 P8</p></li><li><p>CPU根据数据库类型</p></li><li><p>OLTP</p></li><li><p>OLAP</p></li><li><p>IO密集型：线上系统，OLTP主要是IO密集型的业务，高并发</p></li><li><p>CPU密集型：数据分析数据处理，OLAP，cpu密集型的，需要CPU高计算能力（i系列，IBM power系列）</p></li><li><p>CPU密集型： I 系列的，主频很高，核心少</p></li><li><p>IO密集型： E系列（至强），主频相对低，核心数量多</p></li><li><p>内存</p></li><li><p>建议2-3倍cpu核心数量 （ECC）</p></li><li><p>磁盘选择</p></li><li><p>SATA-III SAS Fc SSD（sata） pci-e ssd Flash</p></li><li><p>主机 RAID卡的BBU(Battery Backup Unit)关闭</p></li><li><p>存储</p></li><li><p>根据存储数据种类的不同，选择不同的存储设备</p></li><li><p>配置合理的RAID级别(raid5、raid10、热备盘)</p></li><li><p>r0 :条带化 ,性能高</p></li><li><p>r1 :镜像，安全</p></li><li><p>r5 :校验+条带化，安全较高+性能较高（读写性能较低 （适合于读多写少）</p></li><li><p>r10：安全+性能都很高，最少四块盘，浪费一半的空间（高IO要求）</p></li><li><p>网络</p></li><li><p>1、硬件买好的（单卡单口）</p></li><li><p>2、网卡绑定（bonding），交换机堆叠</p></li><li><p>以上问题，提前规避掉。</p></li></ul><p>3.2 系统</p><p>Swap调整</p><p>echo 0 &gt;/proc/sys/vm/swappiness的内容改成0（临时），<br>vim /etc/sysctl.conf<br>上添加vm.swappiness=0（永久）<br>sysctl -p</p><p>IO调度策略</p><p>centos 7 默认是deadline<br>cat /sys/block/sda/queue/scheduler</p><p>#临时修改为deadline(centos6)</p><p>echo deadline &gt;/sys/block/sda/queue/scheduler<br>vi /boot/grub/grub.conf</p><p>更改到如下内容:<br>kernel /boot/vmlinuz-2.6.18-8.el5 ro root=LABEL=/ elevator=deadline rhgb quiet</p><p>IO：<br> raid<br> no<br> lvm<br> ext4或xfs<br> ssd<br> IO调度策略</p><p>提前规划好以上所有问题，减轻MySQL优化的难度。</p><p>3.3 数据库实例(参数)</p><p>3.3.1 Max_connections <strong>*</strong></p><p>（1）简介</p><p>Mysql的最大连接数，如果服务器的并发请求量比较大，可以调高这个值，当然这是要建立在机器能够支撑的情况下，因为如果连接数越来越多，mysql会为每个连接提供缓冲区，就会开销的越多的内存，所以需要适当的调整该值，不能随便去提高设值。</p><p>（2）判断依据</p><p> show variables like ‘max_connections’;<br> +—————–+——-+<br>| Variable_name | Value |<br> +—————–+——-+<br>| max_connections | 151 |<br>+—————–+——-+<br>show status like ‘Max_used_connections’;<br>+———————-+——-+<br>| Variable_name | Value |<br>+———————-+——-+<br>| Max_used_connections | 101 |<br>+———————-+——-+ </p><p>（3）修改方式举例</p><p>vim /etc/my.cnf<br>Max_connections=1024</p><p>补充:</p><ul><li>1.开启数据库时,我们可以临时设置一个比较大的测试值</li><li>2.观察show status like ‘Max_used_connections’;变化</li><li>3.如果max_used_connections跟max_connections相同,</li><li>那么就是max_connections设置过低或者超过服务器的负载上限了</li></ul><p>3.3.2 back_log ***</p><p>（1）简介</p><p>mysql能暂存的连接数量，当主要mysql线程在一个很短时间内得到非常多的连接请求时候它就会起作用，如果mysql的连接数据达到max_connections时候，新来的请求将会被存在堆栈中，等待某一连接释放资源，该推栈的数量及back_log,如果等待连接的数量超过back_log，将不被授予连接资源。</p><p>back_log值指出在mysql暂时停止回答新请求之前的短时间内有多少个请求可以被存在推栈中，只有如果期望在一个短时间内有很多连接的时候需要增加它</p><p>（2）判断依据</p><p>show full processlist </p><p>发现大量的待连接进程时，就需要加大back_log或者加大max_connections的值 （3）修改方式举例</p><p>vim /etc/my.cnf<br>back_log=1024</p><p>3.3.3 wait_timeout和interactive_timeout</p><p>（1）简介</p><ul><li>wait_timeout：指的是mysql在关闭一个非交互的连接之前所要等待的秒数</li><li>interactive_timeout：指的是mysql在关闭一个交互的连接之前所需要等待的秒数，比如我们在终端上进行mysql管理，使用的即使交互的连接，这时候，如果没有操作的时间超过了interactive_time设置的时间就会自动的断开，默认的是28800，可调优为7200。</li><li>wait_timeout:如果设置太小，那么连接关闭的就很快，从而使一些持久的连接不起作用</li></ul><p>（2）设置建议</p><p>如果设置太大，容易造成连接打开时间过长，在show processlist时候，能看到很多的连接 ，一般希望wait_timeout尽可能低</p><p>（3）修改方式举例</p><p>wait_timeout=60<br>interactive_timeout=1200</p><ul><li>长连接的应用，为了不去反复的回收和分配资源，降低额外的开销。</li><li>一般我们会将wait_timeout设定比较小，interactive_timeout要和应用开发人员沟通长链接的应用是否很多。如果他需要长链接，那么这个值可以不需要调整。</li><li>另外还可以使用类外的参数弥补。</li></ul><p>3.3.4 key_buffer_size <strong>*</strong></p><p>(1) myisam 表的索引缓冲区</p><p>(2) 临时表的缓冲区</p><p> mysql&gt; show status like “created_tmp%”;<br> +————————-+——-+<br>| Variable_name | Value |<br>+————————-+——-+<br>| Created_tmp_disk_tables | 0 |<br> | Created_tmp_files | 6 |<br> | Created_tmp_tables | 1 |<br>Created_tmp_tables/(Created_tmp_disk_tables+ Created_tmp_tables)越高越好<br>Created_tmp_disk_tables/(Created_tmp_disk_tables + Created_tmp_tables)<br>Created_tmp_disk_tables/(Created_tmp_disk_tables + Created_tmp_tables)</p><p>控制在5%-10%以内</p><p>mysql&gt; show variables like “key_buffer_size%”;</p><p>3.4 优化后的压力测试</p><p>max_connections=1024<br>back_log=128<br>wait_timeout=60<br>interactive_timeout=7200<br>key_buffer_size=16M<br>query_cache_size=64M<br>query_cache_type=1<br>query_cache_limit=50M<br>max_connect_errors=20<br>sort_buffer_size=2M<br>max_allowed_packet=32M<br>join_buffer_size=2M<br>thread_cache_size=200<br>innodb_buffer_pool_size=1024M<br>innodb_flush_log_at_trx_commit=1<br>innodb_log_buffer_size=32M<br>innodb_log_file_size=128M<br>innodb_log_files_in_group=3<br>binlog_cache_size=2M<br>max_binlog_cache_size=8M<br>max_binlog_size=512M<br>expire_logs_days=7<br>read_buffer_size=2M<br>read_rnd_buffer_size=2M<br>bulk_insert_buffer_size=8M</p><p>3.5 应用层面优化</p>]]></content>
      
      
      <categories>
          
          <category> MySQL进阶 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>搭建个人Leanote云笔记本</title>
      <link href="/posts/35691/"/>
      <url>/posts/35691/</url>
      
        <content type="html"><![CDATA[<h3 id="连接ECS服务器"><a href="#连接ECS服务器" class="headerlink" title="连接ECS服务器"></a>连接ECS服务器</h3><h4 id="1-打开系统自带的终端工具"><a href="#1-打开系统自带的终端工具" class="headerlink" title="1. 打开系统自带的终端工具"></a>1. 打开系统自带的终端工具</h4><p>Windows：CMD或Powershell</p><p>MAC：Terminal</p><h4 id="2-在终端中输入连接命令ssh-username-ipaddress-。您需要将其中的username和ipaddress替换为第1小节中创建的ECS服务器的登录名和公网地址例如："><a href="#2-在终端中输入连接命令ssh-username-ipaddress-。您需要将其中的username和ipaddress替换为第1小节中创建的ECS服务器的登录名和公网地址例如：" class="headerlink" title="2. 在终端中输入连接命令ssh [username]@[ipaddress]。您需要将其中的username和ipaddress替换为第1小节中创建的ECS服务器的登录名和公网地址例如："></a>2. 在终端中输入连接命令ssh [username]@[ipaddress]。您需要将其中的username和ipaddress替换为第1小节中创建的ECS服务器的登录名和公网地址例如：</h4><p>ssh <a href="mailto:&#x72;&#x6f;&#x6f;&#x74;&#64;&#x31;&#x32;&#x33;&#46;&#49;&#x32;&#51;&#46;&#49;&#x32;&#x33;&#46;&#x31;&#x32;&#51;">&#x72;&#x6f;&#x6f;&#x74;&#64;&#x31;&#x32;&#x33;&#46;&#49;&#x32;&#51;&#46;&#49;&#x32;&#x33;&#46;&#x31;&#x32;&#51;</a></p><p>命令显示结果如下：</p><p><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020072006321962.png"></p><h4 id="3-输入yes"><a href="#3-输入yes" class="headerlink" title="3. 输入yes"></a>3. 输入yes</h4><h4 id="4-同意继续后将会提示输入登录密码。-密码为已创建的云服务的ECS的登录密码"><a href="#4-同意继续后将会提示输入登录密码。-密码为已创建的云服务的ECS的登录密码" class="headerlink" title="4. 同意继续后将会提示输入登录密码。 密码为已创建的云服务的ECS的登录密码"></a>4. 同意继续后将会提示输入登录密码。 密码为已创建的云服务的ECS的登录密码</h4><p><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020072006322820.png"></p><p>登录成功后会显示如下信息。</p><p><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020072006323662.png"></p><h3 id="安装MongoDB"><a href="#安装MongoDB" class="headerlink" title="安装MongoDB"></a>安装MongoDB</h3><p>MongoDB是一个基于分布式文件存储的高性能数据库，介于关系数据库和非关系数据库之间，它支持的数据结构非常松散是类似于json和bson格式，因此可以存储比较复杂的数据类型。Mongo最大的特点是它支持的查询语言非常强大，其语法有点类似于面向对象的查询语言，几乎可以实现类似关系数据库单表查询的绝大部分功能，而且还支持对数据建立索引。</p><p>Leanote云笔记使用MongoDB作为后端数据库，按照以下步骤按照MongoDB数据库</p><h4 id="1-执行以下命令，安装MongoDB"><a href="#1-执行以下命令，安装MongoDB" class="headerlink" title="1. 执行以下命令，安装MongoDB"></a>1. 执行以下命令，安装MongoDB</h4><p>yum -y  install mongodb mongodb-server.x86_64 mariadb-devel.i686</p><h4 id="2-执行以下命令，启动MongoDB服务"><a href="#2-执行以下命令，启动MongoDB服务" class="headerlink" title="2. 执行以下命令，启动MongoDB服务"></a>2. 执行以下命令，启动MongoDB服务</h4><p>systemctl start mongod</p><h4 id="3-执行以下命令，查看MongoDB运行状态"><a href="#3-执行以下命令，查看MongoDB运行状态" class="headerlink" title="3. 执行以下命令，查看MongoDB运行状态"></a>3. 执行以下命令，查看MongoDB运行状态</h4><p>systemctl status mongod</p><p><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020072006334433.png"></p><h3 id="安装Leanote"><a href="#安装Leanote" class="headerlink" title="安装Leanote"></a>安装Leanote</h3><h4 id="1-下载Leanote二进制安装包"><a href="#1-下载Leanote二进制安装包" class="headerlink" title="1. 下载Leanote二进制安装包"></a>1. 下载Leanote二进制安装包</h4><p>wget <a href="https://nchc.dl.sourceforge.net/project/leanote-bin/2.6.1/leanote-linux-amd64-v2.6.1.bin.tar.gz">https://nchc.dl.sourceforge.net/project/leanote-bin/2.6.1/leanote-linux-amd64-v2.6.1.bin.tar.gz</a></p><h4 id="2-解压安装包"><a href="#2-解压安装包" class="headerlink" title="2. 解压安装包"></a>2. 解压安装包</h4><p>tar` `-zxvf` `leanote-linux-amd64-v2.6.1.bin.tar.gz</p><h4 id="3-编辑文件leanote-conf-app-conf，在文件中找到-app-secret-项，将该项的值改为任意字符串。（如不修改将会有安全风险）"><a href="#3-编辑文件leanote-conf-app-conf，在文件中找到-app-secret-项，将该项的值改为任意字符串。（如不修改将会有安全风险）" class="headerlink" title="3. 编辑文件leanote/conf/app.conf，在文件中找到 app.secret 项，将该项的值改为任意字符串。（如不修改将会有安全风险）"></a>3. 编辑文件leanote/conf/app.conf，在文件中找到 app.secret 项，将该项的值改为任意字符串。（如不修改将会有安全风险）</h4><p>说明： 根据Leanote官方文档，如不改app.secret项的值，将会有安全隐患</p><p>a. 使用vim编辑器打开文件leanote/conf/app.conf</p><p>vim leanote/conf/app.conf</p><p>b. 进入vim编辑器后，输入 :/app.secret=并按下回车查找 app.secret 位置</p><p>c. 找到该项位置后按下<code>i</code>键进入编辑模式，修改该项的值为任意字符串</p><p>d. 修改完成后，按下<code>esc</code>键退出编辑模式，输入 :wq 保存并退出vim编辑器</p><p>修改后如图所示</p><p><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020072006335412.png"></p><h4 id="4-初始化数据库"><a href="#4-初始化数据库" class="headerlink" title="4. 初始化数据库"></a>4. 初始化数据库</h4><p>mongorestore -h localhost -d leanote  –dir /root/leanote/mongodb_backup/leanote_install_data/</p><h4 id="5-启动服务"><a href="#5-启动服务" class="headerlink" title="5. 启动服务"></a>5. 启动服务</h4><p>nohup bash /root/leanote/bin/run.sh &gt; /root/leanote/run.`log` `2`&gt;&amp;`1` &amp;</p><h4 id="6-访问云笔记"><a href="#6-访问云笔记" class="headerlink" title="6. 访问云笔记"></a>6. 访问云笔记</h4><p>在浏览器中访问 http://公网地址&gt;:9000 ，请将&lt;公网地址&gt; 替换为左侧资源栏中的ECS公网IP地址。默认管理用户为admin，密码为abc123</p><p>登录成功后如下图所示</p><p><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020072006340597.png"></p>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>KVM</title>
      <link href="/posts/33679/"/>
      <url>/posts/33679/</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/xoxoyun/MCDN/usr/uploads/2020/%E8%83%8C%E6%99%AF%E5%9B%BE%E5%BA%93/36.jpg" alt="此图像的alt属性为空；文件名为4.jpg"></p><h1 id="第-1-章-KVM-介绍展开目录"><a href="#第-1-章-KVM-介绍展开目录" class="headerlink" title="第 1 章 KVM 介绍展开目录"></a>第 1 章 KVM 介绍展开目录</h1><h1 id="第-2-章-创建一个-KVM-虚拟机展开目录"><a href="#第-2-章-创建一个-KVM-虚拟机展开目录" class="headerlink" title="第 2 章 创建一个 KVM 虚拟机展开目录"></a>第 2 章 创建一个 KVM 虚拟机展开目录</h1><h2 id="1-VM-虚拟机开启-CPU-虚拟化功能展开目录"><a href="#1-VM-虚拟机开启-CPU-虚拟化功能展开目录" class="headerlink" title="1.VM 虚拟机开启 CPU 虚拟化功能展开目录"></a>1.VM 虚拟机开启 CPU 虚拟化功能展开目录</h2><p>设置 - 处理器 - 虚拟化</p><h2 id="2-安装软件展开目录"><a href="#2-安装软件展开目录" class="headerlink" title="2. 安装软件展开目录"></a>2. 安装软件展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install libvirt virt-install qemu-kvm -y</span><br></pre></td></tr></table></figure><h2 id="3-创建虚拟机展开目录"><a href="#3-创建虚拟机展开目录" class="headerlink" title="3. 创建虚拟机展开目录"></a>3. 创建虚拟机展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl start libvirtd.service </span><br><span class="line">systemctl status libvirtd.service</span><br><span class="line"></span><br><span class="line">virt-install --virt-type kvm --os-type&#x3D;linux --os-variant rhel7 --name centos7 --memory 1024 --vcpus 1 --disk &#x2F;opt&#x2F;centos7.raw,format&#x3D;raw,size&#x3D;10 --cdrom &#x2F;opt&#x2F;CentOS-7-x86_64-DVD-1810.iso --network network&#x3D;default --graphics vnc,listen&#x3D;0.0.0.0 --noautoconsole</span><br></pre></td></tr></table></figure><h2 id="4-连接虚拟机展开目录"><a href="#4-连接虚拟机展开目录" class="headerlink" title="4. 连接虚拟机展开目录"></a>4. 连接虚拟机展开目录</h2><p>安装 VNC 工具连接</p><h1 id="第-3-章-KVM-常用管理命令展开目录"><a href="#第-3-章-KVM-常用管理命令展开目录" class="headerlink" title="第 3 章 KVM 常用管理命令展开目录"></a>第 3 章 KVM 常用管理命令展开目录</h1><h2 id="1-查看虚拟机展开目录"><a href="#1-查看虚拟机展开目录" class="headerlink" title="1. 查看虚拟机展开目录"></a>1. 查看虚拟机展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">virsh list</span><br><span class="line">virsh list --all</span><br></pre></td></tr></table></figure><h2 id="2-启动虚拟机展开目录"><a href="#2-启动虚拟机展开目录" class="headerlink" title="2. 启动虚拟机展开目录"></a>2. 启动虚拟机展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virsh start centos7</span><br></pre></td></tr></table></figure><h2 id="3-重启虚拟机展开目录"><a href="#3-重启虚拟机展开目录" class="headerlink" title="3. 重启虚拟机展开目录"></a>3. 重启虚拟机展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virsh reboot centos7</span><br></pre></td></tr></table></figure><h2 id="4-关闭虚拟机展开目录"><a href="#4-关闭虚拟机展开目录" class="headerlink" title="4. 关闭虚拟机展开目录"></a>4. 关闭虚拟机展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">virsh shutdown centos7</span><br><span class="line">virsh destroy centos7</span><br></pre></td></tr></table></figure><h2 id="5-查看配置文件展开目录"><a href="#5-查看配置文件展开目录" class="headerlink" title="5. 查看配置文件展开目录"></a>5. 查看配置文件展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virsh dumpxml centos7</span><br></pre></td></tr></table></figure><h2 id="6-导出配置文件展开目录"><a href="#6-导出配置文件展开目录" class="headerlink" title="6. 导出配置文件展开目录"></a>6. 导出配置文件展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virsh dumpxml centos7 &gt; centos7.xml</span><br></pre></td></tr></table></figure><h2 id="7-删除虚拟机展开目录"><a href="#7-删除虚拟机展开目录" class="headerlink" title="7. 删除虚拟机展开目录"></a>7. 删除虚拟机展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">virsh destroy centos7</span><br><span class="line">virsh undefine centos7</span><br></pre></td></tr></table></figure><h2 id="8-导入虚拟机展开目录"><a href="#8-导入虚拟机展开目录" class="headerlink" title="8. 导入虚拟机展开目录"></a>8. 导入虚拟机展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virsh define centos7.xml</span><br></pre></td></tr></table></figure><h2 id="9-虚拟机重命名展开目录"><a href="#9-虚拟机重命名展开目录" class="headerlink" title="9. 虚拟机重命名展开目录"></a>9. 虚拟机重命名展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virsh domrename panghu shouhu</span><br></pre></td></tr></table></figure><h2 id="10-主机挂起展开目录"><a href="#10-主机挂起展开目录" class="headerlink" title="10. 主机挂起展开目录"></a>10. 主机挂起展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virsh suspend centos7</span><br></pre></td></tr></table></figure><h2 id="11-恢复主机展开目录"><a href="#11-恢复主机展开目录" class="headerlink" title="11. 恢复主机展开目录"></a>11. 恢复主机展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virsh resume centos7</span><br></pre></td></tr></table></figure><h2 id="12-kvm-虚拟机开机启动展开目录"><a href="#12-kvm-虚拟机开机启动展开目录" class="headerlink" title="12.kvm 虚拟机开机启动展开目录"></a>12.kvm 虚拟机开机启动展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">virsh autostart centos7</span><br><span class="line">ll &#x2F;etc&#x2F;libvirt&#x2F;qemu&#x2F;autostart&#x2F;</span><br></pre></td></tr></table></figure><h2 id="13-小项目：展开目录"><a href="#13-小项目：展开目录" class="headerlink" title="13. 小项目：展开目录"></a>13. 小项目：展开目录</h2><p>把虚拟机磁盘迁移到 /data 目录并且启动</p><h3 id="13-1-停止要迁移的虚拟机展开目录"><a href="#13-1-停止要迁移的虚拟机展开目录" class="headerlink" title="13.1. 停止要迁移的虚拟机展开目录"></a>13.1. 停止要迁移的虚拟机展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virsh shutdown centos7</span><br></pre></td></tr></table></figure><h3 id="13-2-创建数据目录并移动磁盘文件展开目录"><a href="#13-2-创建数据目录并移动磁盘文件展开目录" class="headerlink" title="13.2. 创建数据目录并移动磁盘文件展开目录"></a>13.2. 创建数据目录并移动磁盘文件展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir &#x2F;data </span><br><span class="line">mv &#x2F;opt&#x2F;centos7.raw &#x2F;data </span><br></pre></td></tr></table></figure><h3 id="13-3-使用-edit-命令修改配置文件展开目录"><a href="#13-3-使用-edit-命令修改配置文件展开目录" class="headerlink" title="13.3. 使用 edit 命令修改配置文件展开目录"></a>13.3. 使用 edit 命令修改配置文件展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">virsh edit centos7</span><br><span class="line">--------------------</span><br><span class="line"> &lt;source file&#x3D;&#39;&#x2F;data&#x2F;centos7.raw&#39;&#x2F;&gt;</span><br><span class="line">--------------------</span><br></pre></td></tr></table></figure><h3 id="13-4-启动虚拟机展开目录"><a href="#13-4-启动虚拟机展开目录" class="headerlink" title="13.4. 启动虚拟机展开目录"></a>13.4. 启动虚拟机展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">virsh start centos7</span><br><span class="line">virsh list </span><br></pre></td></tr></table></figure><h1 id="第-4-章-KVM-连接方式展开目录"><a href="#第-4-章-KVM-连接方式展开目录" class="headerlink" title="第 4 章 KVM 连接方式展开目录"></a>第 4 章 KVM 连接方式展开目录</h1><h2 id="1-VNC展开目录"><a href="#1-VNC展开目录" class="headerlink" title="1.VNC展开目录"></a>1.VNC展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virsh vncdisplay centos7</span><br></pre></td></tr></table></figure><h2 id="2-SSH展开目录"><a href="#2-SSH展开目录" class="headerlink" title="2.SSH展开目录"></a>2.SSH展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh 192.168.122.77</span><br></pre></td></tr></table></figure><h2 id="3-console-显示展开目录"><a href="#3-console-显示展开目录" class="headerlink" title="3.console 显示展开目录"></a>3.console 显示展开目录</h2><p>登录进需要开启 console 的虚拟机并添加参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ssh 192.168.122.77</span><br><span class="line">grubby --update-kernel&#x3D;ALL --args&#x3D;&quot;console&#x3D;ttyS0,115200n8&quot;</span><br><span class="line">grep &quot;115200&quot; &#x2F;boot&#x2F;grub2&#x2F;grub.cfg </span><br><span class="line">reboot</span><br><span class="line">virsh destroy centos7</span><br><span class="line">virsh start centos7</span><br><span class="line">virsh console centos7</span><br></pre></td></tr></table></figure><p>退出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctrl + ]</span><br></pre></td></tr></table></figure><h1 id="第-5-章-KVM-磁盘管理展开目录"><a href="#第-5-章-KVM-磁盘管理展开目录" class="headerlink" title="第 5 章 KVM 磁盘管理展开目录"></a>第 5 章 KVM 磁盘管理展开目录</h1><h2 id="1-虚拟机磁盘格式介绍展开目录"><a href="#1-虚拟机磁盘格式介绍展开目录" class="headerlink" title="1. 虚拟机磁盘格式介绍展开目录"></a>1. 虚拟机磁盘格式介绍展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">raw：不支持做快照，性能好</span><br><span class="line">qcow2：支持快照，性能不如raw好</span><br></pre></td></tr></table></figure><h2 id="2-查看磁盘信息展开目录"><a href="#2-查看磁盘信息展开目录" class="headerlink" title="2. 查看磁盘信息展开目录"></a>2. 查看磁盘信息展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qemu-img info centos7.raw </span><br></pre></td></tr></table></figure><h2 id="3-创建磁盘展开目录"><a href="#3-创建磁盘展开目录" class="headerlink" title="3. 创建磁盘展开目录"></a>3. 创建磁盘展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qemu-img create -f qcow2 &#x2F;data&#x2F;centos7.qcow2 1G</span><br></pre></td></tr></table></figure><h2 id="4-查看磁盘信息展开目录"><a href="#4-查看磁盘信息展开目录" class="headerlink" title="4. 查看磁盘信息展开目录"></a>4. 查看磁盘信息展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qemu-img info centos7.qcow2</span><br></pre></td></tr></table></figure><h2 id="5-调整磁盘容量：只能加不能减展开目录"><a href="#5-调整磁盘容量：只能加不能减展开目录" class="headerlink" title="5. 调整磁盘容量：只能加不能减展开目录"></a>5. 调整磁盘容量：只能加不能减展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qemu-img resize &#x2F;data&#x2F;centos7.qcow2 1T</span><br></pre></td></tr></table></figure><h2 id="6-磁盘格式转换展开目录"><a href="#6-磁盘格式转换展开目录" class="headerlink" title="6. 磁盘格式转换展开目录"></a>6. 磁盘格式转换展开目录</h2><h3 id="6-1-将虚拟机关机展开目录"><a href="#6-1-将虚拟机关机展开目录" class="headerlink" title="6.1. 将虚拟机关机展开目录"></a>6.1. 将虚拟机关机展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virsh destroy centos7</span><br></pre></td></tr></table></figure><h3 id="6-2-转换磁盘格式展开目录"><a href="#6-2-转换磁盘格式展开目录" class="headerlink" title="6.2. 转换磁盘格式展开目录"></a>6.2. 转换磁盘格式展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qemu-img convert -f raw -O qcow2 centos7.raw centos7.qcow2  </span><br></pre></td></tr></table></figure><h3 id="6-3-编辑配置文件修改为-qcow2-格式展开目录"><a href="#6-3-编辑配置文件修改为-qcow2-格式展开目录" class="headerlink" title="6.3. 编辑配置文件修改为 qcow2 格式展开目录"></a>6.3. 编辑配置文件修改为 qcow2 格式展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">virsh edit centos7</span><br><span class="line">------------------------------------------</span><br><span class="line">      &lt;driver name&#x3D;&#39;qemu&#39; type&#x3D;&#39;qcow2&#39;&#x2F;&gt;</span><br><span class="line">      &lt;source file&#x3D;&#39;&#x2F;opt&#x2F;centos7.qcow2&#39;&#x2F;&gt;</span><br><span class="line">------------------------------------------</span><br></pre></td></tr></table></figure><h3 id="6-4-重新启动展开目录"><a href="#6-4-重新启动展开目录" class="headerlink" title="6.4. 重新启动展开目录"></a>6.4. 重新启动展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">virsh start centos7</span><br><span class="line">virsh console centos7</span><br></pre></td></tr></table></figure><h1 id="第-6-章-KVM-快照管理展开目录"><a href="#第-6-章-KVM-快照管理展开目录" class="headerlink" title="第 6 章 KVM 快照管理展开目录"></a>第 6 章 KVM 快照管理展开目录</h1><h2 id="1-查看快照展开目录"><a href="#1-查看快照展开目录" class="headerlink" title="1. 查看快照展开目录"></a>1. 查看快照展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virsh snapshot-list centos7</span><br></pre></td></tr></table></figure><h2 id="2-创建快照展开目录"><a href="#2-创建快照展开目录" class="headerlink" title="2. 创建快照展开目录"></a>2. 创建快照展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">virsh snapshot-create-as centos7 snap1</span><br><span class="line">virsh snapshot-list centos7</span><br></pre></td></tr></table></figure><h2 id="3-恢复快照展开目录"><a href="#3-恢复快照展开目录" class="headerlink" title="3. 恢复快照展开目录"></a>3. 恢复快照展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virsh snapshot-revert centos7 snap1</span><br></pre></td></tr></table></figure><h2 id="4-删除快照展开目录"><a href="#4-删除快照展开目录" class="headerlink" title="4. 删除快照展开目录"></a>4. 删除快照展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">virsh snapshot-delete centos7 snap1</span><br><span class="line">virsh snapshot-list centos7</span><br></pre></td></tr></table></figure><h1 id="第-7-章-KVM-克隆虚拟机展开目录"><a href="#第-7-章-KVM-克隆虚拟机展开目录" class="headerlink" title="第 7 章 KVM 克隆虚拟机展开目录"></a>第 7 章 KVM 克隆虚拟机展开目录</h1><h2 id="1-完整克隆展开目录"><a href="#1-完整克隆展开目录" class="headerlink" title="1. 完整克隆展开目录"></a>1. 完整克隆展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">virsh shutdown centos7</span><br><span class="line">virt-clone --auto-clone -o centos7 -n centos7-backup</span><br><span class="line">virsh list --all</span><br><span class="line">virsh dumpxml web-blog-backup |grep &quot;qcow2&quot;</span><br><span class="line">virsh snapshot-list centos7</span><br></pre></td></tr></table></figure><h2 id="2-链接克隆展开目录"><a href="#2-链接克隆展开目录" class="headerlink" title="2. 链接克隆展开目录"></a>2. 链接克隆展开目录</h2><h3 id="2-1-生成虚拟机磁盘文件展开目录"><a href="#2-1-生成虚拟机磁盘文件展开目录" class="headerlink" title="2.1 生成虚拟机磁盘文件展开目录"></a>2.1 生成虚拟机磁盘文件展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qemu-img create -f qcow2 -b centos7.qcow2 centos7-clone.qcow2 </span><br></pre></td></tr></table></figure><h3 id="2-2-查看磁盘信息展开目录"><a href="#2-2-查看磁盘信息展开目录" class="headerlink" title="2.2 查看磁盘信息展开目录"></a>2.2 查看磁盘信息展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qemu-img info centos7-clone.qcow2 </span><br></pre></td></tr></table></figure><h3 id="2-3-生成虚拟机配置文件展开目录"><a href="#2-3-生成虚拟机配置文件展开目录" class="headerlink" title="2.3 生成虚拟机配置文件展开目录"></a>2.3 生成虚拟机配置文件展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">virsh dumpxml centos7 &gt; centos7-clone.xml</span><br><span class="line">sed -i &#39;&#x2F;uuid&#x2F;d&#39; centos7-clone.xml</span><br><span class="line">sed -i &#39;&#x2F;mac address&#x2F;d&#39; centos7-clone.xml</span><br><span class="line">sed -i &#39;s#centos7.qcow2#centos7-clone.qcow2#g&#39; centos7-clone.xml</span><br><span class="line">sed -i &#39;&#x2F;\&lt;nam&#x2F;s#centos7#centos7-clone#g&#39; centos7-clone.xml</span><br></pre></td></tr></table></figure><h3 id="2-3-导入配置文件展开目录"><a href="#2-3-导入配置文件展开目录" class="headerlink" title="2.3 导入配置文件展开目录"></a>2.3 导入配置文件展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">virsh define centos7-clone.xml </span><br><span class="line">virsh list --all </span><br></pre></td></tr></table></figure><h3 id="2-4-启动虚拟机展开目录"><a href="#2-4-启动虚拟机展开目录" class="headerlink" title="2.4 启动虚拟机展开目录"></a>2.4 启动虚拟机展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virsh start centos7-clone</span><br></pre></td></tr></table></figure><h1 id="第-8-章-KVM-桥接网络展开目录"><a href="#第-8-章-KVM-桥接网络展开目录" class="headerlink" title="第 8 章 KVM 桥接网络展开目录"></a>第 8 章 KVM 桥接网络展开目录</h1><h2 id="1-创建桥接网卡展开目录"><a href="#1-创建桥接网卡展开目录" class="headerlink" title="1. 创建桥接网卡展开目录"></a>1. 创建桥接网卡展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virsh iface-bridge eth0 br0</span><br></pre></td></tr></table></figure><h2 id="2-连接克隆新磁盘展开目录"><a href="#2-连接克隆新磁盘展开目录" class="headerlink" title="2. 连接克隆新磁盘展开目录"></a>2. 连接克隆新磁盘展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;opt</span><br><span class="line">qemu-img create -f qcow2 -b centos7.qcow2 bridge.qcow2</span><br></pre></td></tr></table></figure><h2 id="3-创建新虚拟机展开目录"><a href="#3-创建新虚拟机展开目录" class="headerlink" title="3. 创建新虚拟机展开目录"></a>3. 创建新虚拟机展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virt-install --virt-type kvm --os-type&#x3D;linux --os-variant rhel7 --name centos7-bridge --memory 1024 --vcpus 1 --disk &#x2F;opt&#x2F;bridge.qcow2 --boot hd --network bridge&#x3D;br0 --graphics vnc,listen&#x3D;0.0.0.0 --noautoconsole</span><br></pre></td></tr></table></figure><h2 id="4-登录虚拟机查看网卡信息展开目录"><a href="#4-登录虚拟机查看网卡信息展开目录" class="headerlink" title="4. 登录虚拟机查看网卡信息展开目录"></a>4. 登录虚拟机查看网卡信息展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">virsh console centos7-bridge</span><br><span class="line">ip a</span><br></pre></td></tr></table></figure><h2 id="5-在其他主机-ping-测试展开目录"><a href="#5-在其他主机-ping-测试展开目录" class="headerlink" title="5. 在其他主机 ping 测试展开目录"></a>5. 在其他主机 ping 测试展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping xxxx</span><br></pre></td></tr></table></figure><h1 id="第-9-章-KVM-虚拟机热添加磁盘展开目录"><a href="#第-9-章-KVM-虚拟机热添加磁盘展开目录" class="headerlink" title="第 9 章 KVM 虚拟机热添加磁盘展开目录"></a>第 9 章 KVM 虚拟机热添加磁盘展开目录</h1><h2 id="1-热添加硬盘展开目录"><a href="#1-热添加硬盘展开目录" class="headerlink" title="1. 热添加硬盘展开目录"></a>1. 热添加硬盘展开目录</h2><h3 id="1-1-创建磁盘展开目录"><a href="#1-1-创建磁盘展开目录" class="headerlink" title="1.1 创建磁盘展开目录"></a>1.1 创建磁盘展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qemu-img create -f qcow2 centos7-add.qcow2 10G</span><br></pre></td></tr></table></figure><h3 id="1-2-临时生效添加展开目录"><a href="#1-2-临时生效添加展开目录" class="headerlink" title="1.2 临时生效添加展开目录"></a>1.2 临时生效添加展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virsh attach-disk centos7 &#x2F;opt&#x2F;centos7-add.qcow2 vdb --subdriver qcow2</span><br></pre></td></tr></table></figure><h3 id="1-3-虚拟机格式化并挂载展开目录"><a href="#1-3-虚拟机格式化并挂载展开目录" class="headerlink" title="1.3 虚拟机格式化并挂载展开目录"></a>1.3 虚拟机格式化并挂载展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">virsh console centos7</span><br><span class="line">fdisk -l</span><br><span class="line">mkfs.xfs &#x2F;dev&#x2F;vdb</span><br><span class="line">mount  &#x2F;dev&#x2F;vdb  &#x2F;mnt&#x2F;</span><br><span class="line">df -h</span><br></pre></td></tr></table></figure><h3 id="1-4-永久生效添加展开目录"><a href="#1-4-永久生效添加展开目录" class="headerlink" title="1.4 永久生效添加展开目录"></a>1.4 永久生效添加展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">virsh attach-disk centos7 &#x2F;opt&#x2F;centos7-add.qcow2 vdb --subdriver qcow2</span><br><span class="line">virsh attach-disk centos7 &#x2F;opt&#x2F;centos7-add.qcow2 vdb --subdriver qcow2 --config</span><br></pre></td></tr></table></figure><h2 id="2-剥离磁盘展开目录"><a href="#2-剥离磁盘展开目录" class="headerlink" title="2. 剥离磁盘展开目录"></a>2. 剥离磁盘展开目录</h2><h3 id="2-1-临时剥离展开目录"><a href="#2-1-临时剥离展开目录" class="headerlink" title="2.1 临时剥离展开目录"></a>2.1 临时剥离展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virsh detach-disk centos7 vdb</span><br></pre></td></tr></table></figure><h3 id="2-2-永久剥离展开目录"><a href="#2-2-永久剥离展开目录" class="headerlink" title="2.2 永久剥离展开目录"></a>2.2 永久剥离展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">virsh detach-disk centos7 vdb</span><br><span class="line">virsh detach-disk centos7 vdb --config</span><br></pre></td></tr></table></figure><h2 id="3-调整磁盘大小展开目录"><a href="#3-调整磁盘大小展开目录" class="headerlink" title="3. 调整磁盘大小展开目录"></a>3. 调整磁盘大小展开目录</h2><h3 id="3-1-调整磁盘大小展开目录"><a href="#3-1-调整磁盘大小展开目录" class="headerlink" title="3.1 调整磁盘大小展开目录"></a>3.1 调整磁盘大小展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">qemu-img info &#x2F;opt&#x2F;centos7-add.qcow2</span><br><span class="line">qemu-img resize &#x2F;opt&#x2F;centos7-add.qcow2 +10G</span><br></pre></td></tr></table></figure><h3 id="3-2-添加到虚拟机并查看展开目录"><a href="#3-2-添加到虚拟机并查看展开目录" class="headerlink" title="3.2 添加到虚拟机并查看展开目录"></a>3.2 添加到虚拟机并查看展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">virsh attach-disk centos7 &#x2F;opt&#x2F;centos7-add.qcow2 vdb --subdriver qcow2</span><br><span class="line">virsh console centos7</span><br><span class="line">fdisk -l &#x2F;dev&#x2F;vdb</span><br><span class="line">mount &#x2F;dev&#x2F;vdb &#x2F;mnt&#x2F;</span><br><span class="line">df -h|tail -1 </span><br></pre></td></tr></table></figure><h3 id="3-3-调整磁盘信息展开目录"><a href="#3-3-调整磁盘信息展开目录" class="headerlink" title="3.3 调整磁盘信息展开目录"></a>3.3 调整磁盘信息展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xfs_growfs &#x2F;dev&#x2F;vdb</span><br><span class="line">df -h|tail -1</span><br></pre></td></tr></table></figure><h1 id="第-10-章-KVM-热添加网卡展开目录"><a href="#第-10-章-KVM-热添加网卡展开目录" class="headerlink" title="第 10 章 KVM 热添加网卡展开目录"></a>第 10 章 KVM 热添加网卡展开目录</h1><h2 id="1-临时添加展开目录"><a href="#1-临时添加展开目录" class="headerlink" title="1. 临时添加展开目录"></a>1. 临时添加展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virsh attach-interface centos7 --type bridge --mac 52:54:00:b1:b5:8a --source br0 --model virtio detachinterface</span><br></pre></td></tr></table></figure><h2 id="2-永久生效展开目录"><a href="#2-永久生效展开目录" class="headerlink" title="2. 永久生效展开目录"></a>2. 永久生效展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virsh attach-interface centos7 --type bridge --mac 52:54:00:b1:b5:8a --source br0 --model virtio detachinterface --config </span><br></pre></td></tr></table></figure><h2 id="3-临时剥离展开目录"><a href="#3-临时剥离展开目录" class="headerlink" title="3, 临时剥离展开目录"></a>3, 临时剥离展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virsh detach-interface centos7 bridge</span><br></pre></td></tr></table></figure><h2 id="4-永久剥离展开目录"><a href="#4-永久剥离展开目录" class="headerlink" title="4. 永久剥离展开目录"></a>4. 永久剥离展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">virsh detach-interface centos7 bridge</span><br><span class="line">virsh detach-interface centos7 bridge --config</span><br></pre></td></tr></table></figure><h1 id="第-11-章-KVM-热添加内存展开目录"><a href="#第-11-章-KVM-热添加内存展开目录" class="headerlink" title="第 11 章 KVM 热添加内存展开目录"></a>第 11 章 KVM 热添加内存展开目录</h1><h2 id="1-创建虚拟机时直接添加最大内存参数展开目录"><a href="#1-创建虚拟机时直接添加最大内存参数展开目录" class="headerlink" title="1. 创建虚拟机时直接添加最大内存参数展开目录"></a>1. 创建虚拟机时直接添加最大内存参数展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">virt-install --virt-type kvm --os-type&#x3D;linux --os-variant rhel7 --name centos7 --</span><br><span class="line">memory 512,maxmemory&#x3D;2048 --vcpus 1 --disk &#x2F;opt&#x2F;centos7.qcow2 --boot hd --network bridge&#x3D;br0 --</span><br><span class="line">graphics vnc,listen&#x3D;0.0.0.0 --noautoconsole</span><br></pre></td></tr></table></figure><h2 id="2-如果创建虚拟机的时候没有设置最大内存限制，执行如下操作添加配置展开目录"><a href="#2-如果创建虚拟机的时候没有设置最大内存限制，执行如下操作添加配置展开目录" class="headerlink" title="2. 如果创建虚拟机的时候没有设置最大内存限制，执行如下操作添加配置展开目录"></a>2. 如果创建虚拟机的时候没有设置最大内存限制，执行如下操作添加配置展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">virsh destroy centos7</span><br><span class="line">virsh setmaxmem centos7 4096M</span><br><span class="line">virsh start centos7 </span><br><span class="line">virsh console centos7</span><br><span class="line">free -h </span><br></pre></td></tr></table></figure><h2 id="3-临时添加展开目录"><a href="#3-临时添加展开目录" class="headerlink" title="3. 临时添加展开目录"></a>3. 临时添加展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">virsh setmem centos7 2048M --live </span><br><span class="line">virsh console centos7</span><br><span class="line">free -h </span><br></pre></td></tr></table></figure><h2 id="4-永久增大内存展开目录"><a href="#4-永久增大内存展开目录" class="headerlink" title="4. 永久增大内存展开目录"></a>4. 永久增大内存展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">virsh setmem centos7 2048M --config</span><br><span class="line">virsh console centos7</span><br><span class="line">free -h </span><br></pre></td></tr></table></figure><h1 id="第-12-章-KVM-冷添加-CPU展开目录"><a href="#第-12-章-KVM-冷添加-CPU展开目录" class="headerlink" title="第 12 章 KVM 冷添加 CPU展开目录"></a>第 12 章 KVM 冷添加 CPU展开目录</h1><h2 id="1-编辑配置文件展开目录"><a href="#1-编辑配置文件展开目录" class="headerlink" title="1. 编辑配置文件展开目录"></a>1. 编辑配置文件展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">virsh edit centos7</span><br><span class="line">------------------------------------------------</span><br><span class="line">  &lt;vcpu placement&#x3D;&#39;static&#39; current&#x3D;&#39;2&#39;&gt;4&lt;&#x2F;vcpu&gt;</span><br><span class="line">------------------------------------------------</span><br></pre></td></tr></table></figure><h2 id="2-添加-cpu-核数展开目录"><a href="#2-添加-cpu-核数展开目录" class="headerlink" title="2. 添加 cpu 核数展开目录"></a>2. 添加 cpu 核数展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virsh setvcpus centos7 4 --live </span><br></pre></td></tr></table></figure><h2 id="3-永久添加-cpu-核数展开目录"><a href="#3-永久添加-cpu-核数展开目录" class="headerlink" title="3. 永久添加 cpu 核数展开目录"></a>3. 永久添加 cpu 核数展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setvcpus centos7 4 --config</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 云计算 </category>
          
          <category> 自动化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>open-falcon+grafana 出图</title>
      <link href="/posts/29255/"/>
      <url>/posts/29255/</url>
      
        <content type="html"><![CDATA[<p>Open-falcon官方文档：</p><p><a href="http://book.open-falcon.org/zh/index.html">http://book.open-falcon.org/zh/index.html</a></p><p>Granafa官方文档</p><p>grafana安装：<a href="https://grafana.net/plugins/fastweb-openfalcon-datasource">https://grafana.net/plugins/fastweb-openfalcon-datasource</a></p><p>open-falcon插件：<a href="https://grafana.net/plugins/fastweb-openfalcon-datasource/installation">https://grafana.net/plugins/fastweb-openfalcon-datasource/installation</a></p><p>1.open-falcon的安装就不叙述了，官方文档很详细</p><p>访问dashboard 出图<a href="http://192.168.29.128:8081/">http://192.168.29.128:8081/</a></p><p><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020072314342420.png"></p><p>2.grafana安装</p><p>wget <a href="https://grafanarel.s3.amazonaws.com/builds/grafana-3.0.4-1464167696.x86/_64.rpm">https://grafanarel.s3.amazonaws.com/builds/grafana-3.0.4-1464167696.x86\_64.rpm</a></p><p>rpm -ivh grafana-3.0.4-1464167696.x86_64.rpm</p><p>(grafana编译似乎不太好使，godep store需要下载golang的lib库，有些下不下来，一直无法通过)</p><p>3.通过grafana-cli安装Open-falcon插件</p><p>grafana-cli plugins install fastweb-openfalcon-datasource</p><p>4.编辑grafana.ini配置文件，添加插件PATH</p><p>[plugin.openfalcon]<br>;path = /var/lib/grafana/plugins/fastweb-openfalcon-datasource</p><p>(path前面;一定要有，一开始没加，坑爹了很久)</p><p>5.启动grafana</p><p>[root@linux plugins]# /etc/init.d/grafana-server restart<br>OKopping Grafana Server …                 [ OK ]<br>Starting Grafana Server: …. OK</p><p>6.浏览器访问<a href="http://ip:3000/">http://ip:3000</a></p><p>7.添加数据源</p><p><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020072314352278.png"></p><p><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020072314354043.png"></p><p><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020072314355134.png"></p><p>8.新建dashboard</p><p><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020072314361136.png"></p><p>9.建立一个模板</p><p><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020072314362538.png"></p><p><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020072314363584.png"></p><p><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020072314364157.png"></p><p>添加完ctrl + S保存</p><p>10.添加一个graph</p><p><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020072314365328.png"></p><p><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020072314372130.png"></p><p>ctrl + S保存</p><p>总结：</p><p>因为总是不出图，花费了大量时间和精力在Open-falcon上面,以为Open-falcon的query接口有问题</p><p>这是grafana-server的报错日志</p><p>2016/05/30 16:00:27 [I] Database: sqlite3 2016/05/30 16:00:27 [I] Migrator: Starting DB migration 2016/05/30 16:00:27 [I] Plugins: Scan starting 2016/05/30 16:00:27 [I] Plugins: Registering plugin Open-Falcon 2016/05/30 16:00:27 [plugins.go:127 walker()] [E] Plugins: Failed to load plugin json file: /var/lib/grafana/plugins/grafana-openfalcon-datasource/plugin.json, err: Plugin with same id already exists 2016/05/30 16:00:27 [T] Checking for updates 2016/05/30 16:00:27 [I] Plugins: Adding route /public/plugins/fastweb-openfalcon-datasource -&gt; /var/lib/grafana/plugins/grafana-openfalcon-datasource 2016/05/30 16:00:27 [I] Listen: <a href="http://0.0.0.0:3000/">http://0.0.0.0:3000</a></p><p>原因是前面所说的path前面没有加;导致</p><p>[plugin.openfalcon]<br>;path = /var/lib/grafana/plugins/fastweb-openfalcon-datasource</p><p>感悟：有问题,看日志。</p>]]></content>
      
      
      <categories>
          
          <category> 监控 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>IPtables防火墙机制</title>
      <link href="/posts/11232/"/>
      <url>/posts/11232/</url>
      
        <content type="html"><![CDATA[<h1 id="第1章iptables介绍展开目录"><a href="#第1章iptables介绍展开目录" class="headerlink" title="第1章iptables介绍展开目录"></a>第1章iptables介绍展开目录</h1><h2 id="1-iptables是什么？展开目录"><a href="#1-iptables是什么？展开目录" class="headerlink" title="1.iptables是什么？展开目录"></a>1.iptables是什么？展开目录</h2><p>iptables是开源的基于数据包过滤的防火墙工具。</p><h2 id="2-iptables企业应用场景展开目录"><a href="#2-iptables企业应用场景展开目录" class="headerlink" title="2.iptables企业应用场景展开目录"></a>2.iptables企业应用场景展开目录</h2><p>1，主机防火墙（filter表的INPUT链）<br>。2，串口共享上网（nat表的POSTROUTING链）。半个路由器，NAT功能<br>。3，端口及IP映射（nat表的PREROUTING链），硬防的NAT。功能<br>。4，IP一对一映射。</p><h2 id="3-商用防火墙品牌展开目录"><a href="#3-商用防火墙品牌展开目录" class="headerlink" title="3.商用防火墙品牌展开目录"></a>3.商用防火墙品牌展开目录</h2><p>华为<br>深信服<br>思科<br>H3C<br>瞻博<br>天融信<br>飞塔<br>网康<br>绿盟科技<br>金盾</p><h1 id="第2章iptables工作流程展开目录"><a href="#第2章iptables工作流程展开目录" class="headerlink" title="第2章iptables工作流程展开目录"></a>第2章iptables工作流程展开目录</h1><p>iptables是采用数据包过滤机制工作的，因此它要请求数据包的包头数据进行分析，并根据我们预先设定的规则进行匹配来决定是否可以进入<br>主机。1 . 防火墙是一层过滤的。实际是按照配置规则的顺序从上到下，从前到后进行过滤的。<br>2.如果匹配上了规则，即明确表明是阻止还是通过，此时数据包就不在向下匹配新规则了。<br>3 。如果所有规则中没有明确表明是阻止还是通过这个数据包，也就是没有匹配上规则，向下进行匹配，直到匹配默认规则得到明确的阻止还是通过。<br>4.防火墙的默认规则是对应链的所有的规则执行完以后才会执行的（最后执行的规则）。</p><h1 id="第3章iptables四表五链展开目录"><a href="#第3章iptables四表五链展开目录" class="headerlink" title="第3章iptables四表五链展开目录"></a>第3章iptables四表五链展开目录</h1><h2 id="1-表与链对应关系展开目录"><a href="#1-表与链对应关系展开目录" class="headerlink" title="1.表与链对应关系展开目录"></a>1.表与链对应关系展开目录</h2><p>实际iptables包含4张表和五个链，但主要记住两张表即可过滤器和nat表即可。</p><p><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071316085495-1024x958.png" alt="img" title="img"></p><h2 id="2-FILTER表展开目录"><a href="#2-FILTER表展开目录" class="headerlink" title="2.FILTER表展开目录"></a>2.FILTER表展开目录</h2><p><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071316085836-1024x313.png" alt="img" title="img"></p><h2 id="3-NAT表展开目录"><a href="#3-NAT表展开目录" class="headerlink" title="3.NAT表展开目录"></a>3.NAT表展开目录</h2><p><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071316090276-1024x680.png" alt="img" title="img"></p><h1 id="第4章iptables工作原理示意图展开目录"><a href="#第4章iptables工作原理示意图展开目录" class="headerlink" title="第4章iptables工作原理示意图展开目录"></a>第4章iptables工作原理示意图展开目录</h1><p><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071316090728.png" alt="img" title="img"></p><p><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071316091462-1024x517.png" alt="img" title="img"></p><h1 id="第5章iptables环境准备展开目录"><a href="#第5章iptables环境准备展开目录" class="headerlink" title="第5章iptables环境准备展开目录"></a>第5章iptables环境准备展开目录</h1><h2 id="1-安装iptables管理命令展开目录"><a href="#1-安装iptables管理命令展开目录" class="headerlink" title="1.安装iptables管理命令展开目录"></a>1.安装iptables管理命令展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# yum install iptables-services -y</span><br></pre></td></tr></table></figure><h2 id="2-加载防火墙的内核模块展开目录"><a href="#2-加载防火墙的内核模块展开目录" class="headerlink" title="2.加载防火墙的内核模块展开目录"></a>2.加载防火墙的内核模块展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">modprobe ip_tables</span><br><span class="line">modprobe iptable_filter</span><br><span class="line">modprobe iptable_nat</span><br><span class="line">modprobe ip_conntrack</span><br><span class="line">modprobe ip_conntrack_ftp</span><br><span class="line">modprobe ip_nat_ftp</span><br><span class="line">modprobe ipt_state</span><br></pre></td></tr></table></figure><p>查看已加载的模块</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# lsmod |egrep &#39;filter|nat|ipt&#39;</span><br><span class="line">ipt_REJECT             12541  0 </span><br><span class="line">nf_nat_ftp             12770  0 </span><br><span class="line">nf_conntrack_ftp       18638  1 nf_nat_ftp</span><br><span class="line">iptable_filter         12810  0 </span><br><span class="line">xt_nat                 12681  3 </span><br><span class="line">iptable_nat            12875  1 </span><br><span class="line">nf_nat_ipv4            14115  1 iptable_nat</span><br><span class="line">nf_nat                 26146  3 nf_nat_ftp,nf_nat_ipv4,xt_nat</span><br><span class="line">nf_conntrack          105745  7 nf_nat_ftp,nf_nat,xt_state,nf_nat_ipv4,xt_conntrack,nf_conntrack_ftp,nf_conntrack_ipv4</span><br><span class="line">ip_tables              27240  2 iptable_filter,iptable_nat</span><br></pre></td></tr></table></figure><h2 id="3-启动防火墙展开目录"><a href="#3-启动防火墙展开目录" class="headerlink" title="3.启动防火墙展开目录"></a>3.启动防火墙展开目录</h2><p>首先停止firewalld</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl disable firewalld</span><br></pre></td></tr></table></figure><p>开启iptables</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start iptables.service</span><br><span class="line">systemctl enable iptables.service</span><br></pre></td></tr></table></figure><h1 id="第6章iptables基本操作命令展开目录"><a href="#第6章iptables基本操作命令展开目录" class="headerlink" title="第6章iptables基本操作命令展开目录"></a>第6章iptables基本操作命令展开目录</h1><h2 id="1-查看防火墙规则展开目录"><a href="#1-查看防火墙规则展开目录" class="headerlink" title="1.查看防火墙规则展开目录"></a>1.查看防火墙规则展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# iptables -nL</span><br><span class="line">Chain INPUT (policy ACCEPT)</span><br><span class="line">target     prot opt source               destination         </span><br><span class="line"></span><br><span class="line">Chain FORWARD (policy ACCEPT)</span><br><span class="line">target     prot opt source               destination         </span><br><span class="line"></span><br><span class="line">Chain OUTPUT (policy ACCEPT)</span><br><span class="line">target     prot opt source               destination </span><br></pre></td></tr></table></figure><h2 id="2-清除防火墙规则展开目录"><a href="#2-清除防火墙规则展开目录" class="headerlink" title="2.清除防火墙规则展开目录"></a>2.清除防火墙规则展开目录</h2><p>iptables -F &lt;-清除所有规则，不会处理替代的规则<br>iptables -X &lt;-删除用户自定义的<br>链表iptables -Z &lt;-链的计数器清零（数据包计数器与数据包字节计数器）</p><h2 id="3-添加防火墙规则展开目录"><a href="#3-添加防火墙规则展开目录" class="headerlink" title="3.添加防火墙规则展开目录"></a>3.添加防火墙规则展开目录</h2><p>iptables -t &lt;-指定表d（故障：“过滤器”）<br>iptables -A &lt;-将规则添加到指定的链上，<br>插入到最后一行。iptables -I &lt;-插入规则，插入到第一行（封IP）<br>。iptables -D &lt;-删除链上的规则</p><h2 id="4-网络连接状态展开目录"><a href="#4-网络连接状态展开目录" class="headerlink" title="4.网络连接状态展开目录"></a>4.网络连接状态展开目录</h2><p>NEW：已经或将启动新的连接<br>ESTABLISHED：已建立的连接<br>相关：正在启动的新连接<br>INVALID：非法或无法识别的</p><h2 id="4-删除某个规则展开目录"><a href="#4-删除某个规则展开目录" class="headerlink" title="4.删除某个规则展开目录"></a>4.删除某个规则展开目录</h2><p>iptables -nL –line-numbers查看规则编号<br>iptables -D INPUT 1删除指定链上的指定序号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">iptables A INPUT -p tcp -m state --dport 22 -j DROP</span><br><span class="line">iptables -nL</span><br><span class="line">iptables -nL --line-numbers</span><br><span class="line">iptables -D INPUT 1</span><br></pre></td></tr></table></figure><h1 id="第7章iptables实战展开目录"><a href="#第7章iptables实战展开目录" class="headerlink" title="第7章iptables实战展开目录"></a>第7章iptables实战展开目录</h1><h2 id="1-禁止某个端口访问展开目录"><a href="#1-禁止某个端口访问展开目录" class="headerlink" title="1.禁止某个端口访问展开目录"></a>1.禁止某个端口访问展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -t filter -A INPUT -p tcp --dport 22 -j DROP</span><br></pre></td></tr></table></figure><p>规则解释：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-p       #&lt;&#x3D;&#x3D;指定过滤的协议-p（tcp,udp,icmp,all）</span><br><span class="line">--dport  #&lt;&#x3D;&#x3D;指定目标端口（用户请求的端口）。</span><br><span class="line">-j       #&lt;&#x3D;&#x3D;对规则的具体处理方法（ACCEPT,DROP,REJECT,SNAT&#x2F;DNAT)</span><br><span class="line">--sport  #&lt;&#x3D;&#x3D;指定源端口。</span><br></pre></td></tr></table></figure><h2 id="2-禁止某个IP访问展开目录"><a href="#2-禁止某个IP访问展开目录" class="headerlink" title="2.禁止某个IP访问展开目录"></a>2.禁止某个IP访问展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iptables -I INPUT -p tcp -s 10.0.0.253 -i eth0 -j DROP</span><br><span class="line">iptables -A INPUT -p tcp ! -s 10.0.0.1 -i eth0 -j DROP</span><br><span class="line">iptables -A INPUT -p tcp ! -s 10.0.0.0&#x2F;24 -i eth0 -j DROP</span><br></pre></td></tr></table></figure><p>规则解释：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-s       #&lt;&#x3D;&#x3D;指定源地址或网段（192.168.1.0&#x2F;24）。 ! 取反。</span><br><span class="line">-d       #&lt;&#x3D;&#x3D;指定目的地址（nat表prerouting）。</span><br><span class="line">-i       #&lt;&#x3D;&#x3D;进入的网络接口（eth0,eth1）。</span><br><span class="line">-o       #&lt;&#x3D;&#x3D;出去的网络接口（eth0,eth1）。</span><br></pre></td></tr></table></figure><h2 id="3-禁止除跳板机以外的IP访问展开目录"><a href="#3-禁止除跳板机以外的IP访问展开目录" class="headerlink" title="3.禁止除跳板机以外的IP访问展开目录"></a>3.禁止除跳板机以外的IP访问展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -I INPUT -p tcp ! -s 10.0.0.1 -j DROP</span><br></pre></td></tr></table></figure><h2 id="4-匹配端口范围展开目录"><a href="#4-匹配端口范围展开目录" class="headerlink" title="4.匹配端口范围展开目录"></a>4.匹配端口范围展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iptables -I INPUT -p tcp -m multiport --dport 21,22,23,24 -j DROP</span><br><span class="line">iptables -I INPUT -p tcp --dport 3306:8809 -j ACCEPT</span><br><span class="line">iptables -I INPUT -p tcp --dport 18:80 -j DROP  #&lt;&#x3D;&#x3D;最佳</span><br></pre></td></tr></table></figure><h2 id="5-匹配ICMP类型展开目录"><a href="#5-匹配ICMP类型展开目录" class="headerlink" title="5.匹配ICMP类型展开目录"></a>5.匹配ICMP类型展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -p icmp --icmp-type 8</span><br><span class="line">例：iptables -A INPUT -p icmp --icmp-type 8 -j DROP</span><br><span class="line">iptables -A INPUT -p icmp -m icmp --icmp-type any -j ACCEPT</span><br><span class="line">iptables -A FORWARD -s 192.168.1.0&#x2F;24 -p icmp -m icmp --icmp-type any -j ACCEPT</span><br></pre></td></tr></table></figure><h2 id="6-练习题展开目录"><a href="#6-练习题展开目录" class="headerlink" title="6.练习题展开目录"></a>6.练习题展开目录</h2><p>1，封掉10.0.0.7</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -I INPUT -s 10.0.0.7 -j DROP</span><br></pre></td></tr></table></figure><p>2，让10.0.0.7和SSH客户端（10.0.0.1）服务器可以Ping，其他的不能Ping</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iptables -I INPUT -p icmp --icmp-type 8 -s 10.0.0.7 -j ACCEPT</span><br><span class="line">iptables -I INPUT 2 -p icmp ! -s 10.0.0.1 --icmp-type 8 -j DROP</span><br></pre></td></tr></table></figure><p>3，封掉3306吨</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -I INPUT -p tcp --dport 3306 -j DROP</span><br></pre></td></tr></table></figure><h1 id="第8章iptables企业案例展开目录"><a href="#第8章iptables企业案例展开目录" class="headerlink" title="第8章iptables企业案例展开目录"></a>第8章iptables企业案例展开目录</h1><h2 id="1-部署一个安全的防火墙展开目录"><a href="#1-部署一个安全的防火墙展开目录" class="headerlink" title="1.部署一个安全的防火墙展开目录"></a>1.部署一个安全的防火墙展开目录</h2><p>两种思想：针对默认规则而言。<br>逛公园：黑名单<br>1，默认规则默认是允许的状态。<br>看电影：白名单<br>。2，规则默认默认的英文不允许的状态更安全<br>看电影的思想更安全。<br>实战部署：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# iptables -F</span><br><span class="line">[root@m01 ~]# iptables -X</span><br><span class="line">[root@m01 ~]# iptables -Z</span><br><span class="line">[root@m01 ~]# iptables -A INPUT -p tcp -m multiport --dport 80,443 -j ACCEPT</span><br><span class="line">[root@m01 ~]# iptables -A INPUT -p tcp --dport 22 -j ACCEPT</span><br><span class="line">[root@m01 ~]# iptables -A INPUT -s 10.0.0.0&#x2F;24 -j ACCEPT</span><br><span class="line">[root@m01 ~]# iptables -A INPUT -s 172.16.1.0&#x2F;24 -j ACCEPT</span><br><span class="line">[root@m01 ~]# iptables -A INPUT -i lo -j ACCEPT</span><br><span class="line">[root@m01 ~]# iptables -P INPUT DROP</span><br><span class="line">[root@m01 ~]# iptables -P FORWARD DROP</span><br><span class="line">[root@m01 ~]# iptables -P OUTPUT ACCEPT</span><br><span class="line">[root@m01 ~]# iptables -nL</span><br><span class="line">Chain INPUT (policy DROP)</span><br><span class="line">target     prot opt source               destination         </span><br><span class="line">ACCEPT     tcp  --  0.0.0.0&#x2F;0            0.0.0.0&#x2F;0            multiport dports 80,443</span><br><span class="line">ACCEPT     tcp  --  0.0.0.0&#x2F;0            0.0.0.0&#x2F;0            tcp dpt:22</span><br><span class="line">ACCEPT     all  --  10.0.0.0&#x2F;24          0.0.0.0&#x2F;0           </span><br><span class="line">ACCEPT     all  --  172.16.1.0&#x2F;24        0.0.0.0&#x2F;0           </span><br><span class="line">ACCEPT     all  --  0.0.0.0&#x2F;0            0.0.0.0&#x2F;0           </span><br><span class="line"></span><br><span class="line">Chain FORWARD (policy DROP)</span><br><span class="line">target     prot opt source               destination         </span><br><span class="line"></span><br><span class="line">Chain OUTPUT (policy ACCEPT)</span><br><span class="line">target     prot opt source               destination  </span><br></pre></td></tr></table></figure><p>命令集合：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">iptables -F</span><br><span class="line">iptables -X</span><br><span class="line">iptables -Z</span><br><span class="line">iptables -A INPUT -p tcp -m multiport --dport 80,443 -j ACCEPT</span><br><span class="line">iptables -A INPUT -p tcp --dport 22 -j ACCEPT</span><br><span class="line">iptables -A INPUT -s 10.0.1.0&#x2F;24 -j ACCEPT</span><br><span class="line">iptables -A INPUT -s 172.16.1.0&#x2F;24 -j ACCEPT</span><br><span class="line">iptables -A INPUT -i lo -j ACCEPT</span><br><span class="line">iptables -P INPUT DROP</span><br><span class="line">iptables -P FORWARD DROP</span><br><span class="line">iptables -P OUTPUT ACCEPT</span><br><span class="line">iptables -nL</span><br></pre></td></tr></table></figure><h2 id="2-初始共享上网展开目录"><a href="#2-初始共享上网展开目录" class="headerlink" title="2.初始共享上网展开目录"></a>2.初始共享上网展开目录</h2><p>实验环境：<br>m01：共享上网网关出口<br>web01：只有内网地址，网关指向m01<br>实验步骤：<br>m01操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">iptables -t nat -A POSTROUTING -s 172.16.1.0&#x2F;24 -j SNAT --to-source 10.0.0.61</span><br><span class="line">echo &#39;net.ipv4.ip_forward &#x3D; 1&#39; &gt;&gt; &#x2F;etc&#x2F;sysctl.conf</span><br><span class="line">sysctl -p</span><br><span class="line">iptables -F</span><br><span class="line">iptables -X</span><br><span class="line">iptables -Z</span><br><span class="line">iptables -A INPUT -p tcp -m multiport --dport 80,443 -j ACCEPT</span><br><span class="line">iptables -A INPUT -p tcp --dport 22 -j ACCEPT</span><br><span class="line">iptables -A INPUT -s 10.0.1.0&#x2F;24 -j ACCEPT</span><br><span class="line">iptables -A INPUT -s 172.16.1.0&#x2F;24 -j ACCEPT</span><br><span class="line">iptables -A INPUT -i lo -j ACCEPT</span><br><span class="line">iptables -P INPUT DROP</span><br><span class="line">iptables -P FORWARD DROP</span><br><span class="line">iptables -P OUTPUT ACCEPT</span><br><span class="line">iptables -A FORWARD -i eth1 -s 172.16.1.0&#x2F;24 -j ACCEPT</span><br><span class="line">iptables -A FORWARD -o eth0 -s 172.16.1.0&#x2F;24 -j ACCEPT</span><br><span class="line">iptables -A FORWARD -i eth0 -d 172.16.1.0&#x2F;24 -j ACCEPT</span><br><span class="line">iptables -A FORWARD -o eth1 -d 172.16.1.0&#x2F;24 -j ACCEPT</span><br></pre></td></tr></table></figure><p>web01操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# cat &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-eth0</span><br><span class="line">TYPE&#x3D;Ethernet</span><br><span class="line">BOOTPROTO&#x3D;none</span><br><span class="line">DEFROUTE&#x3D;yes</span><br><span class="line">NAME&#x3D;eth0</span><br><span class="line">DEVICE&#x3D;eth0</span><br><span class="line">ONBOOT&#x3D;no</span><br><span class="line">IPADDR&#x3D;10.0.0.7</span><br><span class="line">PREFIX&#x3D;24</span><br><span class="line">GATEWAY&#x3D;10.0.0.2</span><br><span class="line">DNS1&#x3D;10.0.0.2</span><br><span class="line"></span><br><span class="line">[root@web01 ~]# cat &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-eth1</span><br><span class="line">TYPE&#x3D;Ethernet</span><br><span class="line">BOOTPROTO&#x3D;none</span><br><span class="line">DEFROUTE&#x3D;yes</span><br><span class="line">NAME&#x3D;eth1</span><br><span class="line">DEVICE&#x3D;eth1</span><br><span class="line">ONBOOT&#x3D;yes</span><br><span class="line">IPADDR&#x3D;172.16.1.7</span><br><span class="line">GATEWAY&#x3D;172.16.1.61</span><br><span class="line">PREFIX&#x3D;24</span><br><span class="line">DNS1&#x3D;10.0.0.2</span><br><span class="line"></span><br><span class="line">[root@web01 ~]# systemctl restart network </span><br><span class="line"></span><br><span class="line">[root@web01 ~]# ip r</span><br><span class="line">default via 172.16.1.61 dev eth1  proto static  metric 100 </span><br><span class="line">172.16.1.0&#x2F;24 dev eth1  proto kernel  scope link  src 172.16.1.7  metric 100 </span><br><span class="line"></span><br><span class="line">[root@web01 ~]# cat &#x2F;etc&#x2F;resolv.conf    </span><br><span class="line">nameserver 10.0.1.2</span><br></pre></td></tr></table></figure><p>web01测试访问外网：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@web01 ~]# ping www.baidu.com</span><br><span class="line">PING www.a.shifen.com (14.215.177.39) 56(84) bytes of data.</span><br><span class="line">64 bytes from 14.215.177.39: icmp_seq&#x3D;1 ttl&#x3D;127 time&#x3D;7.70 ms</span><br><span class="line">64 bytes from 14.215.177.39: icmp_seq&#x3D;2 ttl&#x3D;127 time&#x3D;8.92 ms</span><br></pre></td></tr></table></figure><h2 id="3-扩展映射展开目录"><a href="#3-扩展映射展开目录" class="headerlink" title="3.扩展映射展开目录"></a>3.扩展映射展开目录</h2><p>m01操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -t nat -A PREROUTING -d 10.0.1.61 -p tcp --dport 9000 -j DNAT --to-destination 172.16.1.7:22</span><br></pre></td></tr></table></figure><p>命令拆解：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">表：nat</span><br><span class="line">链：PREROUTING</span><br><span class="line">目标IP：10.0.1.61</span><br><span class="line">目标端口：9000</span><br><span class="line">协议：tcp</span><br><span class="line">动作：DNAT</span><br><span class="line">目标IP：172.16.1.7</span><br><span class="line">目标端口：22</span><br></pre></td></tr></table></figure><p>访问测试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">zhangyadeMacBook-Pro:~ zhangya$ ssh root@10.0.1.61 -p 9000</span><br><span class="line">root@10.0.1.61&#39;s password:</span><br><span class="line">Last login: Tue Aug 20 09:38:42 2019 from 172.16.1.51</span><br><span class="line">[root@web01 ~]#</span><br></pre></td></tr></table></figure><h2 id="4-IP映射展开目录"><a href="#4-IP映射展开目录" class="headerlink" title="4.IP映射展开目录"></a>4.IP映射展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# ip a add 10.0.1.62&#x2F;24 dev eth0 label eth0:0</span><br><span class="line">[root@m01 ~]# iptables -t nat -A PREROUTING -d 10.0.1.62 -j DNAT --to-destination 172.16.1.7</span><br><span class="line">[root@m01 ~]# iptables -nL -t nat</span><br><span class="line">Chain PREROUTING (policy ACCEPT)</span><br><span class="line">target     prot opt source               destination         </span><br><span class="line">DNAT       tcp  --  0.0.0.0&#x2F;0            10.0.1.61            tcp dpt:9000 to:172.16.1.7:22</span><br><span class="line">DNAT       all  --  0.0.0.0&#x2F;0            10.0.1.62            to:172.16.1.7</span><br><span class="line"></span><br><span class="line">Chain INPUT (policy ACCEPT)</span><br><span class="line">target     prot opt source               destination         </span><br><span class="line"></span><br><span class="line">Chain OUTPUT (policy ACCEPT)</span><br><span class="line">target     prot opt source               destination         </span><br><span class="line"></span><br><span class="line">Chain POSTROUTING (policy ACCEPT)</span><br><span class="line">target     prot opt source               destination         </span><br><span class="line">SNAT       all  --  172.16.1.0&#x2F;24        0.0.0.0&#x2F;0            to:10.0.1.61</span><br></pre></td></tr></table></figure><p>测试访问：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">zhangyadeMacBook-Pro:~ zhangya$ ssh root@10.0.1.62</span><br><span class="line">root@10.0.1.62&#39;s password:</span><br><span class="line">Last login: Wed Aug 21 13:30:04 2019 from 10.0.1.1</span><br><span class="line">[root@web01 ~]# hostname</span><br><span class="line">web01</span><br><span class="line">[root@web01 ~]#</span><br></pre></td></tr></table></figure><h1 id="第9章iptables规则保存展开目录"><a href="#第9章iptables规则保存展开目录" class="headerlink" title="第9章iptables规则保存展开目录"></a>第9章iptables规则保存展开目录</h1><p><code>iptables-save&gt; 20190821＃将防火墙规则保存到文件中   iptables-save＃将防火墙规则保存到配置文件中，防止重启后   iptables-restore &lt;20190821＃从配置文件里加载防火墙配置</code></p><h1 id="第10章iptables防坑指南展开目录"><a href="#第10章iptables防坑指南展开目录" class="headerlink" title="第10章iptables防坑指南展开目录"></a>第10章iptables防坑指南展开目录</h1><p>1.修改之前先生成备份副本<br>2。修改的时候小心别把自己关在外面<br>3。可以现在定时任务里添加一条定时清空的规则，等测试没问题再取消定时任务</p><h1 id="第11章课堂笔记展开目录"><a href="#第11章课堂笔记展开目录" class="headerlink" title="第11章课堂笔记展开目录"></a>第11章课堂笔记展开目录</h1><p>1.从上往下依次匹配<br>2。一但匹配上，就不在往下匹配了<br>3。默认规则，默认的情况，默认规则是放行所有</p><p>-A输入-p tcp -m状态-状态NEW -m tcp –dport 22 -j接受</p><p>-A INPUT：把这条规则添加到INPUT链的最后一行<br>-p tcp：指定协议为tcp<br>-m state –state新：匹配TCP的连接状态<br>-m tcp –dport 22：匹配TCP协议的目标端口<br>-j ACCEPT：执行动作放行</p><p>iptables A INPUT -p tcp -m state –dport 22 -j DROP<br>禁止一个数据包：<br>tcp协议<br>访问的端口是22</p><p>iptables -A INPUT -p tcp –dport 22 -j DROP<br>iptables -nL<br>iptables -nL –line-numbers<br>iptables -D INPUT 1</p><p>禁止源地址是10.0.0.7的主机访问22个<br>iptables -A INPUT -p tcp -s 10.0.0.7 –dport 22 -j DROP</p><p>禁止源地址是10.0.0.7的主机访问任何端口<br>iptables -A INPUT -p tcp -s 10.0.0.7 -j DROP</p><p>禁止源地址是10.0.0.8的主机访问80<br>iptables -A INPUT -p tcp -s 10.0.0.8 –dport 80 -j DROP</p><p>禁止除了10.0.0.7以外的地址访问80<br>iptables -A INPUT -p tcp！-s 10.0.0.7 –dport 80 -j DROP</p><p>2条规则冲突，会以谁先谁为准<br>iptables -I INPUT -p tcp -s 10.0.0.7 –dport 22 -j ACCEPT<br>iptables -I INPUT -p tcp -s 10.0.0.7 –dport 22 -j DROP</p><p>禁止10.0.0.7访问22和80端口<br>iptables -I INPUT -p tcp -s 10.0.0.7 -m multiport –dport 22,80 -j DROP</p><p>禁止10.0.0.7访问22到100之间的所有端口<br>iptables -A INPUT -p tcp -s 10.0.0.7 –dport 22：100 -j DROP</p><p>禁止所有主机ping<br>iptables -A INPUT -p icmp –icmp-type 8 -j DROP</p><p>放行10.0.0.7可以ping<br>iptables -I INPUT 2 -p icmp –icmp-type 8 -s 10.0.0.7 -j ACCEPT</p><p>只允许10.0.0.7可以ping<br>ACCEPT icmp-10.0.0.7 0.0.0.0/0 icmptype 8<br>DROP icmp-0.0.0.0/0 0.0.0.0/0 icmptype 8</p><p>等同于上一条，优化版，仅不是10.0.0.7就可以ping<br>iptables -I INPUT -p icmp –icmp-type 8！-s 10.0.0.7 -j DROP</p><p>优先级：<br>匹配频次最高的条件放前面</p><p>100次<br>80 90<br>22 10</p><p>安全策略：<br>一种是广场上巡逻的人，替代认为大家都是安全的，只有通缉令上的人需要关注<br>一种是火车进站安检，几乎总是不安全的，只有有票的人才放行</p><p>iptables -F<br>iptables -X<br>iptables -Z<br>iptables -A INPUT -p tcp -m multiport –dport 80,443 -j ACCEPT<br>iptables -A INPUT -p tcp –dport 22 -j ACIPPT<br>iptables -A INPUT -s 10.0.0.0/ 24 -j接受<br>iptables -A输入-s 172.16.1.0/24 -j接受<br>iptables -A输入-i lo -j接受<br>iptables -P输入DROP<br>iptables -P FORWARD DROP<br>iptables -P OUTPUT ACCEPT<br>iptables -nL</p><p>共享上网<br>iptables -t nat -A POSTROUTING -s 172.16.1.0/24 -j SNAT –to-source 10.0.0.61</p><p>-t nat：NAT表<br>-A POSTROUTING：POSTROUTING链<br>-s 172.16.1.0/24：源地址172.16.1.0/24<br>-j SNAT：SNAT<br>改写源地址–to-source 10.0.0.61：将源地址改写成10.0 .0.61</p><p>172.16.1.7发给百度的数据包格式<br>源端口：80<br>目的端口：80<br>源IP：172.16.1.7<br>目的IP：百度的IP<br>网关：172.16.1.61</p><p>如果172.16.1.7想上网，需要改成如下的包格式</p><p>10.0.0.61访问百度<br>源端口：80<br>目的端口：80<br>源IP：10.0.0.61<br>目的IP：百度的IP<br>网关：10.0.0.2</p><p>天坑<br>如果你的默认规则设置了拒绝所有，又执行了<br>清除规则的语句-F 那就意味着，所有的请求全部都拒绝了<br>原因是-F不会改变默认规则</p><p>[root @ web01〜]＃iptables -nL<br>链输入（策略DROP）<br>目标prot opt源目标</p><p>Chain FORWARD（策略DROP）<br>目标prot opt源目标</p><p>链输出（策略接受）<br>目标prot opt源目的地</p><p>解决：<br>物理机：<br>1.去机房自己清空<br>2。让机房的人重启服务器，逐步条件是规则没有编写配置里<br>云服务器：直接<br>通过控制台恢复</p><p>如何避免：<br>1.测试规则之前，先写个定时任务，每隔5分钟重启一次iptables</p><p>FORWARD链默认为DROP的时候共享上网重置<br>解决方法：<br>第一种，添加2条规则<br>iptables -A FORWARD -s 172.16.1.0/24 -j ACCEPT<br>iptables -A FORWARD -d 172.16.1.0/24 -j ACCEPT<br>第二种：修改FORWARD接受<br>iptables -P FORWARD接受</p><p>扩展映射：<br>访问10.0.0.61的9000扩展，扩展到172.16.1.7的22扩展</p><p>访问10.0.0.61的9000端口的数据包格式<br>源端口：9000<br>目的端口：9000<br>源IP：10.0.0.1<br>目的IP：10.0.0.61</p><p>源端口：22<br>目的端口：22<br>源IP：10.0.0.1<br>目的IP：172.16.1.7 :22</p><p>iptables -t nat -A PREROUTING -d 10.0.0.61 -p tcp –dport 9000 -j DNAT –to-destination 172.16.1.7:22<br>注意：改写<br>数据包的目标IP和端口<br>用到的是PREROUTING链</p><p>IP映射：<br>ip添加10.0.1.62/24 dev eth0标签eth0：0<br>iptables -t nat -A PREROUTING -d 10.0.1.62 -j DNAT –to-destination 172.16.1.7</p><p>保存命令：<br>iptables-保存<br>iptables-保存&gt; iptables_m01<br>iptables-restore &lt;iptables_m01<br>iptables-save&gt; / etc / sysconfig / iptables</p>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IPtables </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git 命令集合</title>
      <link href="/posts/60483/"/>
      <url>/posts/60483/</url>
      
        <content type="html"><![CDATA[<p>1.git init 初始化仓库 把一个目录初始化为版本仓库 （可以是空的目录 也可以是带内容的仓库）</p><p>2.git status 查看当前仓库的状态</p><p>3.git add file 添加文件到暂存区</p><p>4.git add . 或者 git add * 添加当前所有的文件到暂存区</p><p>5.git rm –cached file 从缓存区撤回该文件</p><p>6.rm -rf file 删除工作区文件</p><p>7.git rm -f file 直接从暂存区域同工作区一同删除命令</p><p>小结：如果真正意义上通过版本控制系统 管理文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.工作目录必须有个代码文件</span><br><span class="line">2.通过 git add file 添加到暂存区域</span><br><span class="line">3.通过 git commit -m &quot;你自己输入的有关代码信息&quot; 添加到本地仓库 </span><br></pre></td></tr></table></figure><p>8.git mv old-filename new-filename 直接更改文件名称，包括缓存区</p><p>9.git diff 默认比对工作目录和暂存区域有什么不同</p><p>10.git diff –cached 比对暂存区域和本地仓库</p><p>11. 如果某个文件已经被仓库管理 如果再更改此文件 直接需要一条命令提交即可</p><p>git commit -am “add newfile”</p><p>12.git log 查看历史提交信息</p><p>13.git log –oneline 一行显示提交信息</p><p>-p 查看具体的改动</p><p>-1 查看最近一次</p><p>14.git reset –hard _*_* 回滚数据到某一个提交</p><p>15.git reflog 查看所有修改信息</p><p>16.git log –oneline –decorate 查看当前指针的指向</p><p>17.git branch 查看分支 （* 在什么上面什么就是主分支）</p><p>18.git branch ** 创建分支</p><p>19.git checkout testing 切换分支</p><p>20.git checkout -b testing 创建并切换分支</p><p>21.git branch -d testing 删除分支</p><p>22.git merge testing 合并分支。操作必须在主分支上做</p>]]></content>
      
      
      <categories>
          
          <category> Docker+K8s </category>
          
          <category> 云计算 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GIT命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Rsync 备份服务</title>
      <link href="/posts/31965/"/>
      <url>/posts/31965/</url>
      
        <content type="html"><![CDATA[<h1 id="RSYNC-全网备份"><a href="#RSYNC-全网备份" class="headerlink" title="RSYNC + 全网备份"></a>RSYNC + 全网备份</h1><p>RSYNC=Remote Sync 远程同步 高效，一定要结合 shell<br>官方网站：<a href="https://rsync.samba.org/">https://rsync.samba.org/</a><br>Author： Andrew Tridgell, Wayne Davison, and others<br>Andrew Tridgell 是 Samba 项目的领导者和主要开发人员，同时还在参与开发 rsync、Linux Kernel。<br><code>rsync --version</code> #查看 rsync 版本，可以看到相关作者信息</p><p>与 SCP 的比较：scp = 无法备份大量数据，类似 windows 的复制<br><strong>rsync = 边复制 ，边统计，边比较</strong></p><h1 id="Rysnc-特性和优点"><a href="#Rysnc-特性和优点" class="headerlink" title="Rysnc 特性和优点"></a>Rysnc 特性和优点</h1><p>可以镜像保存整个目录树和文件系统。<br>可以很容易做到保持原来文件的权限、时间、软硬链接等等。<br>无须特殊权限即可安装。<br>快速：第一次同步时 rsync 会复制全部内容，但在下一次只传输修改过的文件。<br>压缩传输：rsync 在传输数据的过程中可以实行压缩及解压缩操作，因此可以使用更少的带宽。<br>安全：可以使用 scp、ssh 等方式来传输文件，当然也可以通过直接的 socket 连接。<br>支持匿名传输，以方便进行网站镜象。<br>选择性保持：符号连接，硬链接，文件属性，权限，时间等</p><h2 id="常见备份分类"><a href="#常见备份分类" class="headerlink" title="常见备份分类"></a>常见备份分类</h2><p><strong>完整备份，差异备份，增量备份</strong></p><ul><li>完整备份：每次备份都是从备份源将所有的文件或目录备份到目的地</li><li>差量备份：备份上次完全备份以后有变化的数据 (他针对的上次的完全备份，他备份过程中不清除存档属性)</li><li>增量备份：备份上次备份以后有变化的数据.(他才不管是那种类型的备份，有变化的数据就备份，他会清除存档属性)</li></ul><h2 id="运行模式和端口"><a href="#运行模式和端口" class="headerlink" title="运行模式和端口"></a>运行模式和端口</h2><ul><li>采用 C/S 模式（客户端 / 服务器模式） [就是一个点到点的传输，直接使用 rsync 命令]</li><li>端口：873</li></ul><h2 id="发起端和备份源"><a href="#发起端和备份源" class="headerlink" title="发起端和备份源"></a>发起端和备份源</h2><p>四个名词的解释：</p><ul><li>发起端：负责发起 rsync 同步操作的客户机叫做发起端，通知服务器我要备份你的数据</li><li>备份源：负责相应来自客户机 rsync 同步操作的服务器脚在备份源，需要备份的服务器</li><li>服务端：运行 rsyncd 服务，一般来说，需要备份的服务器</li><li>客户端：存放备份数据</li></ul><h2 id="数据同步方式"><a href="#数据同步方式" class="headerlink" title="数据同步方式"></a>数据同步方式</h2><ul><li>推 push：一台主机负责把数据传送给其他主机，服务器开销很大，比较适合后端服务器少的情况</li><li>拉 pull：所有主机定时去找一主机拉数据，可能就会导致数据缓慢</li><li>推：目的主机配置为 rsync 服务器，源主机周期性的使用 rsync 命令把要同步的目录推过去（需要备份的机器是客户端，存储备份的机器是服务端）</li><li>拉：源主机配置为 rsync 服务器，目的主机周期性的使用 rsync 命令把要同步的目录拉过来（需要备份的机器是服务端，存储备份的机器是客户端）两种方案，rsync 都有对应的命令来实现</li></ul><h2 id="Xinetd-管理-Rsync-工作原理"><a href="#Xinetd-管理-Rsync-工作原理" class="headerlink" title="Xinetd 管理 Rsync 工作原理"></a>Xinetd 管理 Rsync 工作原理</h2><p><img src="http://www.kococ.cn/usr/uploads/2020/01/10285241.jpg"></p><p>使用 rsync 来同步是先通过 xinetd 监听 873 号端口，如果 rsync 进来的是 873 号端口，那么 xinetd 就会通知它所管辖的 rsync 服务来做回应，接下来就是 rsync 俩服务于之间的通讯</p><h2 id="rsync-程序功能-1-vs-4"><a href="#rsync-程序功能-1-vs-4" class="headerlink" title="rsync 程序功能: 1 vs 4"></a>rsync 程序功能: 1 vs 4</h2><p><code>rsync == cp</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@backup ~]# cp -a &#x2F;etc&#x2F;hosts &#x2F;tmp&#x2F;cp_hosts</span><br><span class="line">[root@backup ~]# ll &#x2F;tmp&#x2F;cp_hosts </span><br><span class="line">-rw-r--r-- 1 root root 375 Feb 21 17:17 &#x2F;tmp&#x2F;cp_hosts</span><br><span class="line">[root@backup ~]# rsync -a &#x2F;etc&#x2F;hosts &#x2F;tmp&#x2F;rsync_hosts</span><br><span class="line">[root@backup ~]# ll &#x2F;tmp&#x2F;rsync_hosts</span><br><span class="line">-rw-r--r-- 1 root root 375 Feb 21 17:17 &#x2F;tmp&#x2F;rsync_hosts</span><br></pre></td></tr></table></figure><p><code>rsync == scp(远程备份)</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">scp -rp &#x2F;etc&#x2F;sysconfig&#x2F;  172.16.1.31:&#x2F;tmp&#x2F;</span><br><span class="line">rsync -rp &#x2F;oldboy_dir&#x2F;  172.16.1.31:&#x2F;tmp&#x2F;</span><br><span class="line"></span><br><span class="line">利用rsync传输目录时:</span><br><span class="line">传输的目录后面如果存在   &#x2F; &#x3D;&#x3D; &#x2F;xoxo_dir&#x2F;  表示将目录下面的数据内容进行全部传输</span><br><span class="line">传输的目录后面如果不存在 &#x2F; &#x3D;&#x3D; &#x2F;xoxo_dir   表示将目录本身和目录下面的数据内容进行全部传输</span><br></pre></td></tr></table></figure><p><code>rsync == rm</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@backup ~]# mkdir &#x2F;null</span><br><span class="line">[root@backup ~]# ll &#x2F;null&#x2F;</span><br><span class="line">total 0</span><br><span class="line">[root@backup ~]# rsync -rp --delete &#x2F;null&#x2F; 172.16.1.31:&#x2F;tmp&#x2F;</span><br><span class="line">root@172.16.1.31&#39;s password: </span><br><span class="line">--delete : 无差异同步--我有什么,你也有什么;我没有什么,你也不能有</span><br><span class="line">           实现不同主机之间数据高度一致</span><br></pre></td></tr></table></figure><p><code>rsync == ls</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs01 tmp]# ls &#x2F;tmp&#x2F;</span><br><span class="line">oldboy.txt</span><br><span class="line">[root@nfs01 tmp]# rsync &#x2F;tmp&#x2F;</span><br><span class="line">drwxr-xr-x             24 2019&#x2F;02&#x2F;21 17:42:52 .</span><br><span class="line">-rw-r--r--              0 2019&#x2F;02&#x2F;21 17:41:46 xoxo.txt</span><br></pre></td></tr></table></figure><h2 id="rsync-命令的工作模式"><a href="#rsync-命令的工作模式" class="headerlink" title="rsync 命令的工作模式"></a>rsync 命令的工作模式</h2><p><strong>本地备份数据 cp</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Local:  rsync [OPTION...] SRC... [DEST]</span><br><span class="line">src:  要备份的数据信息</span><br><span class="line">DEST: 将数据存储在什么位置    </span><br></pre></td></tr></table></figure><p><strong>远程备份数据 scp</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Access via remote shell:</span><br><span class="line">Pull: rsync [OPTION...] [USER@]HOST:SRC... [DEST]  -- 下载</span><br><span class="line">[USER@]  -- 指定以什么用户身份传输数据</span><br><span class="line">HOST     -- 指定远程主机IP地址或者主机名称</span><br><span class="line">SRC      -- 远程主机上要进行下载的数据信息</span><br><span class="line">DEST     -- 将远程主机信息保存到本地主机的什么路径中</span><br><span class="line"></span><br><span class="line">Push: rsync [OPTION...] SRC... [USER@]HOST:DEST    -- 上传</span><br><span class="line">SRC      -- 本地主机上要进行上传的数据信息</span><br><span class="line">DEST     -- 将本地主机信息保存到远程主机的什么路径中</span><br></pre></td></tr></table></figure><p><strong>守护进程方式远程备份数据：(推荐)</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Access via rsync daemon:</span><br><span class="line">Pull: rsync [OPTION...] [USER@]HOST::SRC... [DEST] -- 下载</span><br><span class="line">      [USER@]  -- 指定一个认证用户信息</span><br><span class="line">      HOST     -- 指定远程主机IP地址或者主机名称</span><br><span class="line">      SRC      -- 远程主机上要进行下载的模块信息???</span><br><span class="line">      DEST     -- 将远程主机信息保存到本地主机的什么路径中</span><br><span class="line">      </span><br><span class="line">      rsync [OPTION...] rsync:&#x2F;&#x2F;[USER@]HOST[:PORT]&#x2F;SRC... [DEST]</span><br><span class="line">            </span><br><span class="line">Push: rsync [OPTION...] SRC... [USER@]HOST::DEST   -- 上传</span><br><span class="line">      SRC      -- 本地主机上要进行上传的数据信息</span><br><span class="line">      [USER@]  -- 指定一个认证用户信息</span><br><span class="line">      HOST     -- 指定远程主机IP地址或者主机名称</span><br><span class="line">      DEST     -- 将本地主机信息保存到远程主机的什么模块信息???</span><br><span class="line">      </span><br><span class="line">      rsync [OPTION...] SRC... rsync:&#x2F;&#x2F;[USER@]HOST[:PORT]&#x2F;DEST</span><br><span class="line">         </span><br></pre></td></tr></table></figure><ol><li>可以控制传输的连接数量 (同一时刻)</li><li>可以实现免交互方式进行传输数据</li><li>具有单独的传输认证进制</li></ol><h2 id="rsync-服务守护进程方式部署流程-YUM"><a href="#rsync-服务守护进程方式部署流程-YUM" class="headerlink" title="rsync 服务守护进程方式部署流程 (YUM)"></a>rsync 服务守护进程方式部署流程 (YUM)</h2><p>rsync 服务端 (rsync 服务进程)<br>第一个：安装部署软件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@backup ~]# rpm -qa rsync</span><br><span class="line">rsync-3.1.2-4.el7.x86_64</span><br></pre></td></tr></table></figure><p>第二个：编写配置文件<br>PS: 只要是一个守护进程服务，都会存在配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;rsyncd.conf</span><br><span class="line">#rsync_config</span><br><span class="line">#created by HQ at 2017</span><br><span class="line">##rsyncd.conf start##    -- 注释信息 </span><br><span class="line">uid &#x3D; rsync              -- 管理备份目录(属主信息是rsync)</span><br><span class="line">gid &#x3D; rsync              -- 管理备份目录(属组信息是rsync)</span><br><span class="line">port &#x3D; 873               -- 守护进程服务端口信息</span><br><span class="line">fake super &#x3D; yes        -- 假超级</span><br><span class="line">use chroot &#x3D; no          -- 安全的配置</span><br><span class="line">max connections &#x3D; 200    -- 同时可以有多少客户端连接rsync服务器</span><br><span class="line">timeout &#x3D; 300            -- 超时时间,显示空闲连接存活时间</span><br><span class="line">pid file &#x3D; &#x2F;var&#x2F;run&#x2F;rsyncd.pid   --- 保存进程pid号码信息</span><br><span class="line">lock file &#x3D; &#x2F;var&#x2F;run&#x2F;rsync.lock  --- 真正的限制同时的连接数</span><br><span class="line">log file &#x3D; &#x2F;var&#x2F;log&#x2F;rsyncd.log   --- rsync程序日志文件</span><br><span class="line">ignore errors            -- 在备份传输数据时,一些不严重问题先进行忽略</span><br><span class="line">read only &#x3D; false        -- 备份目录设置为可读可写</span><br><span class="line">list &#x3D; true              -- 使客户端可以查看服务端的模块信息</span><br><span class="line">hosts allow &#x3D; 172.16.1.0&#x2F;24   --- 设置允许哪些主机或网段可以向备份服务器存储数据(白名单)</span><br><span class="line">hosts deny &#x3D; 0.0.0.0&#x2F;32       --- 设置禁止哪些主机或网段可以向备份服务器存储数据(黑名单)</span><br><span class="line">auth users &#x3D; rsync_backup     --- 认证用户</span><br><span class="line">secrets file &#x3D; &#x2F;etc&#x2F;rsync.password  --- 认证用户密码文件(信息:rsync_backup:oldboy123)</span><br><span class="line">[backup]                            --- 模块信息</span><br><span class="line">comment &#x3D; &quot;backup dir by oldboy&quot;    --- 模块注释说明信息</span><br><span class="line">path &#x3D; &#x2F;backup                      --- 定义一个备份目录</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>第三个：创建一个 rsync 虚拟用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd -s &#x2F;sbin&#x2F;nologin -M rsync </span><br></pre></td></tr></table></figure><p>第四个：创建备份目录 授予备份目录相关权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir &#x2F;backup</span><br><span class="line">chmod rsync.rsync -R &#x2F;backup</span><br></pre></td></tr></table></figure><p>第五个：创建认证密码文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;rsync_backup:oldboy123&quot; &gt;&#x2F;etc&#x2F;rsync.password</span><br><span class="line">chmod 600 &#x2F;etc&#x2F;rsync.password</span><br><span class="line">    </span><br></pre></td></tr></table></figure><p>第六个：启动 rsync 服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start rsyncd</span><br><span class="line">systemctl enable rsyncd</span><br></pre></td></tr></table></figure><p>rsync 客户端<br>进行传输测试 切记关闭 SElinux 与防火墙</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs01 tmp]# rsync -avz &#x2F;etc&#x2F;hosts  rsync_backup@172.16.1.41::backup</span><br><span class="line">Password: </span><br></pre></td></tr></table></figure><h2 id="rsync-守护进程模式传输数据原理-centos7-rsync-3-1-2"><a href="#rsync-守护进程模式传输数据原理-centos7-rsync-3-1-2" class="headerlink" title="rsync 守护进程模式传输数据原理 (centos7 rsync - 3.1.2)"></a>rsync 守护进程模式传输数据原理 (centos7 rsync - 3.1.2)</h2><blockquote><p>a 在客户端执行守护进程备份数据命令</p><p>b 完成数据传输认证过程 (用户名 密码信息)</p><p>c 完成用户映射过程 将客户端用户 — 服务端的 rsync 用户</p><p>d 完成传输文件属主 属组信息的修改 — 修改为 rsync</p></blockquote><h2 id="如何实现免交互传输数据"><a href="#如何实现免交互传输数据" class="headerlink" title="如何实现免交互传输数据"></a>如何实现免交互传输数据</h2><p>完成 rsync 客户端配置过程<br>第一：创建密码文件 修改密码文件权限为 600</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo 123456 &gt;&#x2F;etc&#x2F;rsync.password</span><br><span class="line">chmod 600 &#x2F;etc&#x2F;rsync.password</span><br></pre></td></tr></table></figure><p>第二：进行传输测试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync -avz &#x2F;tmp&#x2F;123456.txt rsync_backup@172.16.1.41::backup --password-file&#x3D;&#x2F;etc&#x2F;rsync.password</span><br></pre></td></tr></table></figure><h2 id="rsync-命令参数说明"><a href="#rsync-命令参数说明" class="headerlink" title="rsync 命令参数说明"></a>rsync 命令参数说明</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">-v, --verbose      --- 显示传输数据过程信息</span><br><span class="line">-z, --compress     --- 将传输数据进行压缩</span><br><span class="line">-a, --archive       --- 归档参数 -rtopgDl </span><br><span class="line">-r, --recursive    --- 递归传输数据</span><br><span class="line">-t, --times        --- 保持文件修改时间不变</span><br><span class="line">-o, --owner        --- 保持文件属主信息不变(在配置文件中uid设置为root用户)</span><br><span class="line">-g, --group        --- 保持文件属组信息不变(在配置文件中gid设置为root用户)</span><br><span class="line">-p, --perms        --- 保持文件权限不变</span><br><span class="line">-D                 --- 保持设置文件信息不变</span><br><span class="line">-l, --links        --- 只传输链接文件,不会传输源文件中的内容 (bug)</span><br><span class="line">-L,                --- 只传输链接文件,会传输源文件中的内容    </span><br><span class="line">-P, --progress     --- 显示数据传输的进度信息</span><br></pre></td></tr></table></figure><p>PS: 如果想让选项 - o 和 - g 参数生效，需要将配置文件的 uid 和 gid 改为 root, 需要将 fake super 参数进行注释或者改为 no</p><h2 id="rsync-服务实现备份数据排除功能-过滤"><a href="#rsync-服务实现备份数据排除功能-过滤" class="headerlink" title="rsync 服务实现备份数据排除功能 (过滤)"></a>rsync 服务实现备份数据排除功能 (过滤)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">--exclude&#x3D;PATTERN    注意: 排除数据信息要写上相对路径</span><br><span class="line">--exclude-from&#x3D;file        利用exclude-from参数排除数据信息时, 建议后面接绝对路径信息</span><br></pre></td></tr></table></figure><p>准备环境:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs01 tmp]# mkdir &#x2F;xoxo&#x2F;&#123;01..03&#125; -p</span><br><span class="line">[root@nfs01 tmp]# touch &#x2F;xoxo&#x2F;&#123;01..03&#125;&#x2F;&#123;a..c&#125;.txt</span><br><span class="line">[root@nfs01 tmp]# tree &#x2F;xoxo&#x2F;</span><br><span class="line">&#x2F;xoxo&#x2F;</span><br><span class="line">├── 01</span><br><span class="line">│?? ├── a.txt</span><br><span class="line">│?? ├── b.txt</span><br><span class="line">│?? └── c.txt</span><br><span class="line">├── 02</span><br><span class="line">│?? ├── a.txt</span><br><span class="line">│?? ├── b.txt</span><br><span class="line">│?? └── c.txt</span><br><span class="line">└── 03</span><br><span class="line">    ├── a.txt</span><br><span class="line">    ├── b.txt</span><br><span class="line">    └── c.txt</span><br><span class="line">    </span><br></pre></td></tr></table></figure><p>进行排除操作：排除 01 目录都不传输 排除 02 目录 c.txt 文件不要传输</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs01 tmp]# rsync -avz &#x2F;xoxo&#x2F; --exclude&#x3D;01&#x2F; --exclude&#x3D;02&#x2F;c.txt rsync_backup@172.16.1.41::backup --password-file&#x3D;&#x2F;etc&#x2F;rsync.password</span><br><span class="line">sending incremental file list</span><br><span class="line">.&#x2F;</span><br><span class="line">02&#x2F;</span><br><span class="line">02&#x2F;a.txt</span><br><span class="line">02&#x2F;b.txt</span><br><span class="line">03&#x2F;</span><br><span class="line">03&#x2F;a.txt</span><br><span class="line">03&#x2F;b.txt</span><br><span class="line">03&#x2F;c.txt</span><br><span class="line"></span><br><span class="line">sent 375 bytes  received 134 bytes  1,018.00 bytes&#x2F;sec</span><br><span class="line">total size is 0  speedup is 0.00</span><br><span class="line"></span><br><span class="line">[root@nfs01 xoxo]# rsync -avz &#x2F;xoxo&#x2F; --exclude-from&#x3D;&#x2F;xoxo&#x2F;exlude_file rsync_backup@172.16.1.41::backup --password-file&#x3D;&#x2F;etc&#x2F;rsync.password</span><br><span class="line">sending incremental file list</span><br><span class="line">.&#x2F;</span><br><span class="line">02&#x2F;</span><br><span class="line">02&#x2F;a.txt</span><br><span class="line">02&#x2F;b.txt</span><br><span class="line">03&#x2F;</span><br><span class="line">03&#x2F;a.txt</span><br><span class="line">03&#x2F;b.txt</span><br><span class="line">03&#x2F;c.txt</span><br><span class="line"></span><br><span class="line">sent 375 bytes  received 134 bytes  1,018.00 bytes&#x2F;sec</span><br><span class="line">total size is 0  speedup is 0.00</span><br><span class="line"></span><br><span class="line">[root@nfs01 xoxo]# cat exlude_file </span><br><span class="line">01&#x2F;</span><br><span class="line">02&#x2F;c.txt</span><br><span class="line">exlude_file</span><br><span class="line">PS: 利用exclude-from参数排除数据信息时, 建议后面接绝对路径信息</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>rsync 服务实现无差异同步</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">--delete :  使客户端数据信息和备份服务端数据信息保持高度一致</span><br><span class="line">[root@nfs01 xoxo]# rsync -avz &#x2F;xoxo&#x2F; --delete rsync_backup@172.16.1.41::backup --password-file&#x3D;&#x2F;etc&#x2F;rsync.password</span><br><span class="line">sending incremental file list</span><br><span class="line">deleting 01&#x2F;c.txt</span><br><span class="line">deleting 01&#x2F;b.txt</span><br><span class="line">deleting 01&#x2F;a.txt</span><br><span class="line">deleting 01&#x2F;</span><br><span class="line">.&#x2F;</span><br><span class="line"></span><br><span class="line">sent 235 bytes  received 72 bytes  614.00 bytes&#x2F;sec</span><br><span class="line">total size is 25  speedup is 0.08</span><br></pre></td></tr></table></figure><p><strong>rsync 备份服务实现存储数据访问控制</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">hosts allow &#x3D; 172.16.1.0&#x2F;24   白名单</span><br><span class="line">hosts deny &#x3D; 0.0.0.0&#x2F;32       黑名单</span><br><span class="line">理解rsync服务访问控制原理</span><br><span class="line">第一种情况: 只有白名单 没有黑名单</span><br><span class="line">[root@nfs01 xoxo]# rsync -avz &#x2F;xoxo&#x2F; --delete rsync_backup@172.16.1.41::backup --password-file&#x3D;&#x2F;etc&#x2F;rsync.password</span><br><span class="line">sending incremental file list</span><br><span class="line"></span><br><span class="line">sent 228 bytes  received 22 bytes  500.00 bytes&#x2F;sec</span><br><span class="line">total size is 25  speedup is 0.10</span><br><span class="line">[root@nfs01 xoxo]# rsync -avz &#x2F;xoxo&#x2F; --delete rsync_backup@10.0.0.41::backup --password-file&#x3D;&#x2F;etc&#x2F;rsync.password</span><br><span class="line">@ERROR: Unknown module &#39;backup&#39;</span><br><span class="line">rsync error: error starting client-server protocol (code 5) at main.c(1648) [sender&#x3D;3.1.2]</span><br></pre></td></tr></table></figure><p><strong>rsync 服务模块列表功能</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">list &#x3D; false    在客户端上可以显示服务端的所有模块信息</span><br><span class="line">PS: 建议将此功能关闭    </span><br></pre></td></tr></table></figure><p><strong>rsync 服务备份目录层级创建功能</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">PS: 无法创建多级目录</span><br><span class="line">[root@nfs01 xoxo]# rsync -avz &#x2F;etc&#x2F;hosts  rsync_backup@172.16.1.41::backup&#x2F;01&#x2F; --password-file&#x3D;&#x2F;etc&#x2F;rsync.password</span><br><span class="line">sending incremental file list</span><br><span class="line">created directory 01</span><br><span class="line">hosts</span><br><span class="line"></span><br><span class="line">sent 227 bytes  received 68 bytes  590.00 bytes&#x2F;sec</span><br><span class="line">total size is 371  speedup is 1.26</span><br><span class="line">[root@nfs01 xoxo]# rsync -avz &#x2F;etc&#x2F;hosts  rsync_backup@172.16.1.41::backup&#x2F;01&#x2F;02&#x2F;03&#x2F;04&#x2F; --password-file&#x3D;&#x2F;etc&#x2F;rsync.password</span><br><span class="line">sending incremental file list</span><br><span class="line">rsync: mkdir &quot;01&#x2F;02&#x2F;03&#x2F;04&quot; (in backup) failed: No such file or directory (2)</span><br><span class="line">rsync error: error in file IO (code 11) at main.c(657) [Receiver&#x3D;3.1.2]</span><br><span class="line">[root@nfs01 xoxo]# </span><br><span class="line">[root@nfs01 xoxo]# rsync -avz &#x2F;etc&#x2F;hosts  rsync_backup@172.16.1.41::backup&#x2F;01&#x2F;02&#x2F; --password-file&#x3D;&#x2F;etc&#x2F;rsync.password</span><br><span class="line">sending incremental file list</span><br><span class="line">created directory 01&#x2F;02</span><br><span class="line">hosts</span><br><span class="line"></span><br><span class="line">sent 227 bytes  received 71 bytes  596.00 bytes&#x2F;sec</span><br><span class="line">total size is 371  speedup is 1.24</span><br></pre></td></tr></table></figure><hr><hr><h1 id="6-66-实战内容"><a href="#6-66-实战内容" class="headerlink" title="6.66 实战内容"></a>6.66 实战内容</h1><h2 id="6-1-客户端推送-backup-目录下所有内容至-Rsync-服务端"><a href="#6-1-客户端推送-backup-目录下所有内容至-Rsync-服务端" class="headerlink" title="6.1 客户端推送 backup 目录下所有内容至 Rsync 服务端"></a>6.1 客户端推送 backup 目录下所有内容至 Rsync 服务端</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export RSYNC_PASSWORD&#x3D;123456</span><br><span class="line">rsync -avz &#x2F;backup&#x2F; rsync_backup@172.16.1.41::backup</span><br></pre></td></tr></table></figure><h2 id="6-2-客户端拉取-Rsync-服务端-backup-模块数据至本地客户端的-backup-目录"><a href="#6-2-客户端拉取-Rsync-服务端-backup-模块数据至本地客户端的-backup-目录" class="headerlink" title="6.2 客户端拉取 Rsync 服务端 backup 模块数据至本地客户端的 /backup 目录"></a>6.2 客户端拉取 Rsync 服务端 backup 模块数据至本地客户端的 /backup 目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export RSYNC_PASSWORD&#x3D;123456</span><br><span class="line">rsync -avz rsync_backup@172.16.1.41::backup &#x2F;backup&#x2F;</span><br></pre></td></tr></table></figure><h2 id="6-3-Rsync-实现数据无差异同步"><a href="#6-3-Rsync-实现数据无差异同步" class="headerlink" title="6.3 Rsync 实现数据无差异同步"></a>6.3 Rsync 实现数据无差异同步</h2><p>拉取远端数据：远端与本地保持一致，远端没有本地有会被删除，造成客户端数据丢失</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export RSYNC_PASSWORD&#x3D;123456</span><br><span class="line">rsync -avz --delete rsync_backup@172.16.1.41::backup &#x2F;data&#x2F;</span><br></pre></td></tr></table></figure><p>推送数据至远端：本地与远端保持一致，本地没有远端会被删除，造成服务器端数据丢失</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export RSYNC_PASSWORD&#x3D;123456</span><br><span class="line">rsync -avz --delete &#x2F;data&#x2F; rsync_backup@172.16.1.41::backup</span><br></pre></td></tr></table></figure><h2 id="6-4-Rsync-的-Limit-限速"><a href="#6-4-Rsync-的-Limit-限速" class="headerlink" title="6.4 Rsync 的 Limit 限速"></a>6.4 Rsync 的 Limit 限速</h2><p>企业案例：某 DBA 使用 rsync 拉取备份数据时，由于文件过大导致内部交换机带宽被沾满，导致用户的请求无法响应</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export RSYNC_PASSWORD&#x3D;123456</span><br><span class="line">rsync -avz --bwlimit&#x3D;1 rsync_backup@172.16.1.41::backup &#x2F;data&#x2F;</span><br></pre></td></tr></table></figure><h1 id="7-77-全网备份案例"><a href="#7-77-全网备份案例" class="headerlink" title="7.77 全网备份案例"></a>7.77 全网备份案例</h1><h2 id="7-1-客户端需求："><a href="#7-1-客户端需求：" class="headerlink" title="7.1 客户端需求："></a>7.1 客户端需求：</h2><p>客户端需求：</p><ul><li>1. 客户端 每天凌晨 1 点在服务器本地打包备份 (系统配置文件日志文件其他目录应用配置等文件)</li><li>2. 客户端备份的数据必须存放至以主机名 ip 地址当前时间命名的目录中</li><li>3. 客户端最后通过 rsync 推送本地已经打包好的备份文件至 backup 服务器</li><li>4. 客户端服务器本地保留最近 7 天的数据，避免浪费磁盘空间</li></ul><h2 id="7-2-任务-拆解"><a href="#7-2-任务-拆解" class="headerlink" title="7.2 任务 拆解"></a>7.2 任务 拆解</h2><p>1. 客户端 每天凌晨 1 点在服务器本地打包备份 (系统配置文件日志文件其他目录应用配置等文件)<br>系统配置文件:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;etc&#x2F;fstab</span><br><span class="line">&#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure><p>日志文件:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;var&#x2F;log&#x2F;messages</span><br><span class="line">&#x2F;var&#x2F;log&#x2F;secure</span><br></pre></td></tr></table></figure><p>打包压缩:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F; &amp;&amp; tar zcvf &#x2F;backup&#x2F;sys.tar.gz etc&#x2F;fstab etc&#x2F;passwd</span><br><span class="line">cd &#x2F; &amp;&amp; tar zcvf &#x2F;backup&#x2F;log.tar.gz var&#x2F;log&#x2F;messages var&#x2F;log&#x2F;secure</span><br></pre></td></tr></table></figure><p>2. 客户端备份的数据必须存放至以主机名 ip 地址当前时间命名的目录中<br>命名要求:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nfs_172.16.1.31_2019-07-17</span><br></pre></td></tr></table></figure><p>主机名:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostname</span><br></pre></td></tr></table></figure><p>ip 地址:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig eth1|awk &#39;NR&#x3D;&#x3D;2&#123;print $2&#125;&#39;或者hostname -i (前提需要定义好hosts文件)</span><br></pre></td></tr></table></figure><p>时间:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">date +%F</span><br></pre></td></tr></table></figure><p>拼接在一起:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs ~]# echo &quot;$(hostname)_$(ifconfig eth1|awk &#39;NR&#x3D;&#x3D;2&#123;print $2&#125;&#39;)_$(date</span><br><span class="line">+%F)&quot;</span><br><span class="line">nfs_172.16.1.31_2019-07-17</span><br></pre></td></tr></table></figure><p>3. 客户端最后通过 rsync 推送本地已经打包好的备份文件至 backup 服务器的 /backup</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsync -avzP &#x2F;backup&#x2F; oldzhang@172.16.1.41::backup</span><br></pre></td></tr></table></figure><p>4. 创建测试数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs &#x2F;backup]# cat date.sh</span><br><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">for i in &#123;1..30&#125;</span><br><span class="line">do</span><br><span class="line">Backup&#x3D;&quot;&#x2F;backup&#x2F;$(hostname)_$(ifconfig eth1|awk &#39;NR&#x3D;&#x3D;2&#123;print $2&#125;&#39;)_$(date</span><br><span class="line">+%F)&quot;</span><br><span class="line">date -s 2019&#x2F;07&#x2F;$&#123;i&#125;</span><br><span class="line">mkdir -p $&#123;Backup&#125;</span><br><span class="line">cd &#x2F; &amp;&amp; tar zcvf $&#123;Backup&#125;&#x2F;sys.tar.gz etc&#x2F;fstab etc&#x2F;passwd</span><br><span class="line">cd &#x2F; &amp;&amp; tar zcvf $&#123;Backup&#125;&#x2F;log.tar.gz var&#x2F;log&#x2F;messages var&#x2F;log&#x2F;secure</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>5. 客户端服务器本地保留最近 7 天的数据，避免浪费磁盘空间</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find &#x2F;backup&#x2F; -mtime +7 |xargs rm -rf</span><br></pre></td></tr></table></figure><p>6. 调试脚本参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -x xxx.sh</span><br></pre></td></tr></table></figure><p>7. 最终脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs &#x2F;server&#x2F;scripts]# cat push_rsync.sh</span><br><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">PATH&#x3D;&quot;&#x2F;usr&#x2F;local&#x2F;sbin:&#x2F;usr&#x2F;local&#x2F;bin:&#x2F;usr&#x2F;sbin:&#x2F;usr&#x2F;bin:&#x2F;root&#x2F;bin&quot;</span><br><span class="line">BACKUP&#x3D;&#x2F;backup</span><br><span class="line">HOST&#x3D;$(hostname)</span><br><span class="line">TIME&#x3D;$(date +%F)</span><br><span class="line">IP&#x3D;$(ifconfig eth1|awk &#39;NR&#x3D;&#x3D;2&#123;print $2&#125;&#39;)</span><br><span class="line">DEST&#x3D;$&#123;HOST&#125;_$&#123;IP&#125;_$&#123;TIME&#125;</span><br><span class="line">#1.创建目录</span><br><span class="line">mkdir $&#123;BACKUP&#125;&#x2F;$&#123;DEST&#125; -p</span><br><span class="line">#2.打包数据</span><br><span class="line">cd &#x2F; &amp;&amp; tar zcvf $&#123;BACKUP&#125;&#x2F;$&#123;DEST&#125;&#x2F;sys.tar.gz etc&#x2F;fstab etc&#x2F;passwd</span><br><span class="line">cd &#x2F; &amp;&amp; tar zcvf $&#123;BACKUP&#125;&#x2F;$&#123;DEST&#125;&#x2F;log.tar.gz var&#x2F;log&#x2F;messages</span><br><span class="line">var&#x2F;log&#x2F;secure</span><br></pre></td></tr></table></figure><h2 id="7-3-推送"><a href="#7-3-推送" class="headerlink" title="7.3 推送"></a>7.3 推送</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export RSYNC_PASSWORD&#x3D;123456</span><br><span class="line">rsync -avzP $&#123;BACKUP&#125;&#x2F; rsync_backup@172.16.1.41::backup</span><br></pre></td></tr></table></figure><p>删除 7 天前文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find $&#123;BACKUP&#125;&#x2F; -mtime +7 |xargs rm -rf</span><br></pre></td></tr></table></figure><p>8. 注意踩坑<br>我们的备份脚本最终会以定时任务的形式实现，而定时任务能识别的 PATH 变量有限，所以最好在脚本里添加 PATH 变量，或者脚本里命令写绝对路径。</p><h2 id="7-4-服务端需求："><a href="#7-4-服务端需求：" class="headerlink" title="7.4 服务端需求："></a>7.4 服务端需求：</h2><p>1. 服务端部署 rsync，用于接收客户端推送过来的备份数据<br>2. 服务端需要每天校验客户端推送过来的数据是否完整<br>3. 服务端需要每天校验的结果通知给管理员<br>4. 服务端仅保留 6 个月的备份数据，其余的全部删除<br>注意：所有服务器的备份目录必须都为 /backup</p><h2 id="7-5-服务端步骤："><a href="#7-5-服务端步骤：" class="headerlink" title="7.5 服务端步骤："></a>7.5 服务端步骤：</h2><p>服务端需要每天校验客户端推送过来的数据是否完整<br>1. 要在客户端做<br>2. 做一个标记，贴一个防撕贴<br>第一种</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd nfs_172.16.1.31_2019-07-23&#x2F; &amp;&amp; md5sum log.tar.gz &gt; md5.txt</span><br></pre></td></tr></table></figure><p>第二种</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">md5sum log.tar.gz sys.tar.gz &gt;md5.txt</span><br></pre></td></tr></table></figure><p>第三种</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">md5sum *.tar.gz &gt;md5.txt</span><br></pre></td></tr></table></figure><p><code>实现命令</code>:<br>1. 客户端增加 md5 校验的步骤:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">md5sum $&#123;BACKUP&#125;&#x2F;$&#123;DEST&#125;&#x2F;*.tar.gz &gt; $&#123;BACKUP&#125;&#x2F;$&#123;DEST&#125;&#x2F;md5.txt</span><br></pre></td></tr></table></figure><p>2. 服务端校验命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find &#x2F;backup&#x2F;*_$(date +%F) -name &quot;md5.txt&quot;|xargs md5sum -c</span><br></pre></td></tr></table></figure><h2 id="服务端需要每天邮件校验的结果通知给管理员"><a href="#服务端需要每天邮件校验的结果通知给管理员" class="headerlink" title="服务端需要每天邮件校验的结果通知给管理员"></a>服务端需要每天邮件校验的结果通知给管理员</h2><p>1. 安装配置 mailx:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install mailx -y</span><br></pre></td></tr></table></figure><p>2. 邮件配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@backup &#x2F;server&#x2F;scripts]# cat &#x2F;etc&#x2F;mail.rc </span><br><span class="line">set from&#x3D;38867033@qq.com</span><br><span class="line">set smtp&#x3D;smtps:&#x2F;&#x2F;smtp.qq.com:465</span><br><span class="line">set smtp-auth-user&#x3D;38867033@qq.com</span><br><span class="line">set smtp-auth-password&#x3D;xxxxxxxxSMTP授权码</span><br><span class="line">set smtp-auth&#x3D;login</span><br><span class="line">set ssl-verify&#x3D;ignore</span><br><span class="line">set nss-config-dir&#x3D;&#x2F;etc&#x2F;pki&#x2F;nssdb&#x2F;</span><br></pre></td></tr></table></figure><p>3. 服务端生成校验结果文件:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">find &#x2F;backup&#x2F;*_$(date +%F) -name &quot;md5.txt&quot;|xargs md5sum -c &gt;</span><br><span class="line">&#x2F;backup&#x2F;check.txt</span><br></pre></td></tr></table></figure><p>4. 校验发送命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mail -s &quot;check-rsync-$(date +%F)&quot; 38867033@qq.com &lt; &#x2F;backup&#x2F;check.txt</span><br></pre></td></tr></table></figure><h2 id="第八章-配置文件汇总"><a href="#第八章-配置文件汇总" class="headerlink" title="第八章 配置文件汇总"></a>第八章 配置文件汇总</h2><h2 id="8-1-客户端脚本："><a href="#8-1-客户端脚本：" class="headerlink" title="8.1 客户端脚本："></a>8.1 客户端脚本：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs01 &#x2F;server&#x2F;scripts]# cat push_rsync.sh </span><br><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line"></span><br><span class="line">#1.定义变量</span><br><span class="line">PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;sbin:&#x2F;usr&#x2F;local&#x2F;bin:&#x2F;usr&#x2F;sbin:&#x2F;usr&#x2F;bin:&#x2F;root&#x2F;bin</span><br><span class="line">Host&#x3D;$(hostname)</span><br><span class="line">Addr&#x3D;$(ifconfig eth1|awk &#39;NR&#x3D;&#x3D;2&#123;print $2&#125;&#39;)</span><br><span class="line">Date&#x3D;$(date +%F)</span><br><span class="line">Dest&#x3D;$&#123;Host&#125;_$&#123;Addr&#125;_$&#123;Date&#125;</span><br><span class="line">Path&#x3D;&#x2F;backup</span><br><span class="line">#2.创建备份目录</span><br><span class="line">[ -d $Path&#x2F;$Dest ] || mkdir -p $Path&#x2F;$Dest</span><br><span class="line">#3.备份对应的文件</span><br><span class="line">cd &#x2F; &amp;&amp; \</span><br><span class="line">    [ -f $Path&#x2F;$Dest&#x2F;system.tar.gz ] || tar czf $Path&#x2F;$Dest&#x2F;system.tar.gz etc&#x2F;fstab etc&#x2F;rsyncd.conf &amp;&amp; \</span><br><span class="line">    [ -f $Path&#x2F;$Dest&#x2F;log.tar.gz ] || tar czf $Path&#x2F;$Dest&#x2F;log.tar.gz var&#x2F;log&#x2F;messages var&#x2F;log&#x2F;secure &amp;&amp; \</span><br><span class="line">#4.携带 md5 验证信息</span><br><span class="line">[ -f $Path&#x2F;$Dest&#x2F;flag ] || md5sum $Path&#x2F;$Dest&#x2F;*.tar.gz &gt;$Path&#x2F;$Dest&#x2F;flag_$Date</span><br><span class="line">#5.推送本地数据至备份服务器</span><br><span class="line">export RSYNC_PASSWORD&#x3D;123456</span><br><span class="line">rsync -avz $Path&#x2F; rsync_backup@172.16.1.41::backup</span><br><span class="line">#6.本地保留最近 7 天的数据</span><br><span class="line">find $Path&#x2F; -type d -mtime +7|xargs rm -rf</span><br></pre></td></tr></table></figure><p><strong>8.2 服务端脚本：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@backup &#x2F;server&#x2F;scripts]# cat check_backup.sh </span><br><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line"></span><br><span class="line">#1.定义全局的变量</span><br><span class="line">export PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;sbin:&#x2F;usr&#x2F;local&#x2F;bin:&#x2F;usr&#x2F;sbin:&#x2F;usr&#x2F;bin:&#x2F;root&#x2F;bin</span><br><span class="line">#2.定义局部变量</span><br><span class="line">Path&#x3D;&#x2F;backup</span><br><span class="line">Date&#x3D;$(date +%F)</span><br><span class="line">#3.查看 flag 文件,并对该文件进行校验, 然后将校验的结果保存至 result_时间</span><br><span class="line">find $Path&#x2F; -type f -name &quot;flag_$Date&quot;|xargs md5sum -c &gt;$Path&#x2F;result_$&#123;Date&#125;</span><br><span class="line">#4.将校验的结果发送邮件给管理员</span><br><span class="line">mail -s &quot;Rsync Backup $Date&quot; 38867033@qq.com &lt;$Path&#x2F;result_$&#123;Date&#125;</span><br><span class="line">#5.删除超过 7 天的校验结果文件, 删除超过 180 天的备份数据文件</span><br><span class="line">find $Path&#x2F; -type f -name &quot;result*&quot; -mtime +7|xargs rm -f</span><br><span class="line">find $Path&#x2F; -type d -mtime +180|xargs rm -rf</span><br></pre></td></tr></table></figure><p><strong>8.3 服务端 rsync 配置文件</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@backup &#x2F;server&#x2F;scripts]# cat &#x2F;etc&#x2F;rsyncd.conf </span><br><span class="line">uid &#x3D; www </span><br><span class="line">gid &#x3D; www </span><br><span class="line">port &#x3D; 873</span><br><span class="line">fake super &#x3D; yes</span><br><span class="line">use chroot &#x3D; no</span><br><span class="line">max connections &#x3D; 200</span><br><span class="line">timeout &#x3D; 600</span><br><span class="line">ignore errors</span><br><span class="line">read only &#x3D; false</span><br><span class="line">list &#x3D; false</span><br><span class="line">auth users &#x3D; rsync_backup</span><br><span class="line">secrets file &#x3D; &#x2F;etc&#x2F;rsync.passwd</span><br><span class="line">log file &#x3D; &#x2F;var&#x2F;log&#x2F;rsyncd.log</span><br><span class="line">#####################################</span><br><span class="line">[backup]</span><br><span class="line">comment &#x3D; welcome to 123456edu backup!</span><br><span class="line">path &#x3D; &#x2F;backup</span><br><span class="line"></span><br><span class="line">[data]</span><br><span class="line">path &#x3D; &#x2F;data</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Rsync备份 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ansible 服务 - 剧本 - 角色</title>
      <link href="/posts/22915/"/>
      <url>/posts/22915/</url>
      
        <content type="html"><![CDATA[<h1 id="第一章-Ansible-介绍"><a href="#第一章-Ansible-介绍" class="headerlink" title="第一章 Ansible 介绍"></a>第一章 Ansible 介绍</h1><h2 id="1-什么是-Ansible"><a href="#1-什么是-Ansible" class="headerlink" title="1. 什么是 Ansible"></a>1. 什么是 Ansible</h2><p>Ansible 是 python 中的一套模块，系统中的一套自动化工具，只需要使用 ssh 协议连接及可用来系统管理、自动化执行命令等任务。</p><h2 id="2-为什么需要-Ansible？"><a href="#2-为什么需要-Ansible？" class="headerlink" title="2. 为什么需要 Ansible？"></a>2. 为什么需要 Ansible？</h2><h2 id="批量管理功能："><a href="#批量管理功能：" class="headerlink" title="批量管理功能："></a>批量管理功能：</h2><ol><li>可以实现批量系统操作配置</li><li>可以实现批量软件服务部署</li><li>可以实现批量文件数据分发</li><li>可以实现批量系统信息收集</li></ol><h2 id="管理服务意义："><a href="#管理服务意义：" class="headerlink" title="管理服务意义："></a>管理服务意义：</h2><ol><li>提高工作的效率（部署综合架构）</li><li>提高工作准确度</li><li>减少维护的成本</li><li>减少重复性工作</li></ol><h2 id="安装部署简单："><a href="#安装部署简单：" class="headerlink" title="安装部署简单："></a>安装部署简单：</h2><ol><li>没有配置文件（不需要配置）</li><li>不需要启动服务</li><li>客户端没有需要部署任务</li></ol><h2 id="如何学习-Ansible"><a href="#如何学习-Ansible" class="headerlink" title="如何学习 Ansible?"></a>如何学习 Ansible?</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.官方文档</span><br><span class="line">2.帮助文档</span><br><span class="line">3.其他人写好的文档</span><br></pre></td></tr></table></figure><h1 id="第二章-Ansible-安装部署"><a href="#第二章-Ansible-安装部署" class="headerlink" title="第二章 Ansible 安装部署"></a>第二章 Ansible 安装部署</h1><p><strong>Ansible 的安装部署十分简单，只需要 yum 安装就行 （需要 epel 源）</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@xoxo1 ~]# yum install ansible -y</span><br></pre></td></tr></table></figure><h1 id="第三章-Ansible-主机清单"><a href="#第三章-Ansible-主机清单" class="headerlink" title="第三章 Ansible 主机清单"></a>第三章 Ansible 主机清单</h1><p>/etc/ansible/hosts 主机资产清单文件，用于定义被管理主机的认证信息， 例如 ssh 登录用户名、密码以及 key 相关信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.主机支持主机名通配以及正则表达式，例如 web[1:3].xoxo.com 代表三台主机</span><br><span class="line">2.主机支持基于非标准的 ssh 端口，例如 web1.xoxo.com:6666</span><br><span class="line">3.主机支持指定变量，可对个别主机的特殊配置，如登陆用户，密码</span><br><span class="line">4.主机组支持指定变量[group_name:vars]，同时支持嵌套组[game:children]</span><br></pre></td></tr></table></figure><p>1. 指定主机组相关配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#主机组</span><br><span class="line">[root@xoxo1 ~]# cat &#x2F;etc&#x2F;ansible&#x2F;hosts</span><br><span class="line">[webserver]</span><br><span class="line">192.168.10.2 </span><br><span class="line">192.168.10.3</span><br><span class="line">#主机+端口+密码</span><br><span class="line">[webserver]</span><br><span class="line">192.168.10.2 ansible_ssh_port&#x3D;22 ansible_ssh_user&#x3D;root ansible_ssh_pass&#x3D;&#39;123456&#39;</span><br><span class="line">192.168.10.3 ansible_ssh_port&#x3D;22 ansible_ssh_user&#x3D;root ansible_ssh_pass&#x3D;&#39;123456&#39;</span><br><span class="line">#对整个主机组都生效的变量</span><br><span class="line">[webserver:vars]</span><br><span class="line">ansible_ssh_pass&#x3D;&#39;123456&#39;</span><br><span class="line"></span><br><span class="line">#针对所有webserver组都生效的变量</span><br><span class="line">[webserver:vars]       </span><br><span class="line">ansible_ssh_pass&#x3D;&#39;123456&#39;</span><br></pre></td></tr></table></figure><h1 id="第四章-Ansible-常用模块"><a href="#第四章-Ansible-常用模块" class="headerlink" title="第四章 Ansible 常用模块"></a>第四章 Ansible 常用模块</h1><h2 id="0-如何学习模块"><a href="#0-如何学习模块" class="headerlink" title="0. 如何学习模块"></a>0. 如何学习模块</h2><p>ansible 官方网站:<br><a href="https://docs.ansible.com/">https://docs.ansible.com/</a><br>模块的应用语法格式:<br>ansible 主机名称 / 主机组名称 / 主机地址信息 /all -m (指定应用的模块信息) 模块名称 -a (指定动作信息) “执行什么动作”</p><h2 id="1-ping"><a href="#1-ping" class="headerlink" title="1.ping"></a>1.ping</h2><p>应用场景：<br>测试主机和 ansible 之间的连通性<br>举例：<br>对 webserver 主机组测试是否连通</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible webserver -m ping</span><br></pre></td></tr></table></figure><p>2.command 简单模块<br>应用场景：<br>类似 shell, 但是只能执行简单的命令，复杂的命令和有些符号并不能识别，用的比较少<br>01. 查看主机名，可以执行成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@xoxo1 ~]# ansible webserver -m ping       </span><br><span class="line">192.168.10.3 | SUCCESS &#x3D;&gt; &#123;</span><br><span class="line">    &quot;ansible_facts&quot;: &#123;</span><br><span class="line">        &quot;discovered_interpreter_python&quot;: &quot;&#x2F;usr&#x2F;bin&#x2F;python&quot;</span><br><span class="line">    &#125;, </span><br><span class="line">    &quot;changed&quot;: false, </span><br><span class="line">    &quot;ping&quot;: &quot;pong&quot;</span><br><span class="line">&#125;</span><br><span class="line">192.168.10.2 | SUCCESS &#x3D;&gt; &#123;</span><br><span class="line">    &quot;ansible_facts&quot;: &#123;</span><br><span class="line">        &quot;discovered_interpreter_python&quot;: &quot;&#x2F;usr&#x2F;bin&#x2F;python&quot;</span><br><span class="line">    &#125;, </span><br><span class="line">    &quot;changed&quot;: false, </span><br><span class="line">    &quot;ping&quot;: &quot;pong&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>02. 使用 awk 拼接查看主机 IP 执行失败</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@xoxo1 ~]# ansible webserver -m command -a &quot;ifconfig eth0|grep 10&quot;     </span><br><span class="line">192.168.10.2 | FAILED | rc&#x3D;255 &gt;&gt;</span><br><span class="line">SIOCSIFADDR: 没有那个设备</span><br><span class="line">eth0|grep: ERROR while getting interface flags: 没有那个设备non-zero return code</span><br><span class="line">192.168.10.3 | FAILED | rc&#x3D;255 &gt;&gt;</span><br><span class="line">SIOCSIFADDR: 没有那个设备</span><br><span class="line">eth0|grep: ERROR while getting interface flags: 没有那个设备non-zero return code</span><br></pre></td></tr></table></figure><h2 id="3-shell-万能模块"><a href="#3-shell-万能模块" class="headerlink" title="3.shell 万能模块"></a>3.shell 万能模块</h2><p>万能模块，所有命令都可以执行，和本地执行效果一样<br>01. 使用管道查询 IP 地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@xoxo1 ~]# ansible webserver -m shell -a &quot;ifconfig eth0|grep 192.168.10&quot;</span><br><span class="line">192.168.10.3 | CHANGED | rc&#x3D;0 &gt;&gt;</span><br><span class="line">        inet 192.168.10.41  netmask 255.255.255.0  broadcast 192.168.10.255</span><br><span class="line">192.168.10.2 | CHANGED | rc&#x3D;0 &gt;&gt;</span><br><span class="line">        inet 192.168.10.31  netmask 255.255.255.0  broadcast 192.168.10.255</span><br></pre></td></tr></table></figure><p>02. 批量执行脚本<br>在其他主机上创建一个脚本，内容为打印主机名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; echo.sh &lt;&lt; EOF </span><br><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">echo &quot;$(hostname)&quot;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>然后使用 ansible 的 shell 模块批量执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@xoxo1 ~]# ansible webserver -m shell -a &quot;&#x2F;bin&#x2F;bash &#x2F;root&#x2F;echo.sh&quot;</span><br><span class="line">192.168.10.3 | CHANGED | rc&#x3D;0 &gt;&gt;</span><br><span class="line">backup</span><br><span class="line"></span><br><span class="line">192.168.10.2 | CHANGED | rc&#x3D;0 &gt;&gt;</span><br><span class="line">nfs01</span><br></pre></td></tr></table></figure><h2 id="4-copy-拷贝文件"><a href="#4-copy-拷贝文件" class="headerlink" title="4.copy 拷贝文件"></a>4.copy 拷贝文件</h2><p>01. 拷贝 xoxo1 的 hostsname 文件到其他主机的 /opt 目录下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@xoxo1 ~]# ansible 192.168.10.2 -m copy -a &quot;src&#x3D;&#x2F;etc&#x2F;hostname dest&#x3D;&#x2F;opt&quot;</span><br><span class="line">192.168.10.2 | CHANGED &#x3D;&gt; &#123;</span><br><span class="line">    &quot;ansible_facts&quot;: &#123;</span><br><span class="line">        &quot;discovered_interpreter_python&quot;: &quot;&#x2F;usr&#x2F;bin&#x2F;python&quot;</span><br><span class="line">    &#125;, </span><br><span class="line">    &quot;changed&quot;: true, </span><br><span class="line">    &quot;checksum&quot;: &quot;f434396716e2c9aed47cfde87c491cce5a2c08fa&quot;, </span><br><span class="line">    &quot;dest&quot;: &quot;&#x2F;opt&#x2F;hostname&quot;, </span><br><span class="line">    &quot;gid&quot;: 0, </span><br><span class="line">    &quot;group&quot;: &quot;root&quot;, </span><br><span class="line">    &quot;md5sum&quot;: &quot;318d7defb693a2eb0d4f1a7a96575a57&quot;, </span><br><span class="line">    &quot;mode&quot;: &quot;0644&quot;, </span><br><span class="line">    &quot;owner&quot;: &quot;root&quot;, </span><br><span class="line">    &quot;size&quot;: 4, </span><br><span class="line">    &quot;src&quot;: &quot;&#x2F;root&#x2F;.ansible&#x2F;tmp&#x2F;ansible-tmp-1563780990.63-144254987732501&#x2F;source&quot;, </span><br><span class="line">    &quot;state&quot;: &quot;file&quot;, </span><br><span class="line">    &quot;uid&quot;: 0</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="02-在传输文件时修改文件属主和属组信息"><a href="#02-在传输文件时修改文件属主和属组信息" class="headerlink" title="02. 在传输文件时修改文件属主和属组信息"></a>02. 在传输文件时修改文件属主和属组信息</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible 192.168.10.2 -m copy -a &quot;src&#x3D;&#x2F;root&#x2F;rsync.password dest&#x3D;&#x2F;etc&#x2F; owner&#x3D;xoxo group&#x3D;xoxo&quot;</span><br></pre></td></tr></table></figure><h2 id="03-在传输文件时修改文件的权限信息"><a href="#03-在传输文件时修改文件的权限信息" class="headerlink" title="03. 在传输文件时修改文件的权限信息"></a>03. 在传输文件时修改文件的权限信息</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible 192.168.10.2 -m copy -a &quot;src&#x3D;&#x2F;root&#x2F;rsync.password dest&#x3D;&#x2F;etc&#x2F; mode&#x3D;0600&quot;</span><br></pre></td></tr></table></figure><h2 id="04-创建文件并直接写入内容"><a href="#04-创建文件并直接写入内容" class="headerlink" title="04. 创建文件并直接写入内容"></a>04. 创建文件并直接写入内容</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible 192.168.10.2 -m copy -a &quot;content&#x3D;&#39;xoxo&#39; dest&#x3D;&#x2F;etc&#x2F;rsync.password mode&#x3D;0600&quot;</span><br></pre></td></tr></table></figure><h2 id="05-复制目录"><a href="#05-复制目录" class="headerlink" title="05. 复制目录"></a>05. 复制目录</h2><p>src 后面目录没有 /: 将目录本身以及目录下面的内容都进行远程传输复制</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible 192.168.10.2 -m copy -a &quot;src&#x3D;&#x2F;data dest&#x3D;&#x2F;data&quot;</span><br></pre></td></tr></table></figure><p>src 后面目录有 /: 只将目录下面的内容都进行远程传输复制</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible 192.168.10.2 -m copy -a &quot;src&#x3D;&#x2F;data&#x2F; dest&#x3D;&#x2F;data&quot;</span><br></pre></td></tr></table></figure><p>参数说明：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">src #推送数据的源文件信息</span><br><span class="line">dest #推送数据的目标路径</span><br><span class="line">backup #对推送传输过去的文件，进行备份</span><br><span class="line">content #直接批量在被管理端文件中添加内容</span><br><span class="line">group #将本地文件推送到远端，指定文件属组信息</span><br><span class="line">owner #将本地文件推送到远端，指定文件属主信息</span><br><span class="line">mode #将本地文件推送到远端，指定文件权限信息</span><br></pre></td></tr></table></figure><h2 id="5-file-设置文件属性"><a href="#5-file-设置文件属性" class="headerlink" title="5.file 设置文件属性"></a>5.file 设置文件属性</h2><p>01. 创建文件夹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible xoxo -m file -a &quot;path&#x3D;&#x2F;root&#x2F;xoxo state&#x3D;directory&quot;</span><br></pre></td></tr></table></figure><p>02. 创建文件并更改属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible xoxo -m file -a &quot;path&#x3D;&#x2F;root&#x2F;test.txt state&#x3D;touch mode&#x3D;777 owner&#x3D;root group&#x3D;root&quot;</span><br></pre></td></tr></table></figure><p>03. 创建软链接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible xoxo -m file -a &quot;src&#x3D;&#x2F;root&#x2F;abc path&#x3D;&#x2F;root&#x2F;abc_link state&#x3D;link&quot;</span><br></pre></td></tr></table></figure><p>参数说明：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">path #指定远程主机目录或文件信息</span><br><span class="line">recurse #递归授权</span><br><span class="line">state</span><br><span class="line">directory #在远端创建目录</span><br><span class="line">touch #在远端创建文件</span><br><span class="line">link #link 或 hard 表示创建链接文件</span><br><span class="line">absent #表示删除文件或目录</span><br><span class="line">mode #设置文件或目录权限</span><br><span class="line">owner #设置文件或目录属主信息</span><br><span class="line">group #设置文件或目录属组信息</span><br></pre></td></tr></table></figure><h2 id="6-script-模块"><a href="#6-script-模块" class="headerlink" title="6.script 模块"></a>6.script 模块</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> 编写脚本</span><br><span class="line">[root@xoxo1 ~]# mkdir -p &#x2F;server&#x2F;scripts</span><br><span class="line">[root@xoxo1 ~]# cat &#x2F;server&#x2F;scripts&#x2F;yum.sh</span><br><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;bash</span><br><span class="line">yum install -y iftop</span><br><span class="line">#在本地运行模块，等同于在远程执行，不需要将脚本文件进行推送目标主机执行</span><br><span class="line">[root@xoxo1 ~]# ansible xoxo -m script -a &quot;&#x2F;server&#x2F;scripts&#x2F;yum.sh&quot;</span><br></pre></td></tr></table></figure><h2 id="7-cron"><a href="#7-cron" class="headerlink" title="7.cron"></a>7.cron</h2><p>01. 创建一条定时任务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansible xoxo -m cron -a &quot;minute&#x3D;* hour&#x3D;* day&#x3D;* month&#x3D;* weekday&#x3D;* job&#x3D;&#39;&#x2F;bin&#x2F;sh</span><br><span class="line">&#x2F;server&#x2F;scripts&#x2F;test.sh&#39;&quot;</span><br></pre></td></tr></table></figure><p>02. 添加定时任务注释信息，防止重复</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible xoxo -m cron -a &quot;name&#x3D;&#39;cron01&#39; job&#x3D;&#39;&#x2F;bin&#x2F;sh &#x2F;server&#x2F;scripts&#x2F;test.sh&#39;&quot;</span><br></pre></td></tr></table></figure><p>03. 删除相应定时任务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansible xoxo -m cron -a &quot;name&#x3D;&#39;ansible cron02&#39; minute&#x3D;0 hour&#x3D;0 job&#x3D;&#39;&#x2F;bin&#x2F;sh</span><br><span class="line">&#x2F;server&#x2F;scripts&#x2F;test.sh&#39; state&#x3D;absent&quot;</span><br></pre></td></tr></table></figure><p>04. 注释相应定时任务，使定时任务失效</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansible xoxo -m cron -a &quot;name&#x3D;&#39;ansible cron01&#39; minute&#x3D;0 hour&#x3D;0 job&#x3D;&#39;&#x2F;bin&#x2F;sh</span><br><span class="line">&#x2F;server&#x2F;scripts&#x2F;test.sh&#39; disabled&#x3D;no&quot;</span><br></pre></td></tr></table></figure><h2 id="8-user"><a href="#8-user" class="headerlink" title="8.user"></a>8.user</h2><p>01. 创建用户指定 uid,gid，不创建家目录也不允许登陆</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansible xoxo -m user -a &quot;name&#x3D;oldgirl uid&#x3D;888 group&#x3D;888 shell&#x3D;&#x2F;sbin&#x2F;nologin</span><br><span class="line">create_home&#x3D;no&quot;</span><br></pre></td></tr></table></figure><p>参数说明：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">uid #指定用户的 uid</span><br><span class="line">group #指定用户组名称</span><br><span class="line">groups #指定附加组名称</span><br><span class="line">password #给用户添加密码</span><br><span class="line">shell #指定用户登录 shell</span><br><span class="line">create_home #是否创建家目录</span><br></pre></td></tr></table></figure><h2 id="9-group"><a href="#9-group" class="headerlink" title="9.group"></a>9.group</h2><p>01. 创建用户组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible xoxo -m group -a &quot;name&#x3D;yongheng gid&#x3D;888 state&#x3D;present&quot;</span><br></pre></td></tr></table></figure><p>参数说明：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">name #指定创建的组名</span><br><span class="line">gid #指定组的 gid</span><br><span class="line">state</span><br><span class="line">absent #移除远端主机的组</span><br><span class="line">present #创建远端主机的组（默认）</span><br></pre></td></tr></table></figure><h2 id="10-yum"><a href="#10-yum" class="headerlink" title="10.yum"></a>10.yum</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible xoxo -m yum -a &quot;name&#x3D;httpd state&#x3D;installed&quot;</span><br></pre></td></tr></table></figure><p>参数说明：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">name       #指定要安装的软件包名称</span><br><span class="line">state      #指定使用 yum 的方法</span><br><span class="line">installed， present #安装软件包</span><br><span class="line">removed， absent #移除软件包</span><br><span class="line">latest     #安装最新软件包</span><br></pre></td></tr></table></figure><h2 id="11-service"><a href="#11-service" class="headerlink" title="11.service"></a>11.service</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible xoxo -m service -a &quot;name&#x3D;nfs state&#x3D;stopped enabled&#x3D;yes&quot;</span><br></pre></td></tr></table></figure><p>参数说明：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">name # 定义要启动服务的名称</span><br><span class="line">state # 指定服务状态</span><br><span class="line">started #启动服务</span><br><span class="line">stopped #停止服务</span><br><span class="line">restarted #重启服务</span><br><span class="line">reloaded #重载服务</span><br><span class="line">enabled #开机自启</span><br></pre></td></tr></table></figure><h2 id="12-mount"><a href="#12-mount" class="headerlink" title="12.mount"></a>12.mount</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ansible xoxo -m mount -a &quot;src&#x3D;192.168.10.2:&#x2F;data path&#x3D;&#x2F;data fstype&#x3D;nfs opts&#x3D;defaults</span><br><span class="line">state&#x3D;present&quot;</span><br><span class="line">ansible web -m mount -a &quot;src&#x3D;192.168.10.2:&#x2F;data path&#x3D;&#x2F;data fstype&#x3D;nfs opts&#x3D;defaults</span><br><span class="line">state&#x3D;mounted&quot;</span><br><span class="line"> web -m mount -a &quot;src&#x3D;192.168.10.2:&#x2F;data path&#x3D;&#x2F;data fstype&#x3D;nfs opts&#x3D;defaults</span><br><span class="line">state&#x3D;unmounted&quot;</span><br><span class="line">web -m mount -a &quot;src&#x3D;192.168.10.2:&#x2F;data path&#x3D;&#x2F;data fstype&#x3D;nfs opts&#x3D;defaults</span><br><span class="line">state&#x3D;absent&quot;</span><br></pre></td></tr></table></figure><p>状态解释</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">present # 开机挂载，仅将挂载配置写入&#x2F;etc&#x2F;fstab</span><br><span class="line">mounted # 挂载设备，并将配置写入&#x2F;etc&#x2F;fstab</span><br><span class="line">unmounted # 卸载设备，不会清除&#x2F;etc&#x2F;fstab 写入的配置</span><br><span class="line">absent # 卸载设备，会清理&#x2F;etc&#x2F;fstab 写入的配置</span><br></pre></td></tr></table></figure><p>13.unarchive<br>01. 解压远程服务器的压缩包到指定目录<br>创建压缩包：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;etc &amp;&amp; tar zxvf &#x2F;opt&#x2F;sys.tar.gz etc&#x2F;fstab etc&#x2F;hosts</span><br></pre></td></tr></table></figure><p>执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible 192.168.10.2 -m unarchive -a &quot;src&#x3D;&#x2F;opt&#x2F;sys.tar.gz dest&#x3D;&#x2F;opt&#x2F; remote_src&#x3D;yes&quot;</span><br></pre></td></tr></table></figure><p>02. 把本地文件解压到目标机器指定目录<br>创建命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F; &amp;&amp; tar zcvf &#x2F;opt&#x2F;log.tar.gz var&#x2F;log&#x2F;messages</span><br></pre></td></tr></table></figure><h2 id="14-archive"><a href="#14-archive" class="headerlink" title="14.archive"></a>14.archive</h2><p>01. 压缩单个文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible 192.168.10.2 -m archive -a &quot;path&#x3D;&#x2F;var&#x2F;log&#x2F;message dest&#x3D;&#x2F;tmp&#x2F;log.tar.gz format&#x3D;gz force_archive&#x3D;true&quot; </span><br></pre></td></tr></table></figure><h2 id="15-setup-获取主机信息"><a href="#15-setup-获取主机信息" class="headerlink" title="15.setup 获取主机信息"></a>15.setup 获取主机信息</h2><p>01. 直接执行获取主机信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible 192.168.10.2 -m setup</span><br></pre></td></tr></table></figure><p>02. 只将主机某个信息打印出来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@xoxo1 &#x2F;server&#x2F;scripts&#x2F;test]# ansible 192.168.10.3 -m setup -a &quot;filter&#x3D;ansible_all_ipv4_addresses&quot;              </span><br><span class="line">192.168.10.3 | SUCCESS &#x3D;&gt; &#123;</span><br><span class="line">    &quot;ansible_facts&quot;: &#123;</span><br><span class="line">        &quot;ansible_all_ipv4_addresses&quot;: [</span><br><span class="line">            &quot;192.168.10.3&quot;, </span><br><span class="line">            &quot;192.168.10.41&quot;</span><br><span class="line">        ], </span><br><span class="line">        &quot;discovered_interpreter_python&quot;: &quot;&#x2F;usr&#x2F;bin&#x2F;python&quot;</span><br><span class="line">    &#125;, </span><br><span class="line">    &quot;changed&quot;: false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="16-查看帮助"><a href="#16-查看帮助" class="headerlink" title="16. 查看帮助"></a>16. 查看帮助</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansible-doc -l</span><br><span class="line">ansible-doc copy</span><br></pre></td></tr></table></figure><h2 id="Ansible-输出信息颜色解释"><a href="#Ansible-输出信息颜色解释" class="headerlink" title="Ansible 输出信息颜色解释"></a>Ansible 输出信息颜色解释</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">01. 绿色信息:  查看主机信息&#x2F;对主机未做改动</span><br><span class="line">02. 黄色信息:  对主机数据信息做了修改</span><br><span class="line">03. 红色信息:  命令执行出错了</span><br><span class="line">04. 粉色信息:  忠告信息</span><br><span class="line">05. 蓝色信息:  显示ansible命令执行的过程</span><br></pre></td></tr></table></figure><h1 id="模块-剧本"><a href="#模块-剧本" class="headerlink" title="模块 - 剧本"></a>模块 - 剧本</h1><h1 id="第一章-使用-ansible-模块实现安装-rsync-服务"><a href="#第一章-使用-ansible-模块实现安装-rsync-服务" class="headerlink" title="第一章 使用 ansible 模块实现安装 rsync 服务"></a>第一章 使用 ansible 模块实现安装 rsync 服务</h1><h2 id="01-服务端操作"><a href="#01-服务端操作" class="headerlink" title="01. 服务端操作"></a>01. 服务端操作</h2><p>第一步：安装软件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible 172.16.1.41 -m yum -a &quot;name&#x3D;rsync state&#x3D;installed&quot;</span><br></pre></td></tr></table></figure><p>第二步：编写文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible 172.16.1.41 -m copy -a &quot;src&#x3D;&#x2F;server&#x2F;scripts&#x2F;rsyncd.conf dest&#x3D;&#x2F;etc&#x2F;&quot;</span><br></pre></td></tr></table></figure><p>第三步：创建用户组和用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ansible 172.16.1.41 -m group -a &quot;name&#x3D;www gid&#x3D;666&quot;</span><br><span class="line">ansible 172.16.1.41 -m user -a &quot;name&#x3D;www create_home&#x3D;no shell&#x3D;&#x2F;sbin&#x2F;nologin group&#x3D;www uid&#x3D;666&quot;</span><br></pre></td></tr></table></figure><p>第四步：创建目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible 172.16.1.41 -m file -a &quot;dest&#x3D;&#x2F;backup state&#x3D;directory owner&#x3D;www group&#x3D;www&quot;</span><br></pre></td></tr></table></figure><p>第五步：创建密码文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible 172.16.1.41 -m copy -a &quot;content&#x3D;&#39;rsync_backup:Andu dest&#x3D;&#x2F;etc&#x2F;rsync.password mode&#x3D;600&quot;</span><br></pre></td></tr></table></figure><p>第六步：启动服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible 172.16.1.41 -m service -a &quot;name&#x3D;rsyncd state&#x3D;started enabled&#x3D;yes&quot;</span><br></pre></td></tr></table></figure><h2 id="02-客户端操作"><a href="#02-客户端操作" class="headerlink" title="02. 客户端操作"></a>02. 客户端操作</h2><p>第一步：安装软件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible 172.16.1.41 -m yum -a &quot;name&#x3D;rsync state&#x3D;installed&quot;</span><br></pre></td></tr></table></figure><h1 id="第二章-playbook-剧本"><a href="#第二章-playbook-剧本" class="headerlink" title="第二章 playbook 剧本"></a>第二章 playbook 剧本</h1><p>1. 什么是 playbook 剧本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">playbook 翻译过来就是“剧本”， 那 playbook 组成如下</span><br><span class="line">play: 定义的是主机的角色</span><br><span class="line">task: 定义的是具体执行的任务</span><br><span class="line">playbook: 由一个或多个 play 组成，一个 play 可以包含多个 task 任务</span><br></pre></td></tr></table></figure><p><code>简单理解为: 使用不同的模块完成一件事情</code></p><p>2.playbook 的优势</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">功能比ansible命令更强大</span><br><span class="line">能很好的控制先后执行顺序, 以及依赖关系</span><br><span class="line">语法展现更加的直观</span><br><span class="line">ansible命令无法持久使用， playbook 可以持久使用</span><br><span class="line"></span><br><span class="line">第三章 剧本的书写格式要求</span><br></pre></td></tr></table></figure><p>01. 剧本的组成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- host: all</span><br><span class="line">  remote_user: root</span><br><span class="line">  vars:</span><br><span class="line">   file_name: andu</span><br><span class="line">  tasks:</span><br><span class="line">   - name: touch new files</span><br><span class="line">   shell: touch &#x2F;tmp&#x2F;&#123;&#123;file_name&#125;&#125;</span><br></pre></td></tr></table></figure><p>02. 注意缩进</p><ul><li>1. 合理的信息缩进，两个空格表示一个缩进关系</li><li>2. 一定不要使用 tab</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">标题一</span><br><span class="line">_ _ 标题二</span><br><span class="line">_ _ _ _ 标题三</span><br></pre></td></tr></table></figure><p>03. 冒号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">所有冒号后面都要加上空格</span><br><span class="line">hosts: 172.16.1.41</span><br><span class="line">tasks:</span><br><span class="line">yum: name&#x3D;rsync state&#x3D;installed </span><br></pre></td></tr></table></figure><p>04. 短横线 - 列表功能<br>使用短横线构成列表信息，短横线后面需要有空格</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- 老张</span><br><span class="line">  男</span><br><span class="line">- 爱好</span><br><span class="line">  游泳</span><br></pre></td></tr></table></figure><h1 id="第四章-剧本书写"><a href="#第四章-剧本书写" class="headerlink" title="第四章 剧本书写"></a>第四章 剧本书写</h1><p>01. 文件名格式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">剧本文件拓展名为xxx.yaml</span><br><span class="line">1.方便识别文件是一个剧本文件</span><br><span class="line">2.文件编写时会有颜色提示</span><br></pre></td></tr></table></figure><p>练习：写一个剧本，使用 yum/copy/service 模块安装部署启动 rsync 服务<br>rsync 剧本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 &#x2F;server&#x2F;scripts]# cat rsync_install.yaml </span><br><span class="line">- hosts: 172.16.1.41</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-add group</span><br><span class="line">    group: name&#x3D;www gid&#x3D;666</span><br><span class="line">  - name: 02-add user</span><br><span class="line">    user: name&#x3D;www create_home&#x3D;no shell&#x3D;&#x2F;sbin&#x2F;nologin group&#x3D;www uid&#x3D;666</span><br><span class="line">  - name: 03-install rsync</span><br><span class="line">    yum: name&#x3D;rsync state&#x3D;installed</span><br><span class="line">  - name: 04-copy rsync conf</span><br><span class="line">    copy: src&#x3D;&#x2F;server&#x2F;scripts&#x2F;rsyncd.conf dest&#x3D;&#x2F;etc&#x2F;</span><br><span class="line">  - name: 05-create passwd conf</span><br><span class="line">    copy: content&#x3D;&#39;rsync_backup:xoxo&#39; dest&#x3D;&#x2F;etc&#x2F;rsync.passwd mode&#x3D;600</span><br><span class="line">  - name: 06-create backup dir</span><br><span class="line">    file: path&#x3D;&#x2F;backup state&#x3D;directory owner&#x3D;www group&#x3D;www</span><br><span class="line">  - name: 07-create backup dir</span><br><span class="line">    file: path&#x3D;&#x2F;data state&#x3D;directory owner&#x3D;www group&#x3D;www</span><br><span class="line">  - name: 08-start rsyncd service</span><br><span class="line">    service: name&#x3D;rsyncd state&#x3D;started</span><br><span class="line">  - name: 09-enabled rsyncd service</span><br><span class="line">    systemd: name&#x3D;rsyncd enabled&#x3D;yes</span><br></pre></td></tr></table></figure><p>nfs 剧本：<br>NFS 服务端：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 &#x2F;server&#x2F;scripts]# cat nfs_server_install.yaml </span><br><span class="line">- hosts: nfs_server</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-add group</span><br><span class="line">    group: name&#x3D;www gid&#x3D;&#39;666&#39;</span><br><span class="line">  - name: 02-add user</span><br><span class="line">    user: name&#x3D;www create_home&#x3D;no shell&#x3D;&#x2F;sbin&#x2F;nologin group&#x3D;www uid&#x3D;666</span><br><span class="line">  - name: 03-install nfs service</span><br><span class="line">    yum: name&#x3D;nfs-utils state&#x3D;latest</span><br><span class="line">  - name: 04-copy nfs exports</span><br><span class="line">    copy: src&#x3D;&#x2F;server&#x2F;scripts&#x2F;exports dest&#x3D;&#x2F;etc&#x2F;</span><br><span class="line">  - name: 05-create data dir</span><br><span class="line">    file: path&#x3D;&#x2F;data state&#x3D;directory owner&#x3D;www group&#x3D;www</span><br><span class="line">  - name: 06-start rpcbind</span><br><span class="line">    service: name&#x3D;rpcbind state&#x3D;started</span><br><span class="line">  - name: 07-start nfs</span><br><span class="line">    service: name&#x3D;nfs state&#x3D;started</span><br><span class="line">  - name: 08-enable rpcbind                                                                                                                                      </span><br><span class="line">    systemd: name&#x3D;rpcbind enabled&#x3D;yes</span><br><span class="line">  - name: 09-enable nfs </span><br><span class="line">    systemd: name&#x3D;nfs enabled&#x3D;yes</span><br></pre></td></tr></table></figure><p>nfs 客户端</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 &#x2F;server&#x2F;scripts]# cat nfs_client_install.yaml </span><br><span class="line">- hosts: nfs_client</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-add group</span><br><span class="line">    group: name&#x3D;www gid&#x3D;666</span><br><span class="line">  - name: 02-add user</span><br><span class="line">    user: name&#x3D;www create_home&#x3D;no shell&#x3D;&#x2F;sbin&#x2F;nologin group&#x3D;www uid&#x3D;666</span><br><span class="line">  - name: 03-install nfs service</span><br><span class="line">    yum: name&#x3D;nfs-utils state&#x3D;latest</span><br><span class="line">  - name: 04-create data dir</span><br><span class="line">    file: path&#x3D;&#x2F;data state&#x3D;directory owner&#x3D;www group&#x3D;www</span><br><span class="line">  - name: 05-start rpcbind</span><br><span class="line">    service: name&#x3D;rpcbind state&#x3D;started</span><br><span class="line">  - name: 06-enable rpcbind</span><br><span class="line">    systemd: name&#x3D;rpcbind enabled&#x3D;yes</span><br><span class="line">  - name: 07-mount data</span><br><span class="line">    mount: path&#x3D;&#x2F;data src&#x3D;172.16.1.31:&#x2F;data fstype&#x3D;nfs opts&#x3D;defaults state&#x3D;mounted</span><br></pre></td></tr></table></figure><p>02. 检查剧本语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook --syntax-check nfs_client_install.yaml </span><br></pre></td></tr></table></figure><p>03. 模拟执行剧本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook -C nfs_client_install.yaml </span><br></pre></td></tr></table></figure><p>04. 执行剧本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook nfs_client_install.yaml </span><br></pre></td></tr></table></figure><h1 id="第五章-剧本高级-特性"><a href="#第五章-剧本高级-特性" class="headerlink" title="第五章 剧本高级 特性"></a>第五章 剧本高级 特性</h1><p>我们已经体验了使用剧本来安装服务，但是上述的简单 ansible 剧本存在一定的局限性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.全部写成一行虽然看起来整洁，但是有一些特性没办法使用</span><br><span class="line">2.比如同时需要创建多个目录，启动多个服务，需要重复写多条语句</span><br><span class="line">3.参数不直观，不好修改</span><br><span class="line">4.剧本里写的是启动服务，如果配置文件发生变化，重复执行不会重启服务</span><br><span class="line">不过没有关系，等学习了下面的高级特性，然后我们可以换一种写法</span><br></pre></td></tr></table></figure><p>01. 循环<br>官方网址:<br><a href="https://docs.ansible.com/ansible/latest/user_guide/playbooks_loops.html">https://docs.ansible.com/ansible/latest/user_guide/playbooks_loops.html</a><br>使用情景：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.需要创建多个目录</span><br><span class="line">2.需要启动多个服务</span><br></pre></td></tr></table></figure><p>具体实现：<br>1. 同时创建 2 个目录 /data 和 /backup</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 &#x2F;server&#x2F;scripts&#x2F;test]# cat loops.yaml </span><br><span class="line">- hosts: 172.16.1.41</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-create dir data and backuo</span><br><span class="line">    file:</span><br><span class="line">      path: &quot;&#123;&#123; item &#125;&#125;&quot;</span><br><span class="line">      state: directory</span><br><span class="line">      owner: www</span><br><span class="line">      group: www</span><br><span class="line">    loop: </span><br><span class="line">    - &#x2F;data</span><br><span class="line">    - &#x2F;backup</span><br></pre></td></tr></table></figure><p>2. 同时启动 2 个服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 &#x2F;server&#x2F;scripts&#x2F;test]# cat service.yaml </span><br><span class="line">- hosts: 172.16.1.31</span><br><span class="line">  tasks: </span><br><span class="line">  - name: 01-start rpcbind nfs service</span><br><span class="line">    service: </span><br><span class="line">      name: &quot;&#123;&#123; item &#125;&#125;&quot;</span><br><span class="line">      state: started</span><br><span class="line">    loop:</span><br><span class="line">      - rpcbind</span><br><span class="line">      - nfs</span><br></pre></td></tr></table></figure><p>02. 变量<br>官方网址：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;docs.ansible.com&#x2F;ansible&#x2F;latest&#x2F;user_guide&#x2F;playbooks_variables.html</span><br></pre></td></tr></table></figure><p>使用情景：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.自定义某个名称，在任务中会多次引用</span><br><span class="line">2.从主机收集的系统信息中提取某个变量并引用，例如网卡信息</span><br></pre></td></tr></table></figure><p>具体实现：<br>1. 自定义一个文件名变量，创建文件时引用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 &#x2F;server&#x2F;scripts&#x2F;test]# cat vars.yaml </span><br><span class="line">- hosts: 172.16.1.41</span><br><span class="line">  vars:</span><br><span class="line">    file_name: Andu</span><br><span class="line"></span><br><span class="line">  tasks: </span><br><span class="line">  - name: 01-use vars create dir</span><br><span class="line">    file: </span><br><span class="line">      path: &quot;&#x2F;root&#x2F;&#123;&#123; file_name &#125;&#125;&quot;</span><br><span class="line">      state: directory</span><br><span class="line">      owner: www</span><br><span class="line">      group: www</span><br></pre></td></tr></table></figure><p>2. 使用变量获取主机的 eth1 地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 &#x2F;server&#x2F;scripts&#x2F;test]# cat ip.yaml </span><br><span class="line">- hosts: 172.16.1.41</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-get ip address</span><br><span class="line">    shell: &quot;echo &#123;&#123; ansible_facts.eth1.ipv4.address &#125;&#125; &gt; &#x2F;root&#x2F;ip_eth1.txt&quot;</span><br></pre></td></tr></table></figure><p>3. 在主机 hosts 中指定变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# tail -5 &#x2F;etc&#x2F;ansible&#x2F;hosts</span><br><span class="line">[backup]</span><br><span class="line">172.16.1.41</span><br><span class="line"></span><br><span class="line">[backup:vars]</span><br><span class="line">file_name&#x3D;&quot;Andu&quot;</span><br></pre></td></tr></table></figure><p>03. 注册变量<br>使用情景：将配置文件的状态注册成一个变量，方便其他任务引用<br>具体实现：<br>1. 将配置文件的状态注册成一个服务变量并打印出来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 &#x2F;server&#x2F;scripts&#x2F;test]# cat register.yaml </span><br><span class="line">- hosts: 172.16.1.41</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-register rsync status</span><br><span class="line">    shell: netstat -lntp|grep rsync</span><br><span class="line">    register: rsync_port</span><br><span class="line"></span><br><span class="line">  - name: 02-out rsync status</span><br><span class="line">    debug:</span><br><span class="line">      msg: &quot;&#123;&#123; rsync_port.stdout_lines &#125;&#125;&quot;</span><br></pre></td></tr></table></figure><p>打印多个信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">- hosts: nfs</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-echo hostname</span><br><span class="line">    shell: echo $(hostname)</span><br><span class="line">    register: nfs_hostname</span><br><span class="line"></span><br><span class="line">  - name: debug nfs_hostname</span><br><span class="line">    debug:</span><br><span class="line">      msg: &quot;&#123;&#123; item &#125;&#125;&quot;</span><br><span class="line">    loop:</span><br><span class="line">      - &quot;&#123;&#123; nfs_hostname.stdout &#125;&#125;&quot;</span><br><span class="line">      - &quot;&#123;&#123; nfs_hostname.cmd &#125;&#125;&quot;</span><br></pre></td></tr></table></figure><p>04. 服务管理<br>官方文档:<br><a href="https://docs.ansible.com/ansible/latest/user_guide/playbooks_intro.html?highlight=handlers#handlers-running-operations-on-change">https://docs.ansible.com/ansible/latest/user_guide/playbooks_intro.html?highlight=handlers#handlers-running-operations-on-change</a><br>使用情景：如果配置文件发生了变化，就重启服务，否则什么都不操作<br>具体实现：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 &#x2F;server&#x2F;scripts&#x2F;test]# cat handlers.yaml </span><br><span class="line">- hosts: 172.16.1.41</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-if nfs conf changed,then restart nfs service</span><br><span class="line">    copy:</span><br><span class="line">      src: exports</span><br><span class="line">      dest: &#x2F;etc&#x2F;</span><br><span class="line">    notify: Restart_Nfs_Server</span><br><span class="line"></span><br><span class="line">  handlers:</span><br><span class="line">  - name: Restart_Nfs_Server</span><br><span class="line">    service: </span><br><span class="line">      name: nfs</span><br><span class="line">      state: restarted</span><br></pre></td></tr></table></figure><p>05. 标签<br>使用情景：从我们指定的任务开始执行，而不是从头到尾执行一遍<br>具体实现：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">- hosts: 172.16.1.41</span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-add group</span><br><span class="line">    group: name&#x3D;www gid&#x3D;666</span><br><span class="line">    tags: 01-add-group</span><br><span class="line">  - name: 02-add user</span><br><span class="line">    user: name&#x3D;www create_home&#x3D;no shell&#x3D;&#x2F;sbin&#x2F;nologin group&#x3D;www uid&#x3D;666</span><br><span class="line">    tags: 02-add-user</span><br><span class="line">  - name: 03-install rsync</span><br><span class="line">    yum: name&#x3D;rsync state&#x3D;installed</span><br><span class="line">    tags: 03-install-rsync</span><br><span class="line">  - name: 04-copy rsync conf</span><br><span class="line">    copy: src&#x3D;&#x2F;server&#x2F;scripts&#x2F;rsyncd.conf dest&#x3D;&#x2F;etc&#x2F;</span><br><span class="line">    tags: 04-copy-conf</span><br><span class="line">  - name: 05-create passwd conf</span><br><span class="line">    copy: content&#x3D;&#39;rsync_backup:xoxo&#39; dest&#x3D;&#x2F;etc&#x2F;rsync.passwd mode&#x3D;600</span><br><span class="line">    tags: 05-create-passwd</span><br><span class="line">  - name: 06-create backup dir</span><br><span class="line">    file: path&#x3D;&#x2F;backup state&#x3D;directory owner&#x3D;www group&#x3D;www</span><br><span class="line">    tags: 06-create-backup</span><br><span class="line">  - name: 07-create backup dir</span><br><span class="line">    file: path&#x3D;&#x2F;data state&#x3D;directory owner&#x3D;www group&#x3D;www</span><br><span class="line">    tags: 07-create-data</span><br><span class="line">  - name: 08-start rsyncd service</span><br><span class="line">    service: name&#x3D;rsyncd state&#x3D;started</span><br><span class="line">    tags: 08-start-rsyncd</span><br><span class="line">  - name: 09-enabled rsyncd service</span><br><span class="line">    systemd: name&#x3D;rsyncd enabled&#x3D;yes</span><br><span class="line">    tags: 09-enable</span><br></pre></td></tr></table></figure><p>调用标签：<br>1. 打印出 playbook 里要执行的所有标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 &#x2F;server&#x2F;scripts&#x2F;test]# ansible-playbook --list-tags tags2.yml </span><br><span class="line"></span><br><span class="line">playbook: tags2.yml</span><br><span class="line"></span><br><span class="line">  play #1 (172.16.1.41): 172.16.1.41    TAGS: []</span><br><span class="line">      TASK TAGS: [01-add-group, 02-add-user, 03-install-rsync, 04-copy-conf, 05-create-passwd, 06-create-backup, 07-create-data, 08-start-rsyncd, 09-enable]</span><br></pre></td></tr></table></figure><p>2. 指定运行某个标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook -t 05-create-passwd tags2.yml</span><br></pre></td></tr></table></figure><p>3. 指定运行多个标签，使用逗号隔开</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook -t 05-create-passwd,06-create-backup tags2.yml</span><br></pre></td></tr></table></figure><p>3. 指定不运行某个标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook --skip-tags&#x3D;05-create-passwd tags2.yml</span><br></pre></td></tr></table></figure><p>4. 指定不运行多个标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook --skip-tags&#x3D;05-create-passwd,06-create-backup tags2.yml</span><br></pre></td></tr></table></figure><p>06. 运行检查规范<br>00. 检查剧本拼写规范</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook --syntax-check check.yaml </span><br></pre></td></tr></table></figure><p>01. 检查这个任务执行的主机对象</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook --list-host check.yaml </span><br></pre></td></tr></table></figure><p>02. 检查这个剧本需要执行哪些任务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook --list-tasks check.yaml </span><br></pre></td></tr></table></figure><p>03. 检查这个剧本执行哪些 tag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook --list-tags check.yaml</span><br></pre></td></tr></table></figure><p>04. 模拟执行剧本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook -C check.yaml</span><br></pre></td></tr></table></figure><p>第 6 章 实战剧本部署 rsync/nfs/lsyncd<br>脚本实例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">- hosts: rsync_server</span><br><span class="line">  vars: </span><br><span class="line">    rsync_conf_path: &#39;&#x2F;server&#x2F;scripts&#x2F;rsync_yaml&#x2F;rsyncd.conf&#39;</span><br><span class="line"></span><br><span class="line">  tasks:</span><br><span class="line">  - name: 01-install rsync</span><br><span class="line">    yum: </span><br><span class="line">      name: rsync </span><br><span class="line">      state: installed</span><br><span class="line"></span><br><span class="line">  - name: 02-backup &amp; copy</span><br><span class="line">    copy:</span><br><span class="line">      src: &quot;&#123;&#123; rsync_conf_path &#125;&#125;&quot;</span><br><span class="line">      dest: &#x2F;etc&#x2F;</span><br><span class="line">      backup: yes</span><br><span class="line">    notify:</span><br><span class="line">      - restart rsyncd</span><br><span class="line"></span><br><span class="line">  - name: 03-create user group</span><br><span class="line">    group: </span><br><span class="line">      name: www </span><br><span class="line">      gid: 666</span><br><span class="line"></span><br><span class="line">  - name: 04-create user user </span><br><span class="line">    user: </span><br><span class="line">      name: www </span><br><span class="line">      create_home: no </span><br><span class="line">      shell: &#x2F;sbin&#x2F;nologin </span><br><span class="line">      group: www </span><br><span class="line">      uid: 666 </span><br><span class="line"> </span><br><span class="line">  - name: 05-create backup dir</span><br><span class="line">    file: </span><br><span class="line">      dest: &quot;&#123;&#123; item &#125;&#125;&quot;</span><br><span class="line">      state: directory </span><br><span class="line">      owner: www </span><br><span class="line">      group: www</span><br><span class="line">    loop:</span><br><span class="line">      - &#x2F;backup</span><br><span class="line">      - &#x2F;data </span><br><span class="line"></span><br><span class="line">  - name: 06-create passwd</span><br><span class="line">    copy: </span><br><span class="line">      content: &#39;rsync_backup:Andu&#39; </span><br><span class="line">      dest: &#x2F;etc&#x2F;rsync.passwd </span><br><span class="line">      mode: &#39;0600&#39;</span><br><span class="line"></span><br><span class="line">  - name: 09-start rsynd</span><br><span class="line">    service: </span><br><span class="line">      name: rsyncd </span><br><span class="line">      state: started </span><br><span class="line">      enabled: yes</span><br><span class="line">    tags: 09_start_rsynd</span><br><span class="line"></span><br><span class="line">  handlers:  </span><br><span class="line">  - name: restart rsyncd</span><br><span class="line">    service: </span><br><span class="line">      name: rsyncd</span><br><span class="line">      state: restarted</span><br></pre></td></tr></table></figure><p>01.rsync 剧本<br>02.nfs 剧本<br>03.lsync 剧本</p><h1 id="Ansible-角色"><a href="#Ansible-角色" class="headerlink" title="Ansible 角色"></a>Ansible 角色</h1><h1 id="第一章-Ansible-rolers-介绍"><a href="#第一章-Ansible-rolers-介绍" class="headerlink" title="第一章 Ansible rolers 介绍"></a>第一章 Ansible rolers 介绍</h1><p>官方地址:<br><a href="https://docs.ansible.com/ansible/latest/user_guide/playbooks_reuse_roles.html">https://docs.ansible.com/ansible/latest/user_guide/playbooks_reuse_roles.html</a></p><h1 id="第二章-角色目录规划"><a href="#第二章-角色目录规划" class="headerlink" title="第二章 角色目录规划"></a>第二章 角色目录规划</h1><p>01. 目录说明:<br><code>官方的目录结构，必须这样定义！</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# cd &#x2F;etc&#x2F;ansible&#x2F;roles&#x2F;</span><br><span class="line">[root@m01 &#x2F;etc&#x2F;ansible&#x2F;roles]# tree</span><br><span class="line">.</span><br><span class="line">├── nfs                   #角色名称</span><br><span class="line">│   ├── files             #存放需要copy的文件</span><br><span class="line">│   ├── handlers          #触发任务剧本</span><br><span class="line">│   ├── tasks             #具体任务剧本</span><br><span class="line">│   ├── templates         #模版文件</span><br><span class="line">│   └── vars              #存放变量文件</span><br></pre></td></tr></table></figure><p>02. 创建项目目录<br>因为每台服务器都需要创建用户组，用户，安装服务等，所以我们可以将这些相同的任务单独创建一个 init 初始化角色。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">角色规划：</span><br><span class="line">1.init      #初始化任务</span><br><span class="line">2.rsync     #rsync服务</span><br><span class="line">3.nfs       #nfs服务</span><br><span class="line">4.lsyncd    #lsyncd服务</span><br></pre></td></tr></table></figure><p>创建角色目录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# cd &#x2F;etc&#x2F;ansible&#x2F;roles&#x2F;</span><br><span class="line">[root@m01 &#x2F;etc&#x2F;ansible&#x2F;roles]# mkdir &#123;init,nfs,rsync,lsyncd&#125;&#x2F;&#123;vars,tasks,templates,handlers,files&#125; -p     </span><br><span class="line">[root@m01 &#x2F;etc&#x2F;ansible&#x2F;roles]# tree</span><br><span class="line">&#x2F;etc&#x2F;ansible&#x2F;roles&#x2F;</span><br><span class="line">.</span><br><span class="line">├── init</span><br><span class="line">│   ├── files</span><br><span class="line">│   ├── handlers</span><br><span class="line">│   ├── tasks</span><br><span class="line">│   ├── templates</span><br><span class="line">│   └── vars</span><br><span class="line">├── lsyncd</span><br><span class="line">│   ├── files</span><br><span class="line">│   ├── handlers</span><br><span class="line">│   ├── tasks</span><br><span class="line">│   ├── templates</span><br><span class="line">│   └── vars</span><br><span class="line">├── nfs</span><br><span class="line">│   ├── files</span><br><span class="line">│   ├── handlers</span><br><span class="line">│   ├── tasks</span><br><span class="line">│   ├── templates</span><br><span class="line">│   └── vars</span><br><span class="line">├── rsync</span><br><span class="line">│   ├── files</span><br><span class="line">│   ├── handlers</span><br><span class="line">│   ├── tasks</span><br><span class="line">│   ├── templates</span><br><span class="line">│   └── vars</span><br><span class="line">└── site.yml</span><br></pre></td></tr></table></figure><h1 id="第三章-编写-init-角色剧本"><a href="#第三章-编写-init-角色剧本" class="headerlink" title="第三章 编写 init 角色剧本"></a>第三章 编写 init 角色剧本</h1><p>01. 创建对应目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir &#x2F;etc&#x2F;ansible&#x2F;roles&#x2F;init&#x2F;&#123;vars,tasks,templates,handlers,files&#125; -p</span><br></pre></td></tr></table></figure><p>02. 编写任务剧本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# cat &#x2F;etc&#x2F;ansible&#x2F;roles&#x2F;init&#x2F;tasks&#x2F;main.yml </span><br></pre></td></tr></table></figure><p>01. 配置 base 源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- name: 01_configure_yum_repos</span><br><span class="line">  yum_repository:</span><br><span class="line">    name: base </span><br><span class="line">    description: base yum repo</span><br><span class="line">    baseurl:</span><br><span class="line">      - http:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;centos&#x2F;$releasever&#x2F;os&#x2F;$basearch&#x2F;</span><br><span class="line">    gpgcheck: no</span><br></pre></td></tr></table></figure><p>02. 配置 epel 源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- name: 02_configure_yum_Repos</span><br><span class="line">  yum_repository:</span><br><span class="line">    name: epel</span><br><span class="line">    description: epel yum repo</span><br><span class="line">    baseurl:</span><br><span class="line">      - https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;epel&#x2F;7&#x2F;$basearch</span><br><span class="line">    gpgcheck: no</span><br></pre></td></tr></table></figure><p>03. 安装常用软件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">- name: 03_install_server</span><br><span class="line">  yum: </span><br><span class="line">    name: &quot;&#123;&#123; packages &#125;&#125;&quot; </span><br><span class="line">  vars:</span><br><span class="line">    packages:</span><br><span class="line">    - ntpdate </span><br><span class="line">    - lsof</span><br><span class="line">    - tree </span><br><span class="line">    - iftop</span><br><span class="line">    - iotop</span><br></pre></td></tr></table></figure><p>04. 创建用户组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- name: 04_create_group</span><br><span class="line">  group:</span><br><span class="line">    name: www</span><br><span class="line">    gid: 666</span><br></pre></td></tr></table></figure><p>05. 创建用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- name: 05_create_user</span><br><span class="line">  user:</span><br><span class="line">    name: www</span><br><span class="line">    uid: 666</span><br><span class="line">    group: www </span><br><span class="line">    shell: &#x2F;sbin&#x2F;nologin</span><br><span class="line">    create_home: no</span><br></pre></td></tr></table></figure><p>06. 创建数据目录和脚本目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">- name: 06_create_dir</span><br><span class="line">  file:</span><br><span class="line">    path: &quot;&#123;&#123; item &#125;&#125;&quot;</span><br><span class="line">    state: directory</span><br><span class="line">    mode: &#39;0755&#39;</span><br><span class="line">  loop:</span><br><span class="line">    - &#x2F;data</span><br><span class="line">    - &#x2F;server&#x2F;scripts</span><br></pre></td></tr></table></figure><p>07. 创建同步时间定时任务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- name: 07_cron_ntpdate</span><br><span class="line">  cron: </span><br><span class="line">    name: Time_Update</span><br><span class="line">    minute: &quot;*&#x2F;5&quot;</span><br><span class="line">    job: &#39;&#x2F;sbin&#x2F;ntpdate time1.aliyun.com&#39;</span><br></pre></td></tr></table></figure><p>08. 拷贝优化后的 ssh 配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- name: 08_copy_ssh</span><br><span class="line">  template: </span><br><span class="line">    src: sshd_config.j2</span><br><span class="line">    dest: &#x2F;etc&#x2F;ssh&#x2F;sshd_config </span><br><span class="line">    mode: &#39;0600&#39;</span><br><span class="line">    backup: yes</span><br><span class="line">  notify: restart sshd</span><br></pre></td></tr></table></figure><p>03. 编写 jinja 模版文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# tree &#x2F;etc&#x2F;ansible&#x2F;roles&#x2F;init&#x2F;templates&#x2F;</span><br><span class="line">&#x2F;etc&#x2F;ansible&#x2F;roles&#x2F;init&#x2F;templates&#x2F;</span><br><span class="line">└── sshd_config.j2</span><br></pre></td></tr></table></figure><p>04. 编写 handlers 文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# cat &#x2F;etc&#x2F;ansible&#x2F;roles&#x2F;init&#x2F;handlers&#x2F;main.yml </span><br><span class="line">- name: restart sshd </span><br><span class="line">  service: </span><br><span class="line">    name: sshd </span><br><span class="line">    state: restarted</span><br></pre></td></tr></table></figure><h1 id="第四章-编写-rsync-角色剧本"><a href="#第四章-编写-rsync-角色剧本" class="headerlink" title="第四章 编写 rsync 角色剧本"></a>第四章 编写 rsync 角色剧本</h1><p>01. 创建对应目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir &#x2F;etc&#x2F;ansible&#x2F;roles&#x2F;rsync&#x2F;&#123;vars,tasks,templates,handlers,files&#125; -p</span><br></pre></td></tr></table></figure><p>02. 编写任务剧本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# cat &#x2F;etc&#x2F;ansible&#x2F;roles&#x2F;rsync&#x2F;tasks&#x2F;main.yml    </span><br></pre></td></tr></table></figure><p>01. 安装 rsync 服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- name: 01_install_rsync</span><br><span class="line">  yum: </span><br><span class="line">    name: rsync </span><br><span class="line">    state: installed</span><br></pre></td></tr></table></figure><p>02. 拷贝配置文件模版</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">- name: 02_copy_conf</span><br><span class="line">  template:</span><br><span class="line">    src: &quot;&#123;&#123; item.src&#125;&#125;&quot;</span><br><span class="line">    dest: &quot;&#x2F;etc&#x2F;&#123;&#123; item.dest &#125;&#125;&quot;</span><br><span class="line">    mode: &quot;&#123;&#123; item.mode &#125;&#125;&quot;</span><br><span class="line">    backup: yes</span><br><span class="line">  loop:</span><br><span class="line">    - &#123; src: &#39;rsyncd.conf.j2&#39;,  dest: &#39;rsyncd.conf&#39;,  mode: &#39;0644&#39; &#125;</span><br><span class="line">    - &#123; src: &#39;rsync.passwd.j2&#39;, dest: &#39;rsync.passwd&#39;, mode: &#39;0600&#39; &#125;</span><br><span class="line">  notify:</span><br><span class="line">    - restart rsyncd</span><br></pre></td></tr></table></figure><p>03. 创建备份目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">- name: 03_create_backup_dir</span><br><span class="line">  file: </span><br><span class="line">    dest: &quot;&#123;&#123; item &#125;&#125;&quot;</span><br><span class="line">    state: directory </span><br><span class="line">    owner: www </span><br><span class="line">    group: www</span><br><span class="line">  loop:</span><br><span class="line">    - &#x2F;backup</span><br><span class="line">    - &#x2F;data </span><br></pre></td></tr></table></figure><p>04. 启动服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- name: 04_start_rsynd</span><br><span class="line">  service: </span><br><span class="line">    name: rsyncd </span><br><span class="line">    state: started </span><br><span class="line">    enabled: yes</span><br></pre></td></tr></table></figure><p>03. 编写 jinja 模版文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# tree &#x2F;etc&#x2F;ansible&#x2F;roles&#x2F;rsync&#x2F;templates&#x2F;</span><br><span class="line">&#x2F;etc&#x2F;ansible&#x2F;roles&#x2F;rsync&#x2F;templates&#x2F;</span><br><span class="line">├── rsyncd.conf.j2</span><br><span class="line">└── rsync.passwd.j2</span><br><span class="line"></span><br><span class="line">[root@m01 ~]# cat  &#x2F;etc&#x2F;ansible&#x2F;roles&#x2F;rsync&#x2F;templates&#x2F;rsync.passwd.j2 </span><br><span class="line">&#123;&#123; user_rsyncd &#125;&#125;:&#123;&#123; passwd_rsyncd &#125;&#125;</span><br><span class="line"></span><br><span class="line">[root@m01 ~]# cat  &#x2F;etc&#x2F;ansible&#x2F;roles&#x2F;rsync&#x2F;templates&#x2F;rsyncd.conf.j2 </span><br><span class="line">uid &#x3D; www </span><br><span class="line">gid &#x3D; www </span><br><span class="line">port &#x3D; 873</span><br><span class="line">fake super &#x3D; yes</span><br><span class="line">use chroot &#x3D; no</span><br><span class="line">max connections &#x3D; 200</span><br><span class="line">timeout &#x3D; 600</span><br><span class="line">ignore errors</span><br><span class="line">read only &#x3D; false</span><br><span class="line">list &#x3D; false</span><br><span class="line">auth users &#x3D; &#123;&#123; user_rsyncd &#125;&#125;</span><br><span class="line">secrets file &#x3D; &#x2F;etc&#x2F;rsync.passwd</span><br><span class="line">log file &#x3D; &#x2F;var&#x2F;log&#x2F;rsyncd.log</span><br><span class="line">[backup]</span><br><span class="line">path &#x3D; &#x2F;backup</span><br><span class="line">[data]</span><br><span class="line">path &#x3D; &#x2F;data</span><br></pre></td></tr></table></figure><p>04. 编写变量文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# cat &#x2F;etc&#x2F;ansible&#x2F;roles&#x2F;rsync&#x2F;vars&#x2F;main.yml </span><br><span class="line">user_rsyncd: rsync_backup </span><br><span class="line">passwd_rsyncd: Andu </span><br></pre></td></tr></table></figure><p>05. 编写 handlers 文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# cat &#x2F;etc&#x2F;ansible&#x2F;roles&#x2F;rsync&#x2F;handlers&#x2F;main.yml </span><br><span class="line">- name: restart rsyncd</span><br><span class="line">  service: </span><br><span class="line">    name: rsyncd </span><br><span class="line">    state: restarted</span><br></pre></td></tr></table></figure><p>06. 编写主任务文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# cat &#x2F;etc&#x2F;ansible&#x2F;roles&#x2F;site.yml </span><br><span class="line">- hosts: rsync </span><br><span class="line">  roles:</span><br><span class="line">    - init</span><br><span class="line">    - rsync</span><br></pre></td></tr></table></figure><p>07. 最终目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# tree &#x2F;etc&#x2F;ansible&#x2F;roles&#x2F;rsync&#x2F;</span><br><span class="line">&#x2F;etc&#x2F;ansible&#x2F;roles&#x2F;rsync&#x2F;</span><br><span class="line">├── files</span><br><span class="line">├── handlers</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── tasks</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── templates</span><br><span class="line">│   ├── rsyncd.conf.j2</span><br><span class="line">│   └── rsync.passwd.j2</span><br><span class="line">└── vars</span><br><span class="line">    └── main.yml</span><br></pre></td></tr></table></figure><p>第四章 编写 nfs 角色剧本 (省略)<br>01. 创建对应目录<br>02. 编写任务剧本<br>03. 编写 jinja 模版文件<br>04. 编写变量文件<br>05. 编写 handlers 文件<br>06. 编写主任务文件<br>第五章 编写 lsyncd 角色剧本<br>01. 创建对应目录<br>02. 编写任务剧本<br>03. 编写 jinja 模版文件<br>04. 编写变量文件<br>05. 编写 handlers 文件<br>06. 编写主任务文件</p>]]></content>
      
      
      <categories>
          
          <category> 自动化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ansible </tag>
            
            <tag> 自动化运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一文了解SSH服务</title>
      <link href="/posts/23873/"/>
      <url>/posts/23873/</url>
      
        <content type="html"><![CDATA[<h1 id="第一章远程连接服务概念介绍"><a href="#第一章远程连接服务概念介绍" class="headerlink" title="第一章远程连接服务概念介绍"></a>第一章远程连接服务概念介绍</h1><p>SSH：系统默认配置22默认可以使用root用户进行登录数据信息进行加密<br>TELNET：网络设备更改开启23默认只能使用普通用户进行登录数据信息显示明文</p><h1 id="第二章远程连接服务连接原理"><a href="#第二章远程连接服务连接原理" class="headerlink" title="第二章远程连接服务连接原理"></a>第二章远程连接服务连接原理</h1><p>openssh远程连接数据包进行加密处理<br>openssl网站访问请求信息和响应信息进行加密（HTTPS）<br>连接示意图：</p><p><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071315353129-1024x396.png" alt="SSH密钥认证过程"></p><p>原理总结：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">01. 客户端 - 服务端   请求建立ssh远程连接 </span><br><span class="line">02. 服务端 - 客户端   请求确认公钥信息</span><br><span class="line">03. 客户端 - 服务端   确认接收公钥信息，保存到~&#x2F;.ssh&#x2F;authorized_keys文件中  </span><br><span class="line">04. 服务端 - 客户端   询问用户密码信息</span><br><span class="line">05. 客户端 - 服务端   用户密码信息</span><br><span class="line">06. 服务端 - 客户端   确认密码信息正确 远程连接建立</span><br><span class="line">01 之后：不用反复确认公钥信息</span><br><span class="line">06 之后：所有传输的数据信息会进行加密处理</span><br></pre></td></tr></table></figure><p>总结：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">作用01：利用公钥和私钥对数据信息进行加密处理</span><br><span class="line">作用02：对用户身份信息进行认证</span><br></pre></td></tr></table></figure><p><strong>远程连接通讯建立方式</strong></p><p>基于密码方式（基于密码方式）文档/脑子国家服务器远程-密码（钱）<br>基于密钥方式</p><h1 id="第三章基于密钥方式实现远程连接步骤："><a href="#第三章基于密钥方式实现远程连接步骤：" class="headerlink" title="第三章基于密钥方式实现远程连接步骤："></a>第三章基于密钥方式实现远程连接步骤：</h1><h2 id="1-管理端服务器"><a href="#1-管理端服务器" class="headerlink" title="1.管理端服务器"></a>1.管理端服务器</h2><p>第一个历程：创造密钥对信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# ssh-keygen -t dsa</span><br><span class="line">Generating public&#x2F;private dsa key pair.</span><br><span class="line">Enter file in which to save the key (&#x2F;root&#x2F;.ssh&#x2F;id_dsa): </span><br><span class="line">Created directory &#39;&#x2F;root&#x2F;.ssh&#39;.</span><br><span class="line">Enter passphrase (empty for no passphrase): </span><br><span class="line">Enter same passphrase again: </span><br><span class="line">Your identification has been saved in &#x2F;root&#x2F;.ssh&#x2F;id_dsa.</span><br><span class="line">Your public key has been saved in &#x2F;root&#x2F;.ssh&#x2F;id_dsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">40:72:ff:19:de:23:70:df:cf:f2:a2:6f:0d:ce:42:dc root@m01</span><br><span class="line">The key&#39;s randomart image is:</span><br><span class="line">+--[ DSA 1024]----+</span><br><span class="line">|    . o          |</span><br><span class="line">|     + .         |</span><br><span class="line">|      . o o      |</span><br><span class="line">|       . &#x3D; &#x3D; .   |</span><br><span class="line">|        S &#x3D;.+..  |</span><br><span class="line">|           .o.Eo |</span><br><span class="line">|           . o.oo|</span><br><span class="line">|            . &#x3D;o.|</span><br><span class="line">|            .&#x3D;...|</span><br><span class="line">+-----------------+</span><br><span class="line">[root@m01 ~]# ll .ssh&#x2F;</span><br><span class="line">总用量 8</span><br><span class="line">-rw------- 1 root root 668 7月  19 15:13 id_dsa</span><br><span class="line">-rw-r--r-- 1 root root 598 7月  19 15:13 id_dsa.pub</span><br></pre></td></tr></table></figure><p>第二个历程：发行公钥</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# ssh-copy-id -i ~&#x2F;.ssh&#x2F;id_dsa.pub root@172.16.1.31</span><br><span class="line">The authenticity of host &#39;172.16.1.31 (172.16.1.31)&#39; can&#39;t be established.</span><br><span class="line">ECDSA key fingerprint is 7d:76:4f:bc:02:b3:3c:55:ff:22:9c:63:1a:88:17:3d.</span><br><span class="line">Are you sure you want to continue connecting (yes&#x2F;no)? yes</span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed</span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys</span><br><span class="line">root@172.16.1.31&#39;s password: </span><br><span class="line"></span><br><span class="line">Number of key(s) added: 1</span><br><span class="line"></span><br><span class="line">Now try logging into the machine, with:   &quot;ssh &#39;root@172.16.1.31&#39;&quot;</span><br><span class="line">and check to make sure that only the key(s) you wanted were added.</span><br></pre></td></tr></table></figure><p>第三个历程：检查确认</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# ssh 172.16.1.31</span><br><span class="line">Last login: Fri Jul 19 08:12:12 2019 from 10.0.1.1</span><br><span class="line">[root@nfs01 ~]# hostname</span><br><span class="line">nfs01</span><br><span class="line">[root@nfs01 ~]# 登出</span><br><span class="line">Connection to 172.16.1.31 closed.</span><br><span class="line">[root@m01 ~]# ssh 172.16.1.31 hostname</span><br><span class="line">nfs01</span><br><span class="line">[root@m01 ~]# </span><br></pre></td></tr></table></figure><h2 id="2-被管理端服务器"><a href="#2-被管理端服务器" class="headerlink" title="2.被管理端服务器"></a>2.被管理端服务器</h2><p>第一个历程：检查确认</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs01 ~]# cd &#x2F;root&#x2F;.ssh&#x2F;</span><br><span class="line">[root@nfs01 ~&#x2F;.ssh]# ll</span><br><span class="line">总用量 8</span><br><span class="line">-rw------- 1 root root 988 7月  19 15:15 authorized_keys</span><br><span class="line">-rw-r--r-- 1 root root 170 6月  26 20:55 known_hosts</span><br><span class="line">[root@nfs01 ~&#x2F;.ssh]# cat authorized_keys </span><br><span class="line">ssh-dss AAAAB3NzaC1kc3MAAACBAPFwzIpjQqTXGmTPgABweyY6sxewiNdPiPwBaSz5hAauYnskJSXKbFl5usAxgXbuLcBzGp1RvTH+tVtoUpokAbGbhVX9bhT&#x2F;5LxjKA31kfp0hicZHtNUDCMOTtgwJmIHo&#x2F;25BsMURx4i4Mfu8V7lRg5a3WXDXI2JXBLiWtgl&#x2F;0yHAAAAFQDLicZIPhcZkfLbg26vSPm9cMK14wAAAIAVHBMsnB6TasY3yQzdqQpnVH5dOtD6bIjy48U6CEge7m9jxXb9HUMExOOqRNj&#x2F;x7HiCeiiML7ebZmLYPZfjam5NWiJ1A5l9FL6QKFvnLSrUOk3b0seBLyWEhM8yWkK5yYaqV9e7jCTJoR&#x2F;UZjKbZ1lRtLbczytn1e6c8wFVHguHQAAAIBqHcq7NbGPDbkeQEQmSahNubgZ&#x2F;nXTMR7r2CHsNP+71qxDfkYdDo2dVoWSmhN5Lv+mHLSBFMuJPIvZg&#x2F;zVc7So6vRgJWiIVedgnJw&#x2F;Ima+q2f7VJudA+ZNT5vHmlaS77bJ&#x2F;9tYBdlUO&#x2F;Ae56gmuNzYYnTdY1UIf1EzEtJnKtUr4Q&#x3D;&#x3D; root@m01</span><br></pre></td></tr></table></figure><h1 id="第四章免交户分配密钥"><a href="#第四章免交户分配密钥" class="headerlink" title="第四章免交户分配密钥"></a>第四章免交户分配密钥</h1><p>被管理主机有多台，如何进行批量分配公钥？？？</p><h2 id="1-解决免互动问题："><a href="#1-解决免互动问题：" class="headerlink" title="1.解决免互动问题："></a>1.解决免互动问题：</h2><p>第一次连接有</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id -i &#x2F;root&#x2F;.ssh&#x2F;id_dsa.pub 172.16.1.31 -o StrictHostKeyChecking&#x3D;no</span><br></pre></td></tr></table></figure><p>需要有密码信息确认</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install -y sshpass</span><br><span class="line">sshpass -p123456 ssh-copy-id -i &#x2F;root&#x2F;.ssh&#x2F;id_dsa.pub 172.16.1.31 -o StrictHostKeyChecking&#x3D;no </span><br></pre></td></tr></table></figure><h2 id="2-ssh-copy-id分发公钥原理："><a href="#2-ssh-copy-id分发公钥原理：" class="headerlink" title="2. ssh-copy-id分发公钥原理："></a>2. ssh-copy-id分发公钥原理：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">01. 进行ssh远程连接</span><br><span class="line">   02. scp将公钥进行传输</span><br><span class="line">   03. 被管理端将公钥保存到用户家目录中的.ssh目录中</span><br><span class="line">   04. 修改公钥文件名称和权限  authorized_keys  600</span><br></pre></td></tr></table></figure><h2 id="3-发布脚本："><a href="#3-发布脚本：" class="headerlink" title="3.发布脚本："></a>3.发布脚本：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@m01 ~]# cat &#x2F;server&#x2F;scripts&#x2F;fenfa.sh </span><br><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">for ip in &#123;31,41&#125;</span><br><span class="line">do</span><br><span class="line">  sshpass -p123456 ssh-copy-id -i &#x2F;root&#x2F;.ssh&#x2F;id_dsa.pub 172.16.1.$ip -o StrictHostKeyChecking&#x3D;no &amp;&gt;&#x2F;dev&#x2F;null</span><br><span class="line">  if [ $? -eq 0 ]</span><br><span class="line">  then</span><br><span class="line">     echo &quot;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;pub_key fenfa ok with 172.16.1.$ip&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&quot;</span><br><span class="line">     ssh 172.16.1.$&#123;ip&#125; hostname</span><br><span class="line">     echo &quot;&quot;</span><br><span class="line">  else</span><br><span class="line">     echo &quot;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;pub_key fenfa failed with 172.16.1.$ip&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&quot;</span><br><span class="line">     echo &quot;&quot;</span><br><span class="line">  fi </span><br><span class="line">done</span><br></pre></td></tr></table></figure><h2 id="4-if判断比较信息："><a href="#4-if判断比较信息：" class="headerlink" title="4.if判断比较信息："></a>4.if判断比较信息：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x3D;    -eq   equal</span><br><span class="line"> &gt;    -gt   greater than</span><br><span class="line"> &lt;    -lt   less than</span><br><span class="line"> &gt;&#x3D;   -ge   greater equal</span><br><span class="line"> &lt;&#x3D;   -le   less equal</span><br><span class="line"> &lt;&gt;   -ne   no equal</span><br></pre></td></tr></table></figure><h2 id="5-发行公钥问题说明："><a href="#5-发行公钥问题说明：" class="headerlink" title="5.发行公钥问题说明："></a>5.发行公钥问题说明：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">01. 密码信息不正确</span><br><span class="line">02. 免密码分发公钥  yum install -y sshpass </span><br><span class="line">03. 分发公钥信息，需要分发你有的公钥   是否有公钥 m01--&#x2F;root&#x2F;.ssh&#x2F;id_dsa.pub</span><br></pre></td></tr></table></figure><h2 id="6-排错方法："><a href="#6-排错方法：" class="headerlink" title="6.排错方法："></a>6.排错方法：</h2><ol><li>测试脚本ssh 172.16.1.7主机名</li><li>脚本中命令手动执行 sshpass -p123456 ssh-copy-id -i /root/.ssh/id_rsa.pub 172.16.1。$ ip -o StrictHostKeyChecking =否</li></ol><p>7.远程服务端口号发生变化了，如何修改<br>脚本命令centos7：掌握</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sshpass -p123456 ssh-copy-id -i &#x2F;root&#x2F;.ssh&#x2F;id_rsa.pub 172.16.1.7 -o StrictHostKeyChecking&#x3D;no -p 52113</span><br></pre></td></tr></table></figure><p>\8. ssh-copy id命令解释</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">   ssh $1 &quot;exec sh -c &#39;cd; umask 077; test -d .ssh || mkdir .ssh ; cat &gt;&gt; .ssh&#x2F;authorized_keys &amp;&amp; (test -x &#x2F;sbin&#x2F;restorecon &amp;&amp; &#x2F;sbin&#x2F;restorecon .ssh .ssh&#x2F;authorized_keys &gt;&#x2F;dev&#x2F;null 2&gt;&amp;1 || true)&#39;&quot;</span><br><span class="line"></span><br><span class="line">01. 远程连接到指定主机</span><br><span class="line">02. 切换到家目录，临时修改umask数值</span><br><span class="line">03. 判断是否存在.ssh目录，不存在创建.ssh </span><br><span class="line">04. 生成.ssh&#x2F;authorized_keys,并且把公钥信息保存在此文件中</span><br></pre></td></tr></table></figure><p>9.总结：掌握批量分配公钥脚本编写能力</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">01. 解决免交互问题： yes&#x2F;no  密码问题</span><br><span class="line">02. 远程被管理主机端口变化：解决端口问题</span><br></pre></td></tr></table></figure><h1 id="第五章SSH服务端配置文件说明："><a href="#第五章SSH服务端配置文件说明：" class="headerlink" title="第五章SSH服务端配置文件说明："></a>第五章SSH服务端配置文件说明：</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;ssh&#x2F;sshd_config</span><br><span class="line">#Port 22                 --- 指定服务端口号信息</span><br><span class="line">#ListenAddress 0.0.0.0   --- 指定相应网卡可以接收远程访问请求  web</span><br><span class="line">默认：主机上所有网卡都可以接收远程连接请求</span><br><span class="line">监听地址信息，一定是本地网卡上有的地址信息 ******</span><br><span class="line">#PermitEmptyPasswords no --- 是否允许空密码登录</span><br><span class="line">#PermitRootLogin yes     --- 不允许root用户登录</span><br><span class="line">#UseDNS yes              --- 是否进行DNS反向解析 no  172.16.1.31 --&gt; 172.16.1.61 </span><br><span class="line">GSSAPIAuthentication yes --- 是否开启GSSAPI  no      </span><br></pre></td></tr></table></figure><h1 id="第六章SSH防御远程入侵方案亡羊补牢-未雨绸缪"><a href="#第六章SSH防御远程入侵方案亡羊补牢-未雨绸缪" class="headerlink" title="第六章SSH防御远程入侵方案亡羊补牢-未雨绸缪"></a>第六章SSH防御远程入侵方案亡羊补牢-未雨绸缪</h1><p>参考博客 <a href="https://blog.51cto.com/phenixikki/1546669">https://blog.51cto.com/phenixikki/1546669</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1. 用密钥登录，不用密码登陆</span><br><span class="line">   2. 防火墙封闭SSH,指定源IP限制(局域网、信任公网)  ？？？</span><br><span class="line">   3. 尽量不给服务器外网IP</span><br><span class="line">   4. 负载均衡主机，只监听内网地址的远程访问</span><br><span class="line">   5. 最小化（软件安装-授权）  web nfs rsync mysql zabbix ... 端口（门）</span><br><span class="line">      yum install -y nmap  --- 扫描网站端口信息</span><br><span class="line">      nmap -p 1-65535 www.baidu.com   80 443</span><br><span class="line">   6. 给系统的重要文件或命令做一个指纹   md5sum -c &#x2F;etc&#x2F;passwd  abcd  --- zabbix</span><br><span class="line">   7. chattr +i 锁住文件  </span><br></pre></td></tr></table></figure><h1 id="第七章课程知识回顾说明："><a href="#第七章课程知识回顾说明：" class="headerlink" title="第七章课程知识回顾说明："></a>第七章课程知识回顾说明：</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1）远程连接的服务程序 （ssh-22（加密） telnet-23（明文））</span><br><span class="line">2）远程连接的原理过程 了解</span><br><span class="line">3）远程连接的方式</span><br><span class="line">   基于密码方式 </span><br><span class="line">   基于密钥方式  重点</span><br><span class="line">4）如何实现密钥远程登录</span><br><span class="line">   如何实现多台主机基于密钥远程登录 -- 批量分发公钥的脚本</span><br><span class="line">5）远程服务配置文件参数</span><br><span class="line">   listen address  监听参数  ******</span><br><span class="line">6）远程入侵防范防范</span><br></pre></td></tr></table></figure><p>脚本分享：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">if [ -f &#x2F;root&#x2F;.ssh&#x2F;id_dsa ];then</span><br><span class="line">    echo &quot;密钥已存在,将发送现有文件&quot;</span><br><span class="line">else</span><br><span class="line">    ssh-keygen -t dsa -P &quot;&quot; -f &#x2F;root&#x2F;.ssh&#x2F;id_dsa &amp;&amp; echo &quot;密钥生成成功&quot;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">for ip in &#123;31,41&#125;</span><br><span class="line">do</span><br><span class="line">    sshpass -p123456 ssh-copy-id -p 22 172.16.1.$&#123;ip&#125; -o StrictHostKeyChecking&#x3D;no &gt;&gt; &#x2F;dev&#x2F;null 2&gt;&amp;1</span><br><span class="line">    if [ $?&#x3D;&#x3D;0 ];then</span><br><span class="line">        echo &quot;172.16.1.$&#123;ip&#125; key sent successful&quot;</span><br><span class="line">        ssh 172.16.1.$&#123;ip&#125; &quot;cp &#x2F;etc&#x2F;ssh&#x2F;sshd_config &#x2F;etc&#x2F;ssh&#x2F;sshd_config.bak&quot;</span><br><span class="line">        ssh 172.16.1.$&#123;ip&#125; &quot;sed -ri &#39;s@#Port 22@Port 9999@g&#39; &#x2F;etc&#x2F;ssh&#x2F;sshd_config &amp;&amp; echo &#39;port ok&#39;&quot;</span><br><span class="line">        ssh 172.16.1.$&#123;ip&#125; &quot;sed -ri &#39;s@#ListenAddress 0.0.0.0@ListenAddress 172.16.1.$&#123;ip&#125;@g&#39; &#x2F;etc&#x2F;ssh&#x2F;sshd_config &amp;&amp; echo &#39;listen ok&#39;&quot;</span><br><span class="line">    ssh 172.16.1.$&#123;ip&#125; &quot;sed -ri &#39;s#^PasswordAuthentication yes#PasswordAuthentication no#g&#39; &#x2F;etc&#x2F;ssh&#x2F;sshd_config &amp;&amp; echo &#39;pass ok&#39;&quot;</span><br><span class="line">    ssh 172.16.1.$&#123;ip&#125; &quot;systemctl restart sshd&quot;</span><br><span class="line">    sleep 3</span><br><span class="line">    echo &quot;------------------&quot;</span><br><span class="line">    echo &quot;172.16.1.$&#123;ip&#125; hostname is :$(ssh -p 9999 172.16.1.$&#123;ip&#125; hostname)&quot;</span><br><span class="line">    echo &quot;------------------&quot;</span><br><span class="line">    else</span><br><span class="line">    echo &quot;172.16.1.$&#123;ip&#125; key sent faild&quot;</span><br><span class="line">fi</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>脚本分享2：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line"></span><br><span class="line">if [ -f &#x2F;root&#x2F;.ssh&#x2F;id_rsa ];then</span><br><span class="line">   echo &quot;----------密钥对已经存在---------------&quot;</span><br><span class="line">else</span><br><span class="line">   echo &quot;----------正在生成密钥对---------------&quot;</span><br><span class="line">   ssh-keygen -f &#x2F;root&#x2F;.ssh&#x2F;id_rsa -N &#39;&#39; &gt; &#x2F;dev&#x2F;null 2&gt;&amp;1</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">for i in &#123;7,31,41&#125;</span><br><span class="line">do</span><br><span class="line">    echo &quot;正在操作：172.16.1.$&#123;i&#125;&quot;</span><br><span class="line">    echo &quot;----------正在分发--------&quot;</span><br><span class="line">    sshpass -p123456 ssh-copy-id -i &#x2F;root&#x2F;.ssh&#x2F;id_rsa.pub 172.16.1.$&#123;i&#125; -o StrictHostKeyChecking&#x3D;no &gt; &#x2F;tmp&#x2F;ssh.log 2&gt;&amp;1</span><br><span class="line">    echo &quot;----------正在备份SSH配置-----&quot;</span><br><span class="line">    ssh 172.16.1.$&#123;i&#125; &quot;\cp &#x2F;etc&#x2F;ssh&#x2F;sshd_config &#x2F;etc&#x2F;ssh&#x2F;sshd_config.bak&quot;</span><br><span class="line">    echo &quot;----------正在优化SSH配置----&quot;</span><br><span class="line">    ssh 172.16.1.$&#123;i&#125; &quot;sed -i &#39;s@#Port 22@Port 9999@g&#39; &#x2F;etc&#x2F;ssh&#x2F;sshd_config&quot;</span><br><span class="line">    ssh 172.16.1.$&#123;i&#125; &quot;sed -i &#39;s@#ListenAddress 0.0.0.0@ListenAddress 172.16.1.$&#123;i&#125;@g&#39; &#x2F;etc&#x2F;ssh&#x2F;sshd_config&quot;</span><br><span class="line">    ssh 172.16.1.$&#123;i&#125; &quot;sed -i &#39;s@^PasswordAuthentication yes@PasswordAuthentication no@g&#39; &#x2F;etc&#x2F;ssh&#x2F;sshd_config&quot;</span><br><span class="line">    ssh 172.16.1.$&#123;i&#125; &quot;systemctl restart sshd&quot;</span><br><span class="line">    sleep 2 </span><br><span class="line">    echo &quot;----------测试优化后的连接&quot;</span><br><span class="line">    ssh 172.16.1.$&#123;i&#125; -p 9999 hostname</span><br><span class="line">done</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSH </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一篇文章带你学会 Redis</title>
      <link href="/posts/11064/"/>
      <url>/posts/11064/</url>
      
        <content type="html"><![CDATA[<h1 id="第-1-章-Redis-介绍"><a href="#第-1-章-Redis-介绍" class="headerlink" title="第 1 章 Redis 介绍"></a><a href="http://redis.io/">第 1 章 Redis 介绍</a></h1><h1 id="1-1-Redis-是什么"><a href="#1-1-Redis-是什么" class="headerlink" title="1.1 Redis 是什么"></a>1.1 Redis 是什么</h1><hr><p>Redis 是一种基于键值对的 NoSQL 数据库，与很多键值对数据库不同，redis 中的值可以有 string,hash,list,set,zset,geo 等多种数据结构和算法组成.<br>因为 Redis 会将所有的数据都放在内存中，所以他的读写性能非常惊人.<br>不仅如此，Redis 还可以将内存中的数据利用快照和日志的形式保存到硬盘上<br>Redis 还提供了键过期，发布订阅，事务，流水线等附加功能.</p><h1 id="1-2-Redis-重要特性"><a href="#1-2-Redis-重要特性" class="headerlink" title="1.2 Redis 重要特性"></a>1.2 Redis 重要特性</h1><h2 id="1-速度快"><a href="#1-速度快" class="headerlink" title="1. 速度快"></a>1. 速度快</h2><ul><li>Redis 所有的数据都存放在内存中</li><li>Redis 使用 C 语言实现</li><li>Redis 使用单线程架构</li></ul><h2 id="2-基于键值对的数据结构服务器"><a href="#2-基于键值对的数据结构服务器" class="headerlink" title="2. 基于键值对的数据结构服务器"></a>2. 基于键值对的数据结构服务器</h2><p><strong>5 中数据结构：字符串，哈希，列表，集合，有序集合</strong></p><h2 id="3-丰富的功能"><a href="#3-丰富的功能" class="headerlink" title="3. 丰富的功能"></a>3. 丰富的功能</h2><ul><li>提供了键过期功能，可以实现缓存</li><li>提供了发布订阅功能，可以实现消息系统</li><li>提供了 pipeline 功能，客户端可以将一批命令一次性传到 Redis, 减少了网络开销</li></ul><h2 id="4-简单稳定"><a href="#4-简单稳定" class="headerlink" title="4. 简单稳定"></a>4. 简单稳定</h2><ul><li>源码很少，3.0 版本以后 5 万行左右.</li><li>使用单线程模型法，是的 Redis 服务端处理模型变得简单.</li><li>不依赖操作系统的中的类库</li></ul><h2 id="5-客户端语言多"><a href="#5-客户端语言多" class="headerlink" title="5. 客户端语言多"></a>5. 客户端语言多</h2><p><strong>java,PHP,python,C,C++,Nodejs 等</strong></p><h2 id="6-持久化"><a href="#6-持久化" class="headerlink" title="6. 持久化"></a>6. 持久化</h2><p><strong><em>RDB 和 AOF</em></strong></p><h2 id="7-主从复制"><a href="#7-主从复制" class="headerlink" title="7. 主从复制"></a>7. 主从复制</h2><h2 id="8-高可用和分布式"><a href="#8-高可用和分布式" class="headerlink" title="8. 高可用和分布式"></a>8. 高可用和分布式</h2><p>哨兵 (sentinel)<br>集群 (Cluster)</p><h1 id="1-3-Redis-应用场景"><a href="#1-3-Redis-应用场景" class="headerlink" title="1.3 Redis 应用场景"></a>1.3 Redis 应用场景</h1><h2 id="1-缓存-键过期时间"><a href="#1-缓存-键过期时间" class="headerlink" title="1. 缓存 - 键过期时间"></a>1. 缓存 - 键过期时间</h2><p>缓存 session 会话<br>缓存用户信息，找不到再去 mysql 查，查到然后回写到 redis</p><h2 id="2-排行榜-列表-amp-有序集合"><a href="#2-排行榜-列表-amp-有序集合" class="headerlink" title="2. 排行榜 - 列表 &amp; 有序集合"></a>2. 排行榜 - 列表 &amp; 有序集合</h2><p>热度排名排行榜<br>发布时间排行榜</p><h2 id="3-计数器应用-天然支持计数器"><a href="#3-计数器应用-天然支持计数器" class="headerlink" title="3. 计数器应用 - 天然支持计数器"></a>3. 计数器应用 - 天然支持计数器</h2><p>帖子浏览数<br>视频播放次数<br>商品浏览数</p><h2 id="4-社交网络-集合"><a href="#4-社交网络-集合" class="headerlink" title="4. 社交网络 - 集合"></a>4. 社交网络 - 集合</h2><p>踩 / 赞，粉丝，共同好友 / 喜好，推送，打标签</p><h2 id="5-消息队列系统-发布订阅"><a href="#5-消息队列系统-发布订阅" class="headerlink" title="5. 消息队列系统 - 发布订阅"></a>5. 消息队列系统 - 发布订阅</h2><p>配合 elk 实现日志收集</p><h1 id="第-2-章-Redis-安装部署"><a href="#第-2-章-Redis-安装部署" class="headerlink" title="第 2 章 Redis 安装部署"></a>第 2 章 Redis 安装部署</h1><h2 id="2-1-目录规划"><a href="#2-1-目录规划" class="headerlink" title="2.1 目录规划"></a>2.1 目录规划</h2><h3 id="redis-下载目录"><a href="#redis-下载目录" class="headerlink" title="redis 下载目录"></a>redis 下载目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;data&#x2F;soft&#x2F;</span><br></pre></td></tr></table></figure><h3 id="redis-安装目录"><a href="#redis-安装目录" class="headerlink" title="redis 安装目录"></a>redis 安装目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;opt&#x2F;redis_cluster&#x2F;redis_&#123;PORT&#125;&#x2F;&#123;conf,logs,pid&#125;</span><br></pre></td></tr></table></figure><h3 id="redis-数据目录"><a href="#redis-数据目录" class="headerlink" title="redis 数据目录"></a>redis 数据目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;data&#x2F;redis_cluster&#x2F;redis_&#123;PORT&#125;&#x2F;redis_&#123;PORT&#125;.rdb</span><br></pre></td></tr></table></figure><h3 id="redis-运维脚本"><a href="#redis-运维脚本" class="headerlink" title="redis 运维脚本"></a>redis 运维脚本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;root&#x2F;scripts&#x2F;redis_shell.sh</span><br></pre></td></tr></table></figure><h2 id="2-2-安装命令"><a href="#2-2-安装命令" class="headerlink" title="2.2 安装命令"></a>2.2 安装命令</h2><p>编辑 hosts 文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@xoxo1 ~]# tail -3 &#x2F;etc&#x2F;hosts</span><br><span class="line">192.168.10.1 xoxo1    </span><br><span class="line">192.168.10.2 xoxo2    </span><br><span class="line">192.168.10.3 xoxo3</span><br><span class="line">mkdir -p &#x2F;data&#x2F;soft</span><br><span class="line">mkdir -p &#x2F;data&#x2F;redis_cluster&#x2F;redis_6379</span><br><span class="line">mkdir -p &#x2F;opt&#x2F;redis_cluster&#x2F;redis_6379&#x2F;&#123;conf,pid,logs&#125;</span><br><span class="line">cd &#x2F;data&#x2F;soft&#x2F;</span><br><span class="line">wget http:&#x2F;&#x2F;download.redis.io&#x2F;releases&#x2F;redis-3.2.9.tar.gz</span><br><span class="line">tar zxf redis-3.2.9.tar.gz -C &#x2F;opt&#x2F;redis_cluster&#x2F;</span><br><span class="line">ln -s &#x2F;opt&#x2F;redis_cluster&#x2F;redis-3.2.9&#x2F; &#x2F;opt&#x2F;redis_cluster&#x2F;redis</span><br><span class="line">cd &#x2F;opt&#x2F;redis_cluster&#x2F;redis</span><br><span class="line">make &amp;&amp; make install </span><br></pre></td></tr></table></figure><p>（如果失败请尝试 make MALLOC=libc）<br>（如果出现没有 dvp 等目录 在源码包内进入该目录下执行 make lua hiredis linenoise）</p><h2 id="2-3-配置文件说明"><a href="#2-3-配置文件说明" class="headerlink" title="2.3 配置文件说明"></a>2.3 配置文件说明</h2><h3 id="以守护进程模式启动"><a href="#以守护进程模式启动" class="headerlink" title="以守护进程模式启动"></a>以守护进程模式启动</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">daemonize yes</span><br></pre></td></tr></table></figure><h3 id="绑定的主机地址"><a href="#绑定的主机地址" class="headerlink" title="绑定的主机地址"></a>绑定的主机地址</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bind 192.168.10.1</span><br></pre></td></tr></table></figure><h3 id="监听端口"><a href="#监听端口" class="headerlink" title="监听端口"></a>监听端口</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">port 6379</span><br></pre></td></tr></table></figure><h3 id="pid-文件和-log-文件的保存地址"><a href="#pid-文件和-log-文件的保存地址" class="headerlink" title="pid 文件和 log 文件的保存地址"></a>pid 文件和 log 文件的保存地址</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pidfile &#x2F;opt&#x2F;redis_cluster&#x2F;redis_6379&#x2F;pid&#x2F;redis_6379.pid</span><br><span class="line">logfile &#x2F;opt&#x2F;redis_cluster&#x2F;redis_6379&#x2F;logs&#x2F;redis_6379.log</span><br></pre></td></tr></table></figure><h3 id="设置数据库的数量，默认数据库为-0"><a href="#设置数据库的数量，默认数据库为-0" class="headerlink" title="设置数据库的数量，默认数据库为 0"></a>设置数据库的数量，默认数据库为 0</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">databases 16</span><br></pre></td></tr></table></figure><h3 id="指定本地持久化文件的文件名，默认是-dump-rdb"><a href="#指定本地持久化文件的文件名，默认是-dump-rdb" class="headerlink" title="指定本地持久化文件的文件名，默认是 dump.rdb"></a>指定本地持久化文件的文件名，默认是 dump.rdb</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dbfilename redis_6379.rdb</span><br></pre></td></tr></table></figure><h3 id="本地数据库的目录"><a href="#本地数据库的目录" class="headerlink" title="本地数据库的目录"></a>本地数据库的目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dir &#x2F;data&#x2F;redis_cluster&#x2F;redis_6379</span><br></pre></td></tr></table></figure><h2 id="2-4-启动关闭服务"><a href="#2-4-启动关闭服务" class="headerlink" title="2.4 启动关闭服务"></a>2.4 启动关闭服务</h2><p>启动 (以配置文件方式启动)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@xoxo1 ~]# redis-server &#x2F;opt&#x2F;redis_cluster&#x2F;redis_6379&#x2F;conf&#x2F;redis_6379.conf</span><br></pre></td></tr></table></figure><p>关闭</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@xoxo1 ~]# redis-cli -h xoxo1 shutdown</span><br></pre></td></tr></table></figure><h1 id="第-3-章-Redis-基本操作命令"><a href="#第-3-章-Redis-基本操作命令" class="headerlink" title="第 3 章 Redis 基本操作命令"></a>第 3 章 Redis 基本操作命令</h1><h2 id="3-1-全局命令"><a href="#3-1-全局命令" class="headerlink" title="3.1 全局命令"></a>3.1 全局命令</h2><p>Redis 有 5 种数据结构，他们是键值对中的值，对于键来说有一些通用的命令.<br><strong>1. 查看所有命键</strong><br><strong><code>Keys *</code></strong><br>十分危险的命令，线上禁止使用<br><strong>2. 查看键的总数</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Dbsize </span><br></pre></td></tr></table></figure><h1 id="dbsize-命令在计算键总数时不会遍历所有键，而是直接获取-Redis-内置的键总数变量"><a href="#dbsize-命令在计算键总数时不会遍历所有键，而是直接获取-Redis-内置的键总数变量" class="headerlink" title="dbsize 命令在计算键总数时不会遍历所有键，而是直接获取 Redis 内置的键总数变量."></a>dbsize 命令在计算键总数时不会遍历所有键，而是直接获取 Redis 内置的键总数变量.</h1><p><strong>3. 检查键是否存在</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Exists key</span><br></pre></td></tr></table></figure><h1 id="如果键存在则返回-1-不存在则返回-0"><a href="#如果键存在则返回-1-不存在则返回-0" class="headerlink" title="如果键存在则返回 1, 不存在则返回 0"></a>如果键存在则返回 1, 不存在则返回 0</h1><p><strong>4. 删除键</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Del key [key …]</span><br></pre></td></tr></table></figure><p>通用命令，无论值是什么数据结构类型，del 命令都可以将其删除.<br><strong>5. 键过期</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Expire key seconds</span><br></pre></td></tr></table></figure><h1 id="Redis-支持对键添加过期时间，当超过过期时间后，会自动删除键"><a href="#Redis-支持对键添加过期时间，当超过过期时间后，会自动删除键" class="headerlink" title="Redis 支持对键添加过期时间，当超过过期时间后，会自动删除键."></a>Redis 支持对键添加过期时间，当超过过期时间后，会自动删除键.</h1><h1 id="通过-ttl-命令观察键的剩余时间"><a href="#通过-ttl-命令观察键的剩余时间" class="headerlink" title="通过 ttl 命令观察键的剩余时间"></a>通过 ttl 命令观察键的剩余时间</h1><p>大于等于 0 的证书：键剩余过期时间<br>-1: 键没设置过期时间<br>-2: 键不存在<br><strong>6. 键的数据类型</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Type key</span><br></pre></td></tr></table></figure><h2 id="3-2-字符串"><a href="#3-2-字符串" class="headerlink" title="3.2 字符串"></a>3.2 字符串</h2><p>Redis 并不是简单地 key-value 存储，实际上他是一个数据结构服务器，支持不同类型的值.<br>Redis Strings<br>这是最简单的 Redis 类型，如果你只用这种类型，Redis 就像一个持久化的 memcache 服务器 (注:memcache 的数据仅保存在内存中，服务器重启后，数据将丢失.)<br>操作命令:<br>通常用 SET command 和 GET command 来设置和获取字符串值<br>练习:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">xoxo1:6379&gt; set key1 value1</span><br><span class="line">OK</span><br><span class="line">xoxo1:6379&gt; get key1</span><br><span class="line">&quot;value1&quot;</span><br><span class="line">xoxo1:6379&gt; keys *</span><br></pre></td></tr></table></figure><ol><li>“key1”<br>操作命令:<br>INCR 命令将字符串值解析成整型。将其加 1, 最后结果保存为新的字符串，类似命令: INCRBY,DECR,DECRBY<br>练习:</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">xoxo1:6379&gt; set key2 100</span><br><span class="line">OK</span><br><span class="line">xoxo1:6379&gt; get key2</span><br><span class="line">&quot;100&quot;</span><br><span class="line">xoxo1:6379&gt; incr key2</span><br><span class="line">(integer) 101</span><br><span class="line">xoxo1:6379&gt; get key2</span><br><span class="line">&quot;101&quot;</span><br><span class="line">xoxo1:6379&gt; incrby key2 10</span><br><span class="line">(integer) 111</span><br><span class="line">xoxo1:6379&gt; get key2</span><br><span class="line">&quot;111&quot;</span><br></pre></td></tr></table></figure><p>操作命令:<br>MSET 和 MGET 可以一次存储或获取多个 key 对应的值.<br>练习:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">xoxo1:6379&gt; mset key3 v3 key4 v4 key5 v5</span><br><span class="line">OK</span><br><span class="line">xoxo1:6379&gt; mget key3 key4 key5</span><br><span class="line">1) &quot;v3&quot;</span><br><span class="line">2) &quot;v4&quot;</span><br><span class="line">3) &quot;v5&quot;</span><br></pre></td></tr></table></figure><p>操作命令:<br>EXISTS 命令返回 1 或 0 标识给定 key 的值是否存在.<br>使用 DEL 命令可以删除 key 对应的值，<br>DEL 命令返回 1 或 0 标识是被删除 (值存在) 或者没被删除 (key 对应的值不存在).<br>练习:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">xoxo1:6379&gt; exists key5</span><br><span class="line">(integer) 1</span><br><span class="line">xoxo1:6379&gt; del key5</span><br><span class="line">(integer) 1</span><br><span class="line">xoxo1:6379&gt; exists key5</span><br><span class="line">(integer) 0</span><br><span class="line">xoxo1:6379&gt; del key5</span><br><span class="line">(integer) 0</span><br></pre></td></tr></table></figure><p>操作命令:<br>Type 命令可以返回 key 对应的存储类型<br>练习:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">xoxo1:6379&gt; set key5 v5</span><br><span class="line">OK</span><br><span class="line">xoxo1:6379&gt; type key5</span><br><span class="line">string</span><br></pre></td></tr></table></figure><p>操作命令:<br>可以对 key 设置一个超时时间，当这个时间到达后被删除<br>练习:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">xoxo1:6379&gt; get key5</span><br><span class="line">&quot;v5&quot;</span><br><span class="line">xoxo1:6379&gt; ttl key5</span><br><span class="line">(integer) -1</span><br><span class="line">xoxo1:6379&gt; expire key5 10</span><br><span class="line">(integer) 1</span><br><span class="line">xoxo1:6379&gt; ttl key5</span><br><span class="line">(integer) 6</span><br><span class="line">xoxo1:6379&gt; ttl key5</span><br><span class="line">(integer) 5</span><br><span class="line">xoxo1:6379&gt; ttl key5</span><br><span class="line">(integer) 2</span><br><span class="line">xoxo1:6379&gt; ttl key5</span><br><span class="line">(integer) -2</span><br><span class="line">xoxo1:6379&gt; ttl key5</span><br><span class="line">(integer) -2</span><br><span class="line">xoxo1:6379&gt; get key5</span><br><span class="line">(nil)</span><br></pre></td></tr></table></figure><p>操作命令:<br>PERSIST 命令去除超时时间<br>练习:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">xoxo1:6379&gt; set key5 v5 ex 10</span><br><span class="line">OK</span><br><span class="line">xoxo1:6379&gt; ttl key5</span><br><span class="line">(integer) 8</span><br><span class="line">xoxo1:6379&gt; ttl key5</span><br><span class="line">(integer) 6</span><br><span class="line">xoxo1:6379&gt; persist key5</span><br><span class="line">(integer) 1</span><br><span class="line">xoxo1:6379&gt; ttl key5</span><br><span class="line">(integer) -1</span><br></pre></td></tr></table></figure><h2 id="3-3-列表"><a href="#3-3-列表" class="headerlink" title="3.3 列表"></a>3.3 列表</h2><p>操作命令:<br>LPUSH 命令可向 list 的左边 (头部) 添加一个新元素<br>RPUSH 命令可向 list 的右边 (尾部) 添加一个新元素.<br>最后 LRANGE 可以从 list 中取出一定范围的元素<br>练习:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">xoxo1:6379&gt; rpush list1 A</span><br><span class="line">(integer) 1</span><br><span class="line">xoxo1:6379&gt; rpush list1 B</span><br><span class="line">(integer) 2</span><br><span class="line">xoxo1:6379&gt; lpush list1 top1</span><br><span class="line">(integer) 3</span><br><span class="line">xoxo1:6379&gt; lrange list1 0 -1</span><br><span class="line">1) &quot;top1&quot;</span><br><span class="line">2) &quot;A&quot;</span><br><span class="line">3) &quot;B&quot;</span><br><span class="line">xoxo1:6379&gt; lrange list1 1 -1</span><br><span class="line">1) &quot;A&quot;</span><br><span class="line">2) &quot;B&quot;</span><br><span class="line">xoxo1:6379&gt; lrange list1 2 -1</span><br><span class="line">1) &quot;B&quot;</span><br></pre></td></tr></table></figure><p>操作命令:<br>Pop, 从 list 中删除元素并同时返回删除的值，可以在左边或右边操作.<br>练习:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">xoxo1:6379&gt; rpop list1</span><br><span class="line">&quot;B&quot;</span><br><span class="line">xoxo1:6379&gt; lrange list1 0 -1</span><br><span class="line">1) &quot;top1&quot;</span><br><span class="line">2) &quot;A&quot;</span><br><span class="line">xoxo1:6379&gt; lpop list1</span><br><span class="line">&quot;top1&quot;</span><br><span class="line">xoxo1:6379&gt; lrange list1 0 -1</span><br><span class="line">1) &quot;A&quot;</span><br></pre></td></tr></table></figure><h2 id="3-4-哈希"><a href="#3-4-哈希" class="headerlink" title="3.4 哈希"></a>3.4 哈希</h2><p>操作命令:<br>Hash 看起来就像一个’hash’的样子。由键值对组成<br>HMSET 指令设置 hash 中的多个域<br>HGET 取回单个域.<br>HMGET 取回一系列的值<br>练习:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">xoxo1:6379&gt; hmset user:1000 username zhangya age 27 job it</span><br><span class="line">OK</span><br><span class="line">xoxo1:6379&gt; hget user:1000 username</span><br><span class="line">&quot;zhangya&quot;</span><br><span class="line">xoxo1:6379&gt; hmget user:1000 username age job</span><br><span class="line">1) &quot;zhangya&quot;</span><br><span class="line">2) &quot;27&quot;</span><br><span class="line">3) &quot;it&quot;</span><br><span class="line">xoxo1:6379&gt; hgetall user:1000</span><br><span class="line">1) &quot;username&quot;</span><br><span class="line">2) &quot;zhangya&quot;</span><br><span class="line">3) &quot;age&quot;</span><br><span class="line">4) &quot;27&quot;</span><br><span class="line">5) &quot;job&quot;</span><br><span class="line">6) &quot;it&quot;</span><br><span class="line">xoxo1:6379&gt; hmset user:1000 qq 26195417</span><br><span class="line">OK</span><br><span class="line">xoxo1:6379&gt; hgetall user:1000</span><br><span class="line">1) &quot;username&quot;</span><br><span class="line">2) &quot;zhangya&quot;</span><br><span class="line">3) &quot;age&quot;</span><br><span class="line">4) &quot;27&quot;</span><br><span class="line">5) &quot;job&quot;</span><br><span class="line">6) &quot;it&quot;</span><br><span class="line">7) &quot;qq&quot;</span><br><span class="line">8) &quot;26195417&quot;</span><br></pre></td></tr></table></figure><h2 id="3-5-集合"><a href="#3-5-集合" class="headerlink" title="3.5 集合"></a>3.5 集合</h2><p>操作命令:<br>集合是字符串的无序排列，<br>SADD 指令把新的元素添加到 set 中<br>练习:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">xoxo1:6379&gt; sadd set1 1 2 3</span><br><span class="line">(integer) 3</span><br><span class="line">xoxo1:6379&gt; smembers set1</span><br><span class="line">1) &quot;1&quot;</span><br><span class="line">2) &quot;2&quot;</span><br><span class="line">3) &quot;3&quot;</span><br></pre></td></tr></table></figure><p>和 list 类型不同，set 集合不允许出现重复的元素</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">xoxo1:6379&gt; sadd set1 1 4</span><br><span class="line">(integer) 1</span><br><span class="line">xoxo1:6379&gt; smembers set1</span><br><span class="line">1) &quot;1&quot;</span><br><span class="line">2) &quot;2&quot;</span><br><span class="line">3) &quot;3&quot;</span><br><span class="line">4) &quot;4&quot;</span><br></pre></td></tr></table></figure><p>Srem 用来删除指定的值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">xoxo1:6379&gt; srem set1 2 4</span><br><span class="line">(integer) 2</span><br><span class="line">xoxo1:6379&gt; smembers set1</span><br><span class="line">1) &quot;1&quot;</span><br><span class="line">2) &quot;3&quot;</span><br></pre></td></tr></table></figure><p>Sdiff 计算集合的差异成员</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">xoxo1:6379&gt; sadd set1 1 2 3 4</span><br><span class="line">(integer) 2</span><br><span class="line">xoxo1:6379&gt; sadd set2 1 4 5</span><br><span class="line">(integer) 3</span><br><span class="line">xoxo1:6379&gt; sdiff set1 set2</span><br><span class="line">1) &quot;2&quot;</span><br><span class="line">2) &quot;3&quot;</span><br></pre></td></tr></table></figure><p>Sinter 计算集合的交集</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">xoxo1:6379&gt; sinter set1 set2</span><br><span class="line">1) &quot;1&quot;</span><br><span class="line">2) &quot;4&quot;</span><br></pre></td></tr></table></figure><p>Sunion 计算集合并集</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">xoxo1:6379&gt; sunion set1 set2</span><br><span class="line">1) &quot;1&quot;</span><br><span class="line">2) &quot;2&quot;</span><br><span class="line">3) &quot;3&quot;</span><br><span class="line">4) &quot;4&quot;</span><br><span class="line">5) &quot;5&quot;</span><br></pre></td></tr></table></figure><h1 id="第-4-章-Redis-持久化"><a href="#第-4-章-Redis-持久化" class="headerlink" title="第 4 章 Redis 持久化"></a>第 4 章 Redis 持久化</h1><h2 id="4-1-持久化的两种方式介绍"><a href="#4-1-持久化的两种方式介绍" class="headerlink" title="4.1 持久化的两种方式介绍"></a>4.1 持久化的两种方式介绍</h2><p><strong>RDB 持久化优缺点</strong></p><blockquote><p>可以在指定的时间间隔内生成数据集的 时间点快照（point-in-time snapshot）。<br>优点：速度快，适合于用做备份，主从复制也是基于 RDB 持久化功能实现的。 缺点：会有数据丢失</p></blockquote><p><strong>rdb 持久化核心配置参数：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;data&#x2F;6379&#x2F;redis.conf</span><br><span class="line">dir &#x2F;data&#x2F;6379</span><br><span class="line">dbfilename dump.rdb</span><br><span class="line">save 900 1      #900秒（15分钟）内有1个更改</span><br><span class="line">save 300 10     #300秒（5分钟）内有10个更改</span><br><span class="line">save 60 10000   #60秒内有10000个更改  </span><br></pre></td></tr></table></figure><p><strong>AOF 持久化 (append-only log file) 优缺点</strong></p><blockquote><p>记录服务器执行的所有写操作命令，并在服务器启动时，通过重新执行这些命令来还原数据集。 AOF 文件中的命令全部以 Redis<br>协议的格式来保存，新命令会被追加到文件的末尾。 优点：可以最大程度保证数据不丢 缺点：日志记录量级比较大</p></blockquote><p>AOF 持久化配置<br><code>appendonly yes</code> #是否打开 aof 日志功能<br><code>appendfsync always</code> #每 1 个命令，都立即同步到 aof<br><code>appendfsync everysec</code> #每秒写 1 次<br><code>appendfsync no</code> #写入工作交给操作系统，由操作系统判断缓冲区大小，统一写入到 aof.</p><h2 id="4-2-面试题"><a href="#4-2-面试题" class="headerlink" title="4.2 面试题"></a>4.2 面试题</h2><blockquote><p>redis 持久化方式有哪些？有什么区别？ rdb：基于快照的持久化，速度更快，一般用作备份，主从复制也是依赖于 rdb 持久化功能<br>aof：以追加的方式记录 redis 操作日志的文件。可以最大程度的保证 redis 数据安全，类似于 mysql 的 binlog</p></blockquote><h1 id="第-5-章-Redis-安全认证"><a href="#第-5-章-Redis-安全认证" class="headerlink" title="第 5 章 Redis 安全认证"></a>第 5 章 Redis 安全认证</h1><p><em>redis 默认开启了保护模式，只允许本地回环地址登录并访问数据库。</em><br>禁止 protected-mode<br>protected-mode yes/no （保护模式，是否只允许本地访问）<br>(1) Bind : 指定 IP 进行监听</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@xoxo1 ~]# vim &#x2F;opt&#x2F;redis_cluster&#x2F;redis_6379&#x2F;conf&#x2F;redis_6379.conf</span><br><span class="line">bind 192.168.10.1  127.0.0.1</span><br><span class="line">(2)增加requirepass &#123;password&#125;</span><br><span class="line">[root@xoxo1 ~]# vim &#x2F;opt&#x2F;redis_cluster&#x2F;redis_6379&#x2F;conf&#x2F;redis_6379.conf</span><br><span class="line">requirepass 123456</span><br></pre></td></tr></table></figure><p>验证方法一：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@xoxo1 ~]# redis-cli -a 123456</span><br><span class="line">127.0.0.1:6379&gt; set k1 v1</span><br><span class="line">OK</span><br></pre></td></tr></table></figure><p>验证方法二：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@xoxo1 ~]# redis-cli</span><br><span class="line">127.0.0.1:6379&gt; auth 123456</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; set k2 v2</span><br><span class="line">OK</span><br></pre></td></tr></table></figure><hr><h1 id="第-6-章-Redis-主从复制"><a href="#第-6-章-Redis-主从复制" class="headerlink" title="第 6 章 Redis 主从复制"></a>第 6 章 Redis 主从复制</h1><h2 id="6-1-主从复制介绍"><a href="#6-1-主从复制介绍" class="headerlink" title="6.1 主从复制介绍"></a>6.1 主从复制介绍</h2><blockquote><p>主从复制介绍 在分布式系统中为了解决单点问题，通常会把数据复制多个副本到其他机器，满足故障恢复和负载均衡等求.<br>Redis 也是如此，提供了复制功能。复制功能是高可用 Redis 的基础，后面的哨兵和集群都是在复制的基础上实现高可用的.</p></blockquote><h2 id="6-2-配置命令"><a href="#6-2-配置命令" class="headerlink" title="6.2 配置命令"></a>6.2 配置命令</h2><p><strong>6.2.1 建立复制</strong><br>每个从节点只能有一个主节点，主节点可以有多个从节点.<br>配置复制的方式有三种:<br>1. 在配置文件中加入 <strong>slaveof {masterHost} {masterPort}</strong> 随 redis 启动生效.<br>2. 在 redis-server 启动命令后加入 <strong>—slaveof {masterHost} {masterPort}</strong> 生效.<br>3. 直接使用命令:<strong>slaveof {masterHost} {masterPort}</strong> 生效.<br>查看复制状态信息命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Info replication</span><br></pre></td></tr></table></figure><p><strong>6.2.2 断开复制</strong><br>Slaveof 命令不但可以建立复制，还可以在从节点执行 slave of no one 来断开与主节点复制关系.<br>断开复制主要流程:</p><ul><li>1. 断开与主节点复制关系<br>2. 从节点晋升为主节点</li></ul><p>从节点断开复制后不会抛弃原有数据，只是无法再获取主节点上的数据变化.<br>通过 slaveof 命令还可以实现切主操作，所谓切主是指把当前从节点对主节点的复制切换到另一个主节点.<br>执行 slaveof {newMasterIp} {newMasterPort} 命令即可.<br>切主操作流程如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.断开与旧主节点的复制关系</span><br><span class="line">2.与新主节点建立复制关系</span><br><span class="line">3.删除从节点当前所有数据</span><br><span class="line">4.对新主节点进行复制操作</span><br></pre></td></tr></table></figure><p>提示：线上操作一定要小心，因为切主后会清空之前所有的数据.</p><h1 id="第-7-章-Redis-Sentinel（哨兵）"><a href="#第-7-章-Redis-Sentinel（哨兵）" class="headerlink" title="第 7 章 Redis Sentinel（哨兵）"></a>第 7 章 Redis Sentinel（哨兵）</h1><h2 id="7-1-哨兵介绍"><a href="#7-1-哨兵介绍" class="headerlink" title="7.1 哨兵介绍"></a>7.1 哨兵介绍</h2><p><strong>Sentinel 介绍</strong><br>Redis 的主从模式下，主节点一旦发生故障不能提供服务，需要人工干预，将从节点晋升为主节点，同时还需要修改客户端配置。对于很多应用场景这种方式无法接受。<br>Sentinel（哨兵）架构解决了 redis 主从人工干预的问题。<br>Redis Sentinel 是 redis 的高可用实现方案，实际生产环境中，对提高整个系统可用性非常有帮助的。</p><h2 id="7-2-哨兵主要功能"><a href="#7-2-哨兵主要功能" class="headerlink" title="7.2 哨兵主要功能"></a>7.2 哨兵主要功能</h2><p>Redis Sentinel 是一个分布式系统， Redis Sentinel 为 Redis 提供高可用性。可以在没有人为干预的情况下阻止某种类型的故障。<br>Redis 的 Sentinel 系统用于管理多个 Redis 服务器（instance）该系统执行以下三个任务：</p><blockquote><p>1. 监控（Monitoring）： Sentinel 会不断地定期检查你的主服务器和从服务器是否运作正常。<br>2. 提醒（Notification）： 当被监控的某个 Redis 服务器出现问题时， Sentinel 可以通过 API 向管理员或者其他应用程序发送通知。<br>3. 自动故障迁移（Automatic failover）： 当一个主服务器不能正常工作时， Sentinel 会开始一次自动故障迁移操作， 它会将失效主服务器的其中一个从服务器升级为新的主服务器， 并让失效主服务器的其他从服务器改为复制新的主服务器；<br>当客户端试图连接失效的主服务器时， 集群也会向客户端返回新主服务器的地址， 使得集群可以使用新主服务器代替失效服务器</p></blockquote><p><strong>架构图：</strong></p><p><img src="http://wp.kococ.cn/wp-content/uploads/2020/07/2020071114300667-1024x724.jpg" alt="请输入图片描述" title="请输入图片描述"></p><h2 id="7-3-目录规划"><a href="#7-3-目录规划" class="headerlink" title="7.3 目录规划"></a>7.3 目录规划</h2><p>角色 IP 端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Master1  192.168.10.1   6379</span><br><span class="line">Sentinel-01     26379</span><br><span class="line">Master2  192.168.10.2   6379</span><br><span class="line">Sentinel-02     26379</span><br><span class="line">Master3  192.168.10.3   6379</span><br><span class="line">Sentinel-03     26379</span><br></pre></td></tr></table></figure><h2 id="7-4-安装配置命令"><a href="#7-4-安装配置命令" class="headerlink" title="7.4 安装配置命令"></a>7.4 安装配置命令</h2><p>哨兵是基于主从复制，所以需要先部署好主从复制<br>手工操作步骤如下：</p><blockquote><p>1. 先配置和创建好 1 台服务器的节点和哨兵<br>2. 使用 rsync 传输到另外 2 台机器<br>3. 修改另外两台机器的 IP 地址</p></blockquote><p><strong>建议使用 ansible 剧本批量部署</strong><br>7.4.1 xoxo1 命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p &#x2F;data&#x2F;redis_cluster&#x2F;redis_26379</span><br><span class="line">mkdir -p &#x2F;opt&#x2F;redis_cluster&#x2F;redis_26379&#x2F;&#123;conf,pid,logs&#125;</span><br><span class="line">vim &#x2F;opt&#x2F;redis_cluster&#x2F;redis_26379&#x2F;conf&#x2F;redis_26379.conf</span><br><span class="line">bind 192.168.10.1</span><br><span class="line">port 26379</span><br><span class="line">daemonize yes</span><br><span class="line">logfile &#x2F;opt&#x2F;redis_cluster&#x2F;redis_26379&#x2F;logs&#x2F;redis_26379.log</span><br><span class="line">dir &#x2F;data&#x2F;redis_cluster&#x2F;redis_26379</span><br><span class="line">sentinel monitor mymaster 192.168.10.1 6379 2</span><br><span class="line">sentinel down-after-milliseconds mymaster 3000</span><br><span class="line">sentinel parallel-syncs mymaster 1</span><br><span class="line">sentinel failover-timeout mymaster 18000</span><br></pre></td></tr></table></figure><p>7.4.2 配置文件解释</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sentinel monitor mymaster 192.168.10.1 6379 2</span><br></pre></td></tr></table></figure><p>mymaster 主节点别名 主节点 ip 和端口，判断主节点失败，两个 sentinel 节点同意</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sentinel down-after-milliseconds mymaster 30000 </span><br></pre></td></tr></table></figure><p>选项指定了 Sentinel 认为服务器已经断线所需的毫秒数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sentinel parallel-syncs mymaster 1 </span><br></pre></td></tr></table></figure><p>向新的主节点发起复制操作的从节点个数，1 轮询发起复制</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sentinel failover-timeout mymaster 180000 </span><br></pre></td></tr></table></figure><p>故障转移超时时间<br>7.4.3 xoxo2/xoxo3 命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">xoxo1</span><br><span class="line">rsync -avz &#x2F;opt&#x2F;* xoxo2:&#x2F;opt&#x2F;</span><br><span class="line">rsync -avz &#x2F;opt&#x2F;* xoxo3:&#x2F;opt&#x2F;</span><br><span class="line">xoxo2</span><br><span class="line">mkdir -p &#x2F;data&#x2F;redis_cluster&#x2F;redis_26379</span><br><span class="line">cd &#x2F;opt&#x2F;redis_cluster&#x2F;redis</span><br><span class="line">make install</span><br><span class="line">sed -i &#39;s#bind 192.168.10.1#bind 192.168.10.2#g&#39; &#x2F;opt&#x2F;redis_cluster&#x2F;redis_6379&#x2F;conf&#x2F;redis_6379.conf</span><br><span class="line">sed -i &#39;s#bind 192.168.10.1#bind 192.168.10.2#g&#39; &#x2F;opt&#x2F;redis_cluster&#x2F;redis_26379&#x2F;conf&#x2F;redis_26379.conf</span><br><span class="line">xoxo3</span><br><span class="line">mkdir -p &#x2F;data&#x2F;redis_cluster&#x2F;redis_26379</span><br><span class="line">cd &#x2F;opt&#x2F;redis_cluster&#x2F;redis</span><br><span class="line">make install</span><br><span class="line">sed -i &#39;s#bind 192.168.10.1#bind 192.168.10.3#g&#39; &#x2F;opt&#x2F;redis_cluster&#x2F;redis_6379&#x2F;conf&#x2F;redis_6379.conf</span><br><span class="line">sed -i &#39;s#bind 192.168.10.1#bind 192.168.10.3#g&#39; &#x2F;opt&#x2F;redis_cluster&#x2F;redis_26379&#x2F;conf&#x2F;redis_26379.conf</span><br></pre></td></tr></table></figure><p>7.4.4 配置主从关系<br>xoxo2 和 xoxo3</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">redis-server &#x2F;opt&#x2F;redis_cluster&#x2F;redis_6379&#x2F;conf&#x2F;redis_6379.conf</span><br><span class="line">redis-cli slaveof 192.168.10.1 6379</span><br><span class="line">ps -ef|grep redis</span><br></pre></td></tr></table></figure><p>7.4.5 启动哨兵<br>3 台都操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-sentinel &#x2F;opt&#x2F;redis_cluster&#x2F;redis_26379&#x2F;conf&#x2F;redis_26379.conf</span><br></pre></td></tr></table></figure><h2 id="7-5-配置文件的变化"><a href="#7-5-配置文件的变化" class="headerlink" title="7.5 配置文件的变化"></a>7.5 配置文件的变化</h2><p>当所有节点启动后，配置文件的内容发生了变化，体现在三个方面:</p><blockquote><ol><li>Sentinel 节点自动发现了从节点，其余 Sentinel 节点 2) 去掉了默认配置，例如 parallel-syncs<br>failover-timeout 参数 3) 添加了配置纪元相关参数</li></ol></blockquote><p>查看配置文件命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@xoxo1 ~]# tail -6 &#x2F;opt&#x2F;redis_cluster&#x2F;redis_26379&#x2F;conf&#x2F;redis_26379.conf </span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Generated by CONFIG REWRITE</span><br><span class="line">sentinel known-slave mymaster 192.168.10.2 6379</span><br><span class="line">sentinel known-slave mymaster 192.168.10.3 6379</span><br><span class="line">sentinel known-sentinel mymaster 192.168.10.3 26379 7794fbbb9dfb62f4d2d7f06ddef06bacb62e4c97</span><br><span class="line">sentinel known-sentinel mymaster 192.168.10.2 26379 17bfab23bc3a31571790b9b31558dddeaeca40</span><br><span class="line">sentinel current-epoch 0</span><br></pre></td></tr></table></figure><h2 id="7-6-哨兵常用操作-API"><a href="#7-6-哨兵常用操作-API" class="headerlink" title="7.6 哨兵常用操作 API"></a>7.6 哨兵常用操作 API</h2><p>登陆命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@xoxo1 ~]# redis-cli -h xoxo1 -p 26379</span><br></pre></td></tr></table></figure><p>Sentinel 节点是一个特殊的 Redis 节点，他们有自己专属的 API</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Info Sentinel</span><br><span class="line">Sentinel masters</span><br><span class="line">Sentinel master &lt;master name&gt;</span><br><span class="line">Sentinel slaves &lt;master name&gt; </span><br><span class="line">Sentinel sentinels &lt;master name&gt;</span><br><span class="line">Sentinel get-master-addr-by-name &lt;master name&gt;   </span><br><span class="line">Sentinel failover &lt;master name&gt;</span><br><span class="line">Sentinel flushconfig</span><br></pre></td></tr></table></figure><h2 id="7-7-模拟故障转移"><a href="#7-7-模拟故障转移" class="headerlink" title="7.7 模拟故障转移"></a>7.7 模拟故障转移</h2><p>停掉其中 1 个节点，然后观察其他节点的日志变化<br>故障转移后配置文件变化<br>Redis Sentinel 存在多个从节点时，如果想将指定的从节点晋升为主节点，可以将其他从节点的 slavepriority 配置为 0, 但是需要注意 failover 后，将 slave-priority 调回原值.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.查询命令:CONFIG GET slave-priority</span><br><span class="line">2.设置命令:CONFIG SET slave-priority 0</span><br><span class="line">3.主动切换:sentinel failover mymaster</span><br></pre></td></tr></table></figure><p>操作过程：<br>xoxo2/xoxo3 操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h xoxo2 -p 6379 CONFIG SET slave-priority 0</span><br><span class="line">redis-cli -h xoxo3 -p 6379 CONFIG SET slave-priority 0</span><br></pre></td></tr></table></figure><p>xoxo1 操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h xoxo1 -p 26379 Sentinel failover mymaster</span><br></pre></td></tr></table></figure><h1 id="第-8-章-Redis-Cluster"><a href="#第-8-章-Redis-Cluster" class="headerlink" title="第 8 章 Redis Cluster"></a>第 8 章 Redis Cluster</h1><h2 id="8-1-集群介绍"><a href="#8-1-集群介绍" class="headerlink" title="8.1 集群介绍"></a>8.1 集群介绍</h2><p>Redis Cluster 是 redis 的分布式解决方案，在 3.0 版本正式推出<br>当遇到单机、内存、并发、流量等瓶颈时，可以采用 Cluster 架构方案达到负载均衡目的。<br>Redis Cluster 之前的分布式方案有两种：</p><blockquote><ol><li>客户端分区方案，优点分区逻辑可控，缺点是需要自己处理数据路由，高可用和故障转移等。<br>2）代理方案，优点是简化客户端分布式逻辑和升级维护便利，缺点加重架构部署和性能消耗。</li></ol></blockquote><p><strong>官方提供的 Redis Cluster 集群方案，很好的解决了集群方面的问题</strong></p><h2 id="8-2-数据分布"><a href="#8-2-数据分布" class="headerlink" title="8.2 数据分布"></a>8.2 数据分布</h2><p>分布式数据库首先要解决把整个数据库集按照分区规则映射到多个节点的问题，即把数据集划分到多个节点上，每个节点负责整体数据的一个子集，需要关注的是数据分片规则，Redis Cluster 采用哈希分片规则。</p><h2 id="8-3-目录规划"><a href="#8-3-目录规划" class="headerlink" title="8.3 目录规划"></a>8.3 目录规划</h2><h1 id="redis-安装目录-1"><a href="#redis-安装目录-1" class="headerlink" title="redis 安装目录"></a>redis 安装目录</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;opt&#x2F;redis_cluster&#x2F;redis_&#123;PORT&#125;&#x2F;&#123;conf,logs,pid&#125;</span><br></pre></td></tr></table></figure><h1 id="redis-数据目录-1"><a href="#redis-数据目录-1" class="headerlink" title="redis 数据目录"></a>redis 数据目录</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;data&#x2F;redis_cluster&#x2F;redis_&#123;PORT&#125;&#x2F;redis_&#123;PORT&#125;.rdb</span><br></pre></td></tr></table></figure><h1 id="redis-运维脚本-1"><a href="#redis-运维脚本-1" class="headerlink" title="redis 运维脚本"></a>redis 运维脚本</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;root&#x2F;scripts&#x2F;redis_shell.sh</span><br></pre></td></tr></table></figure><h2 id="8-4-集群拓扑-（适用单台主机多实例）"><a href="#8-4-集群拓扑-（适用单台主机多实例）" class="headerlink" title="8.4 集群拓扑 （适用单台主机多实例）"></a>8.4 集群拓扑 （适用单台主机多实例）</h2><p><strong>不太合理的拓扑：</strong></p><p><img src="http://wp.kococ.cn/wp-content/uploads/2020/07/2020071114260579-1024x503.png"></p><p><strong>合理的拓扑：</strong></p><p><img src="http://wp.kococ.cn/wp-content/uploads/2020/07/2020071114262722-1024x542.png"></p><h2 id="8-5-手动搭建部署集群"><a href="#8-5-手动搭建部署集群" class="headerlink" title="8.5 手动搭建部署集群"></a>8.5 手动搭建部署集群</h2><p>思路:</p><blockquote><ol><li>部署一台服务器上的 2 个集群节点 2) 发送完成后修改其他主机的 IP 地址 3) 使用 ansible 批量部署</li></ol></blockquote><p>实现命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">xoxo1操作</span><br><span class="line">mkdir -p &#x2F;opt&#x2F;redis_cluster&#x2F;redis_&#123;6380,6381&#125;&#x2F;&#123;conf,logs,pid&#125;</span><br><span class="line">mkdir -p &#x2F;data&#x2F;redis_cluster&#x2F;redis_&#123;6380,6381&#125;</span><br><span class="line">cat &gt;&#x2F;opt&#x2F;redis_cluster&#x2F;redis_6380&#x2F;conf&#x2F;redis_6380.conf&lt;&lt;EOF</span><br><span class="line">bind 192.168.10.1</span><br><span class="line">port 6380</span><br><span class="line">daemonize yes</span><br><span class="line">pidfile &quot;&#x2F;opt&#x2F;redis_cluster&#x2F;redis_6380&#x2F;pid&#x2F;redis_6380.pid&quot;</span><br><span class="line">logfile &quot;&#x2F;opt&#x2F;redis_cluster&#x2F;redis_6380&#x2F;logs&#x2F;redis_6380.log&quot;</span><br><span class="line">dbfilename &quot;redis_6380.rdb&quot;</span><br><span class="line">dir &quot;&#x2F;data&#x2F;redis_cluster&#x2F;redis_6380&#x2F;&quot;</span><br><span class="line">cluster-enabled yes</span><br><span class="line">cluster-config-file nodes_6380.conf</span><br><span class="line">cluster-node-timeout 15000</span><br><span class="line">EOF</span><br><span class="line">cd &#x2F;opt&#x2F;redis_cluster&#x2F;</span><br><span class="line">cp redis_6380&#x2F;conf&#x2F;redis_6380.conf redis_6381&#x2F;conf&#x2F;redis_6381.conf</span><br><span class="line">sed -i &#39;s#6380#6381#g&#39; redis_6381&#x2F;conf&#x2F;redis_6381.conf </span><br><span class="line">rsync -avz &#x2F;opt&#x2F;redis_cluster&#x2F;redis_638* xoxo2:&#x2F;opt&#x2F;redis_cluster&#x2F;</span><br><span class="line">rsync -avz &#x2F;opt&#x2F;redis_cluster&#x2F;redis_638* xoxo3:&#x2F;opt&#x2F;redis_cluster&#x2F;</span><br><span class="line">redis-server &#x2F;opt&#x2F;redis_cluster&#x2F;redis_6380&#x2F;conf&#x2F;redis_6380.conf</span><br><span class="line">redis-server &#x2F;opt&#x2F;redis_cluster&#x2F;redis_6381&#x2F;conf&#x2F;redis_6381.conf</span><br><span class="line">xoxo2操作：</span><br><span class="line">find &#x2F;opt&#x2F;redis_cluster&#x2F;redis_638* -type f -name &quot;*.conf&quot;|xargs sed -i &quot;&#x2F;bind&#x2F;s#1#2#g&quot;</span><br><span class="line">mkdir –p &#x2F;data&#x2F;redis_cluster&#x2F;redis_&#123;6380,6381&#125;</span><br><span class="line">redis-server &#x2F;opt&#x2F;redis_cluster&#x2F;redis_6380&#x2F;conf&#x2F;redis_6380.conf</span><br><span class="line">redis-server &#x2F;opt&#x2F;redis_cluster&#x2F;redis_6381&#x2F;conf&#x2F;redis_6381.conf</span><br><span class="line">xoxo3操作</span><br><span class="line">find &#x2F;opt&#x2F;redis_cluster&#x2F;redis_638* -type f -name &quot;*.conf&quot;|xargs sed -i &quot;&#x2F;bind&#x2F;s#1#3#g&quot;</span><br><span class="line">mkdir –p &#x2F;data&#x2F;redis_cluster&#x2F;redis_&#123;6380,6381&#125;</span><br><span class="line">redis-server &#x2F;opt&#x2F;redis_cluster&#x2F;redis_6380&#x2F;conf&#x2F;redis_6380.conf</span><br><span class="line">redis-server &#x2F;opt&#x2F;redis_cluster&#x2F;redis_6381&#x2F;conf&#x2F;redis_6381.conf</span><br></pre></td></tr></table></figure><p>8.5.1 手动配置节点发现<br>当把所有节点都启动后查看进程会有 cluster 的字样<br>但是登录后执行 CLUSTER NODES 命令会发现只有每个节点自己的 ID, 目前集群内的节点<br>还没有互相发现，所以搭建 redis 集群我们第一步要做的就是让集群内的节点互相发现.<br>在执行节点发现命令之前我们先查看一下集群的数据目录会发现有生成集群的配置文件<br>查看后发现只有自己的节点内容，等节点全部发现后会把所发现的节点 ID 写入这个文件<br>集群模式的 Redis 除了原有的配置文件之外又加了一份集群配置文件。当集群内节点<br>信息发生变化，如添加节点，节点下线，故障转移等。节点会自动保存集群状态到配置文件.<br>需要注意的是，Redis 自动维护集群配置文件，不需要手动修改，防止节点重启时产生错乱.<br>节点发现使用命令: <strong>CLUSTER MEET {IP} {PORT}</strong><br>提示：在集群内任意一台机器执行此命令就可以</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@xoxo1 ~]# sh redis_shell.sh login 6380</span><br><span class="line">192.168.10.1:6380&gt; CLUSTER MEET 192.168.10.1 6381</span><br><span class="line">OK</span><br><span class="line">192.168.10.1:6380&gt; CLUSTER MEET 192.168.10.2 6380</span><br><span class="line">OK</span><br><span class="line">192.168.10.1:6380&gt; CLUSTER MEET 192.168.10.3 6380</span><br><span class="line">OK</span><br><span class="line">192.168.10.1:6380&gt; CLUSTER MEET 192.168.10.2 6381</span><br><span class="line">OK</span><br><span class="line">192.168.10.1:6380&gt; CLUSTER MEET 192.168.10.3 6381</span><br><span class="line">OK</span><br><span class="line">192.168.10.1:6380&gt; CLUSTER NODES</span><br><span class="line">d03cb38d612802aead8f727b1726a3359c241818 192.168.10.1:6380 myself,master - 0 0 4 connected</span><br><span class="line">67c8128df00b2fa304a41bafbadac25a654f196d 192.168.10.1:6381 master - 0 1562059947079 1 connected</span><br><span class="line">a23ec7d444791a0b258ac454ef15cb4d6ab5abd2 192.168.10.3:6381 master - 0 1562059948087 5 connected</span><br><span class="line">e57807d4d35daaaca05f4a9705e844eab15c7ce8 192.168.10.2:6381 master - 0 1562059949098 0 connected</span><br><span class="line">aa9da67a594dfb357195f12ca4c44001804ee470 192.168.10.3:6380 master - 0 1562059945063 3 connected</span><br><span class="line">5cb68930520e6a0aa4198a6ea5f2c08730b41 192.168.10.2:6380 master - 0 1562059950108 2 connected</span><br></pre></td></tr></table></figure><p>节点都发现完毕后我们再次查看集群配置文件<br>可以看到，发现到的节点的 ID 也被写入到了集群的配置文件里<br>8.5.2 Redis Cluster 通讯流程<br>在分布式存储中需要提供维护节点元数据信息的机制，所谓元数据是指：节点负责哪些数据，是否出现故障灯状态信息，redis 集群采用 Gossip (流言) 协议，Gossip 协议工作原理就是节点彼此不断交换信息，一段时间后所有的节点都会知道集群完整信息，这种方式类似流言传播。<br>通信过程：</p><blockquote><ol><li>集群中的每一个节点都会单独开辟一个 Tcp 通道，用于节点之间彼此通信，通信端口在基础端口上家 10000.  </li><li>每个节点在固定周期内通过特定规则选择结构节点发送 ping 消息 3) 接收到 ping 消息的节点用 pong<br>消息作为响应。集群中每个节点通过一定规则挑选要通信的节点，每个节点可能知道全部节点，也可能仅知道部分节点，只要这些节点彼此可以正常通信，最终他们会打成一致的状态，当节点出现故障，新节点加入，主从角色变化等，它能够给不断的 ping/pong 消息，从而达到同步目的。</li></ol></blockquote><p>通讯消息类型：</p><blockquote><p>Gossip Gossip 协议职责就是信息交换，信息交换的载体就是节点间彼此发送 Gossip 消息。 常见 Gossip<br>消息分为：ping、 pong、 meet、 fail 等 meet meet<br>消息：用于通知新节点加入，消息发送者通知接受者加入到当前集群，meet 消息通信正常完成后，接收节点会加入到集群中并进行 ping、 pong<br>消息交换 ping ping 消息：集群内交换最频繁的消息，集群内每个节点每秒想多个其他节点发送 ping<br>消息，用于检测节点是否在线和交换彼此信息。 pong Pong 消息：当接收到 ping，meet<br>消息时，作为相应消息回复给发送方确认消息正常通信，节点也可以向集群内广播自身的 pong 消息来通知整个集群对自身状态进行更新。 fail<br>fail 消息：当节点判定集群内另一个节点下线时，回向集群内广播一个 fail 消息，其他节点收到 fail<br>消息之后把对应节点更新为下线状态。</p></blockquote><p>8.5.3 Redis Cluster 手动分配槽位<br>虽然节点之间已经互相发现了，但是此时集群还是不可用的状态，因为并没有给节点分配槽位，而且必须是所有的槽位都分配完毕后整个集群才是可用的状态.<br>反之，也就是说只要有一个槽位没有分配，那么整个集群就是不可用的.<br>测试命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@xoxo1 ~]# sh redis_shell.sh login 6380 </span><br><span class="line">192.168.10.1:6380&gt; set k1 v1</span><br><span class="line">(error) CLUSTERDOWN Hash slot not served</span><br><span class="line"></span><br><span class="line">192.168.10.1:6380&gt; CLUSTER INFO</span><br><span class="line">cluster_state:fail</span><br><span class="line">cluster_slots_assigned:0</span><br><span class="line">cluster_slots_ok:0</span><br><span class="line">cluster_slots_pfail:0</span><br><span class="line">cluster_slots_fail:0</span><br><span class="line">cluster_known_nodes:6</span><br><span class="line">cluster_size:0</span><br><span class="line">cluster_current_epoch:5</span><br><span class="line">cluster_my_epoch:4</span><br><span class="line">cluster_stats_messages_sent:1200</span><br><span class="line">cluster_stats_messages_received:1200</span><br><span class="line">192.168.10.1:6380&gt;</span><br></pre></td></tr></table></figure><p>前面说了，我们虽然有 6 个节点，但是真正负责数据写入的只有 3 个节点，其他 3 个节点只是作为主节点的从节点，也槽位就可以了就是说，只需要分配期中三个节点的<br>分配槽位的方法:<br>分配槽位需要在每个主节点上来配置，此时有 2 种方法执行:</p><blockquote><p>1. 分别登录到每个主节点的客户端来执行命令<br>2. 在其中一台机器上用 redis 客户端远程登录到其他机器的主节点上执行命令</p></blockquote><p>每个节点执行命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@xoxo1 ~]# redis-cli -h xoxo1 -p 6380 cluster addslots &#123;0..5461&#125;</span><br><span class="line">OK</span><br><span class="line">[root@xoxo1 ~]# redis-cli -h xoxo2 -p 6380 cluster addslots &#123;5462..10922&#125;</span><br><span class="line">OK</span><br><span class="line">[root@xoxo1 ~]# redis-cli -h xoxo3 -p 6380 cluster addslots &#123;10923..16383&#125;</span><br><span class="line">OK</span><br></pre></td></tr></table></figure><p>分配完所有槽位之后我们再查看一下集群的节点状态和集群状态<br>可以看到三个节点都分配了槽位，而且集群的状态是 OK 的<br>8.5.4 手动配置集群高可用<br>虽然这时候集群是可用的了，但是整个集群只要有一台机器坏掉了，那么整个集群都是不可用的.<br>所以这时候需要用到其他三个节点分别作为现在三个主节点的从节点，以应对集群主节点故障时可以进行自动切换以保证集群持续可用.<br><strong>注意:</strong></p><blockquote><p>1. 不要让复制节点复制本机器的主节点，因为如果那样的话机器挂了集群还是不可用状态，所以复制节点要复制其他服务器的主节点.<br>2. 使用 redis-trid 工具自动分配的时候会出现复制节点和主节点在同一台机器上的情况，需要注意</p></blockquote><p>8.5.5 测试集群<br>这一次我们采用在一台机器上使用 redis 客户端远程操作集群其他节点<br>注意:<br>1. 需要执行命令的是每个服务器的从节点<br>2. 注意主从的 ID 不要搞混了<br>执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@xoxo1 ~]# redis-cli -h xoxo1 -p 6381 CLUSTER REPLICATE 5cb68930520e6a0aa4198a6ea5f2c08730b41</span><br><span class="line">OK</span><br><span class="line">[root@xoxo1 ~]# redis-cli -h xoxo2 -p 6381 CLUSTER REPLICATE aa9da67a594dfb357195f12ca4c44001804ee470</span><br><span class="line">OK</span><br><span class="line">[root@xoxo1 ~]# redis-cli -h xoxo3 -p 6381 CLUSTER REPLICATE d03cb38d612802aead8f727b1726a3359c241818</span><br><span class="line">OK</span><br></pre></td></tr></table></figure><h2 id="8-6-Redis-Cluster-测试集群"><a href="#8-6-Redis-Cluster-测试集群" class="headerlink" title="8.6 Redis Cluster 测试集群"></a>8.6 Redis Cluster 测试集群</h2><p>我们使用常规插入 redis 数据的方式往集群里写入数据看看会发生什么</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> [root@xoxo1 ~]# redis-cli -h xoxo1 -p 6380 set k1 v1</span><br><span class="line">(error) MOVED 12706 192.168.10.3:6380</span><br></pre></td></tr></table></figure><p>结果提示 error, 但是给出了集群另一个节点的地址<br>那么这条数据到底有没有写入呢？我们登录这两个节点分别查看</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@xoxo1 ~]# redis-cli -h xoxo3 -p 6380 get k1    </span><br><span class="line">(nil)</span><br></pre></td></tr></table></figure><p>结果没有，这是因为使用集群后由于数据被分片了，所以并不是说在那台机器上写入数据就会在哪台机器的节点上写入，集群的数据写入和读取就涉及到了另外一个概念，ASK 路由</p><h2 id="8-7-Redis-Cluster-ASK-路由介绍"><a href="#8-7-Redis-Cluster-ASK-路由介绍" class="headerlink" title="8.7 Redis Cluster ASK 路由介绍"></a>8.7 Redis Cluster ASK 路由介绍</h2><p>在集群模式下，Redis 接受任何键相关命令时首先会计算键对应的槽，再根据槽找出所对应的节点<br>如果节点是自身，则处理键命令；<br>否则回复 MOVED 重定向错误，通知客户端请求正确的节点，这个过程称为 Mover 重定向.</p><p><img src="http://www.xoxoyun.cn/usr/uploads/2020/01/348314735.png" alt="请输入图片描述" title="请输入图片描述"></p><p>知道了 ask 路由后，我们使用 - c 选项批量插入一些数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@xoxo1 ~]# cat input_key.sh </span><br><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">for i in $(seq 1 1000)</span><br><span class="line">do</span><br><span class="line">    redis-cli -c -h xoxo1 -p 6380 set k_$&#123;i&#125; v_$&#123;i&#125; &amp;&amp; echo &quot;set k_$&#123;i&#125; is ok&quot;</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>写入后我们同样使用 - c 选项来读取刚才插入的键值，然后查看下 redis 会不会帮我们路由到正确的节点上</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@xoxo1 ~]# redis-cli -c -h xoxo1 -p 6380 </span><br><span class="line">xoxo1:6380&gt; get k_1</span><br><span class="line">&quot;v_1&quot;</span><br><span class="line">xoxo1:6380&gt; get k_100</span><br><span class="line">-&gt; Redirected to slot [5541] located at 192.168.10.2:6380</span><br><span class="line">&quot;v_100&quot;</span><br><span class="line">192.168.10.2:6380&gt; get k_1000</span><br><span class="line">-&gt; Redirected to slot [79] located at 192.168.10.1:6380</span><br><span class="line">&quot;v_1000&quot;</span><br><span class="line">192.168.10.1:6380&gt;</span><br></pre></td></tr></table></figure><h2 id="8-8-模拟故障转移"><a href="#8-8-模拟故障转移" class="headerlink" title="8.8 模拟故障转移"></a>8.8 模拟故障转移</h2><p>至此，我们已经手动的把一个 redis 高可用的集群部署完毕了，但是还没有模拟过故障<br>这里我们就模拟故障，停掉其中一台主机的 redis 节点，然后查看一下集群的变化<br>我们使用暴力的 kill -9 杀掉 xoxo2 上的 redis 集群节点，然后观察节点状态<br>理想情况应该是 xoxo1 上的 6381 从节点升级为主节点<br>在 xoxo1 上查看集群节点状态<br>虽然我们已经测试了故障切换的功能，但是节点修复后还是需要重新上线<br>所以这里测试节点重新上线后的操作<br>重新启动 xoxo2 的 6380, 然后观察日志<br>观察 xoxo1 上的日志<br>这时假如我们想让修复后的节点重新上线，可以在想变成主库的从库执行 CLUSTER FAILOVER 命令<br>这里我们在 xoxo2 的 6380 上执行</p><h2 id="8-9-使用工具搭建部署-Redis-Cluster"><a href="#8-9-使用工具搭建部署-Redis-Cluster" class="headerlink" title="8.9 使用工具搭建部署 Redis Cluster"></a>8.9 使用工具搭建部署 Redis Cluster</h2><p>手动搭建集群便于理解集群创建的流程和细节，不过手动搭建集群需要很多步骤，当集群节点众多时，必然会加大搭建集群的复杂度和运维成本，因此官方提供了 redis-trib.rb（唯品会写的插件）的工具方便我们快速搭建集群。<br>redis-trib.rb 是采用 Ruby 实现的 redis 集群管理工具，内部通过 Cluster 相关命令帮我们简化集群创建、检查、槽迁移和均衡等常见运维操作，使用前要安装 ruby 依赖环境<br>安装命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yum makecache fast</span><br><span class="line">yum install rubygems</span><br><span class="line">gem sources --remove https:&#x2F;&#x2F;rubygems.org&#x2F;</span><br><span class="line">gem sources -a http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;rubygems&#x2F;</span><br><span class="line">gem update –system</span><br><span class="line">gem install redis -v 3.3.5</span><br></pre></td></tr></table></figure><p>我们可以停掉所有的节点，然后清空数据，恢复成一个全新的集群，所有机器执行命令（在每一台主机上都做）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pkill redis</span><br><span class="line">rm -rf &#x2F;data&#x2F;redis_cluster&#x2F;redis_6380&#x2F;*</span><br><span class="line">rm -rf &#x2F;data&#x2F;redis_cluster&#x2F;redis_6381&#x2F;*</span><br></pre></td></tr></table></figure><p>全部清空之后启动所有的节点，所有机器执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sh redis.sh start 6380</span><br><span class="line">sh redis.sh start 6381</span><br></pre></td></tr></table></figure><p>xoxo1 执行创建集群命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;opt&#x2F;redis_cluster&#x2F;redis&#x2F;src&#x2F;</span><br><span class="line">.&#x2F;redis-trib.rb create --replicas 1 192.168.10.1:6380 192.168.10.2:6380 192.168.10.3:6380 192.168.10.1:6381 192.168.10.2:6381 192.168.10.3:6381</span><br></pre></td></tr></table></figure><p>检查集群完整性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;redis-trib.rb check 192.168.10.1:6380</span><br></pre></td></tr></table></figure><p>我们仔细观察会发现其中只有两台相互为高可用，而第三台为自己一个人主从很是孤立，达不到集群高可用的效果，那么我们就需要使用集群命令把第三台的从重新分配主节点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CLUSTER REPLICATE xxxxxxxxxxxxxxxxxxx</span><br><span class="line">CLUSTER NODES</span><br><span class="line">CLUSTER INFO</span><br></pre></td></tr></table></figure><h2 id="8-10-工具扩容节点"><a href="#8-10-工具扩容节点" class="headerlink" title="8.10 工具扩容节点"></a>8.10 工具扩容节点</h2><p>Redis 集群的扩容操作可分为以下几个步骤</p><blockquote><ol><li>准备新节点 2) 加入集群 3) 迁移槽和数据</li></ol></blockquote><p>我们在 xoxo1 上创建 2 个新节点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p &#x2F;opt&#x2F;redis_cluster&#x2F;redis_&#123;6390,6391&#125;&#x2F;&#123;conf,logs,pid&#125;</span><br><span class="line">mkdir -p &#x2F;data&#x2F;redis_cluster&#x2F;redis_&#123;6390,6391&#125;</span><br><span class="line">cd &#x2F;opt&#x2F;redis_cluster&#x2F;</span><br><span class="line">cp redis_6380&#x2F;conf&#x2F;redis_6380.conf redis_6390&#x2F;conf&#x2F;redis_6390.conf</span><br><span class="line">cp redis_6380&#x2F;conf&#x2F;redis_6380.conf redis_6391&#x2F;conf&#x2F;redis_6391.conf</span><br><span class="line">sed -i &#39;s#6380#6390#g&#39; redis_6390&#x2F;conf&#x2F;redis_6390.conf</span><br><span class="line">sed -i &#39;s#6380#6391#g&#39; redis_6391&#x2F;conf&#x2F;redis_6391.conf</span><br></pre></td></tr></table></figure><p>启动节点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bash redis_shell.sh start 6390</span><br><span class="line">bash redis_shell.sh start 6391</span><br></pre></td></tr></table></figure><p>发现节点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -c -h xoxo1 -p 6380 cluster meet 192.168.10.1 6390</span><br><span class="line">redis-cli -c -h xoxo1 -p 6380 cluster meet 192.168.10.1 6391</span><br></pre></td></tr></table></figure><p>在 xoxo1 上使用工具扩容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;opt&#x2F;redis_cluster&#x2F;redis&#x2F;src&#x2F;</span><br><span class="line">.&#x2F;redis-trib.rb reshard 192.168.10.1:6380</span><br></pre></td></tr></table></figure><p>打印出集群每个节点信息后，reshard 命令需要确认迁移的槽数量，这里我们输入 4096 个:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">How many slots do you want to move (from 1 to 16384)? 4096</span><br></pre></td></tr></table></figure><p>输入 6390 的节点 ID 作为目标节点，也就是要扩容的节点，目标节点只能指定一个</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">What is the receiving node ID? xxxxxxxxx</span><br></pre></td></tr></table></figure><p>之后输入源节点的 ID, 这里分别输入每个主节点的 6380 的 ID 最后输入 done, 或者直接输入 all</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Source node #1:all</span><br></pre></td></tr></table></figure><p>迁移完成后命令会自动退出，这时候我们查看一下集群的状态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;redis-trib.rb rebalance 192.168.10.1:6380</span><br></pre></td></tr></table></figure><h2 id="8-11-工具收缩节点"><a href="#8-11-工具收缩节点" class="headerlink" title="8.11 工具收缩节点"></a>8.11 工具收缩节点</h2><p>流程说明</p><blockquote><p>1). 首先需要确定下线节点是否有负责的槽，如果是，需要把槽迁移到其他节点，保证节点下线后整个集群槽节点映射的完整性.<br>2). 当下线节点不再负责槽或者本身是从节点时，就可以通知集群内其他节点忘记下线节点，当所有的节点忘记该节点后可以正常关闭.<br>这里我们准备将刚才新添加的节点下线，也就是 6390 和 6391</p></blockquote><p>收缩和扩容迁移的方向相反，6390 变为源节点，其他节点变为目标节点，源节点把自己负责的 4096 个槽均匀的迁移到其他节点上，.<br>由于 redis-trib..rb reshard 命令只能有一个目标节点，因此需要执行 3 次 reshard 命令，分别迁移 1365,1365,1366 个槽.<br>操作命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;opt&#x2F;redis_cluster&#x2F;redis&#x2F;src&#x2F;</span><br><span class="line">.&#x2F;redis-trib.rb reshard 192.168.10.1:6380</span><br><span class="line">How many slots do you want to move (from 1 to 16384)? 1365</span><br><span class="line">What is the receiving node ID? 输入6380的id  </span><br><span class="line">Source node #1:  输入6390的id</span><br><span class="line">Done</span><br></pre></td></tr></table></figure><h2 id="8-12-忘记节点"><a href="#8-12-忘记节点" class="headerlink" title="8.12 忘记节点"></a>8.12 忘记节点</h2><p>由于我们的集群是做了高可用的，所以当主节点下线的时候从节点也会顶上，所以最好我们先下线从节点，然后在下线主节点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;opt&#x2F;redis_cluster&#x2F;redis&#x2F;src&#x2F;</span><br><span class="line">.&#x2F;redis-trib.rb del-node 192.168.10.1:6391 ID</span><br><span class="line">.&#x2F;redis-trib.rb del-node 192.168.10.1:6390 ID</span><br></pre></td></tr></table></figure><h1 id="第-9-章-Redis-集群常用命令"><a href="#第-9-章-Redis-集群常用命令" class="headerlink" title="第 9 章 Redis 集群常用命令"></a>第 9 章 Redis 集群常用命令</h1><p>集群 (cluster)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CLUSTER INFO 打印集群的信息</span><br><span class="line">CLUSTER NODES 列出集群当前已知的所有节点（node），以及这些节点的相关信息。</span><br></pre></td></tr></table></figure><p>节点 (node)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CLUSTER MEET &lt;ip&gt; &lt;port&gt; 将 ip 和 port 所指定的节点添加到集群当中，让它成为集群的一份子。</span><br><span class="line">CLUSTER FORGET &lt;node_id&gt; 从集群中移除 node_id 指定的节点。</span><br><span class="line">CLUSTER REPLICATE &lt;node_id&gt; 将当前节点设置为 node_id 指定的节点的从节点。</span><br><span class="line">CLUSTER SAVECONFIG 将节点的配置文件保存到硬盘里面</span><br></pre></td></tr></table></figure><p>。<br>槽 (slot)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CLUSTER ADDSLOTS &lt;slot&gt; [slot ...] 将一个或多个槽（slot）指派（assign）给当前节点。</span><br><span class="line">CLUSTER DELSLOTS &lt;slot&gt; [slot ...] 移除一个或多个槽对当前节点的指派。</span><br><span class="line">CLUSTER FLUSHSLOTS 移除指派给当前节点的所有槽，让当前节点变成一个没有指派任何槽的节点。</span><br><span class="line">CLUSTER SETSLOT &lt;slot&gt; NODE &lt;node_id&gt; 将槽 slot 指派给 node_id 指定的节点，如果槽已经指派给另一个节点，那么先让另一个节点删除该槽&gt;，然后再进行指派。</span><br><span class="line">CLUSTER SETSLOT &lt;slot&gt; MIGRATING &lt;node_id&gt; 将本节点的槽 slot 迁移到 node_id 指定的节点中。</span><br><span class="line">CLUSTER SETSLOT &lt;slot&gt; IMPORTING &lt;node_id&gt; 从 node_id 指定的节点中导入槽 slot 到本节点。</span><br><span class="line">CLUSTER SETSLOT &lt;slot&gt; STABLE 取消对槽 slot 的导入（import）或者迁移（migrate）。 </span><br></pre></td></tr></table></figure><p>键 (key)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CLUSTER KEYSLOT &lt;key&gt; 计算键 key 应该被放置在哪个槽上。</span><br><span class="line">CLUSTER COUNTKEYSINSLOT &lt;slot&gt; 返回槽 slot 目前包含的键值对数量。CLUSTER GETKEYSINSLOT &lt;slot&gt; &lt;count&gt; 返回 count 个 slot 槽中的键。</span><br></pre></td></tr></table></figure><p>第 10 章 Redis 运维工具<br>10.1 运维脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">[root@xoxo1 ~]# cat redis_shell.sh </span><br><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line"></span><br><span class="line">USAG()&#123;</span><br><span class="line">    echo &quot;sh $0 &#123;start|stop|restart|login|ps|tail&#125; PORT&quot;</span><br><span class="line">&#125;</span><br><span class="line">if [ &quot;$#&quot; &#x3D; 1 ]</span><br><span class="line">then</span><br><span class="line">    REDIS_PORT&#x3D;&#39;6379&#39;</span><br><span class="line">elif </span><br><span class="line">    [ &quot;$#&quot; &#x3D; 2 -a -z &quot;$(echo &quot;$2&quot;|sed &#39;s#[0-9]##g&#39;)&quot; ]</span><br><span class="line">then</span><br><span class="line">    REDIS_PORT&#x3D;&quot;$2&quot;</span><br><span class="line">else</span><br><span class="line">    USAG</span><br><span class="line">    exit 0</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">REDIS_IP&#x3D;$(hostname -I|awk &#39;&#123;print $1&#125;&#39;)</span><br><span class="line">PATH_DIR&#x3D;&#x2F;opt&#x2F;redis_cluster&#x2F;redis_$&#123;REDIS_PORT&#125;&#x2F;</span><br><span class="line">PATH_CONF&#x3D;&#x2F;opt&#x2F;redis_cluster&#x2F;redis_$&#123;REDIS_PORT&#125;&#x2F;conf&#x2F;redis_$&#123;REDIS_PORT&#125;.conf</span><br><span class="line">PATH_LOG&#x3D;&#x2F;opt&#x2F;redis_cluster&#x2F;redis_$&#123;REDIS_PORT&#125;&#x2F;logs&#x2F;redis_$&#123;REDIS_PORT&#125;.log</span><br><span class="line"></span><br><span class="line">CMD_START()&#123;</span><br><span class="line">    redis-server $&#123;PATH_CONF&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">CMD_SHUTDOWN()&#123;</span><br><span class="line">    redis-cli -c -h $&#123;REDIS_IP&#125; -p $&#123;REDIS_PORT&#125; shutdown</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">CMD_LOGIN()&#123;</span><br><span class="line">    redis-cli -c -h $&#123;REDIS_IP&#125; -p $&#123;REDIS_PORT&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">CMD_PS()&#123;</span><br><span class="line">    ps -ef|grep redis</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">CMD_TAIL()&#123;</span><br><span class="line">    tail -f $&#123;PATH_LOG&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line">    start)</span><br><span class="line">        CMD_START</span><br><span class="line">        CMD_PS</span><br><span class="line">        ;;</span><br><span class="line">    stop)</span><br><span class="line">        CMD_SHUTDOWN</span><br><span class="line">        CMD_PS</span><br><span class="line">        ;;</span><br><span class="line">    restart)</span><br><span class="line">        CMD_START</span><br><span class="line">        CMD_SHUTDOWN</span><br><span class="line">        CMD_PS</span><br><span class="line">        ;;</span><br><span class="line">    login)</span><br><span class="line">        CMD_LOGIN</span><br><span class="line">        ;;</span><br><span class="line">    ps)</span><br><span class="line">        CMD_PS</span><br><span class="line">        ;;</span><br><span class="line">    tail)</span><br><span class="line">        CMD_TAIL</span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        USAG</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><h1 id="10-2-数据导入导出工具"><a href="#10-2-数据导入导出工具" class="headerlink" title="10.2 数据导入导出工具"></a>10.2 数据导入导出工具</h1><p>需求背景<br>刚切换到 redis 集群的时候肯定会面临数据导入的问题，所以这里推荐使用 redis-migrate-tool 工具来导入单节点数据到集群里<br>官方地址：<br><a href="http://www.oschina.net/p/redis-migrate-tool">http://www.oschina.net/p/redis-migrate-tool</a><br>安装工具</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;opt&#x2F;redis_cluster&#x2F;</span><br><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;vipshop&#x2F;redis-migrate-tool.git</span><br><span class="line">cd redis-migrate-tool&#x2F;</span><br><span class="line">autoreconf -fvi</span><br><span class="line">.&#x2F;configure</span><br><span class="line">make &amp;&amp; make install </span><br></pre></td></tr></table></figure><p>创建配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@xoxo1 ~]# cat redis_6379_to_6380.conf    </span><br><span class="line">[source]</span><br><span class="line">type: single</span><br><span class="line">servers:</span><br><span class="line">- 192.168.10.1:6379</span><br><span class="line"> </span><br><span class="line">[target]</span><br><span class="line">type: redis cluster</span><br><span class="line">servers:</span><br><span class="line">- 192.168.10.1:6380 </span><br><span class="line"> </span><br><span class="line">[common]</span><br><span class="line">listen: 0.0.0.0:8888</span><br><span class="line">source_safe: true</span><br></pre></td></tr></table></figure><p>生成测试数据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@xoxo1 ~]# cat input_key.sh </span><br><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">for i in $(seq 1 1000)</span><br><span class="line">do</span><br><span class="line">    redis-cli -c -h xoxo1 -p 6379 set k_$&#123;i&#125; v_$&#123;i&#125; &amp;&amp; echo &quot;set k_$&#123;i&#125; is ok&quot;</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>执行导入命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@xoxo1 ~]# redis-migrate-tool -c redis_6379_to_6380.conf </span><br></pre></td></tr></table></figure><p>数据校验</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@xoxo1 ~]# redis-migrate-tool -c redis_6379_to_6380.conf -C redis_check</span><br></pre></td></tr></table></figure><h2 id="10-3-分析键值大小"><a href="#10-3-分析键值大小" class="headerlink" title="10.3 分析键值大小"></a>10.3 分析键值大小</h2><p>需求背景<br>redis 的内存使用太大键值太多，不知道哪些键值占用的容量比较大，而且在线分析会影响性能.<br>安装工具</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">yum install python-pip gcc python-devel </span><br><span class="line">cd &#x2F;opt&#x2F;</span><br><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;sripathikrishnan&#x2F;redis-rdb-tools</span><br><span class="line">cd redis-rdb-tools</span><br><span class="line">python setup.py install</span><br></pre></td></tr></table></figure><p>使用方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;data&#x2F;redis_cluster&#x2F;redis_6380&#x2F;</span><br><span class="line">rdb -c memory redis_6380.rdb -f redis_6380.rdb.csv</span><br></pre></td></tr></table></figure><p>分析 rdb 并导出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk -F &#39;,&#39; &#39;&#123;print $4,$2,$3,$1&#125;&#39; redis_6380.rdb.csv |sort  &gt; 6380.txt</span><br></pre></td></tr></table></figure><h2 id="10-4-监控过期键"><a href="#10-4-监控过期键" class="headerlink" title="10.4 监控过期键"></a>10.4 监控过期键</h2><p>需求背景</p><blockquote><p>因为开发重复提交，导致电商网站优惠卷过期时间失效 问题分析 如果一个键已经设置了过期时间，这时候在 set 这个键，过期时间就会取消</p></blockquote><p>解决思路</p><blockquote><p>如何在不影响机器性能的前提下批量获取需要监控键过期时间</p><p>1.Keys * 查出来匹配的键名。然后循环读取 ttl 时间<br>2.scan * 范围查询键名。然后循环读取 ttl 时间</p></blockquote><p>Keys 重操作，会影响服务器性能，除非是不提供服务的从节点<br>Scan 负担小，但是需要去多次才能取完，需要写脚本<br>脚本内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">cat 01get_key.sh </span><br><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">key_num&#x3D;0</span><br><span class="line">&gt; key_name.log</span><br><span class="line">for line in $(cat key_list.txt)</span><br><span class="line">do</span><br><span class="line">    while true</span><br><span class="line">    do</span><br><span class="line">        scan_num&#x3D;$(redis-cli -h 192.168.47.75 -p 6380 SCAN $&#123;key_num&#125; match $&#123;line&#125;\* count 1000|awk &#39;NR&#x3D;&#x3D;1&#123;print $0&#125;&#39;)</span><br><span class="line">        key_name&#x3D;$(redis-cli -h 192.168.47.75 -p 6380 SCAN $&#123;key_num&#125; match $&#123;line&#125;\* count 1000|awk &#39;NR&gt;1&#123;print $0&#125;&#39;)</span><br><span class="line">        echo $&#123;key_name&#125;|xargs -n 1 &gt;&gt; key_name.log</span><br><span class="line">        ((key_num&#x3D;scan_num))</span><br><span class="line">        if [ $&#123;key_num&#125; &#x3D;&#x3D; 0 ]</span><br><span class="line">           then</span><br><span class="line">           break</span><br><span class="line">        fi</span><br><span class="line">    done</span><br><span class="line">done</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 云计算 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redis </tag>
            
            <tag> 缓存层 </tag>
            
            <tag> 缓存数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>酷炫的 Linux 性能实时监测工具：Netdata 安装教程</title>
      <link href="/posts/19816/"/>
      <url>/posts/19816/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Netdata 是一款 Linux 性能实时监测工具，每个服务器每秒收集数千个度量标准，只有 1% 的 CPU 利用率，一个内核，几 MB 内存，没有磁盘 I/O。即使运行在低端硬件上，也可以在令人惊叹的实时交互式 web 仪表板上查看所有内容。监控数据极多，比如 iptables Linux firewall、fping、Processes、NFS、Network QoS、Applications、Apache web server、Nginx、Tomcat、Mysql、postgres、redis、mongodb、elasticsearch、SNMP devices 等等。很强大，特别是界面非常酷炫，有兴趣的可以试试。</p><p>官网地址：<a href="https://my-netdata.io/">https://my-netdata.io/</a><br>Github 地址：<a href="https://github.com/firehol/netdata">https://github.com/firehol/netdata</a><br>演示地址：<a href="https://my-netdata.io/#demosites">https://my-netdata.io/#demosites</a>（有 8 个地址，随便点一个进去就可以了）</p><h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p><img src="http://www.kococ.cn/usr/uploads/2020/01/2535861129.png" alt="netdata1.png" title="netdata1.png"></p><p><img src="http://www.kococ.cn/usr/uploads/2020/01/2945352374.png" alt="请输入图片描述" title="请输入图片描述"></p><p><img src="http://www.kococ.cn/usr/uploads/2020/01/3173847027.png" alt="Netdata(3).png" title="Netdata(3).png"></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">支持Centos、Debian、Ubuntu等所有的Linux发行版，运行以下命令：</span><br><span class="line">#安装基本的netdata</span><br><span class="line">bash &lt;(curl -Ss https:&#x2F;&#x2F;my-netdata.io&#x2F;kickstart.sh)</span><br><span class="line">#or</span><br><span class="line">#安装netdata及所有插件的软件包</span><br><span class="line">bash &lt;(curl -Ss https:&#x2F;&#x2F;my-netdata.io&#x2F;kickstart.sh) all</span><br></pre></td></tr></table></figure><p><strong>安装完成后访问 <a href="http://ip/">http://ip</a>:19999 / 即可！</strong><br><strong>提示</strong>：如果要在 64bit 缺少软件包管理器的 Linux 上安装（例如 CoreOS、CirrOS、busybox、systems），就运行下面这个命令，netdata 将以二进制编译形式进行安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash &lt;(curl -Ss https:&#x2F;&#x2F;my-netdata.io&#x2F;kickstart-static64.sh)</span><br></pre></td></tr></table></figure><p>如果运行不了，则需要分开运行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget -O &#x2F;tmp&#x2F;kickstart-static64.sh https:&#x2F;&#x2F;my-netdata.io&#x2F;kickstart-static64.sh</span><br><span class="line">sh &#x2F;tmp&#x2F;kickstart-static64.sh</span><br></pre></td></tr></table></figure><p>安装详情参考：<a href="https://github.com/firehol/netdata/wiki/Installation">https://github.com/firehol/netdata/wiki/Installation</a></p>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
          <category> 云计算 </category>
          
          <category> 监控 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> netdata </tag>
            
            <tag> 监控软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GlusterFS 分布式文件系统群集</title>
      <link href="/posts/21029/"/>
      <url>/posts/21029/</url>
      
        <content type="html"><![CDATA[<p>13.1 GlusterFS概述<br>1.GlusterFS简介<br>GlusterFS是一个开源的分布式文件系统，同时也是Scale-Out存储解决方案Gluster的核心，在存储数据方面具有强大的横向扩展能力，通过扩展不同的节点可以支持数PB级别的存储容量GlusterFS借助TCP/IP或InfiniBand RDMA网络将分散的存储资源汇聚在一起，统一提供存储服务，并使用单一去全局命名空间来管理数据。GlusterFS基于可堆叠的用户空间以及无元的设计，可为各种不同的数据负载提供优异的性能<br>GlusterFS主要由存储服务器（Brick Server）、客户端及NFS/Samba存储网关（可选，根据需要选择使用）组成。GlusterFS架构中最大的设计特点是没有元数据服务器组件，这助于提升整个系统的性能、可靠性和稳定性。传统的分布式文件系统大多通过元服务器来存储元数据，元数据包含存储节点上的目录信息、目录结构等，这样的设计在浏览目录时效率非常高，但是也存在一些缺陷，如单点故障，一旦元数据服务器出现故障，即使节点具备再高的冗余性，整个存储系统也将崩溃，而GlusterFS分布式文件系统是基于无元服务器的设计，数据横向扩展能力强，具备较高的可靠性及存储效率。GlusterFS支持TCP/IP和InfiniBandRDMA高速网络互联，客户端可通过原生GlusterFS协议访问数据，其他没有运行GlusterFS客户端的终端可通过NFS/CIFS标准协议通过存储网关访问数据</p><p><img src="https://www.kococ.cn/usr/uploads/2020/02/3542246066.jpg" alt="1.jpg"></p><p>2.GlusterFS的特点<br>扩展性和高性能。GlusterFS利用双重特性来提供高容量存储解决方案<br>Scale-Out架构通过增加存储节点的方式来提高存储容量和性能（磁盘、计算机和I/O资源都可以独立增加），支持10GbE和InfiniBand等高速网络互联<br>Gluster弹性哈希（Elastic Hash）解决了GlusterFS对元数据服务器的依赖，GlusterFS采用弹性哈希算法在存储池中定位数据。GlusterFS中可以智能地定位任意数据分片（将数据分片存储在不同节点上），不需要查看索引或者向元数据服务器查询。这种设计机制实现了存储的横向扩展，改善了单点故障及性能瓶颈，真正实现了并行化数据访问<br>高可用性。GlusterFS通过配置某些类型的存储卷，可以对文件进行自动复制（类似于RAID1），即使某个节点出现故障，也不影响数据的访问。当数据出现不一致时，自动修复功能能够把数据恢复到正确的状态，数据的修复是以增量的方式在后台执行，不会占用太多系统资源。GlusterFS可以支持所有的存储，因为它没有设计自己的私有数据文件格式，而是采用操作系统中标准的磁盘文件系统（如EXT3、XFS等）来存储文件，数据可以使用传统的访问磁盘的方式被访问<br>全局统一命名空间。全局统一命名空间将所有的存储资源聚集成一个单一的虚拟存储池，对用户和应用屏蔽了物理存储信息。存储资源（类似于LVM）可以根据生产环境中的需要进行弹性扩展或收缩。在多节点场景中，全局统一命名空间还可以基于不同节点做负载均衡，大大提高了存取效率<br>弹性卷管理。GlusterFS通过将数据储存在逻辑卷中，逻辑卷从逻辑存储池进行独立逻辑划分。逻辑存储池可以在线进行增加和移除，不会导致业务中断。逻辑卷可以根据需求在线增加缩减，并可以在多个节点中负载均衡。文件系统配置更改也可以实时在线进行并应用，从而可以适应工作负载条件变化或在线性能调优<br>基于标准协议。Gluster存储服务支持NFS、CIFS、HTTP、FTP、SMB及Gluster原生协议，完全与POSIX标准兼容。现有应用程序不需要做任何修改就可以对Gluster中的数据进行访问，也可以使用专用API进行访问（效率更高），这在公有云环境中部署Gluster时非常有用，Gluster对云服务器提供商专用API进行抽象，然后提供标准POSIX接口</p><p>3.GlusterFS术语</p><p>Brick（存储块）：指可信主机池中由主机提供的用于物理存储的专用分区，是GlusterFS中的基本存储单元，同时也是可信存储池中服务器上对外提供的存储目录。存储目录的格式由服务器和目录的绝对路径构成，表示方法为SERVER:EXPORT，如192.168.1.4:/data/mydir/<br>Volume（逻辑卷）：一个逻辑卷是一组Brick的集合。卷是数据存储的逻辑设备，类似于LVM中的逻辑卷。大部分Gluster管理操作是在卷上进行的<br>FUSE（Filesystem inUserspace）：是一个内核模块，允许用户创建自己的文件系统，无须修改内核代码<br>VFS：内核空间对用户空间提供的访问磁盘的接口<br>Glusterd（后台管理进程）：在存储群集中的每个节点上都要运行</p><p>4.模块化堆栈式架构</p><p>GlusterFS是模块化堆栈式的架构设计。模块称为Translator，是GlusterFS提供的一种强大机制，借助这种良好定义的接口可以高效简便地扩展文件系统的功能<br>(1) 服务端与客户端的设计高度模块化的同时模块接口是兼容的，同一个translator可同时在客户端和服务器加载<br>(2) GlusterFS中所有的功能都是通过translator实现的，其中客户端要比服务端更复杂。所以功能的重点主要集中在客户端上</p><p>13.2 GlusterFS的工作原理<br>1.GlusterFS的工作流程</p><p><img src="https://www.kococ.cn/usr/uploads/2020/02/3904427408.png" alt="请输入图片描述"></p><p>(1) 客户端或应用程序通过GlusterFS的挂载点访问数据<br>(2) Linux系统内核通过VFS API收到请求并处理<br>(3) VFS将数据递交给FUSE内核文件系统，并向系统注册一个实际的文件系统FUSE，而FUSE文件系统则是将数据通过/dev/fuse设备文件递交给了GlusterFS client端。可以将FUSE文件系统理解为一个代理<br>(4) GlusterFS client收到数据后，client根据配置文件对数据进行处理<br>(5) 经过GlusterFS client处理后，通过网络将数据传递至远端的GlusterFS Server，并且将数据写入服务器存储设备</p><p>2.弹性HASH算法</p><p><img src="https://www.kococ.cn/usr/uploads/2020/02/1491398914.png" alt="请输入图片描述"></p><p><img src="https://www.kococ.cn/usr/uploads/2020/02/3063198327.png" alt="请输入图片描述"></p><p>13.3 GlusterFS的卷类型</p><blockquote><p>分布式卷（Distribute volume）：文件通过HASH算法分布到所有Brick<br>Server上，这种卷是GlusterFS的基础；以文件为单位根据HASH算法散列到不同的Brick，其实只是扩大了磁盘空间，如果有一块磁盘损坏，数据也将丢失，属于文件级的RAID0，不具有容错能力<br>条带卷（Stripe volume）：类似RAID0，文件被分成数据块并以轮询的方式分布到多个Brick<br>Server上，文件存储以数据块为单位，支持大文件存储，文件越大，读取效率越高 复制卷（Replica<br>volume）：将文件同步到多个Brick上，使其具备多个文件副本，属于文件级RAID1，具有容错能力。因为数据分散在多个Brick中，所以读性能得到很大提升，但写性能下降<br>分布式条带卷（Distribute Stripe volume）：Brick<br>Server数量是条带数（数据快分布的Brick数量）的倍数，兼具分布式卷和条带卷的特点 分布式复制卷（Stripe Replica<br>volume）：Brick Server数量是镜像数（数据副本数量）的倍数，兼具分布式卷和复制卷的特点 条带复制卷（Stripe<br>Replica volume）：类似RAID 10，同时具有条带卷和复制卷的特点 分布式条带部复制卷（Distribute Stripe<br>Replicavolume）：三种基本卷的复合卷，通常用于类Map Reduce应用</p></blockquote><p>1.分布式卷<br>特点：<br>文件分布在不同的服务器，不具备冗余性<br>更容易且廉价地扩展卷的大小<br>单点故障会造成数据丢失<br>依赖底层的数据保护</p><p><img src="https://www.kococ.cn/usr/uploads/2020/02/2140635533.png" alt="请输入图片描述"></p><p>2.条带卷<br>特点：<br>数据被分割成更小块分布到块服务器群中的不同条带区<br>分布减少了负载切更小的文件加速了存取的速度<br>没有数据冗余</p><p><img src="https://www.kococ.cn/usr/uploads/2020/02/2297015581.png" alt="请输入图片描述"></p><p>3.复制卷<br>特点：<br>卷中所有的服务器均保存一个完整的副本<br>卷的副本数量可由客户创建的时候决定<br>至少有两块服务器或更多服务器<br>具备冗余性</p><p><img src="https://www.kococ.cn/usr/uploads/2020/02/4226946028.png" alt="请输入图片描述"></p><p>4.分布式条带卷</p><p><img src="https://www.kococ.cn/usr/uploads/2020/02/1477673389.png" alt="请输入图片描述"></p><p>5.分布式复制卷</p><p><img src="https://www.kococ.cn/usr/uploads/2020/02/813965134.png" alt="请输入图片描述"></p><p>13.4 GlusterFS部署<br>13.4.1 部署群集环境</p><p><img src="https://www.kococ.cn/usr/uploads/2020/02/3353905723.gif" alt="请输入图片描述"></p><p>服务器的相关信息（1）</p><p><img src="https://www.kococ.cn/usr/uploads/2020/02/2181784901.png" alt="请输入图片描述"></p><p>服务器的相关信息（2）</p><p><img src="https://www.kococ.cn/usr/uploads/2020/02/266306810.png" alt="13.png"></p><p>1.准备环境<br>1)添加硬盘<br>node1添加四块硬盘<br>一块3G、一块4G、一块5G、一块6G<br>node2添加四块硬盘<br>一块3G、一块4G、一块5G、一块6G<br>node3添加三块硬盘<br>一块3G、一块4G、一块5G<br>node4添加三块硬盘<br>一块3G、一块4G、一块5G<br>2)修改主机名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">node1节点    </span><br><span class="line">vim &#x2F;etc&#x2F;hostname</span><br><span class="line">node1</span><br><span class="line">node2节点</span><br><span class="line">vim &#x2F;etc&#x2F;hostname</span><br><span class="line">node2</span><br><span class="line">node3节点</span><br><span class="line">vim &#x2F;etc&#x2F;hostname</span><br><span class="line">node3</span><br><span class="line">node4节点</span><br><span class="line">vim &#x2F;etc&#x2F;hostname</span><br><span class="line">node4</span><br></pre></td></tr></table></figure><p>3)添加硬盘和修改主机名后重启系统生效<br>reboot<br>4)新建目录<br>node1、node2<br>mkdir /b3 /c4 /d5 /e6<br>node3、node4<br>mkdir /b3 /c4 /d5<br>5)分区硬盘<br>node1、node2<br>fdisk /dev/sdb<br>n<br>p<br>回车<br>回车<br>回车<br>p<br>w</p><p>fdisk /dev/sdc<br>fdisk /dev/sdd<br>fdisk /dev/sde<br>node3、node4<br>fdisk /dev/sdb<br>n<br>p<br>回车<br>回车<br>回车<br>p<br>w</p><p>fdisk /dev/sdc<br>fdisk /dev/sdd<br>6) 格式化硬盘<br>node1、node2<br>mkfs -t ext4 /dev/sdb1<br>mkfs -t ext4 /dev/sdc1<br>mkfs -t ext4 /dev/sdd1<br>mkfs -t ext4 /dev/sde1<br>node3、node4<br>mkfs -t ext4 /dev/sdb1<br>mkfs -t ext4 /dev/sdc1<br>mkfs -t ext4 /dev/sdd1<br>7) 手动挂载硬盘<br>node1、node2<br>mount /dev/sdb1 /b3<br>mount /dev/sdc1 /c4<br>mount /dev/sdd1 /d5<br>mount /dev/sde1 /e6<br>node3、node4<br>mount /dev/sdb1 /b3<br>mount /dev/sdc1 /c4<br>mount /dev/sdd1 /d5<br>8)自动挂载硬盘<br>node1、node2<br>vim /etc/fstab<br>/dev/sdb1 /b3 ext4 defaults 0 0<br>/dev/sdc1 /c4 ext4 defaults 0 0<br>/dev/sdd1 /d5 ext4 defaults 0 0<br>/dev/sde1 /e6 ext4 defaults 0 0<br>node3、node4<br>vim /etc/fstab<br>/dev/sdb1 /b3 ext4 defaults 0 0<br>/dev/sdc1 /c4 ext4 defaults 0 0<br>/dev/sdd1 /d5 ext4 defaults 0 0<br>2.关闭防火墙和SELinux（node1、node2、node3、node4）<br>systemctl stop firewalld<br>setenforce 0<br>3.配置hosts文件（node1、node2、node3、node4）<br>vim /etc/hosts<br>192.168.10.101 node1<br>192.168.10.102 node2<br>192.168.10.103 node3<br>192.168.10.104 node4<br>4.安装软件（node1、node2、node3、node4）<br>把gfsrepo文件夹复制到每个节点的/opt目录下<br>修改YUM仓库配置文件<br>vim /etc/yum.repos.d/CentOS-Media.repo<br>[gfsrepo]<br>name=GFS<br>baseurl=file:///opt/gfsrepo<br>gpgcheck=0<br>enabled=1<br>创建YUM仓库<br>createrepo /opt/gfsrepo<br>安装GFS所需软件<br>yum -y install glusterfs glusterfs-server glusterfs-fuse glusterfs-rdma<br>5.启动GlusterFS（node1、node2、node3、node4）<br>启动GFS服务<br>systemctl start glusterd<br>设置GFS开机自启<br>systemctl enable glusterd<br>6.添加节点（node1）<br>gluster peer probe node1<br>gluster peer probe node2<br>gluster peer probe node3<br>gluster peer probe node4<br>7.查看群集状态（node1、node2、node3、node4）<br>gluster peer status<br>13.4.2 创建卷（node1）<br>1.创建分布式卷<br>gluster volume create dis-volume node1:/e6 node2:/e6 force<br>gluster volume info dis-volume<br>gluster volume start dis-volume<br>2.创建条带卷<br>gluster volume create stripe-volume stripe 2 node1:/d5 node2:/d5 force<br>gluster volume info stripe-volume<br>gluster volume start stripe-volume<br>3.创建复制卷<br>gluster volume create rep-volume replica 2 node3:/d5 node4:/d5 force<br>gluster volume info rep-volume<br>gluster volume start rep-volume<br>4.创建分布式条带卷<br>gluster volume create dis-stripe stripe 2 node1:/b3 node2:/b3 node3:/b3 node4:/b3 force<br>gluster volume info dis-stripe<br>gluster volume start dis-stripe<br>5.创建分布式复制卷<br>gluster volume create dis-rep replica 2 node1:/c4 node2:/c4 node3:/c4 node4:/c4 force<br>gluster volume info dis-rep<br>gluster volume start dis-rep<br>13.4.3 部署Gluster客户端（client）<br>1.安装客户端软件<br>修改主机名<br>hostname client<br>vim /etc/hostname<br>client<br>bash<br>关闭防火墙和SELinux<br>systemctl stop firewalld<br>setenforce 0<br>systemctl disable firewalld<br>把gfsrepo文件夹复制到每个节点的/opt目录下<br>修改YUM仓库配置文件<br>vim /etc/yum.repos.d/CentOS-Media.repo<br>[gfsrepo]<br>name=GFS<br>baseurl=file:///opt/gfsrepo<br>gpgcheck=0<br>enabled=1<br>创建YUM仓库<br>createrepo /opt/gfsrepo<br>安装GFS客户端<br>yum -y install glusterfs glusterfs-fuse<br>2.创建挂载目录<br>mkdir -p /test/{dis,stripe,rep,dis_and_stripe,dis_and_rep}<br>ls /test<br>3.修改hosts文件<br>vim /etc/hosts<br>192.168.10.101 node1<br>192.168.10.102 node2<br>192.168.10.103 node3<br>192.168.10.104 node4<br>4.挂载Gluster文件系统<br>mount -t glusterfs node1:dis-volume /test/dis<br>mount -t glusterfs node1:stripe-volume /test/stripe/<br>mount -t glusterfs node1:rep-volume /test/rep<br>mount -t glusterfs node1:dis-stripe /test/dis_and_stripe/<br>mount -t glusterfs node1:dis-rep /test/dis_and_rep/<br>df -h<br>5.修改fstab配置文件<br>vim /etc/fstab<br>node1:dis-volume /test/dis glusterfs defaules,_netdev 0 0<br>node1:stripe-volume /test/stripe glusterfs defaules,_netdev 0 0<br>node1:rep-volume /test/rep glusterfs defaules,_netdev 0 0<br>node1:dis-stripe /test/dis_and_stripe glusterfs defaules,_netdev 0 0<br>node1:dis-rep /test/dis_and_rep glusterfs defaules,_netdev 0 0<br>13.4.4 测试Gluster文件系统<br>1.创建测试文件（client）<br>dd if=/dev/zero of=/root/demo1.log bs=1M count=43<br>dd if=/dev/zero of=/root/demo2.log bs=1M count=43<br>dd if=/dev/zero of=/root/demo3.log bs=1M count=43<br>dd if=/dev/zero of=/root/demo4.log bs=1M count=43<br>dd if=/dev/zero of=/root/demo5.log bs=1M count=43<br>2.卷中写入文件（client）<br>cp demo* /test/dis/<br>cp demo* /test/stripe/<br>cp demo* /test/rep/<br>cp demo* /test/dis_and_stripe/<br>cp demo* /test/dis_and_rep/<br>3.查看文件分布<br>1)查看分布式卷文件分布<br>node1<br>ll -h /e6<br>-rw-r–r–. 2 root root 43M 3月 16 17:47 demo1.log<br>-rw-r–r–. 2 root root 43M 3月 16 17:47 demo2.log<br>-rw-r–r–. 2 root root 43M 3月 16 17:47 demo3.log<br>-rw-r–r–. 2 root root 43M 3月 16 17:47 demo4.log<br>node2<br>ll -h /e6<br>-rw-r–r–. 2 root root 43M 3月 16 17:47 demo5.log<br>2)查看条带卷文件分布<br>node1<br>ll -h /d5<br>-rw-r–r–. 2 root root 22M 3月 16 17:47 demo1.log<br>-rw-r–r–. 2 root root 22M 3月 16 17:47 demo2.log<br>-rw-r–r–. 2 root root 22M 3月 16 17:47 demo3.log<br>-rw-r–r–. 2 root root 22M 3月 16 17:47 demo4.log<br>-rw-r–r–. 2 root root 22M 3月 16 17:47 demo5.log<br>node2<br>ll -h /d5<br>-rw-r–r–. 2 root root 22M 3月 16 17:47 demo1.log<br>-rw-r–r–. 2 root root 22M 3月 16 17:47 demo2.log<br>-rw-r–r–. 2 root root 22M 3月 16 17:47 demo3.log<br>-rw-r–r–. 2 root root 22M 3月 16 17:47 demo4.log<br>-rw-r–r–. 2 root root 22M 3月 16 17:47 demo5.log<br>3)查看复制卷文件分布<br>node3<br>ll -h /d5<br>-rw-r–r–. 2 root root 43M 3月 16 17:47 demo1.log<br>-rw-r–r–. 2 root root 43M 3月 16 17:47 demo2.log<br>-rw-r–r–. 2 root root 43M 3月 16 17:47 demo3.log<br>-rw-r–r–. 2 root root 43M 3月 16 17:47 demo4.log<br>-rw-r–r–. 2 root root 43M 3月 16 17:47 demo5.log<br>node4<br>ll -h /d5<br>-rw-r–r–. 2 root root 43M 3月 16 17:47 demo1.log<br>-rw-r–r–. 2 root root 43M 3月 16 17:47 demo2.log<br>-rw-r–r–. 2 root root 43M 3月 16 17:47 demo3.log<br>-rw-r–r–. 2 root root 43M 3月 16 17:47 demo4.log<br>-rw-r–r–. 2 root root 43M 3月 16 17:47 demo5.log<br>4)查看分布式条带卷文件分布<br>node1<br>ll -h /b3<br>-rw-r–r–. 2 root root 22M 3月 16 17:47 demo1.log<br>-rw-r–r–. 2 root root 22M 3月 16 17:47 demo2.log<br>-rw-r–r–. 2 root root 22M 3月 16 17:47 demo3.log<br>-rw-r–r–. 2 root root 22M 3月 16 17:47 demo4.log<br>node2<br>ll -h /b3<br>-rw-r–r–. 2 root root 22M 3月 16 17:47 demo1.log<br>-rw-r–r–. 2 root root 22M 3月 16 17:47 demo2.log<br>-rw-r–r–. 2 root root 22M 3月 16 17:47 demo3.log<br>-rw-r–r–. 2 root root 22M 3月 16 17:47 demo4.log<br>node3<br>ll -h /b3<br>-rw-r–r–. 2 root root 22M 3月 16 17:47 demo5.log<br>node4<br>ll -h /b3<br>-rw-r–r–. 2 root root 22M 3月 16 17:47 demo5.log<br>5)查看分布式复制卷文件分布<br>node1<br>ll -h /c4<br>-rw-r–r–. 2 root root 43M 3月 16 17:55 demo1.log<br>-rw-r–r–. 2 root root 43M 3月 16 17:55 demo2.log<br>-rw-r–r–. 2 root root 43M 3月 16 17:55 demo3.log<br>-rw-r–r–. 2 root root 43M 3月 16 17:55 demo4.log<br>node2<br>ll -h /c4<br>-rw-r–r–. 2 root root 43M 3月 16 17:55 demo1.log<br>-rw-r–r–. 2 root root 43M 3月 16 17:55 demo2.log<br>-rw-r–r–. 2 root root 43M 3月 16 17:55 demo3.log<br>-rw-r–r–. 2 root root 43M 3月 16 17:55 demo4.log<br>node3<br>ll -h /c4<br>-rw-r–r–. 2 root root 43M 3月 16 17:55 demo5.log<br>node4<br>ll -h /c4<br>-rw-r–r–. 2 root root 43M 3月 16 17:55 demo5.log<br>4.破坏性测试（client）<br>挂起node2节点<br>测试分布式卷数据是否可以访问<br>head -1 /test/dis/demo1.log<br>head -1 /test/dis/demo2.log<br>head -1 /test/dis/demo3.log<br>head -1 /test/dis/demo4.log<br>head -1 /test/dis/demo5.log<br>head: 无法打开”/test/dis/demo5.log” 读取数据: 没有那个文件或目录<br>测试条带卷数据是否可以访问<br>head -1 /test/stripe/demo1.log<br>head: 读取”/test/stripe/demo1.log” 时出错: 没有那个文件或目录<br>head -1 /test/stripe/demo2.log<br>head: 读取”/test/stripe/demo2.log” 时出错: 没有那个文件或目录<br>head -1 /test/stripe/demo3.log<br>head: 读取”/test/stripe/demo3.log” 时出错: 没有那个文件或目录<br>head -1 /test/stripe/demo4.log<br>head: 读取”/test/stripe/demo4.log” 时出错: 没有那个文件或目录<br>head -1 /test/stripe/demo5.log<br>head: 读取”/test/stripe/demo5.log” 时出错: 没有那个文件或目录<br>测试分布式条带卷数据是否可以访问<br>head -1 /test/dis_and_stripe/demo1.log<br>head: 读取”/test/dis_and_stripe/demo1.log” 时出错: 没有那个文件或目录<br>head -1 /test/dis_and_stripe/demo2.log<br>head: 读取”/test/dis_and_stripe/demo2.log” 时出错: 没有那个文件或目录<br>head -1 /test/dis_and_stripe/demo3.log<br>head: 读取”/test/dis_and_stripe/demo3.log” 时出错: 没有那个文件或目录<br>head -1 /test/dis_and_stripe/demo4.log<br>head: 读取”/test/dis_and_stripe/demo4.log” 时出错: 没有那个文件或目录<br>head -1 /test/dis_and_stripe/demo5.log<br>测试分布式复制卷数据是否可以访问<br>head -1 /test/dis_and_rep/demo1.log<br>head -1 /test/dis_and_rep/demo2.log<br>head -1 /test/dis_and_rep/demo3.log<br>head -1 /test/dis_and_rep/demo4.log<br>head -1 /test/dis_and_rep/demo5.log<br>挂起node4节点<br>测试复制卷数据是否可以访问<br>head -1 /test/rep/demo1.log<br>head -1 /test/rep/demo2.log<br>head -1 /test/rep/demo3.log<br>head -1 /test/rep/demo4.log<br>head -1 /test/rep/demo5.log<br>测试分布式条带卷数据是否可以访问<br>head -1 /test/dis_and_stripe/demo1.log<br>head: 读取”/test/dis_and_stripe/demo1.log” 时出错: 没有那个文件或目录<br>head -1 /test/dis_and_stripe/demo2.log<br>head: 读取”/test/dis_and_stripe/demo2.log” 时出错: 没有那个文件或目录<br>head -1 /test/dis_and_stripe/demo3.log<br>head: 读取”/test/dis_and_stripe/demo3.log” 时出错: 没有那个文件或目录<br>head -1 /test/dis_and_stripe/demo4.log<br>head: 读取”/test/dis_and_stripe/demo4.log” 时出错: 没有那个文件或目录<br>head -1 /test/dis_and_stripe/demo5.log<br>head: 读取”/test/dis_and_stripe/demo5.log” 时出错: 没有那个文件或目录<br>tail -1 /test/dis_and_stripe/demo5.log<br>tail: 读取”/test/dis_and_stripe/demo5.log” 时出错: 没有那个文件或目录<br>测试分布式复制卷数据是否可以访问<br>head -1 /test/dis_and_rep/demo1.log<br>head -1 /test/dis_and_rep/demo2.log<br>head -1 /test/dis_and_rep/demo3.log<br>head -1 /test/dis_and_rep/demo4.log<br>head -1 /test/dis_and_rep/demo5.log<br>13.4.5 其他的维护命令（node1、node2、node3、node4）<br>1.查看GlusterFS卷<br>查看卷的列表<br>gluster volume list<br>查看所有卷的信息<br>gluster volume info<br>查看卷的状态<br>gluster volume status<br>2.停止/删除卷<br>停止dis-stripe卷<br>gluster volume stop dis-stripe<br>启用dis-stripe卷<br>gluster volume start dis-stripe<br>删除dis-stripe卷<br>gluster volume delete dis-stripe<br>3.设置卷的访问控制<br>只允许192.168.1.0和10.1.1.0网段的客户端访问dis-rep卷<br>gluster volume set dis-rep auth.allow 192.168.1.<em>,10.1.1.</em></p>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
          <category> 云计算 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GFS </tag>
            
            <tag> 文件系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql + Keepalived双主热备高可用</title>
      <link href="/posts/62505/"/>
      <url>/posts/62505/</url>
      
        <content type="html"><![CDATA[<h2 id="环境描述："><a href="#环境描述：" class="headerlink" title="环境描述："></a><strong>环境描述：</strong></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Centos7 版本</span><br><span class="line">Master1：192.168.10.1        安装mysql和keepalived</span><br><span class="line">Master2: 192.168.10.2      安装mysql和keepalived</span><br><span class="line">VIP：192.168.10.188</span><br></pre></td></tr></table></figure><p>要实现主主同步，可以先实现主从同步，即master1-&gt; master2的主从同步，然后master2-&gt; master1的主从<br>同步。这样，双方就完成了主主同步。</p><p><strong>注意以下几点：</strong></p><blockquote><p>1）要保证同步服务期间之间的网络联通。即能相互ping通，能使用对方授权信息连接到对方数据库（防火墙开放3306端口）。</p><p>2）关闭selinux。</p><p>3）同步前，双方数据库中需要同步的数据要保持一致。这样，同步环境实现后，再次更新的数据就会如期同步了。</p></blockquote><h2 id="配置Mysql-Keepalived故障转移的高可用环境"><a href="#配置Mysql-Keepalived故障转移的高可用环境" class="headerlink" title="配置Mysql + Keepalived故障转移的高可用环境"></a>配置Mysql + Keepalived故障转移的高可用环境</h2><blockquote><p>1）安装keepalived进入其配置成系统服务。master1和master2两台机器上同样进行如下操作：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@master1 ~]# yum install -y openssl-devel popt-devel</span><br><span class="line">[root@master1 ~]# cd &#x2F;usr&#x2F;local&#x2F;src&#x2F;</span><br><span class="line">[root@master1 src]# wget http:&#x2F;&#x2F;www.keepalived.org&#x2F;software&#x2F;keepalived-1.3.5.tar.gz</span><br><span class="line">[root@master1 src]# tar -zvxf keepalived-1.3.5.tar.gz</span><br><span class="line">[root@master1 src]# cd keepalived-1.3.5</span><br><span class="line">[root@master1 keepalived-1.3.5]# .&#x2F;configure --prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;keepalived</span><br><span class="line">[root@master1 keepalived-1.3.5]# make &amp;&amp; make install</span><br><span class="line">[root@master1 keepalived-1.3.5]# cp &#x2F;usr&#x2F;local&#x2F;src&#x2F;keepalived-1.3.5&#x2F;keepalived&#x2F;etc&#x2F;init.d&#x2F;keepalived &#x2F;etc&#x2F;rc.d&#x2F;init.d&#x2F;</span><br><span class="line">[root@master1 keepalived-1.3.5]# cp &#x2F;usr&#x2F;local&#x2F;keepalived&#x2F;etc&#x2F;sysconfig&#x2F;keepalived &#x2F;etc&#x2F;sysconfig&#x2F;</span><br><span class="line">[root@master1 keepalived-1.3.5]# mkdir &#x2F;etc&#x2F;keepalived&#x2F;</span><br><span class="line">[root@master1 keepalived-1.3.5]# cp &#x2F;usr&#x2F;local&#x2F;keepalived&#x2F;etc&#x2F;keepalived&#x2F;keepalived.conf &#x2F;etc&#x2F;keepalived&#x2F;</span><br><span class="line">[root@master1 keepalived-1.3.5]# cp &#x2F;usr&#x2F;local&#x2F;keepalived&#x2F;sbin&#x2F;keepalived &#x2F;usr&#x2F;sbin&#x2F;</span><br><span class="line">[root@master1 keepalived-1.3.5]# echo &quot;&#x2F;etc&#x2F;init.d&#x2F;keepalived start&quot; &gt;&gt; &#x2F;etc&#x2F;rc.local</span><br></pre></td></tr></table></figure><p><strong>2）master1机器上的keepalived.conf配置。（以下配置中没有使用lvs的负载均衡功能，因此不需要配置虚拟服务器虚拟服务器）（在这里可以使用yum安装keepalived。配置有关的Keepalived博文中详细介绍，这里略）</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@master1 ~]# cp &#x2F;etc&#x2F;keepalived&#x2F;keepalived.conf &#x2F;etc&#x2F;keepalived&#x2F;keepalived.conf.bak</span><br><span class="line">[root@master1 ~]# vim &#x2F;etc&#x2F;keepalived&#x2F;keepalived.conf </span><br><span class="line"></span><br><span class="line">  </span><br></pre></td></tr></table></figure><p><strong>＃清空内容，直接采用以下配置：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">! Configuration File for keepalived</span><br><span class="line">       </span><br><span class="line">global_defs &#123;</span><br><span class="line">router_id MASTER-HA</span><br><span class="line">&#125;</span><br><span class="line">       </span><br><span class="line">vrrp_script chk_mysql_port &#123;</span><br><span class="line">    script &quot;&#x2F;etc&#x2F;keepalived&#x2F;chk_mysql.sh&quot;</span><br><span class="line">    interval 2            </span><br><span class="line">    weight -5                 </span><br><span class="line">    fall 2                 </span><br><span class="line">    rise 1               </span><br><span class="line">&#125;</span><br><span class="line">       </span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface ens33    </span><br><span class="line">    mcast_src_ip 192.168.10.1</span><br><span class="line">    virtual_router_id 51    </span><br><span class="line">    priority 101          </span><br><span class="line">    advert_int 1         </span><br><span class="line">    authentication &#123;   </span><br><span class="line">        auth_type PASS </span><br><span class="line">        auth_pass 1111     </span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;    </span><br><span class="line">        192.168.10.188</span><br><span class="line">    &#125;</span><br><span class="line">      </span><br><span class="line">track_script &#123;               </span><br><span class="line">   chk_mysql_port             </span><br><span class="line">&#125;</span><br><span class="line">virtual_server 192.168.10.188 3306 &#123;</span><br><span class="line">    delay_loop 6               </span><br><span class="line">    lb_algo wrr             </span><br><span class="line">    lb_kind DR                 </span><br><span class="line">    #nat_mask 255.255.255.0</span><br><span class="line">    persistence_timeout 50     </span><br><span class="line">    protocol TCP              </span><br><span class="line">    </span><br><span class="line">    ## Real Server设置，3306就是连接端口</span><br><span class="line">    real_server 192.168.10.1 3306 &#123;</span><br><span class="line">        weight 3  ##权重</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">            connect_timeout 3</span><br><span class="line">            nb_get_retry 3</span><br><span class="line">            delay_before_retry 3</span><br><span class="line">            connect_port 3306</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    real_server 192.168.10.2 3306 &#123;</span><br><span class="line">        weight 3</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">            connect_timeout 3</span><br><span class="line">            nb_get_retry 3</span><br><span class="line">            delay_before_retry 3</span><br><span class="line">            connect_port 3306</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>master2机器上的keepalived.conf文件只修改优先级为90，nopreempt不设置，real_server设置本地IP。</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">! Configuration File for keepalived</span><br><span class="line">       </span><br><span class="line">global_defs &#123;</span><br><span class="line">router_id BACKUP-HA</span><br><span class="line">&#125;</span><br><span class="line">       </span><br><span class="line">vrrp_script chk_mysql_port &#123;</span><br><span class="line">    script &quot;&#x2F;etc&#x2F;keepalived&#x2F;chk_mysql.sh&quot;</span><br><span class="line">    interval 2            </span><br><span class="line">    weight -5                 </span><br><span class="line">    fall 2                 </span><br><span class="line">    rise 1               </span><br><span class="line">&#125;</span><br><span class="line">       </span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface ens33    </span><br><span class="line">    mcast_src_ip 192.168.10.2</span><br><span class="line">    virtual_router_id 51    </span><br><span class="line">    priority 99          </span><br><span class="line">    advert_int 1         </span><br><span class="line">    authentication &#123;   </span><br><span class="line">        auth_type PASS </span><br><span class="line">        auth_pass 1111     </span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;    </span><br><span class="line">        192.168.10.188</span><br><span class="line">    &#125;</span><br><span class="line">      </span><br><span class="line">track_script &#123;               </span><br><span class="line">   chk_mysql_port             </span><br><span class="line">&#125;</span><br><span class="line">virtual_server 192.168.10.188 3306 &#123;</span><br><span class="line">    delay_loop 6               #服务轮询的时间间隔</span><br><span class="line">    lb_algo wrr                #加权轮询调度，LVS调度算法 rr|wrr|lc|wlc|lblc|sh|sh</span><br><span class="line">    lb_kind DR                 #LVS集群模式 NAT|DR|TUN，其中DR模式要求负载均衡器网卡必须有一块与物理网卡在同一个网段</span><br><span class="line">    #nat_mask 255.255.255.0</span><br><span class="line">    persistence_timeout 50     #会话保持时间</span><br><span class="line">    protocol TCP              #健康检查协议</span><br><span class="line">    </span><br><span class="line">    ## Real Server设置，3306就是连接端口</span><br><span class="line">    real_server 192.168.10.1 3306 &#123;</span><br><span class="line">        weight 3  ##权重</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">            connect_timeout 3</span><br><span class="line">            nb_get_retry 3</span><br><span class="line">            delay_before_retry 3</span><br><span class="line">            connect_port 3306</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    real_server 192.168.10.2 3306 &#123;</span><br><span class="line">        weight 3</span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">            connect_timeout 3</span><br><span class="line">            nb_get_retry 3</span><br><span class="line">            delay_before_retry 3</span><br><span class="line">            connect_port 3306</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>编写切换脚本。KeepAlived做心跳检测，如果Master的MySQL服务挂了（3306端口挂了），那么它就会选择自杀。Slave的KeepAlived通过心跳检测发现这种情况，就会将VIP的请求接管。</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@master1 ~]# vim &#x2F;etc&#x2F;keepalived&#x2F;chk_mysql.sh</span><br><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">counter&#x3D;$(netstat -na|grep &quot;LISTEN&quot;|grep &quot;3306&quot;|wc -l)</span><br><span class="line">if [ &quot;$&#123;counter&#125;&quot; -eq 0 ]; then</span><br><span class="line">    &#x2F;etc&#x2F;init.d&#x2F;keepalived stop</span><br><span class="line">fi </span><br><span class="line">[root@master1 ~]# chmod 755 &#x2F;etc&#x2F;keepalived&#x2F;chk_mysql.sh</span><br></pre></td></tr></table></figure><p><strong>启动keepalived服务</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@master1 ~]# &#x2F;etc&#x2F;init.d&#x2F;keepalived start</span><br></pre></td></tr></table></figure><blockquote><p>正在启动keepalived：[确定]</p></blockquote><p><strong>在启动的时候有可能启动失败：vim /lib/systemd/system/keepalived.service在第7行</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PIDFile&#x3D;&#x2F;usr&#x2F;local&#x2F;program&#x2F;keepalived&#x2F;var&#x2F;run&#x2F;keepalived.pid      ##发现这个目录不存在，无法写入keepalived.pid  </span><br></pre></td></tr></table></figure><blockquote><p>修改成PIDFile = / var / run / keepalived.pid执行systemctl daemon-reload<br>重新加载 systemd，扫描新的或有移动的单元在运行就可以了/etc/init.d/keepalived start</p></blockquote><p><strong>ip addr可以看到vip在master上</strong></p><p><img src="https://www.xoxoyun.cn/usr/uploads/2020/01/2374467709.png" alt="请输入图片描述" title="请输入图片描述"></p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql -h192.168.10.188 -uroot1 -proot1</span><br><span class="line">show databases;</span><br></pre></td></tr></table></figure><p>在147服务上看ip addr也可以看到vip漂移到了192.168.10.2服务器上<br><img src="https://www.xoxoyun.cn/usr/uploads/2020/01/530623913.png" alt="请输入图片描述"></p><p><strong>上面那个脚本简单且粗暴，即脚本重新检测到Master的mysql服务关闭，就立即把keepalived服务关闭，无法实现vip转移，也就是当Master数据库恢复的是时候不能再切回来！</strong></p><p><strong>下面这个脚本可以实现当监测到Master的mysql服务关闭后，就会将vip切换到Backup上当Master的mysql服务恢复后，就会再次将VIP资源切回来</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">MYSQL&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;bin&#x2F;mysql</span><br><span class="line">MYSQL_HOST&#x3D;localhost</span><br><span class="line">MYSQL_USER&#x3D;root</span><br><span class="line">MYSQL_PASSWORD&#x3D;123456</span><br><span class="line">CHECK_TIME&#x3D;3</span><br><span class="line">  </span><br><span class="line">#mysql  is working MYSQL_OK is 1 , mysql down MYSQL_OK is 0</span><br><span class="line">  </span><br><span class="line">MYSQL_OK&#x3D;1</span><br><span class="line">  </span><br><span class="line">function check_mysql_helth ()&#123;</span><br><span class="line">    $MYSQL -h $MYSQL_HOST -u $MYSQL_USER -p$&#123;MYSQL_PASSWORD&#125; -e &quot;show status;&quot; &gt;&#x2F;dev&#x2F;null 2&gt;&amp;1</span><br><span class="line">    if [ $? &#x3D; 0 ] ;then</span><br><span class="line">    MYSQL_OK&#x3D;1</span><br><span class="line">    else</span><br><span class="line">    MYSQL_OK&#x3D;0</span><br><span class="line">    fi</span><br><span class="line">    return $MYSQL_OK</span><br><span class="line">&#125;</span><br><span class="line">while [ $CHECK_TIME -ne 0 ]</span><br><span class="line">do</span><br><span class="line">    let &quot;CHECK_TIME -&#x3D; 1&quot;</span><br><span class="line">    check_mysql_helth</span><br><span class="line">if [ $MYSQL_OK &#x3D; 1 ] ; then</span><br><span class="line">    CHECK_TIME&#x3D;0</span><br><span class="line">    exit 0</span><br><span class="line">fi</span><br><span class="line">if [ $MYSQL_OK -eq 0 ] &amp;&amp;  [ $CHECK_TIME -eq 0 ]</span><br><span class="line">then</span><br><span class="line">    pkill keepalived</span><br><span class="line">    exit 1</span><br><span class="line">fi</span><br><span class="line">sleep 1</span><br><span class="line">done</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
          <category> MySQL进阶 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux 系统故障排查</title>
      <link href="/posts/42560/"/>
      <url>/posts/42560/</url>
      
        <content type="html"><![CDATA[<h1 id="1-背景"><a href="#1-背景" class="headerlink" title="1. 背景"></a>1. 背景</h1><p>有时候会遇到一些疑难杂症，并且监控插件并不能一眼立马发现问题的根源。这时候就需要登录服务器进一步深入分析问题的根源。那么分析问题需要有一定的技术经验积累，并且有些问题涉及到的领域非常广，才能定位到问题。所以，分析问题和踩坑是非常锻炼一个人的成长和提升自我能力。如果我们有一套好的分析工具，那将是事半功倍，能够帮助大家快速定位问题，节省大家很多时间做更深入的事情。</p><h1 id="2-说明"><a href="#2-说明" class="headerlink" title="2. 说明"></a>2. 说明</h1><p>本篇文章主要介绍各种问题定位的工具以及会结合案例分析问题。</p><h1 id="3-分析问题的方法论"><a href="#3-分析问题的方法论" class="headerlink" title="3. 分析问题的方法论"></a>3. 分析问题的方法论</h1><p>套用5W2H方法，可以提出性能分析的几个问题</p><ul><li>What-现象是什么样的</li><li>When-什么时候发生</li><li>Why-为什么会发生</li><li>Where-哪个地方发生的问题</li><li>How much-耗费了多少资源</li><li>How to do-怎么解决问题</li></ul><h1 id="4-cpu"><a href="#4-cpu" class="headerlink" title="4. cpu"></a>4. cpu</h1><h2 id="4-1-说明"><a href="#4-1-说明" class="headerlink" title="4.1 说明"></a>4.1 说明</h2><p>针对应用程序，我们通常关注的是内核CPU调度器功能和性能。</p><p>线程的状态分析主要是分析线程的时间用在什么地方，而线程状态的分类一般分为：</p><p>a. on-CPU：执行中，执行中的时间通常又分为用户态时间user和系统态时间sys。<br>b. off-CPU：等待下一轮上CPU，或者等待I/O、锁、换页等等，其状态可以细分为可执行、匿名换页、睡眠、锁、空闲等状态。</p><p>如果大量时间花在CPU上，对CPU的剖析能够迅速解释原因；如果系统时间大量处于off-cpu状态，定位问题就会费时很多。但是仍然需要清楚一些概念：</p><ul><li>处理器</li><li>核</li><li>硬件线程</li><li>CPU内存缓存</li><li>时钟频率</li><li>每指令周期数CPI和每周期指令数IPC</li><li>CPU指令</li><li>使用率</li><li>用户时间／内核时间</li><li>调度器</li><li>运行队列</li><li>抢占</li><li>多进程</li><li>多线程</li><li>字长</li></ul><h2 id="4-2-分析工具"><a href="#4-2-分析工具" class="headerlink" title="4.2 分析工具"></a>4.2 分析工具</h2><p>工具</p><p>描述</p><p>uptime</p><p>平均负载</p><p>vmstat</p><p>包括系统范围的cpu平均负载</p><p>mpstat</p><p>查看所有cpu核信息</p><p>top</p><p>监控每个进程cpu用量</p><p>sar -u</p><p>查看cpu信息</p><p>pidstat</p><p>每个进程cpu用量分解</p><p>perf</p><p>cpu剖析和跟踪，性能计数分析</p><p>说明:</p><ul><li>uptime,vmstat,mpstat,top,pidstat只能查询到cpu及负载的的使用情况。</li><li>perf可以跟着到进程内部具体函数耗时情况，并且可以指定内核函数进行统计，指哪打哪。</li></ul><h2 id="4-3-使用方式"><a href="#4-3-使用方式" class="headerlink" title="4.3 使用方式"></a>4.3 使用方式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;查看系统cpu使用情况</span><br><span class="line">top</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;查看所有cpu核信息</span><br><span class="line">mpstat -P ALL 1</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;查看cpu使用情况以及平均负载</span><br><span class="line">vmstat 1</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;进程cpu的统计信息</span><br><span class="line">pidstat -u 1 -p pid</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;跟踪进程内部函数级cpu使用情况</span><br><span class="line">perf top -p pid -e cpu-clock</span><br></pre></td></tr></table></figure><h1 id="5-内存"><a href="#5-内存" class="headerlink" title="5. 内存"></a>5. 内存</h1><h2 id="5-1-说明"><a href="#5-1-说明" class="headerlink" title="5.1 说明"></a>5.1 说明</h2><p>内存是为提高效率而生，实际分析问题的时候，内存出现问题可能不只是影响性能，而是影响服务或者引起其他问题。同样对于内存有些概念需要清楚：</p><ul><li>主存</li><li>虚拟内存</li><li>常驻内存</li><li>地址空间</li><li>OOM</li><li>页缓存</li><li>缺页</li><li>换页</li><li>交换空间</li><li>交换</li><li>用户分配器libc、glibc、libmalloc和mtmalloc</li><li>LINUX内核级SLUB分配器</li></ul><h2 id="5-2-分析工具"><a href="#5-2-分析工具" class="headerlink" title="5.2 分析工具"></a>5.2 分析工具</h2><p>工具</p><p>描述</p><p>free</p><p>缓存容量统计信息</p><p>vmstat</p><p>虚拟内存统计信息</p><p>top</p><p>监视每个进程的内存使用情况</p><p>pidstat</p><p>显示活动进程的内存使用统计</p><p>pmap</p><p>查看进程的内存映像信息</p><p>sar -r</p><p>查看内存</p><p>dtrace</p><p>动态跟踪</p><p>valgrind</p><p>分析程序性能及程序中的内存泄露错误</p><p><strong>说明</strong>：</p><ul><li>free,vmstat,top,pidstat,pmap只能统计内存信息以及进程的内存使用情况。</li><li>valgrind可以分析内存泄漏问题。</li><li>dtrace动态跟踪。需要对内核函数有很深入的了解，通过D语言编写脚本完成跟踪。</li></ul><h2 id="5-3-使用方式"><a href="#5-3-使用方式" class="headerlink" title="5.3 使用方式"></a>5.3 使用方式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;查看系统内存使用情况</span><br><span class="line">free -m</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;虚拟内存统计信息</span><br><span class="line">vmstat 1</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;查看系统内存情况</span><br><span class="line">top</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;1s采集周期，获取内存的统计信息</span><br><span class="line">pidstat -p pid -r 1</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;查看进程的内存映像信息</span><br><span class="line">pmap -d pid</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;检测程序内存问题</span><br><span class="line">valgrind --tool&#x3D;memcheck --leak-check&#x3D;full --log-file&#x3D;.&#x2F;log.txt  .&#x2F;程序名</span><br></pre></td></tr></table></figure><h1 id="6-磁盘IO"><a href="#6-磁盘IO" class="headerlink" title="6. 磁盘IO"></a>6. 磁盘IO</h1><h2 id="6-1-说明"><a href="#6-1-说明" class="headerlink" title="6.1 说明"></a>6.1 说明</h2><p>磁盘通常是计算机最慢的子系统，也是最容易出现性能瓶颈的地方，因为磁盘离 CPU 距离最远而且 CPU 访问磁盘要涉及到机械操作，比如转轴、寻轨等。访问硬盘和访问内存之间的速度差别是以数量级来计算的，就像1天和1分钟的差别一样。要监测 IO 性能，有必要了解一下基本原理和 Linux 是如何处理硬盘和内存之间的 IO 的。</p><p>在理解磁盘IO之前，同样我们需要理解一些概念，例如：</p><ul><li>文件系统</li><li>VFS</li><li>文件系统缓存</li><li>页缓存page cache</li><li>缓冲区高速缓存buffer cache</li><li>目录缓存</li><li>inode</li><li>inode缓存</li><li>noop调用策略</li></ul><h2 id="6-2-分析工具"><a href="#6-2-分析工具" class="headerlink" title="6.2 分析工具"></a>6.2 分析工具</h2><p>工具</p><p>描述</p><p>iostat</p><p>磁盘详细统计信息</p><p>iotop</p><p>按进程查看磁盘IO的使用情况</p><p>pidstat</p><p>按进程查看磁盘IO的使用情况</p><p>perf</p><p>动态跟踪工具</p><h2 id="6-3-使用方式"><a href="#6-3-使用方式" class="headerlink" title="6.3 使用方式"></a>6.3 使用方式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;查看系统io信息</span><br><span class="line">iotop</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;统计io详细信息</span><br><span class="line">iostat -d -x -k 1 10</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;查看进程级io的信息</span><br><span class="line">pidstat -d 1 -p  pid</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;查看系统IO的请求，比如可以在发现系统IO异常时，可以使用该命令进行调查，就能指定到底是什么原因导致的IO异常</span><br><span class="line">perf record -e block:block_rq_issue -ag</span><br><span class="line">^C</span><br><span class="line">perf report</span><br></pre></td></tr></table></figure><h1 id="7-网络"><a href="#7-网络" class="headerlink" title="7. 网络"></a>7. 网络</h1><h2 id="7-1-说明"><a href="#7-1-说明" class="headerlink" title="7.1 说明"></a>7.1 说明</h2><p>网络的监测是所有 Linux 子系统里面最复杂的，有太多的因素在里面，比如：延迟、阻塞、冲突、丢包等，更糟的是与 Linux 主机相连的路由器、交换机、无线信号都会影响到整体网络并且很难判断是因为 Linux 网络子系统的问题还是别的设备的问题，增加了监测和判断的复杂度。现在我们使用的所有网卡都称为自适应网卡，意思是说能根据网络上的不同网络设备导致的不同网络速度和工作模式进行自动调整。</p><h2 id="7-2-分析工具"><a href="#7-2-分析工具" class="headerlink" title="7.2 分析工具"></a>7.2 分析工具</h2><p>工具</p><p>描述</p><p>ping</p><p>主要透过 ICMP 封包 来进行整个网络的状况报告</p><p>traceroute</p><p>用来检测发出数据包的主机到目标主机之间所经过的网关数量的工具</p><p>netstat</p><p>用于显示与IP、TCP、UDP和ICMP协议相关的统计数据，一般用于检验本机各端口的网络连接情况</p><p>ss</p><p>可以用来获取socket统计信息，而且比netstat更快速更高效</p><p>host</p><p>可以用来查出某个主机名的 IP,跟nslookup作用一样</p><p>tcpdump</p><p>是以包为单位进行输出的，阅读起来不是很方便</p><p>tcpflow</p><p>是面向tcp流的, 每个tcp传输会保存成一个文件,很方便的查看</p><p>sar -n DEV</p><p>网卡流量情况</p><p>sar -n SOCK</p><p>查询网络以及tcp，udp状态信息</p><h2 id="7-3-使用方式"><a href="#7-3-使用方式" class="headerlink" title="7.3 使用方式"></a>7.3 使用方式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;显示网络统计信息</span><br><span class="line">netstat -s</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;显示当前UDP连接状况</span><br><span class="line">netstat -nu</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;显示UDP端口号的使用情况</span><br><span class="line">netstat -apu</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;统计机器中网络连接各个状态个数</span><br><span class="line">netstat -a | awk &#39;&#x2F;^tcp&#x2F; &#123;++S[$NF]&#125; END &#123;for(a in S) print a, S[a]&#125;&#39;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;显示TCP连接</span><br><span class="line">ss -t -a</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;显示sockets摘要信息</span><br><span class="line">ss -s</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;显示所有udp sockets</span><br><span class="line">ss -u -a</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;tcp,etcp状态</span><br><span class="line">sar -n TCP,ETCP 1</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;查看网络IO</span><br><span class="line">sar -n DEV 1</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;抓包以包为单位进行输出</span><br><span class="line">tcpdump -i eth1 host 192.168.1.1 and port 80 </span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;抓包以流为单位显示数据内容</span><br><span class="line">tcpflow -cp host 192.168.1.1</span><br></pre></td></tr></table></figure><h1 id="8-系统负载"><a href="#8-系统负载" class="headerlink" title="8. 系统负载"></a>8. 系统负载</h1><h2 id="8-1-说明"><a href="#8-1-说明" class="headerlink" title="8.1 说明"></a>8.1 说明</h2><p>Load 就是对计算机干活多少的度量（WikiPedia：the system Load is a measure of the amount of work that a compute system is doing）简单的说是进程队列的长度。Load Average 就是一段时间（1分钟、5分钟、15分钟）内平均Load。</p><h2 id="8-2-分析工具"><a href="#8-2-分析工具" class="headerlink" title="8.2 分析工具"></a>8.2 分析工具</h2><p>工具</p><p>描述</p><p>top</p><p>查看系统负载情况</p><p>uptime</p><p>查看系统负载情况</p><p>strace</p><p>统计跟踪内核态信息</p><p>vmstat</p><p>查看负载情况</p><p>dmesg</p><p>查看内核日志信息</p><h2 id="8-3使用方式"><a href="#8-3使用方式" class="headerlink" title="8.3使用方式"></a>8.3使用方式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;查看负载情况</span><br><span class="line">uptime</span><br><span class="line"></span><br><span class="line">top</span><br><span class="line"></span><br><span class="line">vmstat</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;统计系统调用耗时情况</span><br><span class="line">strace -c -p pid</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;跟踪指定的系统操作例如epoll_wait</span><br><span class="line">strace -T -e epoll_wait -p pid</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;查看内核日志信息</span><br><span class="line">dmesg</span><br></pre></td></tr></table></figure><h1 id="9-火焰图"><a href="#9-火焰图" class="headerlink" title="9. 火焰图"></a>9. 火焰图</h1><h2 id="9-1-说明"><a href="#9-1-说明" class="headerlink" title="9.1 说明"></a>9.1 说明</h2><p><a href="https://links.jianshu.com/go?to=http://www.brendangregg.com/flamegraphs.html">火焰图（Flame Graph</a>是 Bredan Gregg 创建的一种性能分析图表，因为它的样子近似 ?而得名。<br>火焰图主要是用来展示 CPU的调用栈。<br>y 轴表示调用栈，每一层都是一个函数。调用栈越深，火焰就越高，顶部就是正在执行的函数，下方都是它的父函数。<br>x 轴表示抽样数，如果一个函数在 x 轴占据的宽度越宽，就表示它被抽到的次数多，即执行的时间长。注意，x 轴不代表时间，而是所有的调用栈合并后，按字母顺序排列的。</p><p>火焰图就是看顶层的哪个函数占据的宽度最大。只要有”平顶”（plateaus），就表示该函数可能存在性能问题。颜色没有特殊含义，因为火焰图表示的是 CPU 的繁忙程度，所以一般选择暖色调。</p><p>常见的火焰图类型有<a href="https://links.jianshu.com/go?to=http://www.brendangregg.com/FlameGraphs/cpuflamegraphs.html">On-CPU</a>、<a href="https://links.jianshu.com/go?to=http://www.brendangregg.com/FlameGraphs/offcpuflamegraphs.html">Off-CPU</a>、<a href="https://links.jianshu.com/go?to=http://www.brendangregg.com/FlameGraphs/memoryflamegraphs.html">Memory</a>、<a href="https://links.jianshu.com/go?to=http://www.brendangregg.com/FlameGraphs/hotcoldflamegraphs.html">Hot/Cold</a>、<a href="https://links.jianshu.com/go?to=http://www.brendangregg.com/blog/2014-11-09/differential-flame-graphs.html">Differential</a>等等。</p><h2 id="9-2-安装依赖库"><a href="#9-2-安装依赖库" class="headerlink" title="9.2 安装依赖库"></a>9.2 安装依赖库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;安装systemtap，默认系统已安装</span><br><span class="line">yum install systemtap systemtap-runtime</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;内核调试库必须跟内核版本对应，例如：uname -r 2.6.18-308.el5</span><br><span class="line">kernel-debuginfo-2.6.18-308.el5.x86_64.rpm</span><br><span class="line">kernel-devel-2.6.18-308.el5.x86_64.rpm</span><br><span class="line">kernel-debuginfo-common-2.6.18-308.el5.x86_64.rpm</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;安装内核调试库</span><br><span class="line">debuginfo-install --enablerepo&#x3D;debuginfo search kernel</span><br><span class="line">debuginfo-install --enablerepo&#x3D;debuginfo  search glibc</span><br></pre></td></tr></table></figure><h2 id="9-3-安装"><a href="#9-3-安装" class="headerlink" title="9.3 安装"></a>9.3 安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;lidaohang&#x2F;quick_location.git</span><br><span class="line">cd quick_location</span><br></pre></td></tr></table></figure><h2 id="9-4-CPU级别火焰图"><a href="#9-4-CPU级别火焰图" class="headerlink" title="9.4 CPU级别火焰图"></a>9.4 CPU级别火焰图</h2><p>cpu占用过高，或者使用率提不上来，你能快速定位到代码的哪块有问题吗？<br>一般的做法可能就是通过日志等方式去确定问题。现在我们有了火焰图，能够非常清晰的发现哪个函数占用cpu过高，或者过低导致的问题。</p><h3 id="9-4-1-on-CPU"><a href="#9-4-1-on-CPU" class="headerlink" title="9.4.1 on-CPU"></a>9.4.1 on-CPU</h3><p>cpu占用过高，执行中的时间通常又分为用户态时间user和系统态时间sys。</p><p><strong>使用方式：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;on-CPU user</span><br><span class="line">sh ngx_on_cpu_u.sh pid</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;进入结果目录</span><br><span class="line">cd ngx_on_cpu_u</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;on-CPU kernel</span><br><span class="line">sh ngx_on_cpu_k.sh pid</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;进入结果目录</span><br><span class="line">cd ngx_on_cpu_k</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;开一个临时端口8088</span><br><span class="line">python -m SimpleHTTPServer 8088</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;打开浏览器输入地址</span><br><span class="line">127.0.0.1:8088&#x2F;pid.svg</span><br></pre></td></tr></table></figure><p><strong>DEMO：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line"></span><br><span class="line">void foo3()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void foo2()</span><br><span class="line">&#123;</span><br><span class="line">  int i;</span><br><span class="line">  for(i&#x3D;0 ; i &lt; 10; i++)</span><br><span class="line">       foo3();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void foo1()</span><br><span class="line">&#123;</span><br><span class="line">  int i;</span><br><span class="line">  for(i &#x3D; 0; i&lt; 1000; i++)</span><br><span class="line">     foo3();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">  int i;</span><br><span class="line">  for( i &#x3D;0; i&lt; 1000000000; i++) &#123;</span><br><span class="line">      foo1();</span><br><span class="line">      foo2();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>DEMO火焰图：</strong>  </p><p><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071223395111-1024x135.jpg"></p><p>image</p><h3 id="9-4-2-off-CPU"><a href="#9-4-2-off-CPU" class="headerlink" title="9.4.2 off-CPU"></a>9.4.2 off-CPU</h3><p>cpu过低，利用率不高。等待下一轮CPU，或者等待I/O、锁、换页等等，其状态可以细分为可执行、匿名换页、睡眠、锁、空闲等状态。</p><p><strong>使用方式：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; off-CPU user</span><br><span class="line">sh ngx_off_cpu_u.sh pid</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;进入结果目录</span><br><span class="line">cd ngx_off_cpu_u</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;off-CPU kernel</span><br><span class="line">sh ngx_off_cpu_k.sh pid</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;进入结果目录</span><br><span class="line">cd ngx_off_cpu_k</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;开一个临时端口8088</span><br><span class="line">python -m SimpleHTTPServer 8088</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;打开浏览器输入地址</span><br><span class="line">127.0.0.1:8088&#x2F;pid.svg</span><br></pre></td></tr></table></figure><p><strong>官网DEMO：</strong>  </p><p><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071223405334-1024x454.png"></p><p>image.png</p><h2 id="9-5-内存级别火焰图"><a href="#9-5-内存级别火焰图" class="headerlink" title="9.5 内存级别火焰图"></a>9.5 内存级别火焰图</h2><p>如果线上程序出现了内存泄漏，并且只在特定的场景才会出现。这个时候我们怎么办呢？有什么好的方式和工具能快速的发现代码的问题呢？同样内存级别火焰图帮你快速分析问题的根源。</p><p><strong>使用方式：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sh ngx_on_memory.sh pid</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;进入结果目录</span><br><span class="line">cd ngx_on_memory</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;开一个临时端口8088</span><br><span class="line">python -m SimpleHTTPServer 8088</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;打开浏览器输入地址</span><br><span class="line">127.0.0.1:8088&#x2F;pid.svg​</span><br></pre></td></tr></table></figure><p><strong>官网DEMO：</strong></p><p><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071223411587-1024x328.png"></p><p>image.png</p><h2 id="9-6-性能回退-红蓝差分火焰图"><a href="#9-6-性能回退-红蓝差分火焰图" class="headerlink" title="9.6 性能回退-红蓝差分火焰图"></a>9.6 性能回退-红蓝差分火焰图</h2><p>你能快速定位CPU性能回退的问题么？ 如果你的工作环境非常复杂且变化快速，那么使用现有的工具是来定位这类问题是很具有挑战性的。当你花掉数周时间把根因找到时，代码已经又变更了好几轮，新的性能问题又冒了出来。主要可以用到每次构建中，每次上线做对比看，如果损失严重可以立马解决修复。</p><p>通过抓取了两张普通的火焰图，然后进行对比，并对差异部分进行标色：红色表示上升，蓝色表示下降。 差分火焰图是以当前（“修改后”）的profile文件作为基准，形状和大小都保持不变。因此你通过色彩的差异就能够很直观的找到差异部分，且可以看出为什么会有这样的差异。</p><p><strong>使用方式：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">cd quick_location</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;抓取代码修改前的profile 1文件</span><br><span class="line">perf record -F 99 -p pid -g -- sleep 30</span><br><span class="line">perf script &gt; out.stacks1</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;抓取代码修改后的profile 2文件</span><br><span class="line">perf record -F 99 -p pid -g -- sleep 30</span><br><span class="line">perf script &gt; out.stacks2</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;生成差分火焰图:</span><br><span class="line">.&#x2F;FlameGraph&#x2F;stackcollapse-perf.pl ..&#x2F;out.stacks1 &gt; out.folded1</span><br><span class="line">.&#x2F;FlameGraph&#x2F;stackcollapse-perf.pl ..&#x2F;out.stacks2 &gt; out.folded2</span><br><span class="line">.&#x2F;FlameGraph&#x2F;difffolded.pl out.folded1 out.folded2 | .&#x2F;FlameGraph&#x2F;flamegraph.pl &gt; diff2.svg</span><br></pre></td></tr></table></figure><p><strong>DEMO：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;test.c</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line"></span><br><span class="line">void foo3()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void foo2()</span><br><span class="line">&#123;</span><br><span class="line">  int i;</span><br><span class="line">  for(i&#x3D;0 ; i &lt; 10; i++)</span><br><span class="line">       foo3();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void foo1()</span><br><span class="line">&#123;</span><br><span class="line">  int i;</span><br><span class="line">  for(i &#x3D; 0; i&lt; 1000; i++)</span><br><span class="line">     foo3();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">  int i;</span><br><span class="line">  for( i &#x3D;0; i&lt; 1000000000; i++) &#123;</span><br><span class="line">      foo1();</span><br><span class="line">      foo2();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;test1.c</span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line"></span><br><span class="line">void foo3()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void foo2()</span><br><span class="line">&#123;</span><br><span class="line">  int i;</span><br><span class="line">  for(i&#x3D;0 ; i &lt; 10; i++)</span><br><span class="line">       foo3();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void foo1()</span><br><span class="line">&#123;</span><br><span class="line">  int i;</span><br><span class="line">  for(i &#x3D; 0; i&lt; 1000; i++)</span><br><span class="line">     foo3();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void add()</span><br><span class="line">&#123;</span><br><span class="line">  int i;</span><br><span class="line">  for(i &#x3D; 0; i&lt; 10000; i++)</span><br><span class="line">     foo3();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">  int i;</span><br><span class="line">  for( i &#x3D;0; i&lt; 1000000000; i++) &#123;</span><br><span class="line">      foo1();</span><br><span class="line">      foo2();</span><br><span class="line">      add();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>DEMO红蓝差分火焰图：</strong>  </p><p><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071223413661-1024x234.jpg"></p><p>diff (1).png</p><h1 id="10-案例分析"><a href="#10-案例分析" class="headerlink" title="10. 案例分析"></a>10. 案例分析</h1><h2 id="10-1-接入层nginx集群异常现象"><a href="#10-1-接入层nginx集群异常现象" class="headerlink" title="10.1 接入层nginx集群异常现象"></a>10.1 接入层nginx集群异常现象</h2><p>通过监控插件发现在2017.09.25 19点nginx集群请求流量出现大量的499，5xx状态码。并且发现机器cpu使用率升高，目前一直持续中。</p><h2 id="10-2-分析nginx相关指标"><a href="#10-2-分析nginx相关指标" class="headerlink" title="10.2 分析nginx相关指标"></a>10.2 分析nginx相关指标</h2><p><strong>a) ****分析nginx请求流量：</strong></p><p><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071223421025-1024x244.png"></p><p>image.png</p><p><strong>结论：</strong></p><p>通过上图发现流量并没有突增，反而下降了，跟请求流量突增没关系。</p><p><strong>b) ****分析nginx响应时间</strong></p><p><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071223422964-1024x272.png"></p><p>image.png</p><p><strong>结论：</strong></p><p>通过上图发现nginx的响应时间有增加可能跟nginx自身有关系或者跟后端upstream响应时间有关系。</p><p><strong>c) ****分析nginx upstream响应时间</strong></p><p><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071223424261-1024x261.png"></p><p>image.png</p><p><strong>结论：</strong></p><p>通过上图发现nginx upstream 响应时间有增加，目前猜测可能后端upstream响应时间拖住nginx，导致nginx出现请求流量异常。</p><h2 id="10-3-分析系统cpu情况"><a href="#10-3-分析系统cpu情况" class="headerlink" title="10.3 分析系统cpu情况"></a>10.3 分析系统cpu情况</h2><p><strong>a) ****通过top观察系统指标</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top</span><br></pre></td></tr></table></figure><p><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071223430153.png"></p><p>image.png</p><p><strong>结论：</strong></p><p>发现nginx worker cpu比较高</p><p><strong>b) ****分析nginx进程内部cpu情况</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perf top -p pid</span><br></pre></td></tr></table></figure><p><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071223431479-1024x723.png"></p><p>image.png</p><p><strong>结论：</strong></p><p>发现主要开销在free,malloc,json解析上面</p><h2 id="10-4-火焰图分析cpu"><a href="#10-4-火焰图分析cpu" class="headerlink" title="10.4 火焰图分析cpu"></a>10.4 火焰图分析cpu</h2><p><strong>a) ****生成用户态cpu火焰图</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;on-CPU user</span><br><span class="line">sh ngx_on_cpu_u.sh pid</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;进入结果目录</span><br><span class="line">cd ngx_on_cpu_u</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;开一个临时端口8088</span><br><span class="line">python -m SimpleHTTPServer 8088</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;打开浏览器输入地址</span><br><span class="line">127.0.0.1:8088&#x2F;pid.svg</span><br></pre></td></tr></table></figure><p><img src="https://blog.kococ.cn/wp-content/uploads/2020/07/2020071223433345-1024x576.png"></p><p>image.png</p><p><strong>结论：</strong></p><p>发现代码里面有频繁的解析json操作，并且发现这个json库性能不高，占用cpu挺高。</p><h2 id="10-5-案例总结"><a href="#10-5-案例总结" class="headerlink" title="10.5 案例总结"></a>10.5 案例总结</h2><p>**a) **分析请求流量异常，得出nginx upstream后端机器响应时间拉长</p><p>**b) **分析nginx进程cpu高，得出nginx内部模块代码有耗时的json解析以及内存分配回收操作</p><h3 id="10-5-1-深入分析"><a href="#10-5-1-深入分析" class="headerlink" title="10.5.1 深入分析"></a>10.5.1 深入分析</h3><p>根据以上两点问题分析的结论，我们进一步深入分析。</p><p>后端upstream响应拉长，最多可能影响nginx的处理能力。但是不可能会影响nginx内部模块占用过多的cpu操作。并且当时占用cpu高的模块，是在请求的时候才会走的逻辑。不太可能是upstram后端拖住nginx，从而触发这个cpu的耗时操作。</p><h3 id="10-5-2-解决方式"><a href="#10-5-2-解决方式" class="headerlink" title="10.5.2 解决方式"></a>10.5.2 解决方式</h3><p>遇到这种问题，我们优先解决已知的，并且非常明确的问题。那就是cpu高的问题。解决方式先降级关闭占用cpu过高的模块，然后进行观察。经过降级关闭该模块cpu降下来了，并且nginx请求流量也正常了。之所以会影响upstream时间拉长，因为upstream后端的服务调用的接口可能是个环路再次走回到nginx。</p><h1 id="11-参考资料"><a href="#11-参考资料" class="headerlink" title="11. 参考资料"></a>11. 参考资料</h1><ul><li><a href="https://links.jianshu.com/go?to=http://www.brendangregg.com/index.html">http://www.brendangregg.com/index.html</a></li><li><a href="https://links.jianshu.com/go?to=http://www.brendangregg.com/FlameGraphs/cpuflamegraphs.html">http://www.brendangregg.com/FlameGraphs/cpuflamegraphs.html</a></li><li><a href="https://links.jianshu.com/go?to=http://www.brendangregg.com/FlameGraphs/memoryflamegraphs.html">http://www.brendangregg.com/FlameGraphs/memoryflamegraphs.html</a></li><li><a href="https://links.jianshu.com/go?to=http://www.brendangregg.com/FlameGraphs/offcpuflamegraphs.html">http://www.brendangregg.com/FlameGraphs/offcpuflamegraphs.html</a></li><li><a href="https://links.jianshu.com/go?to=http://www.brendangregg.com/blog/2014-11-09/differential-flame-graphs.html">http://www.brendangregg.com/blog/2014-11-09/differential-flame-graphs.html</a></li><li><a href="https://links.jianshu.com/go?to=https://github.com/openresty/openresty-systemtap-toolkit">https://github.com/openresty/openresty-systemtap-toolkit</a></li><li><a href="https://links.jianshu.com/go?to=https://github.com/brendangregg/FlameGraph">https://github.com/brendangregg/FlameGraph</a></li><li><a href="https://links.jianshu.com/go?to=https://www.slideshare.net/brendangregg/blazing-performance-with-flame-graphs">https://www.slideshare.net/brendangregg/blazing-performance-with-flame-graphs</a></li></ul><p>作者：Lucien_168<br>链接：<a href="https://www.jianshu.com/p/0bbac570fa4c">https://www.jianshu.com/p/0bbac570fa4c</a><br>来源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
          <category> 云计算 </category>
          
          <category> 杂谈 </category>
          
          <category> 监控 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>记一次源码编译安装 LAMP（附源码包）</title>
      <link href="/posts/30022/"/>
      <url>/posts/30022/</url>
      
        <content type="html"><![CDATA[<h1 id="源码编译安装-LAMP"><a href="#源码编译安装-LAMP" class="headerlink" title="源码编译安装 LAMP"></a>源码编译安装 LAMP</h1><p><strong>为什么要源码编译</strong><br>一般来说，我们软件的安装方式有 yum（rpm），和源码编译两种方式，那么为什么我们需要源码编译安装一部分软件？选择源码编译安装软件有以下几个原因：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1：满足不同的运行平台，我们Linux发型版本众多，但是每个版本采用的软件或者内核版本都不一样，而我们的二进制包所依赖的环境不一定能够正常运行，所以大部分软件直接提供源码！</span><br><span class="line">2：方便定制，满足不同的需求，很多时候我们所需要的软件都是可以定制的，我需要什么就安装什么，大多数二进制代码都是一键装全，所以自由度并不高！</span><br><span class="line">3：方便运维、开发人员维护，我们的源码是可以打包二进制的，但是对于这个软件的打包都会有一份代价不小的额外工作，包括维护，所以如果是源码的话，软件产商会直接维护，但是如果是二进制的话，一般都是Linux发行商提供！</span><br></pre></td></tr></table></figure><p><strong>什么是 LAMP</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LAMP&#x3D;Linux Apache Mysql&#x2F;MariaDB PHP&#x2F;Perl&#x2F;Python 这些软件都是开源免费的软件，几个程序各自是独立的，经常为了达到我们需要的效果而协同工作，组成了我们常见的LAMP架构平台!LAMP是世界上最流行的组合，当然同时也有Nginx，也就是LNMP: LAMP 相对于 NGINX 来说较为安全，但是Nginx处理高并发比Apache要强，NGINX 相对于 LAMP 来说安全较为差一点，同样的配制环境负载远远高于 LAMP 向国内的一些大公司，淘宝、新浪都在用这一些 NGINX，向那么大的公司网站需要用到服务器群用LAMP搭建环境成本远远大于NGINX。打个比方本来1000000W访问量需要 10台LAMP环境服务器才能完成，但是使用NGINX也许只需要5、6台这样一来对于这样的公司来说就大大的节约了成本。</span><br><span class="line">从网站的流量上来说，70%以上的访问流量是LAMP来提供的，LAMP是最强大的网站解决方案，在以前这句话没有错，但是在现在，这句话有待证实！！！因为在以后的过程中，会发现我们会使用的架构是Nginx和Apache结合使用：使用Nginx可以做集群等相关配置，可以和apache一起使用，有的会用apache去跑php，然后用nginx做反向代理，比如apache运行在8080端口，nginx在80端口，访问php文件时，反向代理到apache，静态页通过nginx处理。nginx支持高并发，apache对php的运行比较稳定。</span><br><span class="line">常见的网页类型：htm,html,shtml,stm.php,asp,aspx,shtm,jsp等等Apache本事只处理静态页面，处理动态页面需要使用libphp5.so这个模块去工作，编译php也其实是将一个至关重要的模块打入到apache内部，然后apache收到php请求，将请求交给这个模块来处理！</span><br></pre></td></tr></table></figure><p>Apache 工作原理：<br>Apache 本身只处理 html 静态语言页面，当客户端需要访问 php 页面的时候，Apache 会调用 libphp5.so 这个模块去工作，这个模块会把 php 页面转换成 html 静态页面，让 Apache 处理，Apache 处理过，会返回给客户端</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LAMP相关网站</span><br></pre></td></tr></table></figure><p>Apache=<a href="http://httpd.apache.org/">http://httpd.apache.org/</a> httpd 主程序包<br>MySQL=<a href="http://dev.mysql.com/downloads/mysql/">http://dev.mysql.com/downloads/mysql/</a> mysql 主程序包<br>PHP=<a href="http://php.net/downloads.php">http://php.net/downloads.php</a> php 主程序包<br>apr=<a href="http://apr.apache.org/">http://apr.apache.org/</a> apr 是 httpd 的依赖包<br>apr-util=<a href="http://apr.apache.org/">http://apr.apache.org/</a> apr-util 是 httpd 的第二个依赖包<br>apr 和 apr-util 这个两个软件是对后端服务软件进行优化的，<br>apr-util 只是在 apr 的基础上提供了更多的数据结构和操作系统封装接口而已。<br>pcre 是 httpd 的第三个依赖包 <a href="http://pcre.org/">http://pcre.org/</a></p><p>PCRE (Perl Compatible Regular Expressions 中文含义：perl 语言兼容正则表达式) 是一个用 C 语言编写的正则表达式函数库，PCRE 被广泛使用在许多开源软件之中，最著名的莫过于 Apache HTTP 服务器和 PHP 脚本语言、R 脚本语言，此外，正如从其名字所能看到的，PCRE 也是 perl 语言的缺省正则库。</p><p>对应我们源码编译的版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">     编译安装LAMP所需要及其所使用的源码版本：</span><br><span class="line">               httpd version：httpd-2.4.16</span><br><span class="line">               apr version：apr-1.5.2</span><br><span class="line">               pcre version：pcre-8.37</span><br><span class="line">               apr-util version：apr-util-1.5.4</span><br><span class="line">               mysql version：mysql-5.6.26</span><br><span class="line">               php version：php-5.6.13</span><br><span class="line">安装之前需要注意：</span><br></pre></td></tr></table></figure><p><strong>LAMP 源码编译的基础环境</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@Andu101 ~]# lsb_release -a</span><br><span class="line">……</span><br><span class="line">Description:        Red Hat Enterprise Linux Server release 6.5(Santiago)</span><br><span class="line">……</span><br><span class="line">        [root@Andu101 ~]# uname -a</span><br><span class="line">Linux Andu101.cn 2.6.32-431.el6.x86_64 …</span><br></pre></td></tr></table></figure><p><strong>确保系统的干净的系统，不要和现在源码编译安装的软件冲突</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">不要在一个系统上同时存在 RPM-Apache+源码-Apache</span><br></pre></td></tr></table></figure><p><strong>建议在编译之前，把开发包组安装：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;Development Tools&quot;和 &quot;Development Libraries&quot;</span><br><span class="line">yum groupinstall &quot;Development Tools&quot; &quot;Development Libraries&quot; -y</span><br><span class="line"> [root@Andu101 ~]# yum install gcc gcc-c++ openssl-devel -y   </span><br></pre></td></tr></table></figure><p>所有软件 ====&gt;<a href="http://cloud.xoxoyun.cn/index.php?share/folder&user=1&sid=Gjfd8rIt">・直通车・点击下载</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@Andu101 ~]# ls</span><br><span class="line">apr-1.5.2.tar.gz            httpd-2.4.16.tar.bz2    pcre-8.37.tar.bz2</span><br><span class="line">apr-util-1.5.4.tar.bz2      mysql-5.6.26.tar.gz     php-5.6.13.tar.bz2</span><br></pre></td></tr></table></figure><p>apr 和 apr-util 依赖<br>apr 和 apr-util 独立编译</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@Andu101 ~]# tar xf apr-1.5.2.tar.gz -C &#x2F;usr&#x2F;local&#x2F;src&#x2F; &amp;&amp;tar xf apr-util-1.5.4.tar.bz2 -C &#x2F;usr&#x2F;local&#x2F;src&#x2F;</span><br><span class="line">[root@Andu101 ~]# cd &#x2F;usr&#x2F;local&#x2F;src&#x2F;apr-1.5.2&#x2F; &amp;&amp; .&#x2F;configure --prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;apr &amp;&amp; make -j 2 &amp;&amp; make install</span><br><span class="line">[root@Andu101 apr-1.5.2]# cd ..&#x2F;apr-util-1.5.4&#x2F; &amp;&amp; .&#x2F;configure --prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;apr-util --with-apr&#x3D;&#x2F;usr&#x2F;local&#x2F;apr &amp;&amp; make -j 2 &amp;&amp; make install</span><br><span class="line">[root@Andu101 apr-util-1.5.4]# cd &amp;&amp; tar xf pcre-8.37.tar.bz2 -C &#x2F;usr&#x2F;local&#x2F;src&#x2F;</span><br><span class="line"></span><br><span class="line">[root@Andu101 ~]# cd &#x2F;usr&#x2F;local&#x2F;src&#x2F;pcre-8.37&#x2F; &amp;&amp; .&#x2F;configure --prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;pcre &amp;&amp; make -j 2 &amp;&amp; make install &amp;&amp; cd</span><br></pre></td></tr></table></figure><h2 id="Apache-源码编译"><a href="#Apache-源码编译" class="headerlink" title="Apache 源码编译"></a><strong>Apache 源码编译</strong></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">依赖环境安装完成，开始编译安装apache</span><br><span class="line">[root@Andu101 ~]# tar xvf httpd-2.4.16.tar.bz2 -C &#x2F;usr&#x2F;local&#x2F;src&#x2F; &amp;&amp; cd &#x2F;usr&#x2F;local&#x2F;src&#x2F;httpd-2.4.16</span><br><span class="line">[root@Andu101 httpd-2.4.16]# .&#x2F;configure --prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;apache2.4 --enable-so --enable-rewrite --enable-ssl --with-pcre&#x3D;&#x2F;usr&#x2F;local&#x2F;pcre --with-apr&#x3D;&#x2F;usr&#x2F;local&#x2F;apr --with-apr-util&#x3D;&#x2F;usr&#x2F;local&#x2F;apr-util --enable-modules&#x3D;most --enable-mpms-shared&#x3D;all --with-mpm&#x3D;event &amp;&amp; make -j 2 &amp;&amp; make install </span><br><span class="line">--prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;apache2.4                       #安装路径</span><br><span class="line">--enable-so                                         #支持动态加载模块</span><br><span class="line">--enable-rewrite                                    #支持网站地址重写</span><br><span class="line">--enable-ssl                                        #支持SSL加密</span><br><span class="line">--with-pcre&#x3D;&#x2F;usr&#x2F;local&#x2F;pcre                         #pcre路径</span><br><span class="line">--with-apr&#x3D;&#x2F;usr&#x2F;local&#x2F;apr                           #apr路径</span><br><span class="line">--with-apr-util&#x3D;&#x2F;usr&#x2F;local&#x2F;apr-util                 #apr-util路径</span><br></pre></td></tr></table></figure><p>一共有三种稳定的 MPM（Multi-Processing Module，多进程处理模块）模式。它们分别是 prefork，worker 和 event，它们同时也代表这 Apache 的演变和发展。<br><strong>配置 Apache 的启动脚本</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@Andu101 ~]# cp &#x2F;usr&#x2F;local&#x2F;apache2.4&#x2F;bin&#x2F;apachectl  &#x2F;etc&#x2F;init.d&#x2F;apache2.4</span><br></pre></td></tr></table></figure><p><strong>若是你按照我的实验环境安装了桌面，那么需要停掉 httpd 服务，若不是，则不需要</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@Andu101 ~]# &#x2F;etc&#x2F;init.d&#x2F;httpd stop</span><br><span class="line">[root@Andu101 ~]# chkconfig httpd off</span><br></pre></td></tr></table></figure><p><strong>编辑启动脚本文件</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> [root@Andu101 ~]# vim &#x2F;etc&#x2F;init.d&#x2F;apache2.4</span><br><span class="line">#!&#x2F;bin&#x2F;sh</span><br><span class="line"># chkconfig: 2345 64 36           </span><br></pre></td></tr></table></figure><p><strong># 这个是启动级别的服务，2345 是指那些级别启动，64 是开启顺序，应该在 network 服务的后面，36 是关闭顺序，应该在 network 的前面，这里并不是注释 #默认 network 的是：2345 10 90</strong><br># description: Apache2.4.16 start script #描述字段，有了这两个字段，就可以用 chkconfig 命令控制</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@Andu101 ~]# service apache2.4 start</span><br><span class="line">[root@Andu101 ~]# chkconfig apache2.4 on</span><br></pre></td></tr></table></figure><p><strong>Apache 安装完成需要注意的地方</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">     [root@Andu101 ~]# ps -aux | grep apache     &#x2F;&#x2F;源码编译apache，运行用户为deamon</span><br><span class="line">Warning: bad syntax, perhaps a bogus &#39;-&#39;? See &#x2F;usr&#x2F;share&#x2F;doc&#x2F;procps-3.2.8&#x2F;FAQ</span><br><span class="line">root        43191  0.0  0.0  70632  2184?  Ss   16:54   0:00&#x2F;usr&#x2F;local&#x2F;apache2.4&#x2F;bin&#x2F;httpd -k start</span><br><span class="line">daemon      43192  0.0  0.1663500  4820?  Sl   16:54   0:00&#x2F;usr&#x2F;local&#x2F;apache2.4&#x2F;bin&#x2F;httpd -k start</span><br><span class="line">daemon      43193  0.0  0.1414892  4184?  Sl   16:54   0:00&#x2F;usr&#x2F;local&#x2F;apache2.4&#x2F;bin&#x2F;httpd -k start</span><br><span class="line">daemon      43194  0.0  0.1414892  4188?  Sl   16:54   0:00&#x2F;usr&#x2F;local&#x2F;apache2.4&#x2F;bin&#x2F;httpd -k start</span><br><span class="line">root        43344  0.0  0.0103244  864 pts&#x2F;0 S+ 17:12   0:00 grep apache</span><br><span class="line">         [root@Andu101 ~]# id daemon                                   &#x2F;&#x2F;编译安装运行用户身份是daemon</span><br><span class="line">uid&#x3D;2(daemon) gid&#x3D;2(daemon) groups&#x3D;2(daemon),1(bin),4(adm),7(lp)</span><br><span class="line">[root@Andu101 ~]# useradd -M -s &#x2F;sbin&#x2F;nologin apache                           &#x2F;&#x2F;创建一个用户用来运行apache</span><br><span class="line">        [root@Andu101 ~]# vim &#x2F;usr&#x2F;local&#x2F;apache2.4&#x2F;conf&#x2F;httpd.conf           &#x2F;&#x2F;修改配置文件改变apache运行身份</span><br><span class="line">User apache                     #运行用户</span><br><span class="line">Group apache                    #运行组，创建apache的时候已经即时创建了apache这个组</span><br><span class="line">         [root@Andu101 ~]# id apache</span><br><span class="line">uid&#x3D;500(apache) gid&#x3D;500(apache) groups&#x3D;500(apache)</span><br></pre></td></tr></table></figure><p><strong>更改目录权限</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@Andu101 ~]# chown -R apache:apache &#x2F;usr&#x2F;local&#x2F;apache2.4&#x2F;       &#x2F;&#x2F;默认是root，改为apache</span><br></pre></td></tr></table></figure><h2 id="MYSQL-源码编译"><a href="#MYSQL-源码编译" class="headerlink" title="MYSQL 源码编译"></a>MYSQL 源码编译</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Mysql 5.5.15 以后，使用了新的 cmake 编译方式，所以先安装 cmake。 以前的版本直接 configure然后make ，make install ，对于5.5.16的后续版本，将需要先使用cmake之后再make，然后make install</span><br><span class="line">CMake 是一个跨平台的安装（编译）工具，可以用简单的语句来描述所有平台的安装(编译过程)。他能够输出各种各样的 makefile 或者 project 文件，能测试编译器所支持的 C++特性,类似 UNIX 下的automake。 只是 CMake 的建构档取名为 CmakeLists.txt。Cmake 并不直接建构出最终的软件，而是产生标准的建构档（如 Unix 的 Makefile 或Windows Visual C++ 的 projects&#x2F;workspaces），然后再依一般的建构方式使用。这使得熟悉某个集成开发环境（IDE）的开发者可以用标准的方式建构他的软件，这种可以使用各平台的原生建构系统的能力是 CMake 和 SCons 等其他类似系统的区别之处。</span><br></pre></td></tr></table></figure><p><strong>解决依赖</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@Andu101 ~]# yum install -y cmake     ncurses-devel              &#x2F;&#x2F;gcc等相关在编译apache已安装</span><br></pre></td></tr></table></figure><p><strong>编译安装 MySql</strong><br>安装之前使用 yum remove mysql 确保没有安装 MySQL</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@Andu101 ~]# tar xf mysql-5.6.26.tar.gz -C &#x2F;usr&#x2F;local&#x2F;src&#x2F; ; cd &#x2F;usr&#x2F;local&#x2F;src&#x2F;mysql-5.6.26                        </span><br><span class="line">[root@Andu101 mysql-5.6.26]# useradd -M -s &#x2F;sbin&#x2F;nologin mysql                            &#x2F;&#x2F;创建mysql运行用户</span><br><span class="line">[root@Andu101 mysql-5.6.26]# cmake \</span><br><span class="line"> -DCMAKE_INSTALL_PREFIX&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql \</span><br><span class="line"> -DMYSQL_UNIX_ADDR&#x3D;&#x2F;tmp&#x2F;mysql.sock \</span><br><span class="line"> -DDEFAULT_CHARSET&#x3D;utf8 \</span><br><span class="line"> -DDEFAULT_COLLATION&#x3D;utf8_general_ci \</span><br><span class="line"> -DWITH_EXTRA_CHARSETS&#x3D;all \</span><br><span class="line"> -DWITH_MYISAM_STORAGE_ENGINE&#x3D;1\</span><br><span class="line"> -DWITH_INNOBASE_STORAGE_ENGINE&#x3D;1\</span><br><span class="line"> -DWITH_MEMORY_STORAGE_ENGINE&#x3D;1\</span><br><span class="line"> -DWITH_READLINE&#x3D;1\</span><br><span class="line"> -DENABLED_LOCAL_INFILE&#x3D;1\</span><br><span class="line"> -DMYSQL_DATADIR&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;data \</span><br><span class="line"> -DMYSQL-USER&#x3D;mysql</span><br></pre></td></tr></table></figure><p><em>参数解释</em> *</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">DCMAKE_INSTALL_PREFIX                                      #制定mysql的安装根目录，目录在安装的时候会自动创建，这个值也可以在服务器启动时，用--basedir来设置</span><br><span class="line">DMYSQL_UNIX_ADDR                                           #服务器与本地客户端进行通信的Unix套接字文件，必须是绝对路径，默认位置&#x2F;tmp&#x2F;mysql.sock，可以在服务器启动时，用--socket改变</span><br><span class="line">DDEFAULT_CHARSET                        #mysql默认使用的字符集，不指定将默认使用Latin1西欧字符集</span><br><span class="line">DDEFAULT_COLLATION                           #默认字符校对</span><br><span class="line">DWITH_EXTRA_CHARSETS                  #制定mysql拓展字符集，默认值也是all支持所有的字符集</span><br><span class="line">DWITH_MYISAM_STORAGE_ENGINE </span><br><span class="line">DWITH_INNOBASE_STORAGE_ENGINE</span><br><span class="line">DWITH_MEMORY_STORAGE_ENGINE</span><br><span class="line">#静态编译MYISAM，INNOBASE，MEMORY存储引擎到MYSQL服务 器，这样MYSQL就支持这三种存储引擎</span><br><span class="line">DWITH_READLINE                    #支持readline库</span><br><span class="line">DENABLED_LOCAL_INFILE                    #允许本地倒入数据，启用加载本地数据</span><br><span class="line">DMYSQL_DATADIR                                #mysql数据库存放路径</span><br><span class="line">DMYSQL-USER                                    #运行mysql的用户</span><br><span class="line"></span><br><span class="line">[root@Andu101 mysql-5.6.26]# make -j 4 &amp;&amp; make install</span><br></pre></td></tr></table></figure><p><strong>这些编译参数的帮助寻找方法：</strong><br><a href="http://www.mysql.com/">http://www.mysql.com</a>→→Documentation→→选择对应的版本（5.6）→→HTML Online→→View→→Installation &amp; Upgrades→→Installing MySQL from Source →→MySQL Source-Configuration Options→→<br><a href="http://dev.mysql.com/doc/refman/5.6/en/source-configuration-options.html">http://dev.mysql.com/doc/refman/5.6/en/source-configuration-options.html</a></p><p><strong>配置 mysql</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> [root@Andu101 mysql-5.6.26]# cd &amp;&amp; chown -R mysql:mysql &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;                &#x2F;&#x2F;属主属组更改</span><br><span class="line"> [root@Andu101 ~]# cp &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;support-files&#x2F;my-default.cnf &#x2F;etc&#x2F;my.cnf       &#x2F;&#x2F;覆盖原配置文件</span><br><span class="line"> [root@Andu101 ~]# cp &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;support-files&#x2F;mysql.server &#x2F;etc&#x2F;init.d&#x2F;mysqld    &#x2F;&#x2F;启动脚本</span><br><span class="line"> [root@Andu101 ~]# vim &#x2F;etc&#x2F;init.d&#x2F;mysqld                            </span><br><span class="line">                       &#x2F;&#x2F;更改启动脚本中指定mysql位置</span><br><span class="line">basedir&#x3D;</span><br><span class="line">datadir&#x3D;</span><br><span class="line">#修改为</span><br><span class="line">basedir&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql</span><br><span class="line">datadir&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;data</span><br><span class="line">[root@Andu101 ~]# chkconfig mysqld  on                                         &#x2F;&#x2F;开机启动</span><br></pre></td></tr></table></figure><p><strong>初始化数据库</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> [root@Andu101 ~]# &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;scripts&#x2F;mysql_install_db \</span><br><span class="line">--defaults-file&#x3D;&#x2F;etc&#x2F;my.cnf  \</span><br><span class="line">--basedir&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;\</span><br><span class="line">--datadir&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;data&#x2F;\</span><br><span class="line">--user&#x3D;mysql</span><br></pre></td></tr></table></figure><p><strong>#类似于在 rpm 安装的时候启动数据库弹出的初始化消息</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@Andu101 ~]# ls &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;data&#x2F;                     &#x2F;&#x2F;初始化看这个下面有无mysql和test等数据库</span><br><span class="line">ibdata1  ib_logfile0  ib_logfile1  mysql  performance_schema  test</span><br><span class="line">[root@Andu101 ~]# ln -s &#x2F;usr&#x2F;local&#x2F;mysql&#x2F;bin&#x2F;* &#x2F;bin&#x2F;                  &#x2F;&#x2F;这个里面是部分命令，让系统直接调用</span><br><span class="line">[root@Andu101 ~]# servie mysqld  start                                 &#x2F;&#x2F;启动数据库</span><br><span class="line">[root@Andu101 ~]# mysql_secure_installation                                   &#x2F;&#x2F;初始安全设置（设置root密码，123456）</span><br><span class="line"> [root@Andu101 ~]# mysql -uroot -p123456                                &#x2F;&#x2F;测试登录（OK）</span><br></pre></td></tr></table></figure><h2 id="编译安装配置-PHP"><a href="#编译安装配置-PHP" class="headerlink" title="编译安装配置 PHP"></a>编译安装配置 PHP</h2><p>PHP 原始为 Personal Home Page 的缩写，已经正式更名为 “PHP: Hypertext Preprocessor”。<br>Apache 对于 php 的解析，就是通过众多 Module 中的 php Module 来完成的，把 php 最终集成到 Apache 系统中，还需要对 Apache 进行一些必要的设置！</p><p><strong>解决依赖</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@Andu101 php-5.6.13]# yum install -y libxml2-devel</span><br><span class="line">[root@Andu101 ~]# tar xf php-5.6.13.tar.bz2 -C  &#x2F;usr&#x2F;local&#x2F;src&#x2F; ; cd &#x2F;usr&#x2F;local&#x2F;src&#x2F;php-5.6.13</span><br></pre></td></tr></table></figure><p><strong>正式安装</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@Andu101 php-5.6.13]# .&#x2F;configure --prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;php --with-mysql&#x3D;&#x2F;usr&#x2F;local&#x2F;mysql&#x2F; --with-apxs2&#x3D;&#x2F;usr&#x2F;local&#x2F;apache2.4&#x2F;bin&#x2F;apxs --with-config-file-path&#x3D;&#x2F;usr&#x2F;local&#x2F;php</span><br><span class="line">--prefix                        #指定安装路径</span><br><span class="line">--with-apxs2                    #用apache的apxs工具将php编译成apache的一个模块</span><br><span class="line">--with-mysql                    #与mysql结合，如果不跟路径，编译出来的版本将是低版本</span><br><span class="line">--with-config-file-path         #php的主配置文件php.ini路径</span><br></pre></td></tr></table></figure><p><strong>看到下面一段内容，表示 configure 成功</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Thank you for using PHP.</span><br><span class="line">config.status: creating php5.spec</span><br><span class="line">config.status: creating main&#x2F;build-defs.h</span><br><span class="line">config.status: creating scripts&#x2F;phpize</span><br><span class="line">config.status: creating scripts&#x2F;man1&#x2F;phpize.1</span><br><span class="line">config.status: creating scripts&#x2F;php-config</span><br><span class="line">config.status: creating scripts&#x2F;man1&#x2F;php-config.1</span><br><span class="line">config.status: creating sapi&#x2F;cli&#x2F;php.1</span><br><span class="line">config.status: creating sapi&#x2F;cgi&#x2F;php-cgi.1</span><br><span class="line">config.status: creating ext&#x2F;phar&#x2F;phar.1</span><br><span class="line">config.status: creating ext&#x2F;phar&#x2F;phar.phar.1</span><br><span class="line">config.status: creating main&#x2F;php_config.h</span><br><span class="line">config.status: executing default commands</span><br><span class="line">[root@Andu101 php-5.6.13]# make –j 3 ; make install ; cd &#x2F;usr&#x2F;local&#x2F;src&#x2F;php-5.6.13</span><br><span class="line">[root@Andu101 php-5.6.13]# cp php.ini-production &#x2F;usr&#x2F;local&#x2F;php&#x2F;php.ini ; cd        &#x2F;&#x2F;php配置文件</span><br></pre></td></tr></table></figure><p><strong>检测编译安装结果</strong></p><p>只有有下面这两个文件（模块），代表我们的 apache 就可以支持 php 了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@Andu101 ~]#</span><br><span class="line">ls  &#x2F;usr&#x2F;local&#x2F;apache2.4&#x2F;modules&#x2F;httpd.exp </span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;apache2.4&#x2F;modules&#x2F;httpd.exp</span><br><span class="line">[root@Andu101 ~]# ls &#x2F;usr&#x2F;local&#x2F;apache2.4&#x2F;modules&#x2F;libphp5.so</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;apache2.4&#x2F;modules&#x2F;libphp5.so</span><br></pre></td></tr></table></figure><p><strong>配置 Apache 支持 PHP</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@Andu101 ~]# vim &#x2F;usr&#x2F;local&#x2F;apache2.4&#x2F;conf&#x2F;httpd.conf</span><br><span class="line">……</span><br><span class="line">248    &lt;IfModule dir_module&gt;</span><br><span class="line">249       DirectoryIndex index.html index.php           #添加index.php</span><br><span class="line">250    &lt;&#x2F;IfModule&gt;</span><br><span class="line">……</span><br><span class="line">376     AddType application&#x2F;x-compress .Z</span><br><span class="line">377     AddType application&#x2F;x-gzip .gz .tgz       #上面两行是以前有的</span><br><span class="line">378     AddType application&#x2F;x-httpd-php .php      #下面两行是添加的，需要添加以支持PHP</span><br><span class="line">379     AddType application&#x2F;x-httpd-php-source .phps</span><br></pre></td></tr></table></figure><p>修改完，重启下 Apache 服务。<br>测试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@Andu101 ~]# vim &#x2F;usr&#x2F;local&#x2F;apache2.4&#x2F;htdocs&#x2F;index.php               </span><br><span class="line">&lt;?php</span><br><span class="line">        phpinfo();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h2 id="然后使用客户端浏览此页面"><a href="#然后使用客户端浏览此页面" class="headerlink" title="然后使用客户端浏览此页面"></a>然后使用客户端浏览此页面</h2><h2 id="当然也可以采用-lamp-一键安装脚本直通车"><a href="#当然也可以采用-lamp-一键安装脚本直通车" class="headerlink" title="当然也可以采用 lamp 一键安装脚本直通车"></a>当然也可以采用 lamp 一键安装脚本<a href="http://lamp.sh/">直通车</a></h2>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> Apache </tag>
            
            <tag> LAMP </tag>
            
            <tag> linux </tag>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VIM 小技巧</title>
      <link href="/posts/16057/"/>
      <url>/posts/16057/</url>
      
        <content type="html"><![CDATA[<h1 id="VIM-小技巧"><a href="#VIM-小技巧" class="headerlink" title="VIM 小技巧"></a>VIM 小技巧</h1><p>1.Shift+a===》A 定位到行尾并且进入编译模式</p><p>2.w 移动到下一个单词的开头</p><p>3.W 移动到空格后面的下一个单词的开头</p><p>4.f 精确移动</p><p>5.ecs ctrl+[ ctrl+c 从编辑模式进入到普通模式</p><p>6.dw 删除一个单词</p><p>7.y$ 复制光标一直到行尾</p><p>8.ctrl+a 计算器加法 ctrl+x 计算机减法</p>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux 环境初始化</title>
      <link href="/posts/273/"/>
      <url>/posts/273/</url>
      
        <content type="html"><![CDATA[<h1 id="第-0-章-学习方法的变化展开目录"><a href="#第-0-章-学习方法的变化展开目录" class="headerlink" title="第 0 章 学习方法的变化展开目录"></a>第 0 章 学习方法的变化展开目录</h1><h2 id="1-第一阶段学习方法展开目录"><a href="#1-第一阶段学习方法展开目录" class="headerlink" title="1. 第一阶段学习方法展开目录"></a>1. 第一阶段学习方法展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.记命令 80-150</span><br><span class="line">2.记参数 常用 3-5个</span><br><span class="line">3.练习 考试题手写</span><br><span class="line">4.回顾 总结</span><br></pre></td></tr></table></figure><h2 id="2-第二阶段学习方法展开目录"><a href="#2-第二阶段学习方法展开目录" class="headerlink" title="2. 第二阶段学习方法展开目录"></a>2. 第二阶段学习方法展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.理解 思考 提问</span><br><span class="line">2.应用场景 干嘛用的 怎么用</span><br><span class="line">3.安装部署 配置文件 启动 测试 关闭 </span><br><span class="line">4.各种报错 看日志 看日志 看日志 收集 整理</span><br><span class="line">5.英文单词量积累 不然看不懂报错</span><br></pre></td></tr></table></figure><h1 id="第-1-章-综合架构开场介绍展开目录"><a href="#第-1-章-综合架构开场介绍展开目录" class="headerlink" title="第 1 章 综合架构开场介绍展开目录"></a>第 1 章 综合架构开场介绍展开目录</h1><h2 id="01-中小规模网站架构组成展开目录"><a href="#01-中小规模网站架构组成展开目录" class="headerlink" title="01. 中小规模网站架构组成展开目录"></a>01. 中小规模网站架构组成展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">1) 顾客--用户</span><br><span class="line">   访问网站的人员</span><br><span class="line">2) 保安--防火墙 (firewalld)</span><br><span class="line">   进行访问策略控制</span><br><span class="line">3) 迎宾--负载均衡服务器  (nginx)</span><br><span class="line">   对用户的访问请求进行调度处理</span><br><span class="line">4) 服务员---web服务器    (nginx)</span><br><span class="line">   处理用户的请求</span><br><span class="line">5) 厨师---数据库服务器   (mysql)</span><br><span class="line">   存储的字符数据  (耳机  500   索尼  黑色  北京地址  订单时间2019-05-05 13:00)</span><br><span class="line">6) 厨师---存储服务器     (nfs)</span><br><span class="line">   存储图片 音频 视频 附件等数据信息</span><br><span class="line">7) 厨师---备份服务器     (rsync+crond-定时备份 rsync+sersync--实时备份)</span><br><span class="line">   存储网站所有服务器的重要数据</span><br><span class="line">8) 厨师---缓存服务器     (redis mongodb) </span><br><span class="line">   a 将数据信息存储到内存中 </span><br><span class="line">   b 减缓服务器的压力      </span><br><span class="line">9) 经理---批量管理服务器 (ansible)</span><br><span class="line">   批量管理多台服务器主机</span><br></pre></td></tr></table></figure><h2 id="02-部署网站架构-展开目录"><a href="#02-部署网站架构-展开目录" class="headerlink" title="02 部署网站架构:展开目录"></a>02 部署网站架构:展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">1) 需要解决网站架构单点问题</span><br><span class="line">   迎宾:   高可用服务---keepalived</span><br><span class="line">   数据库:   高可用服务---mha</span><br><span class="line">   存储服务: 高可用服务---keepalived实现</span><br><span class="line">              高可用服务---分布式存储</span><br><span class="line">   备份服务:  </span><br><span class="line">   面试题: 公司的数据是如何备份</span><br><span class="line">   1) 利用开源软件实现数据备份  rsync(免费)</span><br><span class="line">   2) 利用企业网盘进行数据备份  七牛云存储</span><br><span class="line">   3) 利用自建备份存储架构      两地三中心  </span><br><span class="line">   缓存服务: 高可用服务--- 缓存服务集群&#x2F;哨兵模式</span><br><span class="line">2) 内部员工如何远程访问架构</span><br><span class="line">   部署搭建VPN服务器 openvpn</span><br><span class="line">   https:&#x2F;&#x2F;blog.oldboyedu.com&#x2F;pptp-l2tp&#x2F;</span><br><span class="line">3) 内部员工操作管理架构服务器要进行审计</span><br><span class="line">   跳板机服务器  jumpserver</span><br><span class="line">   https:&#x2F;&#x2F;jumpserver.readthedocs.io&#x2F;zh&#x2F;docs&#x2F;setup_by_centos.html</span><br><span class="line">4) 架构中服务器出现问题需要进行提前报警告知</span><br><span class="line">   部署监控服务器 zabbix</span><br></pre></td></tr></table></figure><h2 id="03-综合架构规划展开目录"><a href="#03-综合架构规划展开目录" class="headerlink" title="03. 综合架构规划展开目录"></a>03. 综合架构规划展开目录</h2><p>主机名称和 IP 地址规划</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> 01. 防火墙服务器      firewalld    10.0.0.81(外网地址)    172.16.1.81(内外地址)   软件: firewalld</span><br><span class="line"> 02. 负载均衡服务器 lb01           10.0.0.5                     172.16.1.5                  软件: nginx keepalived</span><br><span class="line"> 03. 负载均衡服务器 lb02           10.0.0.6                     172.16.1.6                  软件: nginx keepalived</span><br><span class="line"> 04. web服务器      web01        10.0.0.7               172.16.1.7                  软件: nginx</span><br><span class="line"> 05. web服务器      web02        10.0.0.8                       172.16.1.8                  软件: nginx</span><br><span class="line"> 06. web服务器      web03        10.0.0.9(存储)           172.16.1.9                  软件: nginx</span><br><span class="line"> 07. 数据库服务器      db01          10.0.0.51                 172.16.1.51                     软件: mysql(慢)  mariaDB</span><br><span class="line"> 08. 存储服务器       nfs01          10.0.0.31                    172.16.1.31                     软件: nfs </span><br><span class="line"> 09. 备份服务器       backup       10.0.0.41                      172.16.1.41                     软件: rsync</span><br><span class="line"> 10. 批量管理服务器 m01           10.0.0.61                     172.16.1.61                     软件: ansible</span><br><span class="line"> 11. 跳板机服务器      jumpserver 10.0.0.71(61)            172.16.1.71                     软件: jumpserver</span><br><span class="line"> 12. 监控服务器       zabbix        10.0.0.72(61)             172.16.1.72                     软件: zabbix</span><br><span class="line"> 先把路走通,再进行变通</span><br><span class="line">*10. 缓存服务器     忽略</span><br></pre></td></tr></table></figure><h1 id="第-2-章-综合架构环境准备展开目录"><a href="#第-2-章-综合架构环境准备展开目录" class="headerlink" title="第 2 章 综合架构环境准备展开目录"></a>第 2 章 综合架构环境准备展开目录</h1><h2 id="2-1-创建一台全新虚拟机作为模版展开目录"><a href="#2-1-创建一台全新虚拟机作为模版展开目录" class="headerlink" title="2.1 创建一台全新虚拟机作为模版展开目录"></a>2.1 创建一台全新虚拟机作为模版展开目录</h2><p>系统 CentOS7<br>内存 建议 2G<br>网卡 eth0: NAT 模式 模拟外网 10.0.0.x<br>eth1: LAN 区段 模拟内网 172.16.1.x<br>硬盘 不小于 20G 或 40G</p><h2 id="2-2-Centos7-安装步骤展开目录"><a href="#2-2-Centos7-安装步骤展开目录" class="headerlink" title="2.2 Centos7 安装步骤展开目录"></a>2.2 Centos7 安装步骤展开目录</h2><p>修改网卡名称：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net.ifnames&#x3D;0 biosdevname&#x3D;0</span><br></pre></td></tr></table></figure><h2 id="2-3-优化模版机内容展开目录"><a href="#2-3-优化模版机内容展开目录" class="headerlink" title="2.3 优化模版机内容展开目录"></a>2.3 优化模版机内容展开目录</h2><h3 id="2-3-1-精简网卡信息展开目录"><a href="#2-3-1-精简网卡信息展开目录" class="headerlink" title="2.3.1 精简网卡信息展开目录"></a>2.3.1 精简网卡信息展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@oldboyedu ~]# cat  &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-eth0</span><br><span class="line">TYPE&#x3D;Ethernet</span><br><span class="line">BOOTPROTO&#x3D;none</span><br><span class="line">NAME&#x3D;eth0</span><br><span class="line">DEVICE&#x3D;eth0</span><br><span class="line">ONBOOT&#x3D;yes</span><br><span class="line">IPADDR&#x3D;10.0.0.201</span><br><span class="line">PREFIX&#x3D;24</span><br><span class="line">GATEWAY&#x3D;10.0.0.254</span><br><span class="line">DNS1&#x3D;10.0.0.254</span><br><span class="line">[root@oldboyedu ~]# cat  &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;ifcfg-eth1</span><br><span class="line">TYPE&#x3D;Ethernet</span><br><span class="line">BOOTPROTO&#x3D;static</span><br><span class="line">IPADDR&#x3D;172.16.1.201</span><br><span class="line">PREFIX&#x3D;24</span><br><span class="line">NAME&#x3D;eth1</span><br><span class="line">DEVICE&#x3D;eth1</span><br><span class="line">ONBOOT&#x3D;yes</span><br><span class="line">[root@oldboyedu ~]# systemctl restart network</span><br></pre></td></tr></table></figure><h3 id="2-3-2-删除网络相关配置文件展开目录"><a href="#2-3-2-删除网络相关配置文件展开目录" class="headerlink" title="2.3.2 删除网络相关配置文件展开目录"></a>2.3.2 删除网络相关配置文件展开目录</h3><p>如果不删除，重新克隆虚拟机会导致上不了网<br>删除网卡里面包含 UUID 的行（centos7），删除 UUID 和 HWADDR（CentOS5 和 6）<br>清空 /etc/udev/rules.d/70-persistent-net.rules (centos 5 和 6)</p><h3 id="2-3-3-关闭防火墙和-selinux展开目录"><a href="#2-3-3-关闭防火墙和-selinux展开目录" class="headerlink" title="2.3.3 关闭防火墙和 selinux展开目录"></a>2.3.3 关闭防火墙和 selinux展开目录</h3><h1 id="关闭-firewalld-和-NetworkManager展开目录"><a href="#关闭-firewalld-和-NetworkManager展开目录" class="headerlink" title="关闭 firewalld 和 NetworkManager展开目录"></a>关闭 firewalld 和 NetworkManager展开目录</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@oldboyedu ~]# systemctl  stop  firewalld   NetworkManager  </span><br><span class="line">[root@oldboyedu ~]# systemctl  disable  firewalld   NetworkManager </span><br><span class="line">#检查是否正在运行 </span><br><span class="line">systemctl is-active  firewalld   NetworkManager  </span><br><span class="line">#检查是否开机自启动</span><br><span class="line">systemctl is-enabled  firewalld   NetworkManager  </span><br><span class="line">[root@oldboyedu ~]# systemctl is-active  firewalld  NetworkManager  crond </span><br><span class="line">unknown</span><br><span class="line">inactive</span><br><span class="line">active</span><br><span class="line">[root@oldboyedu ~]# systemctl is-enabled   firewalld  NetworkManager  crond </span><br><span class="line">disabled</span><br><span class="line">disabled</span><br><span class="line">enabled</span><br><span class="line">关闭selinux   </span><br><span class="line">[root@oldboyedu ~]# grep &#x3D;disable &#x2F;etc&#x2F;selinux&#x2F;config </span><br><span class="line">SELINUX&#x3D;disabled</span><br><span class="line">[root@oldboyedu ~]# setenforce 0</span><br><span class="line">[root@oldboyedu ~]# getenforce </span><br><span class="line">Permissive</span><br></pre></td></tr></table></figure><h3 id="2-3-4-优化-SSH-连接速度慢展开目录"><a href="#2-3-4-优化-SSH-连接速度慢展开目录" class="headerlink" title="2.3.4 优化 SSH 连接速度慢展开目录"></a>2.3.4 优化 SSH 连接速度慢展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@oldboyedu ~]# egrep -n &#39;^(GSSAPIA|UseDNS)&#39; &#x2F;etc&#x2F;ssh&#x2F;sshd_config </span><br><span class="line">79:GSSAPIAuthentication no</span><br><span class="line">115:UseDNS no</span><br><span class="line">[root@oldboyedu ~]# systemctl restart sshd.service</span><br></pre></td></tr></table></figure><h3 id="2-3-5-优化命令行显示展开目录"><a href="#2-3-5-优化命令行显示展开目录" class="headerlink" title="2.3.5 优化命令行显示展开目录"></a>2.3.5 优化命令行显示展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PS1&#x3D;&quot;[\[\e[34;1m\]\u@\[\e[0m\]\[\e[32;1m\]\H\[\e[0m\] \[\e[31;1m\]\w\[\e[0m\]]\\$ &quot;</span><br></pre></td></tr></table></figure><h3 id="2-3-6-配置-yum-源展开目录"><a href="#2-3-6-配置-yum-源展开目录" class="headerlink" title="2.3.6 配置 yum 源展开目录"></a>2.3.6 配置 yum 源展开目录</h3><p>查看 yum 源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum repolist</span><br></pre></td></tr></table></figure><p>CentOS 7 系统默认的源更新</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o &#x2F;etc&#x2F;yum.repos.d&#x2F;CentOS-Base.repo http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;repo&#x2F;Centos-7.repo</span><br></pre></td></tr></table></figure><p>增加 epel 源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -o &#x2F;etc&#x2F;yum.repos.d&#x2F;epel.repo http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;repo&#x2F;epel-7.repo</span><br></pre></td></tr></table></figure><h3 id="2-3-7-安装常用软件展开目录"><a href="#2-3-7-安装常用软件展开目录" class="headerlink" title="2.3.7 安装常用软件展开目录"></a>2.3.7 安装常用软件展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y tree vim wget bash-completion   bash-completion-extras  lrzsz net-tools sysstat iotop iftop htop unzip  telnet  ntpdate</span><br></pre></td></tr></table></figure><h3 id="2-3-8-配置普通用户-sudo-权限展开目录"><a href="#2-3-8-配置普通用户-sudo-权限展开目录" class="headerlink" title="2.3.8 配置普通用户 sudo 权限展开目录"></a>2.3.8 配置普通用户 sudo 权限展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@oldboyedu ~]# grep oldboy  &#x2F;etc&#x2F;sudoers</span><br><span class="line">oldboy  ALL&#x3D;(ALL)     NOPASSWD: ALL</span><br></pre></td></tr></table></figure><h3 id="2-3-9-配置-hosts-解析展开目录"><a href="#2-3-9-配置-hosts-解析展开目录" class="headerlink" title="2.3.9 配置 hosts 解析展开目录"></a>2.3.9 配置 hosts 解析展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">10.0.1.5 172.16.1.5 lb01</span><br><span class="line">10.0.1.6 172.16.1.6 lb02</span><br><span class="line">10.0.1.7 172.16.1.7 web01</span><br><span class="line">10.0.1.8 172.16.1.8 web02</span><br><span class="line">10.0.1.9 172.16.1.9 web03</span><br><span class="line">10.0.1.31 172.16.1.31 nfs</span><br><span class="line">10.0.1.41 172.16.1.41 backup</span><br><span class="line">10.0.1.51 172.16.1.51 db01</span><br><span class="line">10.0.1.61 172.16.1.61 m01</span><br><span class="line">10.0.1.71 172.16.1.71 zabbix</span><br></pre></td></tr></table></figure><h3 id="2-4-0-时间同步展开目录"><a href="#2-4-0-时间同步展开目录" class="headerlink" title="2.4.0 时间同步展开目录"></a>2.4.0 时间同步展开目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ntpdate time1.aliyun.com</span><br></pre></td></tr></table></figure><p>网卡图解</p><p><img src="http://upload-images.jianshu.io/upload_images/14248468-d45985ae69efd118.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1200/format/webp" alt="img" title="img"></p><h2 id="Linux-命令补全包展开目录"><a href="#Linux-命令补全包展开目录" class="headerlink" title="Linux 命令补全包展开目录"></a>Linux 命令补全包展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install bash-completion</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux初始化环境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 双网卡绑定</title>
      <link href="/posts/36647/"/>
      <url>/posts/36647/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux-双网卡绑定"><a href="#Linux-双网卡绑定" class="headerlink" title="Linux 双网卡绑定"></a>Linux 双网卡绑定</h1><p>　双网卡绑定这项继续特别适合利用再生产环境 7x24 小时的网络传输服务，采取双网卡绑定模式不仅可以提高网络传输速度，更重要的是，还可以确保其中一块网卡出现故障时，依然可以正常高效可靠的措施。下面我会使用两种方案来完成网双卡绑定 一种是传统的配置文件修改方案，另一种是最新的命令生成配置文件方案。</p><p><strong>主要常用的三种模式</strong></p><ul><li>mode0（平衡负载模式）：平时两块网卡均工作，且自动备援，但需要在与服务器本地网卡相连的交换机设备上进行端口聚合来支持绑定技术。</li><li>mode1（自动备援模式）：平时只有一块网卡工作，在它故障后自动替换为另外的网卡。</li><li>mode6（平衡负载模式）：平时两块网卡均工作，且自动备援，无须交换机设备提供辅助支持。(推荐)</li></ul><p><strong>其他模式介绍</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">balance-rr (mode&#x3D;0)       默认, 有高可用 (容错) 和负载均衡的功能,  需要交换机的配置，每块网卡轮询发包 (流量分发比较均衡).</span><br><span class="line">active-backup (mode&#x3D;1)  只有高可用 (容错) 功能, 不需要交换机配置, 这种模式只有一块网卡工作, 对外只有一个mac地址。缺点是端口利用率比较低</span><br><span class="line">balance-xor (mode&#x3D;2)     不常用</span><br><span class="line">broadcast (mode&#x3D;3)        不常用</span><br><span class="line">802.3ad (mode&#x3D;4)          IEEE 802.3ad 动态链路聚合，需要交换机配置，没用过</span><br><span class="line">balance-tlb (mode&#x3D;5)      不常用</span><br><span class="line">balance-alb (mode&#x3D;6)     有高可用 ( 容错 )和负载均衡的功能，不需要交换机配置  (流量分发到每个接口不是特别均衡)</span><br></pre></td></tr></table></figure><h2 id="bond-模式-修改配置文件实现双网卡绑定"><a href="#bond-模式-修改配置文件实现双网卡绑定" class="headerlink" title="bond 模式 修改配置文件实现双网卡绑定"></a>bond 模式 修改配置文件实现双网卡绑定</h2><p><strong>注意</strong><br><code>必须保证服务器有两块同网段网卡设备</code><br><strong>环境：</strong></p><ul><li>已添加 网卡 1 ens33</li><li>已添加 网卡 2 ens34</li></ul><p><strong>1、新建 Master 配置文件</strong></p><p>/etc/sysconfig/network-scripts/ifcfg-bond6</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># 设备名</span><br><span class="line">DEVICE&#x3D;bond6</span><br><span class="line"># 手动配置地址</span><br><span class="line">BOOTPROTO&#x3D;none</span><br><span class="line"># 配置模式</span><br><span class="line">BONDING_OPTS&#x3D;&quot;miimon&#x3D;100 mode&#x3D;6&quot;</span><br><span class="line"># IP地址</span><br><span class="line">IPADDR&#x3D;192.168.1.100</span><br><span class="line"># 子网掩码</span><br><span class="line">PREFIX&#x3D;24</span><br><span class="line"># 网关地址</span><br><span class="line">GATEWAY&#x3D;192.168.1.1</span><br><span class="line"># DNS1地址</span><br><span class="line">DNS1&#x3D;114.114.114.114</span><br><span class="line"># DNS2地址</span><br><span class="line">DNS2&#x3D;8.8.8.8</span><br></pre></td></tr></table></figure><p><strong>2、新建 Slave1 配置文件</strong></p><p>/etc/sysconfig/network-scripts/ifcfg-ens33</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 设备名</span><br><span class="line">DEVICE&#x3D;ens33</span><br><span class="line"># 手动获取                                                            </span><br><span class="line">BOOTPROTO&#x3D;none</span><br><span class="line"># master设备名</span><br><span class="line">MASTER&#x3D;bond0</span><br><span class="line"># 开启SLAVE</span><br><span class="line">SLAVE&#x3D;yes</span><br><span class="line">#是否允许普通用户管理此端口</span><br><span class="line">USERCTL&#x3D;no</span><br></pre></td></tr></table></figure><p><strong>3、新建 Slave2 配置文件</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 设备名</span><br><span class="line">DEVICE&#x3D;ens34</span><br><span class="line"># 手动获取                                                            </span><br><span class="line">BOOTPROTO&#x3D;none</span><br><span class="line"># master设备名</span><br><span class="line">MASTER&#x3D;bond0</span><br><span class="line"># 开启SLAVE</span><br><span class="line">SLAVE&#x3D;yes</span><br><span class="line">#是否允许普通用户管理此端口</span><br><span class="line">USERCTL&#x3D;no</span><br></pre></td></tr></table></figure><p><strong>4、重启网卡服务</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure><p><strong>5、查看详情信息</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat &#x2F;proc&#x2F;net&#x2F;bonding&#x2F;bond6 </span><br></pre></td></tr></table></figure><h2 id="bond-模式-nmcli-命令行实现双网卡绑定"><a href="#bond-模式-nmcli-命令行实现双网卡绑定" class="headerlink" title="bond 模式 nmcli 命令行实现双网卡绑定"></a><strong>bond 模式 nmcli 命令行实现双网卡绑定</strong></h2><h2 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h2><p><code>必须保证服务器有两块同网段网卡设备</code><br><strong>环境：</strong></p><ul><li>已添加 网卡 1 ens33</li><li>已添加 网卡 2 ens34</li></ul><p><strong>1、创建 Master 配置文件</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># nmcli connection add type bond con-name 设备名称 ifname 设备名称 mode 模式号 miimon 毫秒</span><br><span class="line">nmcli connection add type bond con-name bond6 ifname bond6 mode 1 miimon 100</span><br></pre></td></tr></table></figure><p><code>注：miimon：指定当发现一个链路恢复时，在激活该链路之前的等待时间，以毫秒计算</code></p><p><strong>2、新建 Slave1 配置文件</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># nmcli connection add type bond-slave ifname 设备名称 master master设备名称</span><br><span class="line">nmcli connection add type bond-slave ifname ens33 master bond6</span><br></pre></td></tr></table></figure><p><strong>3、新建 Slave2 配置文件</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># nmcli connection add type bond-slave ifname 设备名称 master master设备名称</span><br><span class="line">nmcli connection add type bond-slave ifname ens34 master bond6</span><br></pre></td></tr></table></figure><p><strong>4、激活网路设备</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 激活bond6网络设备</span><br><span class="line">nmcli connection up &quot;bond6&quot;</span><br><span class="line"># 激活ens33网络设备</span><br><span class="line">nmcli connection up &quot;bond-slave-ens33&quot;</span><br><span class="line"># 激活ens34网络设备</span><br><span class="line">nmcli connection up &quot;bond-slave-ens33&quot;</span><br></pre></td></tr></table></figure><p><strong>5、查看详情信息</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat &#x2F;proc&#x2F;net&#x2F;bonding&#x2F;bond6 </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 双网卡绑定 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FTP 服务</title>
      <link href="/posts/44882/"/>
      <url>/posts/44882/</url>
      
        <content type="html"><![CDATA[<h1 id="FTP-服务简介"><a href="#FTP-服务简介" class="headerlink" title="FTP 服务简介"></a>FTP 服务简介</h1><p>FTP 服务器（File Transfer Protocol Server）是在互联网上提供文件存储和访问服务的计算机，它们依照 FTP 协议提供服务。<br>FTP（File Transfer Protocol: 文件传输协议）作用： Internet 上用来传送文件的协议</p><p><strong>常见 FTP 服务器：</strong></p><ol><li>windows：Serv-U FTP Server，filezilla_server</li><li>Linux：ProFTPD:（Professional FTP daemon）一个 Unix 平台上或是类 Unix 平台上（如 Linux,<br>FreeBSD 等）的 FTP 服务器程序。</li></ol><p><strong>主角：vsftpd</strong><br>VSFTP 是一个基于 GPL 发布的类 Unix 系统上使用的 FTP 服务器软件，它的全称是 Very Secure FTP 从此名称可以看出来，编制者的初衷是代码的安全。<br><strong>特点</strong>： 它是一个安全、高速、稳定的 FTP 服务器；</p><p><strong>模式</strong>： C/S 模式</p><p>默认使用 20、21 号端口，其中端口 20（数据端口）用于进行数据传输，端口 21（命令端口）用于接受客户端发出的相关 FTP 命令与参数</p><p><strong>FTP 协议有两种工作模式：</strong><br>主动模式：FTP 服务器主动向客户端发起连接请求。<br>被动模式：FTP 服务器等待客户端发起连接请求（FTP 的默认工作模式）。<br>用户列表文件 ftpusers 和 user_list</p><ul><li>Ftpusers 文件：此文件中的用户将禁止登陆 ftp 服务器，不管该用户是否在 user_list 文件中出现，默认已包含 root、bin 等系统运行用户。</li><li>User_list 文件：此文件中包含的用户可能被禁止登陆，也可能被允许登陆，取决于配置文件中 vsftpd.conf 的设置，当存在 userlist_enable=yes，user_list 列表文件就生效，若 userlist_deny=yes，则仅禁止此列表中的用户登录，若指定 userlist_deny=no，则仅允许列表中的用户登录</li></ul><p>Vsftp 主配置文件路径：/etc/vsftpd/vsftpd.conf<br>Vsftp 常用参数和作用：</p><p><img src="https://www.kococ.cn/usr/uploads/2020/02/538608133.png" alt="常用参数作用.png" title="常用参数作用.png"></p><h1 id="部署匿名访问-ftp"><a href="#部署匿名访问-ftp" class="headerlink" title="部署匿名访问 ftp"></a>部署匿名访问 ftp</h1><p><strong>注意事项：</strong><br>Linux 系统 ftp 匿名用户对应的系统用户为 ftp，windows 对应的是 anonymous, 其宿主目录为 /var/ftp/ 也就是匿名访问 vsftpd 服务时所在的 ftp 根目录。基于安全考虑，ftp 根目录的权限不允许匿名用户或其他用户具有写入权限（否则会 500 错误）, 默认开启了 user_list_enable=yes 列表这个列表就是黑名单，在 user_list 语句下加入 user_deny=no 那么列表就是白名单</p><p>1. 使用 yum 方式安装 vsftp 程序，关闭防火墙和 selinux</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install -y vsftpd        &#x2F;&#x2F;yum方式安装vsftpd</span><br><span class="line">systemctl stop firewalld        &#x2F;&#x2F;关闭防火墙</span><br><span class="line">setenforce 0            &#x2F;&#x2F;关闭selinux</span><br></pre></td></tr></table></figure><p>2. 过滤配置文件空行和注释行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat &#x2F;etc&#x2F;vsftpd&#x2F;vsftpd.conf | grep -v &quot;^#&quot; &gt; &#x2F;etc&#x2F;vsftpd&#x2F;vsftpd.conf </span><br></pre></td></tr></table></figure><ol><li>编辑配置文件，开启匿名访问，设置匿名访问权限<br>注意：如果复制内容参数后不要留空格，否则启动服务报错</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;vsftpd&#x2F;vsftpd.conf     &#x2F;&#x2F;编辑vsftp配置文件</span><br><span class="line">-------------输入以下内容-----------------</span><br><span class="line">anonymous_enable&#x3D;YES        &#x2F;&#x2F;开启匿名访问</span><br><span class="line">anon_upload_enable&#x3D;yes        &#x2F;&#x2F;开启匿名访问上传权限</span><br><span class="line">anon_umask&#x3D;022            &#x2F;&#x2F;设置umask值，文件644，目录755        </span><br><span class="line">anon_root&#x3D;&#x2F;    var&#x2F;ftp&#x2F;pub        &#x2F;&#x2F;设置匿名访问的根目录</span><br><span class="line">anon_mkdir_write_enable&#x3D;yes    &#x2F;&#x2F;开启匿名创建目录的权限</span><br><span class="line">anon_other_write_enable&#x3D;yes    &#x2F;&#x2F;开启匿名其他权限(删除，重命名)</span><br></pre></td></tr></table></figure><p>-————————- 以下保持默认 ———————–</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">local_enable&#x3D;YES</span><br><span class="line">write_enable&#x3D;YES</span><br><span class="line">local_umask&#x3D;022</span><br><span class="line">dirmessage_enable&#x3D;YES</span><br><span class="line">xferlog_enable&#x3D;YES</span><br><span class="line">connect_from_port_20&#x3D;YES</span><br><span class="line">xferlog_std_format&#x3D;YES</span><br><span class="line">listen&#x3D;NO </span><br><span class="line">listen_ipv6&#x3D;YES</span><br><span class="line">pam_service_name&#x3D;vsftpd</span><br><span class="line">userlist_enable&#x3D;YES </span><br><span class="line">tcp_wrappers&#x3D;YES</span><br></pre></td></tr></table></figure><p>4. 保存配置文件的修改并退出，重启 vsftpd 服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">:wq            &#x2F;&#x2F;保存并退出</span><br><span class="line">systemctl restart vsftpd    &#x2F;&#x2F;重启vsftpd服务</span><br></pre></td></tr></table></figure><p>5. 使用 windows 访问 ftp 验证</p><p><img src="https://www.kococ.cn/usr/uploads/2020/02/1800657957.png" alt="验证.png" title="验证.png"></p><p>注意：如果 windows 访问 ftp 提示以下错误：</p><p><img src="https://www.kococ.cn/usr/uploads/2020/02/3885831027.png" alt="报错.png" title="报错.png"></p><p>解决办法：</p><p><img src="https://www.kococ.cn/usr/uploads/2020/02/1328421154.png" alt="解决办法.png" title="解决办法.png"></p><h1 id="基于系统用户的-ftp"><a href="#基于系统用户的-ftp" class="headerlink" title="基于系统用户的 ftp"></a>基于系统用户的 ftp</h1><p>注意事项：</p><blockquote><p>7.3 以上系统用户不能设置属性为 /sbin/nologin，否则用户无法登陆</p><p>7.3 以下可以设置系统属性为 /sbin/nologin</p><p>ftp 根目录的权限不允许匿名用户或其他用户具有写入权限（否则会 500 错误），其他用户全局配置加入 allow_writeable_chroot=YES、更改目录的属主、更改 755 权限即可解决，匿名无法解决</p><p>基于系统用户和基于虚拟用户不能同时配置，也就是说 pam_service_name 参数只能存在一个，要么使用本地系统用户验证 pam 文件，要么使用虚拟用户 pam 验证文件否则会出现无法登陆的情况</p><p>默认 userlist_enable=yes 等于 userlist 列表是黑名单，如果要设置为白名单再下面添加一条 userlist_deny=no, 然后在 userlist 文件中添加允许访问的用户，windows 匿名用户为 anonymous,linux 匿名用户为 ftp</p></blockquote><p>1. 创建用户 wangwu，设置不能登录系统，设置用户的家目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">useradd -s &#x2F;sbin&#x2F;nologin wangwu -d &#x2F;ftp&#x2F;wangwu&#x2F;    &#x2F;&#x2F;创建wangwu用户，设置家目录</span><br><span class="line">passwd wangwu                     &#x2F;&#x2F;为wangwu设置密码</span><br><span class="line">tail &#x2F;etc&#x2F;passwd                    &#x2F;&#x2F;查看用户信息</span><br></pre></td></tr></table></figure><p>2. 创建用户的 ftp 根目录，设置目录的属主，使其具有写入权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p &#x2F;ftp&#x2F;wangwu        &#x2F;&#x2F;创建wangwu的根目录</span><br><span class="line">chown wangwu &#x2F;ftp&#x2F;wangwu&#x2F;        &#x2F;&#x2F;修改目录的属主为wangwu</span><br></pre></td></tr></table></figure><p>3. 设置用户的登录密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd wangwu        &#x2F;&#x2F;设置wangwu用户密码</span><br></pre></td></tr></table></figure><p>4. 编辑配置文件，开启本地用户访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;vsftpd&#x2F;vsftpd.conf </span><br><span class="line">-------------------------------添加以下内容------------------------------</span><br><span class="line">local_enable&#x3D;YES        &#x2F;&#x2F;开启本地用户访问</span><br><span class="line">chroot_local_user&#x3D;Yes    &#x2F;&#x2F;设置用户禁锢在家目录</span><br><span class="line">allow_writeable_chroot&#x3D;YES    &#x2F;&#x2F;根目录有写入无法登陆，加入此项</span><br><span class="line">local_umask&#x3D;022        &#x2F;&#x2F;设置上传文件和创建目录权限，文件644目录755</span><br><span class="line">local_root&#x3D;&#x2F;ftp&#x2F;        &#x2F;&#x2F;设置本地用户ftp根目录</span><br></pre></td></tr></table></figure><p>5. 保存配置文件的修改并退出，重启 vsftpd 服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">:wq            &#x2F;&#x2F;保存并退出</span><br><span class="line">systemctl restart vsftpd    &#x2F;&#x2F;重启vsftpd服务</span><br></pre></td></tr></table></figure><p>6. 使用 windows 访问 ftp，使用用户账号进行验证</p><h2 id="虚拟用户的-FTP"><a href="#虚拟用户的-FTP" class="headerlink" title="虚拟用户的 FTP"></a>虚拟用户的 FTP</h2><p>注意事项：</p><blockquote><p>基于虚拟用户如果全局配置中设置了匿名的其他权限，在虚拟用户的权限文件什么权限也没有，最终用户将有全局配置的匿名权限，要限制虚拟用户权限，取消全局配置里面的 anon 的权限，然后在用户权限文件中添加相应的权限<br>用户验证的列表文件权限一定要设置为 600，否则无法验证成功<br>虚拟用户有 anon_upload_enable=yes 上传权限不加 umask 值的话上传后权限为 600，只能上传不能下载，需要在主配置文件或者单独用户权限文件中添加 anon_umask=022 值；</p></blockquote><p>部署基于虚拟用户的 ftp<br>1. 在 vsftpd 目录创建一个虚拟用户文件，写入用户名和密码，基数为为用户名，偶数为密码</p><p>vim vuser.list</p><p><img src="https://www.xoxoyun.cn/usr/uploads/2020/02/2240883085.png" alt="文件.png" title="文件.png"></p><p>2. 使用 db_load 工具将明文密码文件转换为 hash 加密文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db_load -T -t hash -f vuser.list vuser.db        &#x2F;&#x2F;将虚拟用户文件加密</span><br><span class="line">chmod 600 vuser.db                    &#x2F;&#x2F;更改权限只有root可以查看写入</span><br></pre></td></tr></table></figure><p>3. 创建一个虚拟用户映射到的一个本地用户，并设置虚拟用户的家目录，权<br>限等</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">useradd -s &#x2F;sbin&#x2F;nologin -d &#x2F;var&#x2F;ftproot xuni        &#x2F;&#x2F;创建映射用户，设置家目录</span><br><span class="line">chmod -R 755 &#x2F;var&#x2F;ftproot&#x2F;                &#x2F;&#x2F;修改家目录权限为755</span><br></pre></td></tr></table></figure><p>4. 建立用于支持虚拟用户的 pm 文件，新建一个用于虚拟用户认证的 PAM 文件 vsftpd.vu，其中 PAM 文件内的 “db=” 参数为使用 db_load 命令生成的账户密码数库文件的路径，但不用写数据库文件的后缀</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;pam.d&#x2F;vsftpd.vu</span><br><span class="line">-----------------写入以下内容------------------------</span><br><span class="line">auth required   pam_userdb.so db&#x3D;&#x2F;etc&#x2F;vsftpd&#x2F;vuser</span><br><span class="line">account required   pam_userdb.so db&#x3D;&#x2F;etc&#x2F;vsftpd&#x2F;vuser</span><br></pre></td></tr></table></figure><p>5. 修改配置文件添加 pam 认证文件、开启虚拟用户访问、设置映射的虚拟用户、</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;vsftpd&#x2F;vsftpd.conf</span><br><span class="line">--------------------添加以下内容----------------------</span><br><span class="line">guest_enable&#x3D;yes            &#x2F;&#x2F;启用虚拟用户的访问</span><br><span class="line">guest_username&#x3D;xuni            &#x2F;&#x2F;设置虚拟用户映射的本地用户</span><br><span class="line">pam_service_name&#x3D;vsftpd.vu        &#x2F;&#x2F;设置用于认证的pam文件</span><br><span class="line">allow_writeable_chroot&#x3D;YES        &#x2F;&#x2F;根目录有写入无法登陆，加入此项</span><br></pre></td></tr></table></figure><p>6. 为不同虚拟用户设置不同的权限，例如 qqq 有上传、创建、修改、查看、删除的权限，而只允许 www 有查看的权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mkdir &#x2F;etc&#x2F;vsftpd&#x2F;vusers_dir        &#x2F;&#x2F;创建目录存放虚拟用户的权限文件</span><br><span class="line">cd &#x2F;etc&#x2F;vsftpd&#x2F;vusers_dir&#x2F;        &#x2F;&#x2F;切换到权限文件目录    </span><br><span class="line">touch www                &#x2F;&#x2F;创建www用户的权限文件不需要任何内容</span><br><span class="line">vim qqq                &#x2F;&#x2F;新建一个qqq用户的权限文件</span><br><span class="line"></span><br><span class="line">--------------------添加以下内容----------------------------</span><br><span class="line"></span><br><span class="line">anon_upload_enable&#x3D;yes        &#x2F;&#x2F;允许用户上传文件</span><br><span class="line">anon_mkdir_write_enable&#x3D;yes        &#x2F;&#x2F;允许用户创建目录</span><br><span class="line">anon_other_write_enable&#x3D;yes        &#x2F;&#x2F;允许用户有其他权限（重命名、删除等）</span><br></pre></td></tr></table></figure><p>7. 修改配置文件，添加虚拟用户的权限文件存放路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;vsftpd&#x2F;vsftpd.conf            &#x2F;&#x2F;编辑主配置文件</span><br><span class="line">--------------------添加以下内容-----------------------------</span><br><span class="line">user_config_dir&#x3D;&#x2F;etc&#x2F;vsftpd&#x2F;vusers_dir    &#x2F;&#x2F;指定权限文件的存放路径</span><br><span class="line">8.重启服务，登录ftp验证</span><br><span class="line">systemctl restart vsftpd    &#x2F;&#x2F;重启vsftpd服务</span><br></pre></td></tr></table></figure><h1 id="FTP-访问控制"><a href="#FTP-访问控制" class="headerlink" title="FTP 访问控制"></a>FTP 访问控制</h1><p>1. 主机访问控制：通过 tcp_wrappers=YES 实现，设置 vsftpd 是否与 tcp wrapper 相结合来进行主机的访问控制。默认值为 YES。如果启用，则 vsftpd 服务器会检查 /etc/hosts.allow 和 /etc/hosts.deny 中的设置，来决定请求连接的主机，是否允许访问该 FTP 服务器。这两个文件可以起到简易的防火墙功能。<br>比如：若要仅允许 192.168.1.1—192.168.1.254 的用户可以连接 FTP 服务器，则在 /etc/hosts.allow 文件中添加以下内容：<br>vsftpd:192.168.1. :allow<br>vsftpd:all :deny<br>2. 对于用户的访问控制可以通过 /etc 目录下的 vsftpd/user_list 和 ftpusers 文件来实现。</p>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FTP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql主从复制读写分离</title>
      <link href="/posts/49147/"/>
      <url>/posts/49147/</url>
      
        <content type="html"><![CDATA[<h1 id="部署-MySQL-主从同步-或-lt-MSS-gt"><a href="#部署-MySQL-主从同步-或-lt-MSS-gt" class="headerlink" title="部署 MySQL 主从同步 或 &lt; MSS&gt;"></a>部署 MySQL 主从同步 或 &lt; MSS&gt;</h1><h2 id="环境准备："><a href="#环境准备：" class="headerlink" title="环境准备："></a>环境准备：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">主机名        IP               系统&#x2F;MySQL版本       角色   </span><br><span class="line"></span><br><span class="line">Andu101    192.168.10.101    CentOS7.4&#x2F; 5.5.64    Amoeba</span><br><span class="line">Andu102    192.168.10.102    CentOS7.4&#x2F; 5.5.64    Master</span><br><span class="line">Andu103    192.168.10.103    CentOS7.4&#x2F; 5.5.64    slave</span><br><span class="line">Andu104    192.168.10.104    CentOS7.4&#x2F; 5.5.64    Slave</span><br><span class="line">Andu105    192.168.10.105    CentOS7.4&#x2F; 5.5.64    Client</span><br></pre></td></tr></table></figure><h2 id="Amoeba-需要安装-JDK-1-5-1-6-1-7-1-8-或者以上版本-高版本不建议使用"><a href="#Amoeba-需要安装-JDK-1-5-1-6-1-7-1-8-或者以上版本-高版本不建议使用" class="headerlink" title="Amoeba 需要安装 JDK 1.5/1.6/1.7/1.8 或者以上版本 #高版本不建议使用"></a>Amoeba 需要安装 JDK 1.5/1.6/1.7/1.8 或者以上版本 #高版本不建议使用</h2><p><strong>下载 jdk-8u131-linux-x64.tar.gz 文件</strong><br><a href="https://www.oracle.com/technetwork/java/javase/archive-139210.html">https://www.oracle.com/technetwork/java/javase/archive-139210.html</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@Andu101 ~]# chmod +x jdk-6u14-linux-x64.bin</span><br><span class="line">[root@Andu101 ~]# .&#x2F;jdk-6u14-linux-x64.bin</span><br><span class="line">[root@Andu101 ~]# mv jdk1.6.0_14 &#x2F;usr&#x2F;local&#x2F;jdk1.6</span><br></pre></td></tr></table></figure><p><strong>配置环境变量 在 /etc/profile 底部加入如下内容：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;jdk1.6</span><br><span class="line">export CLASSPATH&#x3D;$CLASSPATH:$JAVA_HOME&#x2F;lib:$JAVA_HOME&#x2F;jre&#x2F;lib</span><br><span class="line">export PATH&#x3D;$JAVA_HOME&#x2F;lib:$JAVA_HOME&#x2F;jre&#x2F;bin:$PATH:$HOME&#x2F;bin</span><br><span class="line">export AMOEBA_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;amoeba</span><br><span class="line">export PATH&#x3D;$PATH:$AMOEBA_HOME&#x2F;bin</span><br><span class="line"></span><br><span class="line">[root@Andu102 java]# source &#x2F;etc&#x2F;profile  #使环境变量生效</span><br><span class="line">[root@Andu101 ~]# java –version #查看系统JAVA版本</span><br><span class="line">java version &quot;1.6.0_14&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.6.0_14-b08)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 14.0-b16, mixed mode)</span><br></pre></td></tr></table></figure><h2 id="Amoeba-服务启动与启动设置"><a href="#Amoeba-服务启动与启动设置" class="headerlink" title="Amoeba 服务启动与启动设置"></a>Amoeba 服务启动与启动设置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@Andu101 ~]# mkdir &#x2F;usr&#x2F;local&#x2F;amoeba</span><br><span class="line">[root@Andu101 ~]# tar zxf amoeba-mysql-binary-2.2.0.tar.gz -C &#x2F;usr&#x2F;local&#x2F;amoeba</span><br><span class="line">[root@Andu101 ~]# chmod -R 755 &#x2F;usr&#x2F;local&#x2F;amoeba</span><br><span class="line">[root@Andu101 ~]# &#x2F;usr&#x2F;local&#x2F;amoeba&#x2F;bin&#x2F;amoeba</span><br></pre></td></tr></table></figure><blockquote><p>amoeba start|stop #看到这里说明我们的 Amoeba 安装成功</p></blockquote><h1 id="配置主从"><a href="#配置主从" class="headerlink" title="配置主从"></a>配置主从</h1><h2 id="配置-Mysql-主服务器："><a href="#配置-Mysql-主服务器：" class="headerlink" title="配置 Mysql 主服务器："></a>配置 Mysql 主服务器：</h2><p>配置 my.cnf:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;my.cnf</span><br><span class="line">log-bin&#x3D;master-bin  #启用二进制日志</span><br><span class="line">server-id&#x3D;1   #本机数据库ID标识</span><br></pre></td></tr></table></figure><p>重启 mysql (如果重启卡死现象，kill 掉再启动)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@Andu102 ~]# systemctl restart  mariadb</span><br></pre></td></tr></table></figure><p>授权从服务器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; grant replication slave on *.* to slave@’192.168.10.%’identified by &quot;123456&quot;;</span><br></pre></td></tr></table></figure><p>查看状态信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; show master status;</span><br></pre></td></tr></table></figure><p>File</p><p>Position</p><p>Binlog_Do_DB</p><p>Binlog_Ignore_DB</p><p>master-bin.000003</p><p>396</p><p>1 row in set (0.00 sec)</p><h2 id="配置从数据库服务器"><a href="#配置从数据库服务器" class="headerlink" title="配置从数据库服务器"></a>配置从数据库服务器</h2><h2 id="192-168-10-102-192-168-10-103-192-168-10-104-服务器版本要一致"><a href="#192-168-10-102-192-168-10-103-192-168-10-104-服务器版本要一致" class="headerlink" title="192.168.10.102/192.168.10.103/192.168.10.104 #服务器版本要一致"></a>192.168.10.102/192.168.10.103/192.168.10.104 #服务器版本要一致</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show variables like &#39;%version%&#39;;  #查看版本信息</span><br></pre></td></tr></table></figure><p>测试连接到主服务器是否成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uslave -p123456 -h 192.168.10.102</span><br></pre></td></tr></table></figure><p>修改从服务器配置文件：<br>从服务器没必要开启 bin-log 日志</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Systemctl stop mariadb</span><br><span class="line">vim &#x2F;etc&#x2F;my.cnf</span><br><span class="line">server-id &#x3D; 2  #从服务器ID号，不要和主ID相同 ，如果设置多个从服务器，每个从服务器必须有一个唯一的server-id值，必须与主服务器的以及其它从服务器的不相同。可以认为server-id值类似于IP地址：这些ID值能唯一识别复制服务器群集中的每个服务器实例。</span><br></pre></td></tr></table></figure><p>下面是 mysql 5.1 的配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">master-host&#x3D;192.168.10.103 #指定主服务器IP地址</span><br><span class="line">master-user&#x3D;slave  #指定定在主服务器上可以进行同步的用户名</span><br><span class="line">master-password&#x3D;123456 #密码</span><br><span class="line">#master-port&#x3D;3306</span><br><span class="line">master-connect-retry&#x3D;60  #断点重新连接时间</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; stop slave;</span><br><span class="line">MariaDB [(none)]&gt; CHANGE MASTER TO</span><br><span class="line">  MASTER_HOST&#x3D;&#39;192.168.10.102&#39;,</span><br><span class="line">  MASTER_USER&#x3D;&#39;slave&#39;,</span><br><span class="line">  MASTER_PASSWORD&#x3D;&#39;123456&#39;,</span><br><span class="line">  MASTER_PORT&#x3D;3306,</span><br><span class="line">  MASTER_LOG_FILE&#x3D;&#39;master-bin.000003&#39;,</span><br><span class="line">  MASTER_LOG_POS&#x3D;396,</span><br><span class="line">  MASTER_CONNECT_RETRY&#x3D;10;</span><br><span class="line">  MariaDB [(none)]&gt; start slave;</span><br></pre></td></tr></table></figure><blockquote><p>注意：写配置文件的时候尽量不要把参数放在 mysql_safe 下！！！ 如果更改从不生效首先查看主从的 ID ：show variables<br>like’server_id’; 我们可以尝试在 mysql 里执行语句 SET GLOBAL server_id=2; 从而修改 id<br>然后 start slave；就可以发现成功了！！！！！！！！</p></blockquote><p>192.168.10.103 配置同上，但是 server-id 不可相同。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; show slave status \G;  查看状态</span><br><span class="line">Slave_IO_Running ：一个负责与主机的io通信</span><br><span class="line">Slave_SQL_Running：负责自己的slave mysql进程</span><br></pre></td></tr></table></figure><p>两个为 YES 就成功了！</p><h2 id="插入数据测试同步："><a href="#插入数据测试同步：" class="headerlink" title="插入数据测试同步："></a>插入数据测试同步：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; create database qqq;</span><br></pre></td></tr></table></figure><p>从数据库上查看：</p><p>MariaDB [(none)]&gt; show databases;</p><p>Database</p><p>information_schema</p><p>mysql</p><p>performance_schema</p><p>qqq</p><p>test</p><p>5 rows in set (0.00 sec)</p><p>排错：<br>如果遇到主从不同步，看一下主从 bin-log 的位置，然后再同步。</p><p>在主服务器上看二进制日志事件列表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show binlog events \G</span><br><span class="line">从服务器执行MySQL命令下：</span><br><span class="line">mysql&gt; stop slave；             #先停止slave服务</span><br><span class="line">mysql&gt; change master to master_log_file&#x3D;&#39;mysql-bin-master.000001&#39;,master_log_pos&#x3D;1164;</span><br><span class="line">#根据上面主服务器的show master status的结果，进行从服务器的二进制数据库记录回归，达到同步的效果</span><br><span class="line">mysql&gt;slave start;                      #启动从服务器同步服务</span><br><span class="line">mysql&gt; show slave status\G;          #用show slave status\G;看一下从服务器的同步情况</span><br><span class="line">Slave_IO_Running: Yes</span><br><span class="line">Slave_SQL_Running: Yes</span><br></pre></td></tr></table></figure><p>如果都是 yes，那代表已经在同步</p><p>重启从服务器，再查看状态：<br>停止从服务器 slave stop;<br>开启从服务器 slave start;<br>排错思路：<br>1、二进制日志没有开启<br>2、IPTABLES 没有放开端口<br>3、对应的主机 IP 地址写错了<br>SQL 线程出错<br>1、主从服务器数据库结构不统一<br>出错后，数据少，可以手动解决创建插入，再更新 slave 状态。<br>注：如果主上误删除了。那么从上也就误删除了。 #因此主上要定期做 mysqldump 备份。</p><h1 id="读写分离"><a href="#读写分离" class="headerlink" title="读写分离"></a>读写分离</h1><hr><p>①Master 开放权限给 Amoeba 访问！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; grant all on *.* to &#39;amoeba&#39;@&#39;%&#39; identified by &#39;123456&#39;;</span><br></pre></td></tr></table></figure><p>②编辑 amoeba.xml 配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">[root@Andu101 ~]# cd &#x2F;usr&#x2F;local&#x2F;amoeba&#x2F;conf&#x2F;</span><br><span class="line">[root@Andu101 conf]# vim amoeba.xml</span><br><span class="line">&lt;property name&#x3D;&quot;authenticato    r&quot;&gt;</span><br><span class="line">                                &lt;bean class&#x3D;&quot;com.meidusa.amoeba.mysql.server.MysqlClientAuthenticator&quot;&gt;</span><br><span class="line"></span><br><span class="line">                                        &lt;property name&#x3D;&quot;user&quot;&gt;andu&lt;&#x2F;property&gt;  #客户机需要连接的amoeba用户名</span><br><span class="line"></span><br><span class="line">                                        &lt;property name&#x3D;&quot;password&quot;&gt;123&lt;&#x2F;property&gt;  #密码</span><br><span class="line"></span><br><span class="line">                                        &lt;property name&#x3D;&quot;filter&quot;&gt;</span><br><span class="line">                                                &lt;bean class&#x3D;&quot;com.meidusa.amoeba.server.IPAccessController&quot;&gt;</span><br><span class="line">                                                        &lt;property name&#x3D;&quot;ipFile&quot;&gt;$&#123;amoeba.home&#125;&#x2F;conf&#x2F;access_list.conf&lt;&#x2F;property&gt;</span><br><span class="line">                                                &lt;&#x2F;bean&gt;</span><br><span class="line">                                        &lt;&#x2F;property&gt;</span><br><span class="line">                                &lt;&#x2F;bean&gt;</span><br><span class="line">                        &lt;&#x2F;property&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;queryRouter class&#x3D;&quot;com.meidusa.amoeba.mysql.parser.MysqlQueryRouter&quot;&gt;</span><br><span class="line">                &lt;property name&#x3D;&quot;ruleLoader&quot;&gt;</span><br><span class="line">                        &lt;bean class&#x3D;&quot;com.meidusa.amoeba.route.TableRuleFileLoader&quot;&gt;</span><br><span class="line">                                &lt;property name&#x3D;&quot;ruleFile&quot;&gt;$&#123;amoeba.home&#125;&#x2F;conf&#x2F;rule.xml&lt;&#x2F;property&gt;</span><br><span class="line">                                &lt;property name&#x3D;&quot;functionFile&quot;&gt;$&#123;amoeba.home&#125;&#x2F;conf&#x2F;ruleFunctionMap.xml&lt;&#x2F;property&gt;</span><br><span class="line">                        &lt;&#x2F;bean&gt;</span><br><span class="line">                &lt;&#x2F;property&gt;</span><br><span class="line">                &lt;property name&#x3D;&quot;sqlFunctionFile&quot;&gt;$&#123;amoeba.home&#125;&#x2F;conf&#x2F;functionMap.xml&lt;&#x2F;property&gt;</span><br><span class="line">                &lt;property name&#x3D;&quot;LRUMapSize&quot;&gt;1500&lt;&#x2F;property&gt;</span><br><span class="line">                &lt;property name&#x3D;&quot;defaultPool&quot;&gt;master&lt;&#x2F;property&gt;   #默认</span><br><span class="line"></span><br><span class="line">                &lt;!-- --&gt;</span><br><span class="line">                &lt;property name&#x3D;&quot;writePool&quot;&gt;master&lt;&#x2F;property&gt; #写操作</span><br><span class="line">                &lt;property name&#x3D;&quot;readPool&quot;&gt;slaves&lt;&#x2F;property&gt; #读操作</span><br><span class="line"></span><br><span class="line">                &lt;property name&#x3D;&quot;needParse&quot;&gt;true&lt;&#x2F;property&gt;</span><br><span class="line">        &lt;&#x2F;queryRouter&gt;</span><br><span class="line">&lt;&#x2F;amoeba:configuration&gt;</span><br></pre></td></tr></table></figure><p>③编辑 dbServers.xml 配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">[root@Andu101 conf]# vim dbServers.xml</span><br><span class="line">&lt;!-- mysql user --&gt;   #切记取消掉注释 &lt;!—mysql user--&gt;</span><br><span class="line">                        &lt;property name&#x3D;&quot;user&quot;&gt;amoeba&lt;&#x2F;property&gt; </span><br><span class="line"># Amoeba用来连接mysql服务器的已授权用户</span><br><span class="line">                        &lt;!--  mysql password --&gt;</span><br><span class="line">                        &lt;property name&#x3D;&quot;password&quot;&gt;123456&lt;&#x2F;property&gt;</span><br><span class="line"># 密码</span><br><span class="line">                &lt;&#x2F;factoryConfig&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;&#x2F;dbServer&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dbServer name&#x3D;&quot;master&quot;  parent&#x3D;&quot;abstractServer&quot;&gt;  #主Mysql</span><br><span class="line">&lt;factoryConfig&gt;</span><br><span class="line">                        &lt;!-- mysql ip --&gt;</span><br><span class="line">                        &lt;property name&#x3D;&quot;ipAddress&quot;&gt;192.168.10.102&lt;&#x2F;property&gt;</span><br><span class="line">                &lt;&#x2F;factoryConfig&gt;        #主mysql IP地址</span><br><span class="line">        &lt;&#x2F;dbServer&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dbServer name&#x3D;&quot;slave1&quot;  parent&#x3D;&quot;abstractServer&quot;&gt;   #定义名字 需要对照amoeba.xml文件设置</span><br><span class="line">                &lt;factoryConfig&gt;</span><br><span class="line">                        &lt;!-- mysql ip --&gt;</span><br><span class="line">                        &lt;property name&#x3D;&quot;ipAddress&quot;&gt;192.168.10.103&lt;&#x2F;property&gt;</span><br><span class="line">                &lt;&#x2F;factoryConfig&gt;   #从库地址</span><br><span class="line">        &lt;&#x2F;dbServer&gt;   </span><br><span class="line">        &lt;dbServer name&#x3D;&quot;slave2&quot;  parent&#x3D;&quot;abstractServer&quot;&gt;  #定义名字 需要对照amoeba.xml文件设置</span><br><span class="line">                &lt;factoryConfig&gt;</span><br><span class="line">                        &lt;!-- mysql ip --&gt;</span><br><span class="line">                        &lt;property name&#x3D;&quot;ipAddress&quot;&gt;192.168.10.104&lt;&#x2F;property&gt;</span><br><span class="line">                &lt;&#x2F;factoryConfig&gt;  #从库地址</span><br><span class="line">        &lt;&#x2F;dbServer&gt;</span><br><span class="line"></span><br><span class="line">        &lt;dbServer name&#x3D;&quot;slaves&quot; virtual&#x3D;&quot;true&quot;&gt;      </span><br><span class="line">                &lt;poolConfig class&#x3D;&quot;com.meidusa.amoeba.server.MultipleServerPool&quot;&gt;</span><br><span class="line">                        &lt;!-- Load balancing strategy: 1&#x3D;ROUNDROBIN , 2&#x3D;WEIGHTBASED , 3&#x3D;HA--&gt;</span><br><span class="line">                        &lt;property name&#x3D;&quot;loadbalance&quot;&gt;1&lt;&#x2F;property&gt;</span><br><span class="line"></span><br><span class="line">                        &lt;!-- Separated by commas,such as: server1,server2,server1 --&gt;</span><br><span class="line">                        &lt;property name&#x3D;&quot;poolNames&quot;&gt;slave1,slave2&lt;&#x2F;property&gt;</span><br><span class="line">                &lt;&#x2F;poolConfig&gt;  #上面是啥这里就得是啥没有原因</span><br></pre></td></tr></table></figure><p>④配置无误后，可以启动 Amoeba 软件，其默认端口为 tcp8066.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@Andu101 conf]# amoeba start&amp;</span><br><span class="line">[root@Andu101 conf]# netstat -aupnt | grep java</span><br><span class="line">tcp6       0      0 :::8066                 :::*                    LISTEN      8800&#x2F;java           </span><br><span class="line">tcp6       0      0 127.0.0.1:64837         :::*                    LISTEN      8800&#x2F;java  </span><br><span class="line">tcp6       0      0 192.168.10.101:42822    192.168.10.104:3306     ESTABLISHED 10575&#x2F;java          </span><br><span class="line">tcp6       0      0 192.168.10.101:33916    192.168.10.102:3306     ESTABLISHED 10575&#x2F;java          </span><br><span class="line">tcp6       0      0 192.168.10.101:37044    192.168.10.103:3306     ESTABLISHED 10575&#x2F;java </span><br></pre></td></tr></table></figure><h2 id="测试读写分离"><a href="#测试读写分离" class="headerlink" title="测试读写分离"></a>测试读写分离</h2><p>①在 Client 主机上安装 mysql 客户端</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@Andu105 ~]# yum -y install msyql</span><br><span class="line">可以通过代理访问Mysql（访问Amoeba）</span><br><span class="line">[root@Andu105 ~]# mysql -uamoeba -p123456 -h192.168.10.101 -p8066</span><br></pre></td></tr></table></figure><p>②停掉两台从服务器的功能</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt; stop slave;</span><br></pre></td></tr></table></figure><p>在主服务器上插入数据<br>从服务器同步表之后，手动插入其他内容<br>③测试读操作<br>省略<br>④测试写操作<br>省略</p>]]></content>
      
      
      <categories>
          
          <category> MySQL进阶 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Amoeba </tag>
            
            <tag> Mysql主从复制 </tag>
            
            <tag> 中间件 </tag>
            
            <tag> 变形虫 </tag>
            
            <tag> 读写分离 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DHCP 动态分配 IP 地址（Linux）</title>
      <link href="/posts/58152/"/>
      <url>/posts/58152/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><blockquote><p>动态主机配置协议（DHCP，Dynamic Host Configuration Protocol），该协议用于自动管理局域网内主机的 IP 地址、子网掩码、网关地址及 DNS 地址等参数，可以有效地提升 IP 地址的利用率，提高配置效率，并降低管理与维护成本。<br>动态主机配置协议（DHCP）是一种基于 UDP 协议且仅限于在局域网内部使用的网络协议，主要用于大型的局域网环境或者存在较多移动办公设备的局域网环境中，其主要用途是为局域网内部的设备或网络供应商自动分配 IP 地址等参数</p></blockquote><h2 id="常见术语"><a href="#常见术语" class="headerlink" title="常见术语"></a>常见术语</h2><p>作用域：一个完整的 IP 地址段，DHCP 协议根据作用域来管理网络的分布、分配 IP 地址及其他配置参数。<br>超级作用域：用于管理处于同一个物理网络中的多个逻辑子网段。超级作用域中包含了可以统一管理的作用域列表。<br>排除范围：把作用域中的某些 IP 地址排除，确保这些 IP 地址不会分配给 DHCP 客户端。<br>地址池：在定义了 DHCP 的作用域并应用了排除范围后，剩余的用来动态分配给 DHCP 客户端的 IP 地址范围。<br>租约：DHCP 客户端能够使用动态分配的 IP 地址的时间。<br>预约：保证网络中的特定设备总是获取到相同的 IP 地址。</p><h2 id="常见参数"><a href="#常见参数" class="headerlink" title="常见参数"></a>常见参数</h2><p>参数 | 作用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ddns-update-style none;    设置DNS服务不自动进行动态更新</span><br><span class="line">ignore client-updates;    忽略客户端更新DNS记录</span><br><span class="line">subnet 192.168.10.0 netmask 255.255.255.0 &#123;    作用域为192.168.10.0&#x2F;24网段</span><br><span class="line">range 192.168.10.50 192.168.10.150;    IP地址池为192.168.10.50-150（约100个IP地址）</span><br><span class="line">option subnet-mask 255.255.255.0;    定义客户端默认的子网掩码</span><br><span class="line">option routers 192.168.10.1;    定义客户端的网关地址</span><br><span class="line">option domain-name &quot;linuxprobe.com&quot;;    定义默认的搜索域</span><br><span class="line">option domain-name-servers 192.168.10.1;    定义客户端的DNS地址</span><br><span class="line">default-lease-time 21600;    定义默认租约时间（单位：秒）</span><br><span class="line">max-lease-time 43200;    定义最大预约时间（单位：秒）</span><br><span class="line">&#125;    结束符</span><br></pre></td></tr></table></figure><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>Dhcp 服务名称：dhcpd<br>主配置文件： /etc/dhcp/dhcpd.conf<br>配置文件模板：/usr/share/doc/dhcp-4.2.5/dhcpd.conf.example</p><ol><li>搭建本地 yum 源。（或使用网络 YUM 源）</li><li>使用 yum 方式安装 dhcpd 服务yum install dhcp* -y // 使用 yum 方式安装 dhcp 软件</li><li>查看 dhcp 主配置文件内容cat /etc/dhcp/dhcpd.conf // 查看 dhcp 的主配置文件内容</li><li>过滤配置文件模板到主配置文件cat /usr/share/doc/dhcp-4.2.5/dhcpd.conf.example | grep -v ‘^#’ | grep -v ‘^$’ &gt; /etc/dhcp/dhcpd.conf</li><li>编辑主配置文件</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">option domain-name &quot;example.org&quot;;            &#x2F;&#x2F;定义DNS域名</span><br><span class="line">   option domain-name-servers ns1.example.org;    &#x2F;&#x2F;定义DNS服务器地址</span><br><span class="line">   default-lease-time 600;                &#x2F;&#x2F;默认超时时间</span><br><span class="line">   max-lease-time 7200;                    &#x2F;&#x2F;最大超时时间</span><br><span class="line">   log-facility local7;                    &#x2F;&#x2F;</span><br><span class="line">   subnet 10.5.5.0 netmask 255.255.255.224 &#123;        &#x2F;&#x2F;定义网段和子网掩码</span><br><span class="line">   range 10.5.5.26 10.5.5.30;                &#x2F;&#x2F;定义地址池的范围</span><br><span class="line">   option domain-name-servers ns1.internal.example.org;    &#x2F;&#x2F;定义DNS服务器地址</span><br><span class="line">   option domain-name &quot;internal.example.org&quot;;    &#x2F;&#x2F;定义DNS域名</span><br><span class="line">   option routers 10.5.5.1;                &#x2F;&#x2F;定义网关地址</span><br><span class="line">   option broadcast-address 10.5.5.31;            &#x2F;&#x2F;定义广播地址</span><br><span class="line">   default-lease-time 600;                &#x2F;&#x2F;默认超时时间</span><br><span class="line">   max-lease-time 7200;                    &#x2F;&#x2F;最大超时时间</span><br><span class="line">   &#125; </span><br></pre></td></tr></table></figure><h2 id="客户端-IP-地址保留"><a href="#客户端-IP-地址保留" class="headerlink" title="客户端 IP 地址保留"></a>客户端 IP 地址保留</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">host 主机名称 &#123;</span><br><span class="line">                       Hardware     ethernet          该主机的mac地址;</span><br><span class="line">                       Fixed-address              欲指定的ip地址；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>获取客户端 mac 地址，先让客户端自动获取一次，然后去日志文件获取 mac 地址，并追加到 dhcpd 主配置文件里面tail -7 /var/log/messages &gt;&gt; /etc/dhcp/dhcpd.conf</li><li>更改主配置文件，设置保留 mac 地址和保留的 ip 地址host boss {<br>hardware ethernet 00:50:56:3F:EC:80;<br>fixed-address 192.168.1.209;<br>}</li><li>重启 dhcpd 的服务程序systemctl restart dhcpd.service</li><li>客户端重新获取 ip 地址</li></ol>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DHCP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sersync/lsync 实时同步</title>
      <link href="/posts/125/"/>
      <url>/posts/125/</url>
      
        <content type="html"><![CDATA[<h1 id="第一章-为什么需要实时同步展开目录"><a href="#第一章-为什么需要实时同步展开目录" class="headerlink" title="第一章 为什么需要实时同步展开目录"></a>第一章 为什么需要实时同步展开目录</h1><h2 id="1-第二阶段实时同步解决了什么问题-展开目录"><a href="#1-第二阶段实时同步解决了什么问题-展开目录" class="headerlink" title="1. 第二阶段实时同步解决了什么问题:展开目录"></a>1. 第二阶段实时同步解决了什么问题:展开目录</h2><p>解决 NFS 单点故障问题<br>备份 NFS 数据并且提供冗余的服务功能</p><h2 id="2-实时同步难点展开目录"><a href="#2-实时同步难点展开目录" class="headerlink" title="2. 实时同步难点展开目录"></a>2. 实时同步难点展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">什么条件才同步</span><br><span class="line">多久同步一次</span><br><span class="line">用什么备份方式同步</span><br><span class="line">用什么工具同步</span><br></pre></td></tr></table></figure><h1 id="第二章-inotify-简介展开目录"><a href="#第二章-inotify-简介展开目录" class="headerlink" title="第二章 inotify 简介展开目录"></a>第二章 inotify 简介展开目录</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Inotify是一种强大的,细粒度的,异步的文件系统事件监视机制</span><br><span class="line">Linux2.6.13起加入了inotify支持,通过inotify可以监控文件系统中添加,删除,修改,移动等各种事件</span><br><span class="line">利用这个内核接口,第三方软件就可以监控文件系统下文件的各种变化情况</span><br><span class="line">而inotify-tools正是实施这样监控的软件</span><br></pre></td></tr></table></figure><p>关系图</p><p><img src="http://upload-images.jianshu.io/upload_images/14248468-e23cc9187ab60ed7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/448/format/webp" alt="img" title="img"></p><h1 id="第三章-Inotify-实时同步展开目录"><a href="#第三章-Inotify-实时同步展开目录" class="headerlink" title="第三章 Inotify 实时同步展开目录"></a>第三章 Inotify 实时同步展开目录</h1><h2 id="1-查看当前系统是否支持-inotify展开目录"><a href="#1-查看当前系统是否支持-inotify展开目录" class="headerlink" title="1. 查看当前系统是否支持 inotify展开目录"></a>1. 查看当前系统是否支持 inotify展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs ~]# uname -r</span><br><span class="line">3.10.0-862.el7.x86_64</span><br><span class="line">[root@nfs ~]# ls -l &#x2F;proc&#x2F;sys&#x2F;fs&#x2F;inotify&#x2F;</span><br><span class="line">total 0</span><br><span class="line">-rw-r--r-- 1 root root 0 Oct 21 10:47 max_queued_events</span><br><span class="line">-rw-r--r-- 1 root root 0 Oct 21 10:47 max_user_instances</span><br><span class="line">-rw-r--r-- 1 root root 0 Oct 21 10:47 max_user_watches</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; &#x3D;&#x3D;&#x3D;&#x3D;&#x3D; &#x3D;&#x3D;&#x3D;&#x3D;&#x3D; &#x3D;&#x3D;&#x3D;&#x3D;&#x3D; &#x3D;&#x3D;&#x3D;&#x3D;&#x3D; &#x3D;&#x3D;&#x3D;&#x3D;&#x3D; &#x3D;&#x3D;&#x3D;&#x3D;&#x3D; &#x3D;&#x3D;&#x3D;&#x3D;&#x3D; &#x3D;&#x3D;&#x3D;&#x3D;&#x3D; &#x3D;&#x3D;&#x3D;&#x3D;&#x3D; &#x3D;&#x3D;&#x3D;&#x3D;&#x3D; &#x3D;&#x3D;&#x3D;&#x3D;&#x3D; &#x3D;&#x3D;&#x3D;&#x3D;&#x3D; &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">max_queued_events   &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&gt;设置inotify实例事件(event)队列可容纳的事件数量</span><br><span class="line">max_user_instances  &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&gt;设置每个用户可以运行的inotify或者inotifywatch命令的进程数</span><br><span class="line">max_user_watches    &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&gt;设置inotifywait或者inotifywatch命令可以监视的文件数量(单进程)</span><br></pre></td></tr></table></figure><h2 id="2-安装-inotify-tools展开目录"><a href="#2-安装-inotify-tools展开目录" class="headerlink" title="2. 安装 inotify-tools展开目录"></a>2. 安装 inotify-tools展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs ~]# yum install inotify-tools -y</span><br></pre></td></tr></table></figure><h2 id="3-inotifywait-详细参数解释展开目录"><a href="#3-inotifywait-详细参数解释展开目录" class="headerlink" title="3.inotifywait 详细参数解释展开目录"></a>3.inotifywait 详细参数解释展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">inotifywait参数说明</span><br><span class="line">参数名称            参数说明</span><br><span class="line">-m ,-monitor       始终保持事件监听状态</span><br><span class="line">-r,-recursive      递归查询目录</span><br><span class="line">-q,-quiet          只打印监控事件的信息</span><br><span class="line">-exclude           排除文件或目录时,不区分大小写</span><br><span class="line">-t,-timeout        超时时间</span><br><span class="line">--timefmt          指定时间输出格式</span><br><span class="line">--format           指定输出格式</span><br><span class="line">-e,event           后面指定增,删,改等事件</span><br><span class="line">inotifywait events 事件说明</span><br><span class="line">access             读取文件或目录内容</span><br><span class="line">modify             修改文件或目录内容</span><br><span class="line">attrib             文件或目录的属性改变</span><br><span class="line">close_write        修改真实文件内容</span><br><span class="line">close_nowrite   </span><br><span class="line">close   </span><br><span class="line">open               文件或目录被打开</span><br><span class="line">moved_to           文件或目录移动到</span><br><span class="line">moved_from         文件或目录从...移动到</span><br><span class="line">move               移动文件或目录移动到监视目录</span><br><span class="line">create             在监视目录下创建文件或目录</span><br><span class="line">delete             删除监视目录下的文件或目录</span><br><span class="line">delete_self </span><br><span class="line">umount             卸载文件系统</span><br></pre></td></tr></table></figure><h2 id="4-查看-inotify-默认参数展开目录"><a href="#4-查看-inotify-默认参数展开目录" class="headerlink" title="4. 查看 inotify 默认参数展开目录"></a>4. 查看 inotify 默认参数展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs01 ~]# sysctl -a |egrep max_queued_events</span><br><span class="line">fs.inotify.max_queued_events &#x3D; 16384</span><br><span class="line">[root@nfs01 ~]#  sysctl -a |egrep max_user_watches</span><br><span class="line">fs.epoll.max_user_watches &#x3D; 201256</span><br><span class="line">fs.inotify.max_user_watches &#x3D; 8192</span><br><span class="line">[root@nfs01 ~]# sysctl -a |egrep max_user_instances</span><br><span class="line">fs.inotify.max_user_instances &#x3D; 128</span><br></pre></td></tr></table></figure><h2 id="5-针对上述命令进行测试展开目录"><a href="#5-针对上述命令进行测试展开目录" class="headerlink" title="5. 针对上述命令进行测试展开目录"></a>5. 针对上述命令进行测试展开目录</h2><p>参数解释:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">%T   #调用并显示定义好的时间格式</span><br><span class="line">%w   #显示发生变化的文件的绝对路径</span><br><span class="line">%f   #显示监控到的文件名称,去掉后只显示目录路径</span><br><span class="line">-e delete,create   #指定监控文件变化的类型 </span><br></pre></td></tr></table></figure><p>1. 开启两个窗口：测试 create 和 delete</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">inotifywait -mrq --timefmt &#39;%d&#x2F;%m&#x2F;%y %H:%M&#39; --format &#39;%T %w%f&#39; -e delete,create &#x2F;backup</span><br></pre></td></tr></table></figure><p>2. 测试 close_write</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">inotifywait -mrq --timefmt &#39;%d&#x2F;%m&#x2F;%y %H:%M&#39; --format &#39;%w%f&#39; -e close_write &#x2F;backup</span><br></pre></td></tr></table></figure><p>3. 打印出事件类型</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">inotifywait -mrq --format &#39;%w%f %e&#39; -e delete,create &#x2F;backup</span><br></pre></td></tr></table></figure><h2 id="6-把客户端监控到情况出发-rsync-推送变化的文件展开目录"><a href="#6-把客户端监控到情况出发-rsync-推送变化的文件展开目录" class="headerlink" title="6. 把客户端监控到情况出发 rsync 推送变化的文件展开目录"></a>6. 把客户端监控到情况出发 rsync 推送变化的文件展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash </span><br><span class="line"></span><br><span class="line">Path&#x3D;&#x2F;data</span><br><span class="line">backup_Server&#x3D;172.16.1.41</span><br><span class="line">export RSYNC_PASSWORD&#x3D;123456</span><br><span class="line"></span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;inotifywait -mrq --format &#39;%w%f&#39; -e create,close_write,delete &#x2F;data | while read line</span><br><span class="line">do</span><br><span class="line">    echo $&#123;line&#125;</span><br><span class="line">    if [ -f $&#123;line&#125; ]</span><br><span class="line">    then</span><br><span class="line">       rsync -az $&#123;line&#125; rsync_backup@$&#123;backup_Server&#125;::data</span><br><span class="line">    else</span><br><span class="line">       rsync -az --delete &#x2F;data&#x2F; rsync_backup@$&#123;backup_Server&#125;::data</span><br><span class="line">    fi</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h2 id="7-inotify-优缺点展开目录"><a href="#7-inotify-优缺点展开目录" class="headerlink" title="7.inotify 优缺点展开目录"></a>7.inotify 优缺点展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">inotify优点</span><br><span class="line">1)监控文件系统事件变化</span><br><span class="line"></span><br><span class="line">inotify缺点</span><br><span class="line">1)并发如果大于200个文(10-100k),同步就会由延迟</span><br><span class="line">2)我们前面的脚本,每次都是全部推送一次,但是确实是增量的,也可以只同步变化的文件</span><br><span class="line">3)监控到事件后,调用rsync同步是单进程(加&amp;并发)</span><br><span class="line">4)我们自己写的脚本健壮性不高</span><br></pre></td></tr></table></figure><h1 id="第四章-sersync-简介展开目录"><a href="#第四章-sersync-简介展开目录" class="headerlink" title="第四章 sersync 简介展开目录"></a>第四章 sersync 简介展开目录</h1><h2 id="1-sersync-介绍展开目录"><a href="#1-sersync-介绍展开目录" class="headerlink" title="1.sersync 介绍展开目录"></a>1.sersync 介绍展开目录</h2><p>以下内容摘抄 sersync 作者官网的说明</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sersync主要用于服务器同步,web镜像等功能.</span><br><span class="line">基于boost1.41.0,inotify api,rsync command开发.</span><br><span class="line">目前使用的比较多的同步解决方案是inotify-tools+rsync</span><br></pre></td></tr></table></figure><h2 id="2-sersync-优点展开目录"><a href="#2-sersync-优点展开目录" class="headerlink" title="2.sersync 优点展开目录"></a>2.sersync 优点展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.sersync是使用c++编写,而且对linux系统文件系统产生的临时文件和重复的文件操作进行过滤(详细见附录,这个过滤脚本程序没有实现),所以结合rsync同步的时候,节省了运行时耗和网络资源,因此更快</span><br><span class="line">2.相比较上面两个项目,sersync配置起来很简单,其中bin目录下已经有基本上静态编译的2进制文件,配合bin目录下的xml配置文件直接使用即可.</span><br><span class="line">3.另外本项目相比较其他脚本开源项目,使用多线程进行同步,尤其在同步较大文件时,能够保证多个服务器保持同步状态</span><br><span class="line">4.本项目有出错处理机制,通过失败队列对出错的文件重新同步,如果仍旧失败,则每10个小时对同步失败的文件重新同步</span><br><span class="line">5.本项目自带crontab功能,只需在xml配置文件中开启,即可按照您的要求,隔一段时间整体同步一次,无须在额外配置crontab功能</span><br><span class="line">6.本项目socket与http插件拓展,满足您二次开发的需要.</span><br></pre></td></tr></table></figure><h1 id="第五章-sersync-安装部署展开目录"><a href="#第五章-sersync-安装部署展开目录" class="headerlink" title="第五章 sersync 安装部署展开目录"></a>第五章 sersync 安装部署展开目录</h1><h2 id="1-主机规划展开目录"><a href="#1-主机规划展开目录" class="headerlink" title="1. 主机规划展开目录"></a>1. 主机规划展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nfs-server 172.16.1.31 rsync+inotify+sersync  nfs-client</span><br><span class="line">backup     172.16.1.41 rsync-server           nfs-server</span><br></pre></td></tr></table></figure><h2 id="2-安装-sersync展开目录"><a href="#2-安装-sersync展开目录" class="headerlink" title="2. 安装 sersync展开目录"></a>2. 安装 sersync展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;opt&#x2F;</span><br><span class="line">wget http:&#x2F;&#x2F;down.whsir.com&#x2F;downloads&#x2F;sersync2.5.4_64bit_binary_stable_final.tar.gz</span><br><span class="line">tar zxf sersync2.5.4_64bit_binary_stable_final.tar.gz</span><br><span class="line">mv GNU-Linux-x86 sersync</span><br><span class="line">cd sersync</span><br><span class="line">cp confxml.xml confxml.xml.bak</span><br></pre></td></tr></table></figure><h2 id="3-配置解释展开目录"><a href="#3-配置解释展开目录" class="headerlink" title="3. 配置解释展开目录"></a>3. 配置解释展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#需要监控的目录      &lt;localpath watch&#x3D;&quot;&#x2F;data&quot;&gt;   </span><br><span class="line">#远程rsync服务器的IP地址和模块名称   &lt;remote ip&#x3D;&quot;172.16.1.41&quot; name&#x3D;&quot;data&quot;&#x2F;&gt;  </span><br><span class="line">#rsync传输的参数    &lt;commonParams params&#x3D;&quot;-az&quot;&#x2F;&gt; </span><br><span class="line">#rsync密码文件路径  &lt;auth start&#x3D;&quot;true&quot; users&#x3D;&quot;rsync_backup&quot; passwordfile&#x3D;&quot;&#x2F;etc&#x2F;rsync.passwd&quot;&#x2F;&gt;    #</span><br></pre></td></tr></table></figure><h2 id="4-配置文件修改展开目录"><a href="#4-配置文件修改展开目录" class="headerlink" title="4. 配置文件修改展开目录"></a>4. 配置文件修改展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">23     &lt;sersync&gt;</span><br><span class="line">24         &lt;localpath watch&#x3D;&quot;&#x2F;data&quot;&gt;</span><br><span class="line">25             &lt;remote ip&#x3D;&quot;172.16.1.41&quot; name&#x3D;&quot;data&quot;&#x2F;&gt;</span><br><span class="line">26             &lt;!--&lt;remote ip&#x3D;&quot;192.168.8.39&quot; name&#x3D;&quot;tongbu&quot;&#x2F;&gt;--&gt;</span><br><span class="line">27             &lt;!--&lt;remote ip&#x3D;&quot;192.168.8.40&quot; name&#x3D;&quot;tongbu&quot;&#x2F;&gt;--&gt;</span><br><span class="line">28         &lt;&#x2F;localpath&gt;</span><br><span class="line">29         &lt;rsync&gt;</span><br><span class="line">30             &lt;commonParams params&#x3D;&quot;-az&quot;&#x2F;&gt;</span><br><span class="line">31             &lt;auth start&#x3D;&quot;true&quot; users&#x3D;&quot;rsync_backup&quot; passwordfile&#x3D;&quot;&#x2F;etc&#x2F;rsync.passwd&quot;&#x2F;&gt;</span><br></pre></td></tr></table></figure><h2 id="5-查看帮助说明展开目录"><a href="#5-查看帮助说明展开目录" class="headerlink" title="5. 查看帮助说明展开目录"></a>5. 查看帮助说明展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs &#x2F;opt&#x2F;sersync]# .&#x2F;sersync2 -h</span><br><span class="line">set the system param</span><br><span class="line">execute：echo 50000000 &gt; &#x2F;proc&#x2F;sys&#x2F;fs&#x2F;inotify&#x2F;max_user_watches</span><br><span class="line">execute：echo 327679 &gt; &#x2F;proc&#x2F;sys&#x2F;fs&#x2F;inotify&#x2F;max_queued_events</span><br><span class="line">parse the command param</span><br><span class="line">_______________________________________________________</span><br><span class="line">参数-d:启用守护进程模式</span><br><span class="line">参数-r:在监控前，将监控目录与远程主机用rsync命令推送一遍</span><br><span class="line">c参数-n: 指定开启守护线程的数量，默认为10个</span><br><span class="line">参数-o:指定配置文件，默认使用confxml.xml文件</span><br><span class="line">参数-m:单独启用其他模块，使用 -m refreshCDN 开启刷新CDN模块</span><br><span class="line">参数-m:单独启用其他模块，使用 -m socket 开启socket模块</span><br><span class="line">参数-m:单独启用其他模块，使用 -m http 开启http模块</span><br><span class="line">不加-m参数，则默认执行同步程序</span><br><span class="line">________________________________________________________________</span><br><span class="line">[root@nfs &#x2F;opt&#x2F;sersync]# </span><br></pre></td></tr></table></figure><h2 id="6-启动服务展开目录"><a href="#6-启动服务展开目录" class="headerlink" title="6. 启动服务展开目录"></a>6. 启动服务展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;sersync2 -rdo confxml.xml</span><br></pre></td></tr></table></figure><h2 id="7-测试数据是否同步展开目录"><a href="#7-测试数据是否同步展开目录" class="headerlink" title="7. 测试数据是否同步展开目录"></a>7. 测试数据是否同步展开目录</h2><p>backup 服务器操作：</p><p>1 秒查看一下 /data 目录下文件的个数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;data</span><br><span class="line">while true ;do ls |wc -l;sleep 0.1;done</span><br></pre></td></tr></table></figure><p>nfs 服务端操作：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;data</span><br><span class="line">for i in &#123;1..1000&#125;;do echo &quot;$&#123;i&#125;&quot;; echo &quot;$&#123;i&#125;&quot; &gt; $&#123;i&#125;.txt;sleep 0.1;done</span><br></pre></td></tr></table></figure><h1 id="第六章-lsyncd-同步展开目录"><a href="#第六章-lsyncd-同步展开目录" class="headerlink" title="第六章 lsyncd 同步展开目录"></a>第六章 lsyncd 同步展开目录</h1><h2 id="1-官方地址展开目录"><a href="#1-官方地址展开目录" class="headerlink" title="1. 官方地址展开目录"></a>1. 官方地址展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;axkibe&#x2F;lsyncd](https:&#x2F;&#x2F;github.com&#x2F;axkibe&#x2F;lsyncd</span><br></pre></td></tr></table></figure><h2 id="2-lsyncd-介绍展开目录"><a href="#2-lsyncd-介绍展开目录" class="headerlink" title="2.lsyncd 介绍展开目录"></a>2.lsyncd 介绍展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Lysncd 实际上是lua语言封装了 inotify 和 rsync 工具，采用了 Linux 内核（2.6.13 及以后）里的 inotify 触发机制，然后通过rsync去差异同步，达到实时的效果。</span><br><span class="line">它最令人称道的特性是，完美解决了 &#96;inotify + rsync&#96;海量文件同步带来的文件频繁发送文件列表的问题 —— 通过时间延迟或累计触发事件次数实现。</span><br><span class="line">另外，它的配置方式很简单，lua本身就是一种配置语言，可读性非常强。lsyncd也有多种工作模式可以选择，本地目录cp，本地目录rsync，远程目录rsyncssh。</span><br><span class="line">实现简单高效的本地目录同步备份（网络存储挂载也当作本地目录），一个命令搞定。</span><br></pre></td></tr></table></figure><h2 id="3-lsyncd-安装展开目录"><a href="#3-lsyncd-安装展开目录" class="headerlink" title="3.lsyncd 安装展开目录"></a>3.lsyncd 安装展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install lsyncd -y</span><br></pre></td></tr></table></figure><h2 id="4-创建配置文件展开目录"><a href="#4-创建配置文件展开目录" class="headerlink" title="4. 创建配置文件展开目录"></a>4. 创建配置文件展开目录</h2><p>只监控 1 个目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs ~]# cat &#x2F;etc&#x2F;lsyncd.conf</span><br><span class="line">settings &#123;</span><br><span class="line">  logfile &#x3D; &quot;&#x2F;var&#x2F;log&#x2F;lsyncd&#x2F;lsyncd.log&quot;,</span><br><span class="line">  statusFile &#x3D; &quot;&#x2F;var&#x2F;log&#x2F;lsyncd&#x2F;lsyncd.status&quot;,</span><br><span class="line">  inotifyMode &#x3D; &quot;CloseWrite&quot;,</span><br><span class="line">  maxProcesses &#x3D; 8,</span><br><span class="line">&#125;</span><br><span class="line">sync &#123;</span><br><span class="line">  default.rsync,</span><br><span class="line">  source &#x3D; &quot;&#x2F;data&quot;,</span><br><span class="line">  target &#x3D; &quot;rsync_backup@172.16.1.41::data&quot;,</span><br><span class="line">  delete &#x3D; true,</span><br><span class="line">  exclude &#x3D; &#123; &quot;.*&quot; &#125;,</span><br><span class="line">  delay &#x3D; 1,</span><br><span class="line">  rsync &#x3D; &#123;</span><br><span class="line">    binary &#x3D; &quot;&#x2F;usr&#x2F;bin&#x2F;rsync&quot;,</span><br><span class="line">    archive &#x3D; true,</span><br><span class="line">    compress &#x3D; true,</span><br><span class="line">    verbose &#x3D; true,</span><br><span class="line">    password_file &#x3D; &quot;&#x2F;etc&#x2F;rsync.passwd&quot;,</span><br><span class="line">    _extra &#x3D; &#123;&quot;--bwlimit&#x3D;200&quot;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>监控 2 个目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">[root@nfs ~]# cat &#x2F;etc&#x2F;lsyncd.conf</span><br><span class="line">settings &#123;</span><br><span class="line">  logfile &#x3D; &quot;&#x2F;var&#x2F;log&#x2F;lsyncd&#x2F;lsyncd.log&quot;,</span><br><span class="line">  statusFile &#x3D; &quot;&#x2F;var&#x2F;log&#x2F;lsyncd&#x2F;lsyncd.status&quot;,</span><br><span class="line">  inotifyMode &#x3D; &quot;CloseWrite&quot;,</span><br><span class="line">  maxProcesses &#x3D; 8,</span><br><span class="line">&#125;</span><br><span class="line">sync &#123;</span><br><span class="line">  default.rsync,</span><br><span class="line">  source &#x3D; &quot;&#x2F;data&quot;,</span><br><span class="line">  target &#x3D; &quot;rsync_backup@172.16.1.41::data&quot;,</span><br><span class="line">  delete &#x3D; true,</span><br><span class="line">  exclude &#x3D; &#123; &quot;.*&quot; &#125;,</span><br><span class="line">  delay &#x3D; 1,</span><br><span class="line">  rsync &#x3D; &#123;</span><br><span class="line">    binary &#x3D; &quot;&#x2F;usr&#x2F;bin&#x2F;rsync&quot;,</span><br><span class="line">    archive &#x3D; true,</span><br><span class="line">    compress &#x3D; true,</span><br><span class="line">    verbose &#x3D; true,</span><br><span class="line">    password_file &#x3D; &quot;&#x2F;etc&#x2F;rsync.passwd&quot;,</span><br><span class="line">    _extra &#x3D; &#123;&quot;--bwlimit&#x3D;200&quot;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sync &#123;</span><br><span class="line">  default.rsync,</span><br><span class="line">  source &#x3D; &quot;&#x2F;backup&quot;,</span><br><span class="line">  target &#x3D; &quot;rsync_backup@172.16.1.41::backup&quot;,</span><br><span class="line">  delete &#x3D; true,</span><br><span class="line">  exclude &#x3D; &#123; &quot;.*&quot; &#125;,</span><br><span class="line">  delay &#x3D; 1,</span><br><span class="line">  rsync &#x3D; &#123;</span><br><span class="line">    binary &#x3D; &quot;&#x2F;usr&#x2F;bin&#x2F;rsync&quot;,</span><br><span class="line">    archive &#x3D; true,</span><br><span class="line">    compress &#x3D; true,</span><br><span class="line">    verbose &#x3D; true,</span><br><span class="line">    password_file &#x3D; &quot;&#x2F;etc&#x2F;rsync.passwd&quot;,</span><br><span class="line">    _extra &#x3D; &#123;&quot;--bwlimit&#x3D;200&quot;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-配置文件解释展开目录"><a href="#5-配置文件解释展开目录" class="headerlink" title="5. 配置文件解释展开目录"></a>5. 配置文件解释展开目录</h2><p>参考网友博客</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;www.cnblogs.com&#x2F;zxci&#x2F;p&#x2F;6243574.html</span><br></pre></td></tr></table></figure><h2 id="6-启动命令展开目录"><a href="#6-启动命令展开目录" class="headerlink" title="6. 启动命令展开目录"></a>6. 启动命令展开目录</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start lsyncd </span><br></pre></td></tr></table></figure><h2 id="7-检查测试展开目录"><a href="#7-检查测试展开目录" class="headerlink" title="7. 检查测试展开目录"></a>7. 检查测试展开目录</h2><p>backup 测试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;data</span><br><span class="line">while true ;do ls |wc -l;sleep 0.1;done</span><br></pre></td></tr></table></figure><p>NFS 测试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;data</span><br><span class="line">for i in &#123;1..1000&#125;;do echo &quot;$&#123;i&#125;&quot;; echo &quot;$&#123;i&#125;&quot; &gt; $&#123;i&#125;.txt;sleep 0.1;done</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Sersync/lsync 实时同步 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PXE+Kickstart 批量装机</title>
      <link href="/posts/14150/"/>
      <url>/posts/14150/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><blockquote><p>PXE（预启动执行环境）是由 intel 公司开发的技术，可以让计算机通过网络来启动操作系统（前提是网卡支持 pxe 技术），主要用于在无人值守安装系统中引导客户端主机安装 linux 操作系统，kickstart 是一种无人值守的安装方式，工作原理是预先把原本需要运维人员手工填写的参数保存成一个 ks.cfg 文件，当安装过程中需要填写参数时则自动匹配，kickstart 生成的文件，所有只要 kickstart 文件包含了安装过程中需要人工填写的所有参数，从理论上来讲完全不需要人工干预</p></blockquote><h2 id="工作过程"><a href="#工作过程" class="headerlink" title="工作过程"></a>工作过程</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. PXE Client 从自己的PXE网卡启动，向本网络中的DHCP服务器索取IP</span><br><span class="line">2.DHCP 服务器返回分配给客户机的IP * 以及PXE文件的放置位置(该文件一般是放在TFTP服务器上)</span><br><span class="line">3.PXE Client 向本网络中的TFTP服务器索取pxelinux.0 文件</span><br><span class="line">4.PXE Client 取得pxelinux.0 文件后之执行该文件</span><br><span class="line">5. 根据pxelinux.0 的执行结果，通过TFTP服务器加载内核和文件系统 </span><br><span class="line">6.进入安装画面, 此时可以通过选择HTTP、FTP、NFS 方式之一进行安装</span><br></pre></td></tr></table></figure><p><img src="https://www.kococ.cn/usr/uploads/2020/02/2309972010.jpg" alt="1.jpg" title="1.jpg"></p><h2 id="Kickstart-安装要求"><a href="#Kickstart-安装要求" class="headerlink" title="Kickstart 安装要求"></a>Kickstart 安装要求</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.网卡必须支持PXE引导</span><br><span class="line">2.客户端需要有与Kickstart 通信的IP地址，这里一般都是通过DHCP自动分配IP地址来实现</span><br><span class="line">3.提供引导所需的文件，内核文件，内核镜像文件等，此时一般通过tftp-server等实现</span><br><span class="line">4.kickstart文件，它主要实现自动化安装的过程，比如配置主机名、添加用户、安装系统后相关操作</span><br><span class="line">5.提供安装源，一般就是NFS&#x2F;ftp&#x2F;httpd等</span><br></pre></td></tr></table></figure><p>工具：dhcp + tftp + syslinux + kickstart + vsftpd</p><p>可以结合 httpd 进行部署，这里不详细说明</p><h2 id="PXE-服务器配置详解"><a href="#PXE-服务器配置详解" class="headerlink" title="PXE 服务器配置详解"></a>PXE 服务器配置详解</h2><p><strong>环境</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">服务器系统：centos7.3</span><br><span class="line">网卡地址：192.168.3.0&#x2F;24</span><br><span class="line">光盘镜像：centos-server-7.3-x86_64-dvd.iso</span><br><span class="line">安装工具：dhcp + tftp + syslinux + kickstart + vsftpd</span><br></pre></td></tr></table></figure><p><strong>部署</strong></p><ol><li>挂载系统光盘到 /media/cdrom 并搭建本地 yum 源或网络源 <code>省略</code></li><li>使用 yum 安装需要的服务 dhcp、tftpserver、syslinux、kickstart[root@cenos2 ]# yum install -y dhcp vsftpd tftp tftp-server syslinux system-config-kickstart <code>##使用yum安装需要的软件包</code></li><li>配置 dhcp 服务器并启动 dhcpd 服务[root@cenos2]# vim /etc/dhcp/dhcpd.conf ## 编辑 dhcp 主配置文件<br>:r /usr/share/doc/dhcp-4.2.5/dhcpd.conf.example ## 读入 dhcp 配置模板文件<br>-————————– 修改或添加以下参数 —————————–<br>subnet 192.168.3.0 netmask 255.255.255.0 {<br>range 192.168.3.200 192.168.3.220;<br>next-server 192.168.3.1; #ip 不加引号，设置 tftp 地址<br>filename “pxelinux.0”; ## 设置 pxe 引导文件名称<br>}<br>[root@cenos2]# systemctl restart dhcpd ## 启动 dhcpd 服务</li><li>编辑 tftp 配置文件开启 tftp 并重启服务vim /etc/xinetd.d/tftp ## 编辑 tftp 配置文件<br>-———————- 将下列参数改为 no———————<br>{ <code>disable = no #将yes改为no</code> }<br>[root@cenos2]# systemctl restart tftp ## 启动 tftp 服务程序</li></ol><p>5. 准备内核、初始化镜像、pxe 引导、启动菜单文件复制到 tftp 目录，tftp 的默认根目录为 /var/lib/tftpboot/<br>内核和初始化文件：vmlinuz 和 initrd.img，文件光盘目录的 Images/pxeboot 目录下<br>Pxe 引导文件：pxelinux.0 由 syslinux 软件提供，目录在 /usr/shar/syslinux/ 目录下<br>启动菜单文件：在光盘 ioslinux/isolinux.cfg 文件，复制后更名 default</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@cenos2 network-scripts]# cd &#x2F;var&#x2F;lib&#x2F;tftpboot&#x2F;    #切换到tftp目录</span><br><span class="line">[root@cenos2 tftpboot]# mkdir pxelinux.cfg    #在tftp根目录创建启动菜单存放目录</span><br><span class="line">[root@cenos2 tftpboot]# cp &#x2F;media&#x2F;cdrom&#x2F;images&#x2F;pxeboot&#x2F;initrd.img .</span><br><span class="line">                    #将初始化文件复制到tftp根目录</span><br><span class="line">[root@cenos2 tftpboot]# cp &#x2F;media&#x2F;cdrom&#x2F;images&#x2F;pxeboot&#x2F;vmlinuz .</span><br><span class="line">                    #将内核文件复制到tftp根目录</span><br><span class="line">[root@cenos2 tftpboot]# cp &#x2F;usr&#x2F;share&#x2F;syslinux&#x2F;pxelinux.0 .</span><br><span class="line">                    #将pxe引导文件复制到tftp根目录</span><br><span class="line">[root@cenos2 tftpboot]# cp &#x2F;media&#x2F;cdrom&#x2F;isolinux&#x2F;isolinux.cfg .&#x2F;pxelinux.cfg&#x2F;default</span><br><span class="line">        #将启动菜单复制到tftp根目录的pxelinux.cfg目录下，更名为default</span><br><span class="line">[root@cenos2 tftpboot]# vim .&#x2F;pxelinux.cfg&#x2F;default        #编辑启动菜单文件</span><br></pre></td></tr></table></figure><p>-————————— 修改以下行的内容 ——————————</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">原1行 default vesamenu.c32</span><br><span class="line">改1行 default linux</span><br><span class="line">原64行 append initrd&#x3D;initrd.img inst.stage2&#x3D;hd:LABEL&#x3D;CentOS\x207\x20x86_64 quiet</span><br><span class="line">改64行 append initrd&#x3D;initrd.img inst.stage2&#x3D;ftp:&#x2F;&#x2F;192.168.3.1 ks&#x3D;ftp:&#x2F;&#x2F;192.168.3.1&#x2F;ks.cfg quiet</span><br></pre></td></tr></table></figure><p>6. 复制所有系统镜像文件到 vsftp 根目录下，vsftp 默认根目录为 /var/ftp/</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@cenos2 tftpboot]# cp -rf &#x2F;media&#x2F;cdrom&#x2F;* &#x2F;var&#x2F;ftp&#x2F;    ##复制镜像到vsftp根目录</span><br></pre></td></tr></table></figure><p>7. 安装 kickstart 工具生成自动应答文件或者编辑一个自动应答文件，将其保存到 vsftp 根目录<br>这里用编辑的方式新建自动应答文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[root@cenos2 tftpboot]# vim &#x2F;var&#x2F;ftp&#x2F;ks.cfg        &#x2F;&#x2F;编辑自动应答文件</span><br><span class="line">----------------------------添加以下内容-----------------------------------</span><br><span class="line">#platform&#x3D;x86, AMD64, 或 Intel EM64T</span><br><span class="line">#version&#x3D;DEVEL</span><br><span class="line"># Install OS instead of upgrade</span><br><span class="line">install</span><br><span class="line">keyboard &#39;us&#39;               #设置键盘语言</span><br><span class="line">rootpw --plaintext putianhui                #设置管理员密码</span><br><span class="line">url --url&#x3D;&quot;ftp:&#x2F;&#x2F;192.168.3.1&#x2F;&quot;              #设置安装源的路径这里用的ftp</span><br><span class="line">lang zh_CN                                      #设置安装语言为中文</span><br><span class="line">auth  --useshadow  --passalgo&#x3D;md5</span><br><span class="line">graphical</span><br><span class="line">firstboot --disable</span><br><span class="line">selinux --disabled                              #设置selinux为关闭</span><br><span class="line">firewall --disabled                             #设置防火墙为关闭</span><br><span class="line">network  --bootproto&#x3D;dhcp --device&#x3D;eth0 #网卡的ip获取类型和网卡的名称</span><br><span class="line">reboot                                          #设置安装成功之后自动重启</span><br><span class="line">timezone Asia&#x2F;Shanghai                      #设置时区为亚洲shagnhai</span><br><span class="line">bootloader --location&#x3D;mbr</span><br><span class="line">zerombr</span><br><span class="line">clearpart --all --initlabel</span><br><span class="line">part &#x2F; --fstype&#x3D;&quot;xfs&quot; --size&#x3D;15000          #设置磁盘挂载位置和分配磁盘大小15G</span><br><span class="line">%packages                #到end结束是复制anaconda中的安装脚本</span><br><span class="line">@desktop-debugging</span><br><span class="line">@development</span><br><span class="line">@gnome-desktop</span><br><span class="line">@remote-desktop-clients</span><br><span class="line">vinagre</span><br><span class="line">%end</span><br></pre></td></tr></table></figure><p>8. 重启 dhcpd、vsftpd、tftp 服务，然后关闭防火墙和 selinux</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@cenos2 tftpboot]# systemctl restart dhcpd        ##重启dhcpd服务</span><br><span class="line">[root@cenos2 tftpboot]# systemctl restart vsftpd        ##重启vsftpd服务</span><br><span class="line">[root@cenos2 tftpboot]# systemctl restart tftp        ##重启tftp服务</span><br><span class="line">[root@cenos2 tftpboot]# systemctl stop firewalld        ##关闭防火墙</span><br><span class="line">[root@cenos2 tftpboot]# setenforce 0            ##关闭selinux</span><br></pre></td></tr></table></figure><p>9. 新建虚拟机将网络和服务器改为同一模式，开机验证</p><h2 id="PXE-常见故障："><a href="#PXE-常见故障：" class="headerlink" title="PXE 常见故障："></a>PXE 常见故障：</h2><p>故障一：如果客户机开机可以获取到 ip，但是提示 pxe-e11:arp-timeout<br>解决办法：查看 next-server 的 ip 地址是否正确<br>故障二：如果使用 system-config-kickstart 工具选择软件包提示由于下载软件包失败<br>解决办法：将本地 yum 源的第一项 [_*_] 改为 [development]<br>故障三：虚拟机内存不足<br>解决方法：你懂的</p>]]></content>
      
      
      <categories>
          
          <category> Linux基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kickstart </tag>
            
            <tag> PXE </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
